import{r as de,j as fe,g as j0}from"./jsx-runtime-DdyehQyT.js";import{u as Px,b as Ix,c as Lx,L as qt,M as Nx,d as Dx,S as Ux}from"./components-BCJ9riey.js";import{c as Ox}from"./client-BZTeZRxm.js";import{b as Fx,c as zx,d as Z0,O as Bx}from"./index-xxm8raxB.js";/**
 * @remix-run/react v2.8.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */let Jm="positions";function kx({getKey:r,...e}){let{isSpaMode:t}=Px(),n=Fx(),i=zx();Ix({getKey:r,storageKey:Jm});let s=de.useMemo(()=>{if(!r)return null;let c=r(n,i);return c!==n.key?c:null},[]);if(t)return null;let l=((c,u)=>{if(!window.history.state||!window.history.state.key){let h=Math.random().toString(32).slice(2);window.history.replaceState({key:h},"")}try{let f=JSON.parse(sessionStorage.getItem(c)||"{}")[u||window.history.state.key];typeof f=="number"&&window.scrollTo(0,f)}catch(h){console.error(h),sessionStorage.removeItem(c)}}).toString();return de.createElement("script",Lx({},e,{suppressHydrationWarning:!0,dangerouslySetInnerHTML:{__html:`(${l})(${JSON.stringify(Jm)}, ${JSON.stringify(s)})`}}))}function Hx(){const[r,e]=de.useState(!1),t=()=>e(!r);return fe.jsxs("div",{className:"bg-opacity-80 bg-white",children:[fe.jsx("div",{className:"fixed left-3 top-3 text-2xl w-2",children:fe.jsx("p",{className:`hover:text-yellow-500 cursor-pointer select-none ${r?"hidden":"show"}`,onClick:t,children:"☰"})}),fe.jsxs("div",{className:`transform select-none top-0 p-4 left-0 w-auto bg-white fixed h-screen md:h-[97vh] m-0 md:m-4 md:mt-[1.5vh] border-2 border-neutral-250
                             rounded-md ease-in-out transition-all duration-300 z-30 overflow-y-scroll md:overflow-visible
                             ${r?"translate-x-0":"-translate-x-[200%]"}`,onClick:t,children:[fe.jsxs("ul",{className:"hover:*:*:text-yellow-500",children:[fe.jsx("li",{className:"text-sm italic pt-3",children:"2024"}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/conversational-floor-plans",children:"Converstional Floor Plans"})}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/itech-research-pavilion",children:"ITECH Research Pavilion"})}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/wax-flamingos",children:"Wax Flamingos"})}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/droplets",children:"Droplets"})}),fe.jsx("li",{className:"text-sm italic pt-3",children:"2023"}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/honeycomb",children:"Honeycomb"})}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/water-qwop",children:"Water-QWOP"})}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/horse-and-chariot",children:"Horse & Chariot"})}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/hyper-hydration",children:"Hyper-hydration"})}),fe.jsx("li",{className:"text-sm italic pt-3",children:"2022"}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/cloud-sketch",children:"Cloud Sketch"})}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/sprawl-and-resilience",children:"Sprawl & Resilience"})}),fe.jsx("li",{className:"text-sm italic pt-3",children:"2021"}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/cybernetic-field",children:"Cybernetic Field"})}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/bubble-gan",children:"Bubble-GAN"})}),fe.jsx("li",{className:"text-sm italic pt-3",children:"2020"}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/elc-carrick",children:"ELC: Carrick"})}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/placeholder",children:"15-112: placeHolder"})}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/collaborative-winding",children:"Collaborative Winding"})}),fe.jsx("li",{className:"text-sm italic pt-3",children:"2019"}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/flood-museum",children:"Flood Museum"})}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/design-fabrication",children:"Design Fabrication"})}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/spring-garden-hostel",children:"Spring Garden Hostel"})}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/modular-garden",children:"Modular Garden"})}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/bathhouse",children:"Bathhouse"})}),fe.jsx("li",{className:"text-sm italic pt-3",children:"2018"}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/hoophouse",children:"Hoophouse"})}),fe.jsx("li",{children:fe.jsx(qt,{to:"./projects/drawings",children:"Drawings"})})]}),fe.jsx("p",{className:"fixed top-4 select-none right-7 md:-right-7 hover:text-yellow-500 cursor-pointer font-bold",onClick:t,children:"✕"})]})]})}/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ou="163",Vx={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Gx={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},J0=0,Ff=1,K0=2,Wx=3,Q0=0,au=1,pa=2,xi=3,sr=0,Ln=1,Si=2,rr=0,ds=1,zf=2,Bf=3,kf=4,$0=5,Rr=100,ev=101,tv=102,nv=103,iv=104,rv=200,sv=201,ov=202,av=203,eu=204,tu=205,lv=206,cv=207,uv=208,hv=209,fv=210,dv=211,pv=212,mv=213,gv=214,vv=0,_v=1,yv=2,ya=3,xv=4,Mv=5,Sv=6,wv=7,Ga=0,Ev=1,Av=2,zi=0,Tv=1,bv=2,Cv=3,Cd=4,Rv=5,Pv=6,Iv=7,Hf="attached",Lv="detached",lu=300,or=301,Ir=302,xa=303,Ma=304,To=306,Sa=1e3,di=1001,wa=1002,fn=1003,Rd=1004,Xx=1004,fo=1005,qx=1005,tn=1006,ma=1007,Yx=1007,Oi=1008,jx=1008,Bi=1009,Nv=1010,Dv=1011,Pd=1012,Id=1013,_s=1014,pi=1015,Ea=1016,Ld=1017,Nd=1018,bo=1020,Uv=35902,Ov=1021,Fv=1022,Hn=1023,zv=1024,Bv=1025,ps=1026,Mo=1027,Dd=1028,Ud=1029,kv=1030,Od=1031,Fd=1033,qc=33776,Yc=33777,jc=33778,Zc=33779,Vf=35840,Gf=35841,Wf=35842,Xf=35843,zd=36196,qf=37492,Yf=37496,jf=37808,Zf=37809,Jf=37810,Kf=37811,Qf=37812,$f=37813,ed=37814,td=37815,nd=37816,id=37817,rd=37818,sd=37819,od=37820,ad=37821,Jc=36492,ld=36494,cd=36495,Hv=36283,ud=36284,hd=36285,fd=36286,Vv=2200,Gv=2201,Wv=2202,Aa=2300,Ta=2301,Kc=2302,ls=2400,cs=2401,ba=2402,cu=2500,Bd=2501,Zx=0,Jx=1,Kx=2,Xv=3200,qv=3201,Nr=0,Yv=1,tr="",fi="srgb",lr="srgb-linear",uu="display-p3",Wa="display-p3-linear",Ca="linear",Ot="srgb",Ra="rec709",Pa="p3",Qx=0,rs=7680,$x=7681,eM=7682,tM=7683,nM=34055,iM=34056,rM=5386,sM=512,oM=513,aM=514,lM=515,cM=516,uM=517,hM=518,dd=519,jv=512,Zv=513,Jv=514,kd=515,Kv=516,Qv=517,$v=518,e_=519,Ia=35044,fM=35048,dM=35040,pM=35045,mM=35049,gM=35041,vM=35046,_M=35050,yM=35042,xM="100",pd="300 es",Fi=2e3,La=2001;class cr{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}}const Mn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Km=1234567;const ms=Math.PI/180,So=180/Math.PI;function ti(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Mn[r&255]+Mn[r>>8&255]+Mn[r>>16&255]+Mn[r>>24&255]+"-"+Mn[e&255]+Mn[e>>8&255]+"-"+Mn[e>>16&15|64]+Mn[e>>24&255]+"-"+Mn[t&63|128]+Mn[t>>8&255]+"-"+Mn[t>>16&255]+Mn[t>>24&255]+Mn[n&255]+Mn[n>>8&255]+Mn[n>>16&255]+Mn[n>>24&255]).toLowerCase()}function jt(r,e,t){return Math.max(e,Math.min(t,r))}function Hd(r,e){return(r%e+e)%e}function MM(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function SM(r,e,t){return r!==e?(t-r)/(e-r):0}function ga(r,e,t){return(1-t)*r+t*e}function wM(r,e,t,n){return ga(r,e,1-Math.exp(-t*n))}function EM(r,e=1){return e-Math.abs(Hd(r,e*2)-e)}function AM(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function TM(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function bM(r,e){return r+Math.floor(Math.random()*(e-r+1))}function CM(r,e){return r+Math.random()*(e-r)}function RM(r){return r*(.5-Math.random())}function PM(r){r!==void 0&&(Km=r);let e=Km+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function IM(r){return r*ms}function LM(r){return r*So}function NM(r){return(r&r-1)===0&&r!==0}function DM(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function UM(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function OM(r,e,t,n,i){const s=Math.cos,l=Math.sin,c=s(t/2),u=l(t/2),h=s((e+n)/2),f=l((e+n)/2),p=s((e-n)/2),m=l((e-n)/2),v=s((n-e)/2),y=l((n-e)/2);switch(i){case"XYX":r.set(c*f,u*p,u*m,c*h);break;case"YZY":r.set(u*m,c*f,u*p,c*h);break;case"ZXZ":r.set(u*p,u*m,c*f,c*h);break;case"XZX":r.set(c*f,u*y,u*v,c*h);break;case"YXY":r.set(u*v,c*f,u*y,c*h);break;case"ZYZ":r.set(u*y,u*v,c*f,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function In(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function ct(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const ss={DEG2RAD:ms,RAD2DEG:So,generateUUID:ti,clamp:jt,euclideanModulo:Hd,mapLinear:MM,inverseLerp:SM,lerp:ga,damp:wM,pingpong:EM,smoothstep:AM,smootherstep:TM,randInt:bM,randFloat:CM,randFloatSpread:RM,seededRandom:PM,degToRad:IM,radToDeg:LM,isPowerOfTwo:NM,ceilPowerOfTwo:DM,floorPowerOfTwo:UM,setQuaternionFromProperEuler:OM,normalize:ct,denormalize:In};class he{constructor(e=0,t=0){he.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(jt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,l=this.y-e.y;return this.x=s*n-l*i+e.x,this.y=s*i+l*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class lt{constructor(e,t,n,i,s,l,c,u,h){lt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h)}set(e,t,n,i,s,l,c,u,h){const f=this.elements;return f[0]=e,f[1]=i,f[2]=c,f[3]=t,f[4]=s,f[5]=u,f[6]=n,f[7]=l,f[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[3],u=n[6],h=n[1],f=n[4],p=n[7],m=n[2],v=n[5],y=n[8],S=i[0],x=i[3],_=i[6],E=i[1],w=i[4],T=i[7],N=i[2],P=i[5],I=i[8];return s[0]=l*S+c*E+u*N,s[3]=l*x+c*w+u*P,s[6]=l*_+c*T+u*I,s[1]=h*S+f*E+p*N,s[4]=h*x+f*w+p*P,s[7]=h*_+f*T+p*I,s[2]=m*S+v*E+y*N,s[5]=m*x+v*w+y*P,s[8]=m*_+v*T+y*I,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8];return t*l*f-t*c*h-n*s*f+n*c*u+i*s*h-i*l*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=f*l-c*h,m=c*u-f*s,v=h*s-l*u,y=t*p+n*m+i*v;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const S=1/y;return e[0]=p*S,e[1]=(i*h-f*n)*S,e[2]=(c*n-i*l)*S,e[3]=m*S,e[4]=(f*t-i*u)*S,e[5]=(i*s-c*t)*S,e[6]=v*S,e[7]=(n*u-h*t)*S,e[8]=(l*t-n*s)*S,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,l,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*l+h*c)+l+e,-i*h,i*u,-i*(-h*l+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(Hh.makeScale(e,t)),this}rotate(e){return this.premultiply(Hh.makeRotation(-e)),this}translate(e,t){return this.premultiply(Hh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Hh=new lt;function t_(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const FM={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function po(r,e){return new FM[r](e)}function Na(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function n_(){const r=Na("canvas");return r.style.display="block",r}const Qm={};function i_(r){r in Qm||(Qm[r]=!0,console.warn(r))}const $m=new lt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),eg=new lt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),$l={[lr]:{transfer:Ca,primaries:Ra,toReference:r=>r,fromReference:r=>r},[fi]:{transfer:Ot,primaries:Ra,toReference:r=>r.convertSRGBToLinear(),fromReference:r=>r.convertLinearToSRGB()},[Wa]:{transfer:Ca,primaries:Pa,toReference:r=>r.applyMatrix3(eg),fromReference:r=>r.applyMatrix3($m)},[uu]:{transfer:Ot,primaries:Pa,toReference:r=>r.convertSRGBToLinear().applyMatrix3(eg),fromReference:r=>r.applyMatrix3($m).convertLinearToSRGB()}},zM=new Set([lr,Wa]),bt={enabled:!0,_workingColorSpace:lr,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(r){if(!zM.has(r))throw new Error(`Unsupported working color space, "${r}".`);this._workingColorSpace=r},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const n=$l[e].toReference,i=$l[t].fromReference;return i(n(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this._workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this._workingColorSpace)},getPrimaries:function(r){return $l[r].primaries},getTransfer:function(r){return r===tr?Ca:$l[r].transfer}};function xo(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Vh(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Bs;class r_{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Bs===void 0&&(Bs=Na("canvas")),Bs.width=e.width,Bs.height=e.height;const n=Bs.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Bs}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Na("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let l=0;l<s.length;l++)s[l]=xo(s[l]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(xo(t[n]/255)*255):t[n]=xo(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let BM=0;class us{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:BM++}),this.uuid=ti(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?s.push(Gh(i[l].image)):s.push(Gh(i[l]))}else s=Gh(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Gh(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?r_.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let kM=0;class Gt extends cr{constructor(e=Gt.DEFAULT_IMAGE,t=Gt.DEFAULT_MAPPING,n=di,i=di,s=tn,l=Oi,c=Hn,u=Bi,h=Gt.DEFAULT_ANISOTROPY,f=tr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:kM++}),this.uuid=ti(),this.name="",this.source=new us(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=l,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new he(0,0),this.repeat=new he(1,1),this.center=new he(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new lt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=f,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==lu)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Sa:e.x=e.x-Math.floor(e.x);break;case di:e.x=e.x<0?0:1;break;case wa:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Sa:e.y=e.y-Math.floor(e.y);break;case di:e.y=e.y<0?0:1;break;case wa:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Gt.DEFAULT_IMAGE=null;Gt.DEFAULT_MAPPING=lu;Gt.DEFAULT_ANISOTROPY=1;class Ct{constructor(e=0,t=0,n=0,i=1){Ct.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,l=e.elements;return this.x=l[0]*t+l[4]*n+l[8]*i+l[12]*s,this.y=l[1]*t+l[5]*n+l[9]*i+l[13]*s,this.z=l[2]*t+l[6]*n+l[10]*i+l[14]*s,this.w=l[3]*t+l[7]*n+l[11]*i+l[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],f=u[4],p=u[8],m=u[1],v=u[5],y=u[9],S=u[2],x=u[6],_=u[10];if(Math.abs(f-m)<.01&&Math.abs(p-S)<.01&&Math.abs(y-x)<.01){if(Math.abs(f+m)<.1&&Math.abs(p+S)<.1&&Math.abs(y+x)<.1&&Math.abs(h+v+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const w=(h+1)/2,T=(v+1)/2,N=(_+1)/2,P=(f+m)/4,I=(p+S)/4,z=(y+x)/4;return w>T&&w>N?w<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(w),i=P/n,s=I/n):T>N?T<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(T),n=P/i,s=z/i):N<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(N),n=I/s,i=z/s),this.set(n,i,s,t),this}let E=Math.sqrt((x-y)*(x-y)+(p-S)*(p-S)+(m-f)*(m-f));return Math.abs(E)<.001&&(E=1),this.x=(x-y)/E,this.y=(p-S)/E,this.z=(m-f)/E,this.w=Math.acos((h+v+_-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class s_ extends cr{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ct(0,0,e,t),this.scissorTest=!1,this.viewport=new Ct(0,0,e,t);const i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:tn,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0,count:1},n);const s=new Gt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const l=n.count;for(let c=0;c<l;c++)this.textures[c]=s.clone(),this.textures[c].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new us(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class wi extends s_{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class hu extends Gt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=fn,this.minFilter=fn,this.wrapR=di,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class HM extends wi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new hu(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Vd extends Gt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=fn,this.minFilter=fn,this.wrapR=di,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class VM extends wi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Vd(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Vn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,l,c){let u=n[i+0],h=n[i+1],f=n[i+2],p=n[i+3];const m=s[l+0],v=s[l+1],y=s[l+2],S=s[l+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=v,e[t+2]=y,e[t+3]=S;return}if(p!==S||u!==m||h!==v||f!==y){let x=1-c;const _=u*m+h*v+f*y+p*S,E=_>=0?1:-1,w=1-_*_;if(w>Number.EPSILON){const N=Math.sqrt(w),P=Math.atan2(N,_*E);x=Math.sin(x*P)/N,c=Math.sin(c*P)/N}const T=c*E;if(u=u*x+m*T,h=h*x+v*T,f=f*x+y*T,p=p*x+S*T,x===1-c){const N=1/Math.sqrt(u*u+h*h+f*f+p*p);u*=N,h*=N,f*=N,p*=N}}e[t]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,l){const c=n[i],u=n[i+1],h=n[i+2],f=n[i+3],p=s[l],m=s[l+1],v=s[l+2],y=s[l+3];return e[t]=c*y+f*p+u*v-h*m,e[t+1]=u*y+f*m+h*p-c*v,e[t+2]=h*y+f*v+c*m-u*p,e[t+3]=f*y-c*p-u*m-h*v,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,s=e._z,l=e._order,c=Math.cos,u=Math.sin,h=c(n/2),f=c(i/2),p=c(s/2),m=u(n/2),v=u(i/2),y=u(s/2);switch(l){case"XYZ":this._x=m*f*p+h*v*y,this._y=h*v*p-m*f*y,this._z=h*f*y+m*v*p,this._w=h*f*p-m*v*y;break;case"YXZ":this._x=m*f*p+h*v*y,this._y=h*v*p-m*f*y,this._z=h*f*y-m*v*p,this._w=h*f*p+m*v*y;break;case"ZXY":this._x=m*f*p-h*v*y,this._y=h*v*p+m*f*y,this._z=h*f*y+m*v*p,this._w=h*f*p-m*v*y;break;case"ZYX":this._x=m*f*p-h*v*y,this._y=h*v*p+m*f*y,this._z=h*f*y-m*v*p,this._w=h*f*p+m*v*y;break;case"YZX":this._x=m*f*p+h*v*y,this._y=h*v*p+m*f*y,this._z=h*f*y-m*v*p,this._w=h*f*p-m*v*y;break;case"XZY":this._x=m*f*p-h*v*y,this._y=h*v*p-m*f*y,this._z=h*f*y+m*v*p,this._w=h*f*p+m*v*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],l=t[1],c=t[5],u=t[9],h=t[2],f=t[6],p=t[10],m=n+c+p;if(m>0){const v=.5/Math.sqrt(m+1);this._w=.25/v,this._x=(f-u)*v,this._y=(s-h)*v,this._z=(l-i)*v}else if(n>c&&n>p){const v=2*Math.sqrt(1+n-c-p);this._w=(f-u)/v,this._x=.25*v,this._y=(i+l)/v,this._z=(s+h)/v}else if(c>p){const v=2*Math.sqrt(1+c-n-p);this._w=(s-h)/v,this._x=(i+l)/v,this._y=.25*v,this._z=(u+f)/v}else{const v=2*Math.sqrt(1+p-n-c);this._w=(l-i)/v,this._x=(s+h)/v,this._y=(u+f)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(jt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,l=e._w,c=t._x,u=t._y,h=t._z,f=t._w;return this._x=n*f+l*c+i*h-s*u,this._y=i*f+l*u+s*c-n*h,this._z=s*f+l*h+n*u-i*c,this._w=l*f-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,l=this._w;let c=l*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=l,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const v=1-t;return this._w=v*l+t*this._w,this._x=v*n+t*this._x,this._y=v*i+t*this._y,this._z=v*s+t*this._z,this.normalize(),this}const h=Math.sqrt(u),f=Math.atan2(h,c),p=Math.sin((1-t)*f)/h,m=Math.sin(t*f)/h;return this._w=l*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class U{constructor(e=0,t=0,n=0){U.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(tg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(tg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,l=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*l,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*l,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*l,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,l=e.y,c=e.z,u=e.w,h=2*(l*i-c*n),f=2*(c*t-s*i),p=2*(s*n-l*t);return this.x=t+u*h+l*p-c*f,this.y=n+u*f+c*h-s*p,this.z=i+u*p+s*f-l*h,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,l=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*l-n*u,this.z=n*c-i*l,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Wh.copy(this).projectOnVector(e),this.sub(Wh)}reflect(e){return this.sub(Wh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(jt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Wh=new U,tg=new Vn;class Nn{constructor(e=new U(1/0,1/0,1/0),t=new U(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(vi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(vi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=vi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let l=0,c=s.count;l<c;l++)e.isMesh===!0?e.getVertexPosition(l,vi):vi.fromBufferAttribute(s,l),vi.applyMatrix4(e.matrixWorld),this.expandByPoint(vi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),ec.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),ec.copy(n.boundingBox)),ec.applyMatrix4(e.matrixWorld),this.union(ec)}const i=e.children;for(let s=0,l=i.length;s<l;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,vi),vi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Qo),tc.subVectors(this.max,Qo),ks.subVectors(e.a,Qo),Hs.subVectors(e.b,Qo),Vs.subVectors(e.c,Qo),xr.subVectors(Hs,ks),Mr.subVectors(Vs,Hs),qr.subVectors(ks,Vs);let t=[0,-xr.z,xr.y,0,-Mr.z,Mr.y,0,-qr.z,qr.y,xr.z,0,-xr.x,Mr.z,0,-Mr.x,qr.z,0,-qr.x,-xr.y,xr.x,0,-Mr.y,Mr.x,0,-qr.y,qr.x,0];return!Xh(t,ks,Hs,Vs,tc)||(t=[1,0,0,0,1,0,0,0,1],!Xh(t,ks,Hs,Vs,tc))?!1:(nc.crossVectors(xr,Mr),t=[nc.x,nc.y,nc.z],Xh(t,ks,Hs,Vs,tc))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,vi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(vi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Zi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Zi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Zi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Zi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Zi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Zi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Zi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Zi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Zi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Zi=[new U,new U,new U,new U,new U,new U,new U,new U],vi=new U,ec=new Nn,ks=new U,Hs=new U,Vs=new U,xr=new U,Mr=new U,qr=new U,Qo=new U,tc=new U,nc=new U,Yr=new U;function Xh(r,e,t,n,i){for(let s=0,l=r.length-3;s<=l;s+=3){Yr.fromArray(r,s);const c=i.x*Math.abs(Yr.x)+i.y*Math.abs(Yr.y)+i.z*Math.abs(Yr.z),u=e.dot(Yr),h=t.dot(Yr),f=n.dot(Yr);if(Math.max(-Math.max(u,h,f),Math.min(u,h,f))>c)return!1}return!0}const GM=new Nn,$o=new U,qh=new U;class En{constructor(e=new U,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):GM.setFromPoints(e).getCenter(n);let i=0;for(let s=0,l=e.length;s<l;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;$o.subVectors(e,this.center);const t=$o.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector($o,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(qh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint($o.copy(e.center).add(qh)),this.expandByPoint($o.copy(e.center).sub(qh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ji=new U,Yh=new U,ic=new U,Sr=new U,jh=new U,rc=new U,Zh=new U;class Co{constructor(e=new U,t=new U(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ji)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ji.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ji.copy(this.origin).addScaledVector(this.direction,t),Ji.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Yh.copy(e).add(t).multiplyScalar(.5),ic.copy(t).sub(e).normalize(),Sr.copy(this.origin).sub(Yh);const s=e.distanceTo(t)*.5,l=-this.direction.dot(ic),c=Sr.dot(this.direction),u=-Sr.dot(ic),h=Sr.lengthSq(),f=Math.abs(1-l*l);let p,m,v,y;if(f>0)if(p=l*u-c,m=l*c-u,y=s*f,p>=0)if(m>=-y)if(m<=y){const S=1/f;p*=S,m*=S,v=p*(p+l*m+2*c)+m*(l*p+m+2*u)+h}else m=s,p=Math.max(0,-(l*m+c)),v=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(l*m+c)),v=-p*p+m*(m+2*u)+h;else m<=-y?(p=Math.max(0,-(-l*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),v=-p*p+m*(m+2*u)+h):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),v=m*(m+2*u)+h):(p=Math.max(0,-(l*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),v=-p*p+m*(m+2*u)+h);else m=l>0?-s:s,p=Math.max(0,-(l*m+c)),v=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(Yh).addScaledVector(ic,m),v}intersectSphere(e,t){Ji.subVectors(e.center,this.origin);const n=Ji.dot(this.direction),i=Ji.dot(Ji)-n*n,s=e.radius*e.radius;if(i>s)return null;const l=Math.sqrt(s-i),c=n-l,u=n+l;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,l,c,u;const h=1/this.direction.x,f=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),f>=0?(s=(e.min.y-m.y)*f,l=(e.max.y-m.y)*f):(s=(e.max.y-m.y)*f,l=(e.min.y-m.y)*f),n>l||s>i||((s>n||isNaN(n))&&(n=s),(l<i||isNaN(i))&&(i=l),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Ji)!==null}intersectTriangle(e,t,n,i,s){jh.subVectors(t,e),rc.subVectors(n,e),Zh.crossVectors(jh,rc);let l=this.direction.dot(Zh),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;Sr.subVectors(this.origin,e);const u=c*this.direction.dot(rc.crossVectors(Sr,rc));if(u<0)return null;const h=c*this.direction.dot(jh.cross(Sr));if(h<0||u+h>l)return null;const f=-c*Sr.dot(Zh);return f<0?null:this.at(f/l,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class $e{constructor(e,t,n,i,s,l,c,u,h,f,p,m,v,y,S,x){$e.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h,f,p,m,v,y,S,x)}set(e,t,n,i,s,l,c,u,h,f,p,m,v,y,S,x){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=s,_[5]=l,_[9]=c,_[13]=u,_[2]=h,_[6]=f,_[10]=p,_[14]=m,_[3]=v,_[7]=y,_[11]=S,_[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new $e().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Gs.setFromMatrixColumn(e,0).length(),s=1/Gs.setFromMatrixColumn(e,1).length(),l=1/Gs.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*l,t[9]=n[9]*l,t[10]=n[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,l=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),f=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=l*f,v=l*p,y=c*f,S=c*p;t[0]=u*f,t[4]=-u*p,t[8]=h,t[1]=v+y*h,t[5]=m-S*h,t[9]=-c*u,t[2]=S-m*h,t[6]=y+v*h,t[10]=l*u}else if(e.order==="YXZ"){const m=u*f,v=u*p,y=h*f,S=h*p;t[0]=m+S*c,t[4]=y*c-v,t[8]=l*h,t[1]=l*p,t[5]=l*f,t[9]=-c,t[2]=v*c-y,t[6]=S+m*c,t[10]=l*u}else if(e.order==="ZXY"){const m=u*f,v=u*p,y=h*f,S=h*p;t[0]=m-S*c,t[4]=-l*p,t[8]=y+v*c,t[1]=v+y*c,t[5]=l*f,t[9]=S-m*c,t[2]=-l*h,t[6]=c,t[10]=l*u}else if(e.order==="ZYX"){const m=l*f,v=l*p,y=c*f,S=c*p;t[0]=u*f,t[4]=y*h-v,t[8]=m*h+S,t[1]=u*p,t[5]=S*h+m,t[9]=v*h-y,t[2]=-h,t[6]=c*u,t[10]=l*u}else if(e.order==="YZX"){const m=l*u,v=l*h,y=c*u,S=c*h;t[0]=u*f,t[4]=S-m*p,t[8]=y*p+v,t[1]=p,t[5]=l*f,t[9]=-c*f,t[2]=-h*f,t[6]=v*p+y,t[10]=m-S*p}else if(e.order==="XZY"){const m=l*u,v=l*h,y=c*u,S=c*h;t[0]=u*f,t[4]=-p,t[8]=h*f,t[1]=m*p+S,t[5]=l*f,t[9]=v*p-y,t[2]=y*p-v,t[6]=c*f,t[10]=S*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(WM,e,XM)}lookAt(e,t,n){const i=this.elements;return Qn.subVectors(e,t),Qn.lengthSq()===0&&(Qn.z=1),Qn.normalize(),wr.crossVectors(n,Qn),wr.lengthSq()===0&&(Math.abs(n.z)===1?Qn.x+=1e-4:Qn.z+=1e-4,Qn.normalize(),wr.crossVectors(n,Qn)),wr.normalize(),sc.crossVectors(Qn,wr),i[0]=wr.x,i[4]=sc.x,i[8]=Qn.x,i[1]=wr.y,i[5]=sc.y,i[9]=Qn.y,i[2]=wr.z,i[6]=sc.z,i[10]=Qn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[4],u=n[8],h=n[12],f=n[1],p=n[5],m=n[9],v=n[13],y=n[2],S=n[6],x=n[10],_=n[14],E=n[3],w=n[7],T=n[11],N=n[15],P=i[0],I=i[4],z=i[8],R=i[12],b=i[1],F=i[5],X=i[9],H=i[13],Z=i[2],$=i[6],ae=i[10],ve=i[14],k=i[3],K=i[7],j=i[11],ue=i[15];return s[0]=l*P+c*b+u*Z+h*k,s[4]=l*I+c*F+u*$+h*K,s[8]=l*z+c*X+u*ae+h*j,s[12]=l*R+c*H+u*ve+h*ue,s[1]=f*P+p*b+m*Z+v*k,s[5]=f*I+p*F+m*$+v*K,s[9]=f*z+p*X+m*ae+v*j,s[13]=f*R+p*H+m*ve+v*ue,s[2]=y*P+S*b+x*Z+_*k,s[6]=y*I+S*F+x*$+_*K,s[10]=y*z+S*X+x*ae+_*j,s[14]=y*R+S*H+x*ve+_*ue,s[3]=E*P+w*b+T*Z+N*k,s[7]=E*I+w*F+T*$+N*K,s[11]=E*z+w*X+T*ae+N*j,s[15]=E*R+w*H+T*ve+N*ue,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],l=e[1],c=e[5],u=e[9],h=e[13],f=e[2],p=e[6],m=e[10],v=e[14],y=e[3],S=e[7],x=e[11],_=e[15];return y*(+s*u*p-i*h*p-s*c*m+n*h*m+i*c*v-n*u*v)+S*(+t*u*v-t*h*m+s*l*m-i*l*v+i*h*f-s*u*f)+x*(+t*h*p-t*c*v-s*l*p+n*l*v+s*c*f-n*h*f)+_*(-i*c*f-t*u*p+t*c*m+i*l*p-n*l*m+n*u*f)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=e[9],m=e[10],v=e[11],y=e[12],S=e[13],x=e[14],_=e[15],E=p*x*h-S*m*h+S*u*v-c*x*v-p*u*_+c*m*_,w=y*m*h-f*x*h-y*u*v+l*x*v+f*u*_-l*m*_,T=f*S*h-y*p*h+y*c*v-l*S*v-f*c*_+l*p*_,N=y*p*u-f*S*u-y*c*m+l*S*m+f*c*x-l*p*x,P=t*E+n*w+i*T+s*N;if(P===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const I=1/P;return e[0]=E*I,e[1]=(S*m*s-p*x*s-S*i*v+n*x*v+p*i*_-n*m*_)*I,e[2]=(c*x*s-S*u*s+S*i*h-n*x*h-c*i*_+n*u*_)*I,e[3]=(p*u*s-c*m*s-p*i*h+n*m*h+c*i*v-n*u*v)*I,e[4]=w*I,e[5]=(f*x*s-y*m*s+y*i*v-t*x*v-f*i*_+t*m*_)*I,e[6]=(y*u*s-l*x*s-y*i*h+t*x*h+l*i*_-t*u*_)*I,e[7]=(l*m*s-f*u*s+f*i*h-t*m*h-l*i*v+t*u*v)*I,e[8]=T*I,e[9]=(y*p*s-f*S*s-y*n*v+t*S*v+f*n*_-t*p*_)*I,e[10]=(l*S*s-y*c*s+y*n*h-t*S*h-l*n*_+t*c*_)*I,e[11]=(f*c*s-l*p*s-f*n*h+t*p*h+l*n*v-t*c*v)*I,e[12]=N*I,e[13]=(f*S*i-y*p*i+y*n*m-t*S*m-f*n*x+t*p*x)*I,e[14]=(y*c*i-l*S*i-y*n*u+t*S*u+l*n*x-t*c*x)*I,e[15]=(l*p*i-f*c*i+f*n*u-t*p*u-l*n*m+t*c*m)*I,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,l=e.x,c=e.y,u=e.z,h=s*l,f=s*c;return this.set(h*l+n,h*c-i*u,h*u+i*c,0,h*c+i*u,f*c+n,f*u-i*l,0,h*u-i*c,f*u+i*l,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,l){return this.set(1,n,s,0,e,1,l,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,l=t._y,c=t._z,u=t._w,h=s+s,f=l+l,p=c+c,m=s*h,v=s*f,y=s*p,S=l*f,x=l*p,_=c*p,E=u*h,w=u*f,T=u*p,N=n.x,P=n.y,I=n.z;return i[0]=(1-(S+_))*N,i[1]=(v+T)*N,i[2]=(y-w)*N,i[3]=0,i[4]=(v-T)*P,i[5]=(1-(m+_))*P,i[6]=(x+E)*P,i[7]=0,i[8]=(y+w)*I,i[9]=(x-E)*I,i[10]=(1-(m+S))*I,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Gs.set(i[0],i[1],i[2]).length();const l=Gs.set(i[4],i[5],i[6]).length(),c=Gs.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],_i.copy(this);const h=1/s,f=1/l,p=1/c;return _i.elements[0]*=h,_i.elements[1]*=h,_i.elements[2]*=h,_i.elements[4]*=f,_i.elements[5]*=f,_i.elements[6]*=f,_i.elements[8]*=p,_i.elements[9]*=p,_i.elements[10]*=p,t.setFromRotationMatrix(_i),n.x=s,n.y=l,n.z=c,this}makePerspective(e,t,n,i,s,l,c=Fi){const u=this.elements,h=2*s/(t-e),f=2*s/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let v,y;if(c===Fi)v=-(l+s)/(l-s),y=-2*l*s/(l-s);else if(c===La)v=-l/(l-s),y=-l*s/(l-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=f,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=v,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,l,c=Fi){const u=this.elements,h=1/(t-e),f=1/(n-i),p=1/(l-s),m=(t+e)*h,v=(n+i)*f;let y,S;if(c===Fi)y=(l+s)*p,S=-2*p;else if(c===La)y=s*p,S=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*f,u[9]=0,u[13]=-v,u[2]=0,u[6]=0,u[10]=S,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Gs=new U,_i=new $e,WM=new U(0,0,0),XM=new U(1,1,1),wr=new U,sc=new U,Qn=new U,ng=new $e,ig=new Vn;class ni{constructor(e=0,t=0,n=0,i=ni.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],l=i[4],c=i[8],u=i[1],h=i[5],f=i[9],p=i[2],m=i[6],v=i[10];switch(t){case"XYZ":this._y=Math.asin(jt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-f,v),this._z=Math.atan2(-l,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-jt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(jt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,v),this._z=Math.atan2(-l,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-jt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,v),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-l,h));break;case"YZX":this._z=Math.asin(jt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-f,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-jt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-f,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return ng.makeRotationFromQuaternion(e),this.setFromRotationMatrix(ng,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return ig.setFromEuler(this),this.setFromQuaternion(ig,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ni.DEFAULT_ORDER="XYZ";class gs{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let qM=0;const rg=new U,Ws=new Vn,Ki=new $e,oc=new U,ea=new U,YM=new U,jM=new Vn,sg=new U(1,0,0),og=new U(0,1,0),ag=new U(0,0,1),lg={type:"added"},ZM={type:"removed"},Xs={type:"childadded",child:null},Jh={type:"childremoved",child:null};class wt extends cr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:qM++}),this.uuid=ti(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=wt.DEFAULT_UP.clone();const e=new U,t=new ni,n=new Vn,i=new U(1,1,1);function s(){n.setFromEuler(t,!1)}function l(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new $e},normalMatrix:{value:new lt}}),this.matrix=new $e,this.matrixWorld=new $e,this.matrixAutoUpdate=wt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=wt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new gs,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ws.setFromAxisAngle(e,t),this.quaternion.multiply(Ws),this}rotateOnWorldAxis(e,t){return Ws.setFromAxisAngle(e,t),this.quaternion.premultiply(Ws),this}rotateX(e){return this.rotateOnAxis(sg,e)}rotateY(e){return this.rotateOnAxis(og,e)}rotateZ(e){return this.rotateOnAxis(ag,e)}translateOnAxis(e,t){return rg.copy(e).applyQuaternion(this.quaternion),this.position.add(rg.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(sg,e)}translateY(e){return this.translateOnAxis(og,e)}translateZ(e){return this.translateOnAxis(ag,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Ki.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?oc.copy(e):oc.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ea.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ki.lookAt(ea,oc,this.up):Ki.lookAt(oc,ea,this.up),this.quaternion.setFromRotationMatrix(Ki),i&&(Ki.extractRotation(i.matrixWorld),Ws.setFromRotationMatrix(Ki),this.quaternion.premultiply(Ws.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(lg),Xs.child=e,this.dispatchEvent(Xs),Xs.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(ZM),Jh.child=e,this.dispatchEvent(Jh),Jh.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Ki.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ki.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ki),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(lg),Xs.child=e,this.dispatchEvent(Xs),Xs.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(e,t);if(l!==void 0)return l}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let s=0,l=i.length;s<l;s++)i[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ea,e,YM),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ea,jM,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,l=i.length;s<l;s++){const c=i[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),i.maxGeometryCount=this._maxGeometryCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,f=u.length;h<f;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=l(e.geometries),u=l(e.materials),h=l(e.textures),f=l(e.images),p=l(e.shapes),m=l(e.skeletons),v=l(e.animations),y=l(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),f.length>0&&(n.images=f),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),v.length>0&&(n.animations=v),y.length>0&&(n.nodes=y)}return n.object=i,n;function l(c){const u=[];for(const h in c){const f=c[h];delete f.metadata,u.push(f)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}wt.DEFAULT_UP=new U(0,1,0);wt.DEFAULT_MATRIX_AUTO_UPDATE=!0;wt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const yi=new U,Qi=new U,Kh=new U,$i=new U,qs=new U,Ys=new U,cg=new U,Qh=new U,$h=new U,ef=new U;class ei{constructor(e=new U,t=new U,n=new U){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),yi.subVectors(e,t),i.cross(yi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){yi.subVectors(i,t),Qi.subVectors(n,t),Kh.subVectors(e,t);const l=yi.dot(yi),c=yi.dot(Qi),u=yi.dot(Kh),h=Qi.dot(Qi),f=Qi.dot(Kh),p=l*h-c*c;if(p===0)return s.set(0,0,0),null;const m=1/p,v=(h*u-c*f)*m,y=(l*f-c*u)*m;return s.set(1-v-y,y,v)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,$i)===null?!1:$i.x>=0&&$i.y>=0&&$i.x+$i.y<=1}static getInterpolation(e,t,n,i,s,l,c,u){return this.getBarycoord(e,t,n,i,$i)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(s,$i.x),u.addScaledVector(l,$i.y),u.addScaledVector(c,$i.z),u)}static isFrontFacing(e,t,n,i){return yi.subVectors(n,t),Qi.subVectors(e,t),yi.cross(Qi).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return yi.subVectors(this.c,this.b),Qi.subVectors(this.a,this.b),yi.cross(Qi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ei.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ei.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,s){return ei.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return ei.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ei.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let l,c;qs.subVectors(i,n),Ys.subVectors(s,n),Qh.subVectors(e,n);const u=qs.dot(Qh),h=Ys.dot(Qh);if(u<=0&&h<=0)return t.copy(n);$h.subVectors(e,i);const f=qs.dot($h),p=Ys.dot($h);if(f>=0&&p<=f)return t.copy(i);const m=u*p-f*h;if(m<=0&&u>=0&&f<=0)return l=u/(u-f),t.copy(n).addScaledVector(qs,l);ef.subVectors(e,s);const v=qs.dot(ef),y=Ys.dot(ef);if(y>=0&&v<=y)return t.copy(s);const S=v*h-u*y;if(S<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(n).addScaledVector(Ys,c);const x=f*y-v*p;if(x<=0&&p-f>=0&&v-y>=0)return cg.subVectors(s,i),c=(p-f)/(p-f+(v-y)),t.copy(i).addScaledVector(cg,c);const _=1/(x+S+m);return l=S*_,c=m*_,t.copy(n).addScaledVector(qs,l).addScaledVector(Ys,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const o_={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Er={h:0,s:0,l:0},ac={h:0,s:0,l:0};function tf(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class Le{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=fi){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,bt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=bt.workingColorSpace){return this.r=e,this.g=t,this.b=n,bt.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=bt.workingColorSpace){if(e=Hd(e,1),t=jt(t,0,1),n=jt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,l=2*n-s;this.r=tf(l,s,e+1/3),this.g=tf(l,s,e),this.b=tf(l,s,e-1/3)}return bt.toWorkingColorSpace(this,i),this}setStyle(e,t=fi){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],l=s.length;if(l===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(l===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=fi){const n=o_[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=xo(e.r),this.g=xo(e.g),this.b=xo(e.b),this}copyLinearToSRGB(e){return this.r=Vh(e.r),this.g=Vh(e.g),this.b=Vh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=fi){return bt.fromWorkingColorSpace(Sn.copy(this),e),Math.round(jt(Sn.r*255,0,255))*65536+Math.round(jt(Sn.g*255,0,255))*256+Math.round(jt(Sn.b*255,0,255))}getHexString(e=fi){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=bt.workingColorSpace){bt.fromWorkingColorSpace(Sn.copy(this),t);const n=Sn.r,i=Sn.g,s=Sn.b,l=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const f=(c+l)/2;if(c===l)u=0,h=0;else{const p=l-c;switch(h=f<=.5?p/(l+c):p/(2-l-c),l){case n:u=(i-s)/p+(i<s?6:0);break;case i:u=(s-n)/p+2;break;case s:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=f,e}getRGB(e,t=bt.workingColorSpace){return bt.fromWorkingColorSpace(Sn.copy(this),t),e.r=Sn.r,e.g=Sn.g,e.b=Sn.b,e}getStyle(e=fi){bt.fromWorkingColorSpace(Sn.copy(this),e);const t=Sn.r,n=Sn.g,i=Sn.b;return e!==fi?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Er),this.setHSL(Er.h+e,Er.s+t,Er.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Er),e.getHSL(ac);const n=ga(Er.h,ac.h,t),i=ga(Er.s,ac.s,t),s=ga(Er.l,ac.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Sn=new Le;Le.NAMES=o_;let JM=0;class mn extends cr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:JM++}),this.uuid=ti(),this.name="",this.type="Material",this.blending=ds,this.side=sr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=eu,this.blendDst=tu,this.blendEquation=Rr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Le(0,0,0),this.blendAlpha=0,this.depthFunc=ya,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=dd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=rs,this.stencilZFail=rs,this.stencilZPass=rs,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ds&&(n.blending=this.blending),this.side!==sr&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==eu&&(n.blendSrc=this.blendSrc),this.blendDst!==tu&&(n.blendDst=this.blendDst),this.blendEquation!==Rr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==ya&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==dd&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==rs&&(n.stencilFail=this.stencilFail),this.stencilZFail!==rs&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==rs&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const l=[];for(const c in s){const u=s[c];delete u.metadata,l.push(u)}return l}if(t){const s=i(e.textures),l=i(e.images);s.length>0&&(n.textures=s),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Dr extends mn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ni,this.combine=Ga,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const nr=KM();function KM(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,f=0;for(;!(h&8388608);)h<<=1,f-=8388608;h&=-8388609,f+=947912704,s[u]=h|f}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)l[u]=u<<23;l[31]=1199570944,l[32]=2147483648;for(let u=33;u<63;++u)l[u]=2147483648+(u-32<<23);l[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:l,offsetTable:c}}function Bn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=jt(r,-65504,65504),nr.floatView[0]=r;const e=nr.uint32View[0],t=e>>23&511;return nr.baseTable[t]+((e&8388607)>>nr.shiftTable[t])}function fa(r){const e=r>>10;return nr.uint32View[0]=nr.mantissaTable[nr.offsetTable[e]+(r&1023)]+nr.exponentTable[e],nr.floatView[0]}const QM={toHalfFloat:Bn,fromHalfFloat:fa},$t=new U,lc=new he;class Rt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Ia,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=pi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return i_("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)lc.fromBufferAttribute(this,t),lc.applyMatrix3(e),this.setXY(t,lc.x,lc.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)$t.fromBufferAttribute(this,t),$t.applyMatrix3(e),this.setXYZ(t,$t.x,$t.y,$t.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)$t.fromBufferAttribute(this,t),$t.applyMatrix4(e),this.setXYZ(t,$t.x,$t.y,$t.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)$t.fromBufferAttribute(this,t),$t.applyNormalMatrix(e),this.setXYZ(t,$t.x,$t.y,$t.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)$t.fromBufferAttribute(this,t),$t.transformDirection(e),this.setXYZ(t,$t.x,$t.y,$t.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=In(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ct(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=In(t,this.array)),t}setX(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=In(t,this.array)),t}setY(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=In(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=In(t,this.array)),t}setW(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array),s=ct(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Ia&&(e.usage=this.usage),e}}class $M extends Rt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class eS extends Rt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class tS extends Rt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class nS extends Rt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Gd extends Rt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class iS extends Rt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Wd extends Rt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class rS extends Rt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=fa(this.array[e*this.itemSize]);return this.normalized&&(t=In(t,this.array)),t}setX(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize]=Bn(t),this}getY(e){let t=fa(this.array[e*this.itemSize+1]);return this.normalized&&(t=In(t,this.array)),t}setY(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+1]=Bn(t),this}getZ(e){let t=fa(this.array[e*this.itemSize+2]);return this.normalized&&(t=In(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+2]=Bn(t),this}getW(e){let t=fa(this.array[e*this.itemSize+3]);return this.normalized&&(t=In(t,this.array)),t}setW(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+3]=Bn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array)),this.array[e+0]=Bn(t),this.array[e+1]=Bn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array)),this.array[e+0]=Bn(t),this.array[e+1]=Bn(n),this.array[e+2]=Bn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array),s=ct(s,this.array)),this.array[e+0]=Bn(t),this.array[e+1]=Bn(n),this.array[e+2]=Bn(i),this.array[e+3]=Bn(s),this}}class ke extends Rt{constructor(e,t,n){super(new Float32Array(e),t,n)}}let sS=0;const hi=new $e,nf=new wt,js=new U,$n=new Nn,ta=new Nn,hn=new U;class ht extends cr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:sS++}),this.uuid=ti(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(t_(e)?Wd:Gd)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new lt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return hi.makeRotationFromQuaternion(e),this.applyMatrix4(hi),this}rotateX(e){return hi.makeRotationX(e),this.applyMatrix4(hi),this}rotateY(e){return hi.makeRotationY(e),this.applyMatrix4(hi),this}rotateZ(e){return hi.makeRotationZ(e),this.applyMatrix4(hi),this}translate(e,t,n){return hi.makeTranslation(e,t,n),this.applyMatrix4(hi),this}scale(e,t,n){return hi.makeScale(e,t,n),this.applyMatrix4(hi),this}lookAt(e){return nf.lookAt(e),nf.updateMatrix(),this.applyMatrix4(nf.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(js).negate(),this.translate(js.x,js.y,js.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new ke(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Nn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new U(-1/0,-1/0,-1/0),new U(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];$n.setFromBufferAttribute(s),this.morphTargetsRelative?(hn.addVectors(this.boundingBox.min,$n.min),this.boundingBox.expandByPoint(hn),hn.addVectors(this.boundingBox.max,$n.max),this.boundingBox.expandByPoint(hn)):(this.boundingBox.expandByPoint($n.min),this.boundingBox.expandByPoint($n.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new En);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new U,1/0);return}if(e){const n=this.boundingSphere.center;if($n.setFromBufferAttribute(e),t)for(let s=0,l=t.length;s<l;s++){const c=t[s];ta.setFromBufferAttribute(c),this.morphTargetsRelative?(hn.addVectors($n.min,ta.min),$n.expandByPoint(hn),hn.addVectors($n.max,ta.max),$n.expandByPoint(hn)):($n.expandByPoint(ta.min),$n.expandByPoint(ta.max))}$n.getCenter(n);let i=0;for(let s=0,l=e.count;s<l;s++)hn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(hn));if(t)for(let s=0,l=t.length;s<l;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,f=c.count;h<f;h++)hn.fromBufferAttribute(c,h),u&&(js.fromBufferAttribute(e,h),hn.add(js)),i=Math.max(i,n.distanceToSquared(hn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Rt(new Float32Array(4*n.count),4));const l=this.getAttribute("tangent"),c=[],u=[];for(let z=0;z<n.count;z++)c[z]=new U,u[z]=new U;const h=new U,f=new U,p=new U,m=new he,v=new he,y=new he,S=new U,x=new U;function _(z,R,b){h.fromBufferAttribute(n,z),f.fromBufferAttribute(n,R),p.fromBufferAttribute(n,b),m.fromBufferAttribute(s,z),v.fromBufferAttribute(s,R),y.fromBufferAttribute(s,b),f.sub(h),p.sub(h),v.sub(m),y.sub(m);const F=1/(v.x*y.y-y.x*v.y);isFinite(F)&&(S.copy(f).multiplyScalar(y.y).addScaledVector(p,-v.y).multiplyScalar(F),x.copy(p).multiplyScalar(v.x).addScaledVector(f,-y.x).multiplyScalar(F),c[z].add(S),c[R].add(S),c[b].add(S),u[z].add(x),u[R].add(x),u[b].add(x))}let E=this.groups;E.length===0&&(E=[{start:0,count:e.count}]);for(let z=0,R=E.length;z<R;++z){const b=E[z],F=b.start,X=b.count;for(let H=F,Z=F+X;H<Z;H+=3)_(e.getX(H+0),e.getX(H+1),e.getX(H+2))}const w=new U,T=new U,N=new U,P=new U;function I(z){N.fromBufferAttribute(i,z),P.copy(N);const R=c[z];w.copy(R),w.sub(N.multiplyScalar(N.dot(R))).normalize(),T.crossVectors(P,R);const F=T.dot(u[z])<0?-1:1;l.setXYZW(z,w.x,w.y,w.z,F)}for(let z=0,R=E.length;z<R;++z){const b=E[z],F=b.start,X=b.count;for(let H=F,Z=F+X;H<Z;H+=3)I(e.getX(H+0)),I(e.getX(H+1)),I(e.getX(H+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Rt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,v=n.count;m<v;m++)n.setXYZ(m,0,0,0);const i=new U,s=new U,l=new U,c=new U,u=new U,h=new U,f=new U,p=new U;if(e)for(let m=0,v=e.count;m<v;m+=3){const y=e.getX(m+0),S=e.getX(m+1),x=e.getX(m+2);i.fromBufferAttribute(t,y),s.fromBufferAttribute(t,S),l.fromBufferAttribute(t,x),f.subVectors(l,s),p.subVectors(i,s),f.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,S),h.fromBufferAttribute(n,x),c.add(f),u.add(f),h.add(f),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(S,u.x,u.y,u.z),n.setXYZ(x,h.x,h.y,h.z)}else for(let m=0,v=t.count;m<v;m+=3)i.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),l.fromBufferAttribute(t,m+2),f.subVectors(l,s),p.subVectors(i,s),f.cross(p),n.setXYZ(m+0,f.x,f.y,f.z),n.setXYZ(m+1,f.x,f.y,f.z),n.setXYZ(m+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)hn.fromBufferAttribute(e,t),hn.normalize(),e.setXYZ(t,hn.x,hn.y,hn.z)}toNonIndexed(){function e(c,u){const h=c.array,f=c.itemSize,p=c.normalized,m=new h.constructor(u.length*f);let v=0,y=0;for(let S=0,x=u.length;S<x;S++){c.isInterleavedBufferAttribute?v=u[S]*c.data.stride+c.offset:v=u[S]*f;for(let _=0;_<f;_++)m[y++]=h[v++]}return new Rt(m,f,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ht,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,p=h.length;f<p;f++){const m=h[f],v=e(m,n);u.push(v)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,u=l.length;c<u;c++){const h=l[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],f=[];for(let p=0,m=h.length;p<m;p++){const v=h[p];f.push(v.toJSON(e.data))}f.length>0&&(i[u]=f,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const f=i[h];this.setAttribute(h,f.clone(t))}const s=e.morphAttributes;for(const h in s){const f=[],p=s[h];for(let m=0,v=p.length;m<v;m++)f.push(p[m].clone(t));this.morphAttributes[h]=f}this.morphTargetsRelative=e.morphTargetsRelative;const l=e.groups;for(let h=0,f=l.length;h<f;h++){const p=l[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const ug=new $e,jr=new Co,cc=new En,hg=new U,Zs=new U,Js=new U,Ks=new U,rf=new U,uc=new U,hc=new he,fc=new he,dc=new he,fg=new U,dg=new U,pg=new U,pc=new U,mc=new U;class nn extends wt{constructor(e=new ht,t=new Dr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,l=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){uc.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const f=c[u],p=s[u];f!==0&&(rf.fromBufferAttribute(p,e),l?uc.addScaledVector(rf,f):uc.addScaledVector(rf.sub(t),f))}t.add(uc)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),cc.copy(n.boundingSphere),cc.applyMatrix4(s),jr.copy(e.ray).recast(e.near),!(cc.containsPoint(jr.origin)===!1&&(jr.intersectSphere(cc,hg)===null||jr.origin.distanceToSquared(hg)>(e.far-e.near)**2))&&(ug.copy(s).invert(),jr.copy(e.ray).applyMatrix4(ug),!(n.boundingBox!==null&&jr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,jr)))}_computeIntersections(e,t,n){let i;const s=this.geometry,l=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,f=s.attributes.uv1,p=s.attributes.normal,m=s.groups,v=s.drawRange;if(c!==null)if(Array.isArray(l))for(let y=0,S=m.length;y<S;y++){const x=m[y],_=l[x.materialIndex],E=Math.max(x.start,v.start),w=Math.min(c.count,Math.min(x.start+x.count,v.start+v.count));for(let T=E,N=w;T<N;T+=3){const P=c.getX(T),I=c.getX(T+1),z=c.getX(T+2);i=gc(this,_,e,n,h,f,p,P,I,z),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,v.start),S=Math.min(c.count,v.start+v.count);for(let x=y,_=S;x<_;x+=3){const E=c.getX(x),w=c.getX(x+1),T=c.getX(x+2);i=gc(this,l,e,n,h,f,p,E,w,T),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(l))for(let y=0,S=m.length;y<S;y++){const x=m[y],_=l[x.materialIndex],E=Math.max(x.start,v.start),w=Math.min(u.count,Math.min(x.start+x.count,v.start+v.count));for(let T=E,N=w;T<N;T+=3){const P=T,I=T+1,z=T+2;i=gc(this,_,e,n,h,f,p,P,I,z),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,v.start),S=Math.min(u.count,v.start+v.count);for(let x=y,_=S;x<_;x+=3){const E=x,w=x+1,T=x+2;i=gc(this,l,e,n,h,f,p,E,w,T),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}}}function oS(r,e,t,n,i,s,l,c){let u;if(e.side===Ln?u=n.intersectTriangle(l,s,i,!0,c):u=n.intersectTriangle(i,s,l,e.side===sr,c),u===null)return null;mc.copy(c),mc.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(mc);return h<t.near||h>t.far?null:{distance:h,point:mc.clone(),object:r}}function gc(r,e,t,n,i,s,l,c,u,h){r.getVertexPosition(c,Zs),r.getVertexPosition(u,Js),r.getVertexPosition(h,Ks);const f=oS(r,e,t,n,Zs,Js,Ks,pc);if(f){i&&(hc.fromBufferAttribute(i,c),fc.fromBufferAttribute(i,u),dc.fromBufferAttribute(i,h),f.uv=ei.getInterpolation(pc,Zs,Js,Ks,hc,fc,dc,new he)),s&&(hc.fromBufferAttribute(s,c),fc.fromBufferAttribute(s,u),dc.fromBufferAttribute(s,h),f.uv1=ei.getInterpolation(pc,Zs,Js,Ks,hc,fc,dc,new he)),l&&(fg.fromBufferAttribute(l,c),dg.fromBufferAttribute(l,u),pg.fromBufferAttribute(l,h),f.normal=ei.getInterpolation(pc,Zs,Js,Ks,fg,dg,pg,new U),f.normal.dot(n.direction)>0&&f.normal.multiplyScalar(-1));const p={a:c,b:u,c:h,normal:new U,materialIndex:0};ei.getNormal(Zs,Js,Ks,p.normal),f.face=p}return f}class Ms extends ht{constructor(e=1,t=1,n=1,i=1,s=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:l};const c=this;i=Math.floor(i),s=Math.floor(s),l=Math.floor(l);const u=[],h=[],f=[],p=[];let m=0,v=0;y("z","y","x",-1,-1,n,t,e,l,s,0),y("z","y","x",1,-1,n,t,-e,l,s,1),y("x","z","y",1,1,e,n,t,i,l,2),y("x","z","y",1,-1,e,n,-t,i,l,3),y("x","y","z",1,-1,e,t,n,i,s,4),y("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new ke(h,3)),this.setAttribute("normal",new ke(f,3)),this.setAttribute("uv",new ke(p,2));function y(S,x,_,E,w,T,N,P,I,z,R){const b=T/I,F=N/z,X=T/2,H=N/2,Z=P/2,$=I+1,ae=z+1;let ve=0,k=0;const K=new U;for(let j=0;j<ae;j++){const ue=j*F-H;for(let Ae=0;Ae<$;Ae++){const Ne=Ae*b-X;K[S]=Ne*E,K[x]=ue*w,K[_]=Z,h.push(K.x,K.y,K.z),K[S]=0,K[x]=0,K[_]=P>0?1:-1,f.push(K.x,K.y,K.z),p.push(Ae/I),p.push(1-j/z),ve+=1}}for(let j=0;j<z;j++)for(let ue=0;ue<I;ue++){const Ae=m+ue+$*j,Ne=m+ue+$*(j+1),te=m+(ue+1)+$*(j+1),ge=m+(ue+1)+$*j;u.push(Ae,Ne,ge),u.push(Ne,te,ge),k+=6}c.addGroup(v,k,R),v+=k,m+=ve}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ms(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function wo(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Pn(r){const e={};for(let t=0;t<r.length;t++){const n=wo(r[t]);for(const i in n)e[i]=n[i]}return e}function aS(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function a_(r){const e=r.getRenderTarget();return e===null?r.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:bt.workingColorSpace}const l_={clone:wo,merge:Pn};var lS=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,cS=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ei extends mn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=lS,this.fragmentShader=cS,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=wo(e.uniforms),this.uniformsGroups=aS(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?t.uniforms[i]={type:"t",value:l.toJSON(e).uuid}:l&&l.isColor?t.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?t.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?t.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?t.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?t.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?t.uniforms[i]={type:"m4",value:l.toArray()}:t.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Xa extends wt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new $e,this.projectionMatrix=new $e,this.projectionMatrixInverse=new $e,this.coordinateSystem=Fi}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Ar=new U,mg=new he,gg=new he;class en extends Xa{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=So*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(ms*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return So*2*Math.atan(Math.tan(ms*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){Ar.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Ar.x,Ar.y).multiplyScalar(-e/Ar.z),Ar.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Ar.x,Ar.y).multiplyScalar(-e/Ar.z)}getViewSize(e,t){return this.getViewBounds(e,mg,gg),t.subVectors(gg,mg)}setViewOffset(e,t,n,i,s,l){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(ms*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const u=l.fullWidth,h=l.fullHeight;s+=l.offsetX*i/u,t-=l.offsetY*n/h,i*=l.width/u,n*=l.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Qs=-90,$s=1;class c_ extends wt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new en(Qs,$s,e,t);i.layers=this.layers,this.add(i);const s=new en(Qs,$s,e,t);s.layers=this.layers,this.add(s);const l=new en(Qs,$s,e,t);l.layers=this.layers,this.add(l);const c=new en(Qs,$s,e,t);c.layers=this.layers,this.add(c);const u=new en(Qs,$s,e,t);u.layers=this.layers,this.add(u);const h=new en(Qs,$s,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,l,c,u]=t;for(const h of t)this.remove(h);if(e===Fi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===La)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,l,c,u,h,f]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),v=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const S=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,l),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,u),e.setRenderTarget(n,4,i),e.render(t,h),n.texture.generateMipmaps=S,e.setRenderTarget(n,5,i),e.render(t,f),e.setRenderTarget(p,m,v),e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}}class qa extends Gt{constructor(e,t,n,i,s,l,c,u,h,f){e=e!==void 0?e:[],t=t!==void 0?t:or,super(e,t,n,i,s,l,c,u,h,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class u_ extends wi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new qa(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:tn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Ms(5,5,5),s=new Ei({name:"CubemapFromEquirect",uniforms:wo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Ln,blending:rr});s.uniforms.tEquirect.value=t;const l=new nn(i,s),c=t.minFilter;return t.minFilter===Oi&&(t.minFilter=tn),new c_(1,10,this).update(e,l),t.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let l=0;l<6;l++)e.setRenderTarget(this,l),e.clear(t,n,i);e.setRenderTarget(s)}}const sf=new U,uS=new U,hS=new lt;class Cr{constructor(e=new U(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=sf.subVectors(n,t).cross(uS.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(sf),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||hS.getNormalMatrix(e),i=this.coplanarPoint(sf).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Zr=new En,vc=new U;class Ya{constructor(e=new Cr,t=new Cr,n=new Cr,i=new Cr,s=new Cr,l=new Cr){this.planes=[e,t,n,i,s,l]}set(e,t,n,i,s,l){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(l),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Fi){const n=this.planes,i=e.elements,s=i[0],l=i[1],c=i[2],u=i[3],h=i[4],f=i[5],p=i[6],m=i[7],v=i[8],y=i[9],S=i[10],x=i[11],_=i[12],E=i[13],w=i[14],T=i[15];if(n[0].setComponents(u-s,m-h,x-v,T-_).normalize(),n[1].setComponents(u+s,m+h,x+v,T+_).normalize(),n[2].setComponents(u+l,m+f,x+y,T+E).normalize(),n[3].setComponents(u-l,m-f,x-y,T-E).normalize(),n[4].setComponents(u-c,m-p,x-S,T-w).normalize(),t===Fi)n[5].setComponents(u+c,m+p,x+S,T+w).normalize();else if(t===La)n[5].setComponents(c,p,S,w).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Zr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Zr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Zr)}intersectsSprite(e){return Zr.center.set(0,0,0),Zr.radius=.7071067811865476,Zr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Zr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(vc.x=i.normal.x>0?e.max.x:e.min.x,vc.y=i.normal.y>0?e.max.y:e.min.y,vc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(vc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function h_(){let r=null,e=!1,t=null,n=null;function i(s,l){t(s,l),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function fS(r){const e=new WeakMap;function t(c,u){const h=c.array,f=c.usage,p=h.byteLength,m=r.createBuffer();r.bindBuffer(u,m),r.bufferData(u,h,f),c.onUploadCallback();let v;if(h instanceof Float32Array)v=r.FLOAT;else if(h instanceof Uint16Array)c.isFloat16BufferAttribute?v=r.HALF_FLOAT:v=r.UNSIGNED_SHORT;else if(h instanceof Int16Array)v=r.SHORT;else if(h instanceof Uint32Array)v=r.UNSIGNED_INT;else if(h instanceof Int32Array)v=r.INT;else if(h instanceof Int8Array)v=r.BYTE;else if(h instanceof Uint8Array)v=r.UNSIGNED_BYTE;else if(h instanceof Uint8ClampedArray)v=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:m,type:v,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version,size:p}}function n(c,u,h){const f=u.array,p=u._updateRange,m=u.updateRanges;if(r.bindBuffer(h,c),p.count===-1&&m.length===0&&r.bufferSubData(h,0,f),m.length!==0){for(let v=0,y=m.length;v<y;v++){const S=m[v];r.bufferSubData(h,S.start*f.BYTES_PER_ELEMENT,f,S.start,S.count)}u.clearUpdateRanges()}p.count!==-1&&(r.bufferSubData(h,p.offset*f.BYTES_PER_ELEMENT,f,p.offset,p.count),p.count=-1),u.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),e.get(c)}function s(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=e.get(c);u&&(r.deleteBuffer(u.buffer),e.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const f=e.get(c);(!f||f.version<c.version)&&e.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=e.get(c);if(h===void 0)e.set(c,t(c,u));else if(h.version<c.version){if(h.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(h.buffer,c,u),h.version=c.version}}return{get:i,remove:s,update:l}}class Ro extends ht{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,l=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,f=u+1,p=e/c,m=t/u,v=[],y=[],S=[],x=[];for(let _=0;_<f;_++){const E=_*m-l;for(let w=0;w<h;w++){const T=w*p-s;y.push(T,-E,0),S.push(0,0,1),x.push(w/c),x.push(1-_/u)}}for(let _=0;_<u;_++)for(let E=0;E<c;E++){const w=E+h*_,T=E+h*(_+1),N=E+1+h*(_+1),P=E+1+h*_;v.push(w,T,P),v.push(T,N,P)}this.setIndex(v),this.setAttribute("position",new ke(y,3)),this.setAttribute("normal",new ke(S,3)),this.setAttribute("uv",new ke(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ro(e.width,e.height,e.widthSegments,e.heightSegments)}}var dS=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,pS=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,mS=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,gS=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,vS=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,_S=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,yS=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,xS=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,MS=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,SS=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,wS=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,ES=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,AS=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,TS=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,bS=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,CS=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,RS=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,PS=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,IS=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,LS=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,NS=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,DS=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,US=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,OS=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,FS=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,zS=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,BS=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,kS=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,HS=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,VS=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,GS="gl_FragColor = linearToOutputTexel( gl_FragColor );",WS=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,XS=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,qS=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,YS=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,jS=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,ZS=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,JS=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,KS=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,QS=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,$S=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,e1=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,t1=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,n1=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,i1=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,r1=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,s1=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,o1=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,a1=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,l1=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,c1=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,u1=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,h1=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,f1=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,d1=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,p1=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,m1=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,g1=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,v1=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,_1=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,y1=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,x1=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,M1=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,S1=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,w1=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,E1=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,A1=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,T1=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[MORPHTARGETS_COUNT];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,b1=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,C1=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,R1=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
	#endif
	#ifdef MORPHTARGETS_TEXTURE
		#ifndef USE_INSTANCING_MORPH
			uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		#endif
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,P1=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,I1=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,L1=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,N1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,D1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,U1=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,O1=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,F1=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,z1=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,B1=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,k1=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,H1=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,V1=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,G1=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,W1=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,X1=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,q1=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Y1=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,j1=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Z1=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return shadow;
	}
#endif`,J1=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,K1=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Q1=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,$1=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,ew=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,tw=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,nw=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,iw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,rw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,sw=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,ow=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	float startCompression = 0.8 - 0.04;
	float desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min(color.r, min(color.g, color.b));
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max(color.r, max(color.g, color.b));
	if (peak < startCompression) return color;
	float d = 1. - startCompression;
	float newPeak = 1. - d * d / (peak + d - startCompression);
	color *= newPeak / peak;
	float g = 1. - 1. / (desaturation * (peak - newPeak) + 1.);
	return mix(color, newPeak * vec3(1, 1, 1), g);
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,aw=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,lw=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,cw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,uw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,hw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,fw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const dw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,pw=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,mw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,gw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,vw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,_w=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,yw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,xw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Mw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Sw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,ww=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Ew=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Aw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Tw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,bw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Cw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Rw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Pw=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Iw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Lw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Nw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Dw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Uw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ow=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Fw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,zw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Bw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,kw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Hw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Vw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Gw=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ww=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Xw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,qw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ut={alphahash_fragment:dS,alphahash_pars_fragment:pS,alphamap_fragment:mS,alphamap_pars_fragment:gS,alphatest_fragment:vS,alphatest_pars_fragment:_S,aomap_fragment:yS,aomap_pars_fragment:xS,batching_pars_vertex:MS,batching_vertex:SS,begin_vertex:wS,beginnormal_vertex:ES,bsdfs:AS,iridescence_fragment:TS,bumpmap_pars_fragment:bS,clipping_planes_fragment:CS,clipping_planes_pars_fragment:RS,clipping_planes_pars_vertex:PS,clipping_planes_vertex:IS,color_fragment:LS,color_pars_fragment:NS,color_pars_vertex:DS,color_vertex:US,common:OS,cube_uv_reflection_fragment:FS,defaultnormal_vertex:zS,displacementmap_pars_vertex:BS,displacementmap_vertex:kS,emissivemap_fragment:HS,emissivemap_pars_fragment:VS,colorspace_fragment:GS,colorspace_pars_fragment:WS,envmap_fragment:XS,envmap_common_pars_fragment:qS,envmap_pars_fragment:YS,envmap_pars_vertex:jS,envmap_physical_pars_fragment:o1,envmap_vertex:ZS,fog_vertex:JS,fog_pars_vertex:KS,fog_fragment:QS,fog_pars_fragment:$S,gradientmap_pars_fragment:e1,lightmap_fragment:t1,lightmap_pars_fragment:n1,lights_lambert_fragment:i1,lights_lambert_pars_fragment:r1,lights_pars_begin:s1,lights_toon_fragment:a1,lights_toon_pars_fragment:l1,lights_phong_fragment:c1,lights_phong_pars_fragment:u1,lights_physical_fragment:h1,lights_physical_pars_fragment:f1,lights_fragment_begin:d1,lights_fragment_maps:p1,lights_fragment_end:m1,logdepthbuf_fragment:g1,logdepthbuf_pars_fragment:v1,logdepthbuf_pars_vertex:_1,logdepthbuf_vertex:y1,map_fragment:x1,map_pars_fragment:M1,map_particle_fragment:S1,map_particle_pars_fragment:w1,metalnessmap_fragment:E1,metalnessmap_pars_fragment:A1,morphinstance_vertex:T1,morphcolor_vertex:b1,morphnormal_vertex:C1,morphtarget_pars_vertex:R1,morphtarget_vertex:P1,normal_fragment_begin:I1,normal_fragment_maps:L1,normal_pars_fragment:N1,normal_pars_vertex:D1,normal_vertex:U1,normalmap_pars_fragment:O1,clearcoat_normal_fragment_begin:F1,clearcoat_normal_fragment_maps:z1,clearcoat_pars_fragment:B1,iridescence_pars_fragment:k1,opaque_fragment:H1,packing:V1,premultiplied_alpha_fragment:G1,project_vertex:W1,dithering_fragment:X1,dithering_pars_fragment:q1,roughnessmap_fragment:Y1,roughnessmap_pars_fragment:j1,shadowmap_pars_fragment:Z1,shadowmap_pars_vertex:J1,shadowmap_vertex:K1,shadowmask_pars_fragment:Q1,skinbase_vertex:$1,skinning_pars_vertex:ew,skinning_vertex:tw,skinnormal_vertex:nw,specularmap_fragment:iw,specularmap_pars_fragment:rw,tonemapping_fragment:sw,tonemapping_pars_fragment:ow,transmission_fragment:aw,transmission_pars_fragment:lw,uv_pars_fragment:cw,uv_pars_vertex:uw,uv_vertex:hw,worldpos_vertex:fw,background_vert:dw,background_frag:pw,backgroundCube_vert:mw,backgroundCube_frag:gw,cube_vert:vw,cube_frag:_w,depth_vert:yw,depth_frag:xw,distanceRGBA_vert:Mw,distanceRGBA_frag:Sw,equirect_vert:ww,equirect_frag:Ew,linedashed_vert:Aw,linedashed_frag:Tw,meshbasic_vert:bw,meshbasic_frag:Cw,meshlambert_vert:Rw,meshlambert_frag:Pw,meshmatcap_vert:Iw,meshmatcap_frag:Lw,meshnormal_vert:Nw,meshnormal_frag:Dw,meshphong_vert:Uw,meshphong_frag:Ow,meshphysical_vert:Fw,meshphysical_frag:zw,meshtoon_vert:Bw,meshtoon_frag:kw,points_vert:Hw,points_frag:Vw,shadow_vert:Gw,shadow_frag:Ww,sprite_vert:Xw,sprite_frag:qw},Ce={common:{diffuse:{value:new Le(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new lt},alphaMap:{value:null},alphaMapTransform:{value:new lt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new lt}},envmap:{envMap:{value:null},envMapRotation:{value:new lt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new lt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new lt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new lt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new lt},normalScale:{value:new he(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new lt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new lt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new lt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new lt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Le(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Le(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new lt},alphaTest:{value:0},uvTransform:{value:new lt}},sprite:{diffuse:{value:new Le(16777215)},opacity:{value:1},center:{value:new he(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new lt},alphaMap:{value:null},alphaMapTransform:{value:new lt},alphaTest:{value:0}}},Mi={basic:{uniforms:Pn([Ce.common,Ce.specularmap,Ce.envmap,Ce.aomap,Ce.lightmap,Ce.fog]),vertexShader:ut.meshbasic_vert,fragmentShader:ut.meshbasic_frag},lambert:{uniforms:Pn([Ce.common,Ce.specularmap,Ce.envmap,Ce.aomap,Ce.lightmap,Ce.emissivemap,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.fog,Ce.lights,{emissive:{value:new Le(0)}}]),vertexShader:ut.meshlambert_vert,fragmentShader:ut.meshlambert_frag},phong:{uniforms:Pn([Ce.common,Ce.specularmap,Ce.envmap,Ce.aomap,Ce.lightmap,Ce.emissivemap,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.fog,Ce.lights,{emissive:{value:new Le(0)},specular:{value:new Le(1118481)},shininess:{value:30}}]),vertexShader:ut.meshphong_vert,fragmentShader:ut.meshphong_frag},standard:{uniforms:Pn([Ce.common,Ce.envmap,Ce.aomap,Ce.lightmap,Ce.emissivemap,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.roughnessmap,Ce.metalnessmap,Ce.fog,Ce.lights,{emissive:{value:new Le(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ut.meshphysical_vert,fragmentShader:ut.meshphysical_frag},toon:{uniforms:Pn([Ce.common,Ce.aomap,Ce.lightmap,Ce.emissivemap,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.gradientmap,Ce.fog,Ce.lights,{emissive:{value:new Le(0)}}]),vertexShader:ut.meshtoon_vert,fragmentShader:ut.meshtoon_frag},matcap:{uniforms:Pn([Ce.common,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.fog,{matcap:{value:null}}]),vertexShader:ut.meshmatcap_vert,fragmentShader:ut.meshmatcap_frag},points:{uniforms:Pn([Ce.points,Ce.fog]),vertexShader:ut.points_vert,fragmentShader:ut.points_frag},dashed:{uniforms:Pn([Ce.common,Ce.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ut.linedashed_vert,fragmentShader:ut.linedashed_frag},depth:{uniforms:Pn([Ce.common,Ce.displacementmap]),vertexShader:ut.depth_vert,fragmentShader:ut.depth_frag},normal:{uniforms:Pn([Ce.common,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,{opacity:{value:1}}]),vertexShader:ut.meshnormal_vert,fragmentShader:ut.meshnormal_frag},sprite:{uniforms:Pn([Ce.sprite,Ce.fog]),vertexShader:ut.sprite_vert,fragmentShader:ut.sprite_frag},background:{uniforms:{uvTransform:{value:new lt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ut.background_vert,fragmentShader:ut.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new lt}},vertexShader:ut.backgroundCube_vert,fragmentShader:ut.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ut.cube_vert,fragmentShader:ut.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ut.equirect_vert,fragmentShader:ut.equirect_frag},distanceRGBA:{uniforms:Pn([Ce.common,Ce.displacementmap,{referencePosition:{value:new U},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ut.distanceRGBA_vert,fragmentShader:ut.distanceRGBA_frag},shadow:{uniforms:Pn([Ce.lights,Ce.fog,{color:{value:new Le(0)},opacity:{value:1}}]),vertexShader:ut.shadow_vert,fragmentShader:ut.shadow_frag}};Mi.physical={uniforms:Pn([Mi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new lt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new lt},clearcoatNormalScale:{value:new he(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new lt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new lt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new lt},sheen:{value:0},sheenColor:{value:new Le(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new lt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new lt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new lt},transmissionSamplerSize:{value:new he},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new lt},attenuationDistance:{value:0},attenuationColor:{value:new Le(0)},specularColor:{value:new Le(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new lt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new lt},anisotropyVector:{value:new he},anisotropyMap:{value:null},anisotropyMapTransform:{value:new lt}}]),vertexShader:ut.meshphysical_vert,fragmentShader:ut.meshphysical_frag};const _c={r:0,b:0,g:0},Jr=new ni,Yw=new $e;function jw(r,e,t,n,i,s,l){const c=new Le(0);let u=s===!0?0:1,h,f,p=null,m=0,v=null;function y(x,_){let E=!1,w=_.isScene===!0?_.background:null;w&&w.isTexture&&(w=(_.backgroundBlurriness>0?t:e).get(w)),w===null?S(c,u):w&&w.isColor&&(S(w,1),E=!0);const T=r.xr.getEnvironmentBlendMode();T==="additive"?n.buffers.color.setClear(0,0,0,1,l):T==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(r.autoClear||E)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),w&&(w.isCubeTexture||w.mapping===To)?(f===void 0&&(f=new nn(new Ms(1,1,1),new Ei({name:"BackgroundCubeMaterial",uniforms:wo(Mi.backgroundCube.uniforms),vertexShader:Mi.backgroundCube.vertexShader,fragmentShader:Mi.backgroundCube.fragmentShader,side:Ln,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(N,P,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(f)),Jr.copy(_.backgroundRotation),Jr.x*=-1,Jr.y*=-1,Jr.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(Jr.y*=-1,Jr.z*=-1),f.material.uniforms.envMap.value=w,f.material.uniforms.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,f.material.uniforms.backgroundRotation.value.setFromMatrix4(Yw.makeRotationFromEuler(Jr)),f.material.toneMapped=bt.getTransfer(w.colorSpace)!==Ot,(p!==w||m!==w.version||v!==r.toneMapping)&&(f.material.needsUpdate=!0,p=w,m=w.version,v=r.toneMapping),f.layers.enableAll(),x.unshift(f,f.geometry,f.material,0,0,null)):w&&w.isTexture&&(h===void 0&&(h=new nn(new Ro(2,2),new Ei({name:"BackgroundMaterial",uniforms:wo(Mi.background.uniforms),vertexShader:Mi.background.vertexShader,fragmentShader:Mi.background.fragmentShader,side:sr,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=w,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.toneMapped=bt.getTransfer(w.colorSpace)!==Ot,w.matrixAutoUpdate===!0&&w.updateMatrix(),h.material.uniforms.uvTransform.value.copy(w.matrix),(p!==w||m!==w.version||v!==r.toneMapping)&&(h.material.needsUpdate=!0,p=w,m=w.version,v=r.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null))}function S(x,_){x.getRGB(_c,a_(r)),n.buffers.color.setClear(_c.r,_c.g,_c.b,_,l)}return{getClearColor:function(){return c},setClearColor:function(x,_=1){c.set(x),u=_,S(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(x){u=x,S(c,u)},render:y}}function Zw(r,e){const t=r.getParameter(r.MAX_VERTEX_ATTRIBS),n={},i=m(null);let s=i,l=!1;function c(b,F,X,H,Z){let $=!1;const ae=p(H,X,F);s!==ae&&(s=ae,h(s.object)),$=v(b,H,X,Z),$&&y(b,H,X,Z),Z!==null&&e.update(Z,r.ELEMENT_ARRAY_BUFFER),($||l)&&(l=!1,T(b,F,X,H),Z!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e.get(Z).buffer))}function u(){return r.createVertexArray()}function h(b){return r.bindVertexArray(b)}function f(b){return r.deleteVertexArray(b)}function p(b,F,X){const H=X.wireframe===!0;let Z=n[b.id];Z===void 0&&(Z={},n[b.id]=Z);let $=Z[F.id];$===void 0&&($={},Z[F.id]=$);let ae=$[H];return ae===void 0&&(ae=m(u()),$[H]=ae),ae}function m(b){const F=[],X=[],H=[];for(let Z=0;Z<t;Z++)F[Z]=0,X[Z]=0,H[Z]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:F,enabledAttributes:X,attributeDivisors:H,object:b,attributes:{},index:null}}function v(b,F,X,H){const Z=s.attributes,$=F.attributes;let ae=0;const ve=X.getAttributes();for(const k in ve)if(ve[k].location>=0){const j=Z[k];let ue=$[k];if(ue===void 0&&(k==="instanceMatrix"&&b.instanceMatrix&&(ue=b.instanceMatrix),k==="instanceColor"&&b.instanceColor&&(ue=b.instanceColor)),j===void 0||j.attribute!==ue||ue&&j.data!==ue.data)return!0;ae++}return s.attributesNum!==ae||s.index!==H}function y(b,F,X,H){const Z={},$=F.attributes;let ae=0;const ve=X.getAttributes();for(const k in ve)if(ve[k].location>=0){let j=$[k];j===void 0&&(k==="instanceMatrix"&&b.instanceMatrix&&(j=b.instanceMatrix),k==="instanceColor"&&b.instanceColor&&(j=b.instanceColor));const ue={};ue.attribute=j,j&&j.data&&(ue.data=j.data),Z[k]=ue,ae++}s.attributes=Z,s.attributesNum=ae,s.index=H}function S(){const b=s.newAttributes;for(let F=0,X=b.length;F<X;F++)b[F]=0}function x(b){_(b,0)}function _(b,F){const X=s.newAttributes,H=s.enabledAttributes,Z=s.attributeDivisors;X[b]=1,H[b]===0&&(r.enableVertexAttribArray(b),H[b]=1),Z[b]!==F&&(r.vertexAttribDivisor(b,F),Z[b]=F)}function E(){const b=s.newAttributes,F=s.enabledAttributes;for(let X=0,H=F.length;X<H;X++)F[X]!==b[X]&&(r.disableVertexAttribArray(X),F[X]=0)}function w(b,F,X,H,Z,$,ae){ae===!0?r.vertexAttribIPointer(b,F,X,Z,$):r.vertexAttribPointer(b,F,X,H,Z,$)}function T(b,F,X,H){S();const Z=H.attributes,$=X.getAttributes(),ae=F.defaultAttributeValues;for(const ve in $){const k=$[ve];if(k.location>=0){let K=Z[ve];if(K===void 0&&(ve==="instanceMatrix"&&b.instanceMatrix&&(K=b.instanceMatrix),ve==="instanceColor"&&b.instanceColor&&(K=b.instanceColor)),K!==void 0){const j=K.normalized,ue=K.itemSize,Ae=e.get(K);if(Ae===void 0)continue;const Ne=Ae.buffer,te=Ae.type,ge=Ae.bytesPerElement,be=te===r.INT||te===r.UNSIGNED_INT||K.gpuType===Id;if(K.isInterleavedBufferAttribute){const Me=K.data,je=Me.stride,tt=K.offset;if(Me.isInstancedInterleavedBuffer){for(let Fe=0;Fe<k.locationSize;Fe++)_(k.location+Fe,Me.meshPerAttribute);b.isInstancedMesh!==!0&&H._maxInstanceCount===void 0&&(H._maxInstanceCount=Me.meshPerAttribute*Me.count)}else for(let Fe=0;Fe<k.locationSize;Fe++)x(k.location+Fe);r.bindBuffer(r.ARRAY_BUFFER,Ne);for(let Fe=0;Fe<k.locationSize;Fe++)w(k.location+Fe,ue/k.locationSize,te,j,je*ge,(tt+ue/k.locationSize*Fe)*ge,be)}else{if(K.isInstancedBufferAttribute){for(let Me=0;Me<k.locationSize;Me++)_(k.location+Me,K.meshPerAttribute);b.isInstancedMesh!==!0&&H._maxInstanceCount===void 0&&(H._maxInstanceCount=K.meshPerAttribute*K.count)}else for(let Me=0;Me<k.locationSize;Me++)x(k.location+Me);r.bindBuffer(r.ARRAY_BUFFER,Ne);for(let Me=0;Me<k.locationSize;Me++)w(k.location+Me,ue/k.locationSize,te,j,ue*ge,ue/k.locationSize*Me*ge,be)}}else if(ae!==void 0){const j=ae[ve];if(j!==void 0)switch(j.length){case 2:r.vertexAttrib2fv(k.location,j);break;case 3:r.vertexAttrib3fv(k.location,j);break;case 4:r.vertexAttrib4fv(k.location,j);break;default:r.vertexAttrib1fv(k.location,j)}}}}E()}function N(){z();for(const b in n){const F=n[b];for(const X in F){const H=F[X];for(const Z in H)f(H[Z].object),delete H[Z];delete F[X]}delete n[b]}}function P(b){if(n[b.id]===void 0)return;const F=n[b.id];for(const X in F){const H=F[X];for(const Z in H)f(H[Z].object),delete H[Z];delete F[X]}delete n[b.id]}function I(b){for(const F in n){const X=n[F];if(X[b.id]===void 0)continue;const H=X[b.id];for(const Z in H)f(H[Z].object),delete H[Z];delete X[b.id]}}function z(){R(),l=!0,s!==i&&(s=i,h(s.object))}function R(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:z,resetDefaultState:R,dispose:N,releaseStatesOfGeometry:P,releaseStatesOfProgram:I,initAttributes:S,enableAttribute:x,disableUnusedAttributes:E}}function Jw(r,e,t){let n;function i(u){n=u}function s(u,h){r.drawArrays(n,u,h),t.update(h,n,1)}function l(u,h,f){f!==0&&(r.drawArraysInstanced(n,u,h,f),t.update(h,n,f))}function c(u,h,f){if(f===0)return;const p=e.get("WEBGL_multi_draw");if(p===null)for(let m=0;m<f;m++)this.render(u[m],h[m]);else{p.multiDrawArraysWEBGL(n,u,0,h,0,f);let m=0;for(let v=0;v<f;v++)m+=h[v];t.update(m,n,1)}}this.setMode=i,this.render=s,this.renderInstances=l,this.renderMultiDraw=c}function Kw(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const w=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(w.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(w){if(w==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";w="mediump"}return w==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let l=t.precision!==void 0?t.precision:"highp";const c=s(l);c!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",c,"instead."),l=c);const u=t.logarithmicDepthBuffer===!0,h=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),f=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),p=r.getParameter(r.MAX_TEXTURE_SIZE),m=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),v=r.getParameter(r.MAX_VERTEX_ATTRIBS),y=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),S=r.getParameter(r.MAX_VARYING_VECTORS),x=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),_=f>0,E=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:i,getMaxPrecision:s,precision:l,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:f,maxTextureSize:p,maxCubemapSize:m,maxAttributes:v,maxVertexUniforms:y,maxVaryings:S,maxFragmentUniforms:x,vertexTextures:_,maxSamples:E}}function Qw(r){const e=this;let t=null,n=0,i=!1,s=!1;const l=new Cr,c=new lt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const v=p.length!==0||m||n!==0||i;return i=m,n=p.length,v},this.beginShadows=function(){s=!0,f(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=f(p,m,0)},this.setState=function(p,m,v){const y=p.clippingPlanes,S=p.clipIntersection,x=p.clipShadows,_=r.get(p);if(!i||y===null||y.length===0||s&&!x)s?f(null):h();else{const E=s?0:n,w=E*4;let T=_.clippingState||null;u.value=T,T=f(y,m,w,v);for(let N=0;N!==w;++N)T[N]=t[N];_.clippingState=T,this.numIntersection=S?this.numPlanes:0,this.numPlanes+=E}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function f(p,m,v,y){const S=p!==null?p.length:0;let x=null;if(S!==0){if(x=u.value,y!==!0||x===null){const _=v+S*4,E=m.matrixWorldInverse;c.getNormalMatrix(E),(x===null||x.length<_)&&(x=new Float32Array(_));for(let w=0,T=v;w!==S;++w,T+=4)l.copy(p[w]).applyMatrix4(E,c),l.normal.toArray(x,T),x[T+3]=l.constant}u.value=x,u.needsUpdate=!0}return e.numPlanes=S,e.numIntersection=0,x}}function $w(r){let e=new WeakMap;function t(l,c){return c===xa?l.mapping=or:c===Ma&&(l.mapping=Ir),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===xa||c===Ma)if(e.has(l)){const u=e.get(l).texture;return t(u,l.mapping)}else{const u=l.image;if(u&&u.height>0){const h=new u_(u.height);return h.fromEquirectangularTexture(r,l),e.set(l,h),l.addEventListener("dispose",i),t(h.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Ss extends Xa{constructor(e=-1,t=1,n=1,i=-1,s=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=l,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,l=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,l=s+h*this.view.width,c-=f*this.view.offsetY,u=c-f*this.view.height}this.projectionMatrix.makeOrthographic(s,l,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const mo=4,vg=[.125,.215,.35,.446,.526,.582],as=20,of=new Ss,_g=new Le;let af=null,lf=0,cf=0,uf=!1;const os=(1+Math.sqrt(5))/2,eo=1/os,yg=[new U(1,1,1),new U(-1,1,1),new U(1,1,-1),new U(-1,1,-1),new U(0,os,eo),new U(0,os,-eo),new U(eo,0,os),new U(-eo,0,os),new U(os,eo,0),new U(-os,eo,0)];class md{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){af=this._renderer.getRenderTarget(),lf=this._renderer.getActiveCubeFace(),cf=this._renderer.getActiveMipmapLevel(),uf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Sg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Mg(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(af,lf,cf),this._renderer.xr.enabled=uf,e.scissorTest=!1,yc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===or||e.mapping===Ir?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),af=this._renderer.getRenderTarget(),lf=this._renderer.getActiveCubeFace(),cf=this._renderer.getActiveMipmapLevel(),uf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:tn,minFilter:tn,generateMipmaps:!1,type:Ea,format:Hn,colorSpace:lr,depthBuffer:!1},i=xg(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=xg(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=eE(s)),this._blurMaterial=tE(s,e,t)}return i}_compileMaterial(e){const t=new nn(this._lodPlanes[0],e);this._renderer.compile(t,of)}_sceneToCubeUV(e,t,n,i){const c=new en(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],f=this._renderer,p=f.autoClear,m=f.toneMapping;f.getClearColor(_g),f.toneMapping=zi,f.autoClear=!1;const v=new Dr({name:"PMREM.Background",side:Ln,depthWrite:!1,depthTest:!1}),y=new nn(new Ms,v);let S=!1;const x=e.background;x?x.isColor&&(v.color.copy(x),e.background=null,S=!0):(v.color.copy(_g),S=!0);for(let _=0;_<6;_++){const E=_%3;E===0?(c.up.set(0,u[_],0),c.lookAt(h[_],0,0)):E===1?(c.up.set(0,0,u[_]),c.lookAt(0,h[_],0)):(c.up.set(0,u[_],0),c.lookAt(0,0,h[_]));const w=this._cubeSize;yc(i,E*w,_>2?w:0,w,w),f.setRenderTarget(i),S&&f.render(y,c),f.render(e,c)}y.geometry.dispose(),y.material.dispose(),f.toneMapping=m,f.autoClear=p,e.background=x}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===or||e.mapping===Ir;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Sg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Mg());const s=i?this._cubemapMaterial:this._equirectMaterial,l=new nn(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;yc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(l,of)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),l=yg[(i-1)%yg.length];this._blur(e,i-1,i,s,l)}t.autoClear=n}_blur(e,t,n,i,s){const l=this._pingPongRenderTarget;this._halfBlur(e,l,t,n,i,"latitudinal",s),this._halfBlur(l,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,l,c){const u=this._renderer,h=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,p=new nn(this._lodPlanes[i],h),m=h.uniforms,v=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*v):2*Math.PI/(2*as-1),S=s/y,x=isFinite(s)?1+Math.floor(f*S):as;x>as&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${as}`);const _=[];let E=0;for(let I=0;I<as;++I){const z=I/S,R=Math.exp(-z*z/2);_.push(R),I===0?E+=R:I<x&&(E+=2*R)}for(let I=0;I<_.length;I++)_[I]=_[I]/E;m.envMap.value=e.texture,m.samples.value=x,m.weights.value=_,m.latitudinal.value=l==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:w}=this;m.dTheta.value=y,m.mipInt.value=w-n;const T=this._sizeLods[i],N=3*T*(i>w-mo?i-w+mo:0),P=4*(this._cubeSize-T);yc(t,N,P,3*T,2*T),u.setRenderTarget(t),u.render(p,of)}}function eE(r){const e=[],t=[],n=[];let i=r;const s=r-mo+1+vg.length;for(let l=0;l<s;l++){const c=Math.pow(2,i);t.push(c);let u=1/c;l>r-mo?u=vg[l-r+mo-1]:l===0&&(u=0),n.push(u);const h=1/(c-2),f=-h,p=1+h,m=[f,f,p,f,p,p,f,f,p,p,f,p],v=6,y=6,S=3,x=2,_=1,E=new Float32Array(S*y*v),w=new Float32Array(x*y*v),T=new Float32Array(_*y*v);for(let P=0;P<v;P++){const I=P%3*2/3-1,z=P>2?0:-1,R=[I,z,0,I+2/3,z,0,I+2/3,z+1,0,I,z,0,I+2/3,z+1,0,I,z+1,0];E.set(R,S*y*P),w.set(m,x*y*P);const b=[P,P,P,P,P,P];T.set(b,_*y*P)}const N=new ht;N.setAttribute("position",new Rt(E,S)),N.setAttribute("uv",new Rt(w,x)),N.setAttribute("faceIndex",new Rt(T,_)),e.push(N),i>mo&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function xg(r,e,t){const n=new wi(r,e,t);return n.texture.mapping=To,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function yc(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function tE(r,e,t){const n=new Float32Array(as),i=new U(0,1,0);return new Ei({name:"SphericalGaussianBlur",defines:{n:as,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Xd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:rr,depthTest:!1,depthWrite:!1})}function Mg(){return new Ei({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Xd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:rr,depthTest:!1,depthWrite:!1})}function Sg(){return new Ei({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Xd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:rr,depthTest:!1,depthWrite:!1})}function Xd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function nE(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===xa||u===Ma,f=u===or||u===Ir;if(h||f){let p=e.get(c);const m=p!==void 0?p.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==m)return t===null&&(t=new md(r)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),p.texture;if(p!==void 0)return p.texture;{const v=c.image;return h&&v&&v.height>0||f&&v&&i(v)?(t===null&&(t=new md(r)),p=h?t.fromEquirectangular(c):t.fromCubemap(c),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),c.addEventListener("dispose",s),p.texture):null}}}return c}function i(c){let u=0;const h=6;for(let f=0;f<h;f++)c[f]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function l(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:l}}function iE(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function rE(r,e,t,n){const i={},s=new WeakMap;function l(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);for(const y in m.morphAttributes){const S=m.morphAttributes[y];for(let x=0,_=S.length;x<_;x++)e.remove(S[x])}m.removeEventListener("dispose",l),delete i[m.id];const v=s.get(m);v&&(e.remove(v),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",l),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const y in m)e.update(m[y],r.ARRAY_BUFFER);const v=p.morphAttributes;for(const y in v){const S=v[y];for(let x=0,_=S.length;x<_;x++)e.update(S[x],r.ARRAY_BUFFER)}}function h(p){const m=[],v=p.index,y=p.attributes.position;let S=0;if(v!==null){const E=v.array;S=v.version;for(let w=0,T=E.length;w<T;w+=3){const N=E[w+0],P=E[w+1],I=E[w+2];m.push(N,P,P,I,I,N)}}else if(y!==void 0){const E=y.array;S=y.version;for(let w=0,T=E.length/3-1;w<T;w+=3){const N=w+0,P=w+1,I=w+2;m.push(N,P,P,I,I,N)}}else return;const x=new(t_(m)?Wd:Gd)(m,1);x.version=S;const _=s.get(p);_&&e.remove(_),s.set(p,x)}function f(p){const m=s.get(p);if(m){const v=p.index;v!==null&&m.version<v.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:f}}function sE(r,e,t){let n;function i(p){n=p}let s,l;function c(p){s=p.type,l=p.bytesPerElement}function u(p,m){r.drawElements(n,m,s,p*l),t.update(m,n,1)}function h(p,m,v){v!==0&&(r.drawElementsInstanced(n,m,s,p*l,v),t.update(m,n,v))}function f(p,m,v){if(v===0)return;const y=e.get("WEBGL_multi_draw");if(y===null)for(let S=0;S<v;S++)this.render(p[S]/l,m[S]);else{y.multiDrawElementsWEBGL(n,m,0,s,p,0,v);let S=0;for(let x=0;x<v;x++)S+=m[x];t.update(S,n,1)}}this.setMode=i,this.setIndex=c,this.render=u,this.renderInstances=h,this.renderMultiDraw=f}function oE(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,l,c){switch(t.calls++,l){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function aE(r,e,t){const n=new WeakMap,i=new Ct;function s(l,c,u){const h=l.morphTargetInfluences,f=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,p=f!==void 0?f.length:0;let m=n.get(c);if(m===void 0||m.count!==p){let R=function(){I.dispose(),n.delete(c),c.removeEventListener("dispose",R)};m!==void 0&&m.texture.dispose();const v=c.morphAttributes.position!==void 0,y=c.morphAttributes.normal!==void 0,S=c.morphAttributes.color!==void 0,x=c.morphAttributes.position||[],_=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let w=0;v===!0&&(w=1),y===!0&&(w=2),S===!0&&(w=3);let T=c.attributes.position.count*w,N=1;T>e.maxTextureSize&&(N=Math.ceil(T/e.maxTextureSize),T=e.maxTextureSize);const P=new Float32Array(T*N*4*p),I=new hu(P,T,N,p);I.type=pi,I.needsUpdate=!0;const z=w*4;for(let b=0;b<p;b++){const F=x[b],X=_[b],H=E[b],Z=T*N*4*b;for(let $=0;$<F.count;$++){const ae=$*z;v===!0&&(i.fromBufferAttribute(F,$),P[Z+ae+0]=i.x,P[Z+ae+1]=i.y,P[Z+ae+2]=i.z,P[Z+ae+3]=0),y===!0&&(i.fromBufferAttribute(X,$),P[Z+ae+4]=i.x,P[Z+ae+5]=i.y,P[Z+ae+6]=i.z,P[Z+ae+7]=0),S===!0&&(i.fromBufferAttribute(H,$),P[Z+ae+8]=i.x,P[Z+ae+9]=i.y,P[Z+ae+10]=i.z,P[Z+ae+11]=H.itemSize===4?i.w:1)}}m={count:p,texture:I,size:new he(T,N)},n.set(c,m),c.addEventListener("dispose",R)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)u.getUniforms().setValue(r,"morphTexture",l.morphTexture,t);else{let v=0;for(let S=0;S<h.length;S++)v+=h[S];const y=c.morphTargetsRelative?1:1-v;u.getUniforms().setValue(r,"morphTargetBaseInfluence",y),u.getUniforms().setValue(r,"morphTargetInfluences",h)}u.getUniforms().setValue(r,"morphTargetsTexture",m.texture,t),u.getUniforms().setValue(r,"morphTargetsTextureSize",m.size)}return{update:s}}function lE(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,f=u.geometry,p=e.get(u,f);if(i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),i.get(u)!==h&&(t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER),i.set(u,h))),u.isSkinnedMesh){const m=u.skeleton;i.get(m)!==h&&(m.update(),i.set(m,h))}return p}function l(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:l}}class qd extends Gt{constructor(e,t,n,i,s,l,c,u,h,f){if(f=f!==void 0?f:ps,f!==ps&&f!==Mo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&f===ps&&(n=_s),n===void 0&&f===Mo&&(n=bo),super(null,i,s,l,c,u,f,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:fn,this.minFilter=u!==void 0?u:fn,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const f_=new Gt,d_=new qd(1,1);d_.compareFunction=kd;const p_=new hu,m_=new Vd,g_=new qa,wg=[],Eg=[],Ag=new Float32Array(16),Tg=new Float32Array(9),bg=new Float32Array(4);function Po(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=wg[i];if(s===void 0&&(s=new Float32Array(i),wg[i]=s),e!==0){n.toArray(s,0);for(let l=1,c=0;l!==e;++l)c+=t,r[l].toArray(s,c)}return s}function sn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function on(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function fu(r,e){let t=Eg[e];t===void 0&&(t=new Int32Array(e),Eg[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function cE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function uE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(sn(t,e))return;r.uniform2fv(this.addr,e),on(t,e)}}function hE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(sn(t,e))return;r.uniform3fv(this.addr,e),on(t,e)}}function fE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(sn(t,e))return;r.uniform4fv(this.addr,e),on(t,e)}}function dE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(sn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),on(t,e)}else{if(sn(t,n))return;bg.set(n),r.uniformMatrix2fv(this.addr,!1,bg),on(t,n)}}function pE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(sn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),on(t,e)}else{if(sn(t,n))return;Tg.set(n),r.uniformMatrix3fv(this.addr,!1,Tg),on(t,n)}}function mE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(sn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),on(t,e)}else{if(sn(t,n))return;Ag.set(n),r.uniformMatrix4fv(this.addr,!1,Ag),on(t,n)}}function gE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function vE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(sn(t,e))return;r.uniform2iv(this.addr,e),on(t,e)}}function _E(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(sn(t,e))return;r.uniform3iv(this.addr,e),on(t,e)}}function yE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(sn(t,e))return;r.uniform4iv(this.addr,e),on(t,e)}}function xE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function ME(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(sn(t,e))return;r.uniform2uiv(this.addr,e),on(t,e)}}function SE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(sn(t,e))return;r.uniform3uiv(this.addr,e),on(t,e)}}function wE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(sn(t,e))return;r.uniform4uiv(this.addr,e),on(t,e)}}function EE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i);const s=this.type===r.SAMPLER_2D_SHADOW?d_:f_;t.setTexture2D(e||s,i)}function AE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||m_,i)}function TE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||g_,i)}function bE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||p_,i)}function CE(r){switch(r){case 5126:return cE;case 35664:return uE;case 35665:return hE;case 35666:return fE;case 35674:return dE;case 35675:return pE;case 35676:return mE;case 5124:case 35670:return gE;case 35667:case 35671:return vE;case 35668:case 35672:return _E;case 35669:case 35673:return yE;case 5125:return xE;case 36294:return ME;case 36295:return SE;case 36296:return wE;case 35678:case 36198:case 36298:case 36306:case 35682:return EE;case 35679:case 36299:case 36307:return AE;case 35680:case 36300:case 36308:case 36293:return TE;case 36289:case 36303:case 36311:case 36292:return bE}}function RE(r,e){r.uniform1fv(this.addr,e)}function PE(r,e){const t=Po(e,this.size,2);r.uniform2fv(this.addr,t)}function IE(r,e){const t=Po(e,this.size,3);r.uniform3fv(this.addr,t)}function LE(r,e){const t=Po(e,this.size,4);r.uniform4fv(this.addr,t)}function NE(r,e){const t=Po(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function DE(r,e){const t=Po(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function UE(r,e){const t=Po(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function OE(r,e){r.uniform1iv(this.addr,e)}function FE(r,e){r.uniform2iv(this.addr,e)}function zE(r,e){r.uniform3iv(this.addr,e)}function BE(r,e){r.uniform4iv(this.addr,e)}function kE(r,e){r.uniform1uiv(this.addr,e)}function HE(r,e){r.uniform2uiv(this.addr,e)}function VE(r,e){r.uniform3uiv(this.addr,e)}function GE(r,e){r.uniform4uiv(this.addr,e)}function WE(r,e,t){const n=this.cache,i=e.length,s=fu(t,i);sn(n,s)||(r.uniform1iv(this.addr,s),on(n,s));for(let l=0;l!==i;++l)t.setTexture2D(e[l]||f_,s[l])}function XE(r,e,t){const n=this.cache,i=e.length,s=fu(t,i);sn(n,s)||(r.uniform1iv(this.addr,s),on(n,s));for(let l=0;l!==i;++l)t.setTexture3D(e[l]||m_,s[l])}function qE(r,e,t){const n=this.cache,i=e.length,s=fu(t,i);sn(n,s)||(r.uniform1iv(this.addr,s),on(n,s));for(let l=0;l!==i;++l)t.setTextureCube(e[l]||g_,s[l])}function YE(r,e,t){const n=this.cache,i=e.length,s=fu(t,i);sn(n,s)||(r.uniform1iv(this.addr,s),on(n,s));for(let l=0;l!==i;++l)t.setTexture2DArray(e[l]||p_,s[l])}function jE(r){switch(r){case 5126:return RE;case 35664:return PE;case 35665:return IE;case 35666:return LE;case 35674:return NE;case 35675:return DE;case 35676:return UE;case 5124:case 35670:return OE;case 35667:case 35671:return FE;case 35668:case 35672:return zE;case 35669:case 35673:return BE;case 5125:return kE;case 36294:return HE;case 36295:return VE;case 36296:return GE;case 35678:case 36198:case 36298:case 36306:case 35682:return WE;case 35679:case 36299:case 36307:return XE;case 35680:case 36300:case 36308:case 36293:return qE;case 36289:case 36303:case 36311:case 36292:return YE}}class ZE{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=CE(t.type)}}class JE{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=jE(t.type)}}class KE{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,l=i.length;s!==l;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const hf=/(\w+)(\])?(\[|\.)?/g;function Cg(r,e){r.seq.push(e),r.map[e.id]=e}function QE(r,e,t){const n=r.name,i=n.length;for(hf.lastIndex=0;;){const s=hf.exec(n),l=hf.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&l+2===i){Cg(t,h===void 0?new ZE(c,r,e):new JE(c,r,e));break}else{let p=t.map[c];p===void 0&&(p=new KE(c),Cg(t,p)),t=p}}}class Qc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),l=e.getUniformLocation(t,s.name);QE(s,l,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,l=t.length;s!==l;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const l=e[i];l.id in t&&n.push(l)}return n}}function Rg(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}const $E=37297;let eA=0;function tA(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let l=i;l<s;l++){const c=l+1;n.push(`${c===e?">":" "} ${c}: ${t[l]}`)}return n.join(`
`)}function nA(r){const e=bt.getPrimaries(bt.workingColorSpace),t=bt.getPrimaries(r);let n;switch(e===t?n="":e===Pa&&t===Ra?n="LinearDisplayP3ToLinearSRGB":e===Ra&&t===Pa&&(n="LinearSRGBToLinearDisplayP3"),r){case lr:case Wa:return[n,"LinearTransferOETF"];case fi:case uu:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),[n,"LinearTransferOETF"]}}function Pg(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const l=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+tA(r.getShaderSource(e),l)}else return i}function iA(r,e){const t=nA(e);return`vec4 ${r}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function rA(r,e){let t;switch(e){case Tv:t="Linear";break;case bv:t="Reinhard";break;case Cv:t="OptimizedCineon";break;case Cd:t="ACESFilmic";break;case Pv:t="AgX";break;case Iv:t="Neutral";break;case Rv:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function sA(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(da).join(`
`)}function oA(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function aA(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),l=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[l]={type:s.type,location:r.getAttribLocation(e,l),locationSize:c}}return t}function da(r){return r!==""}function Ig(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Lg(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const lA=/^[ \t]*#include +<([\w\d./]+)>/gm;function gd(r){return r.replace(lA,uA)}const cA=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function uA(r,e){let t=ut[e];if(t===void 0){const n=cA.get(e);if(n!==void 0)t=ut[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return gd(t)}const hA=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ng(r){return r.replace(hA,fA)}function fA(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Dg(r){let e=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function dA(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===au?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===pa?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===xi&&(e="SHADOWMAP_TYPE_VSM"),e}function pA(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case or:case Ir:e="ENVMAP_TYPE_CUBE";break;case To:e="ENVMAP_TYPE_CUBE_UV";break}return e}function mA(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Ir:e="ENVMAP_MODE_REFRACTION";break}return e}function gA(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Ga:e="ENVMAP_BLENDING_MULTIPLY";break;case Ev:e="ENVMAP_BLENDING_MIX";break;case Av:e="ENVMAP_BLENDING_ADD";break}return e}function vA(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function _A(r,e,t,n){const i=r.getContext(),s=t.defines;let l=t.vertexShader,c=t.fragmentShader;const u=dA(t),h=pA(t),f=mA(t),p=gA(t),m=vA(t),v=sA(t),y=oA(s),S=i.createProgram();let x,_,E=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(x=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(da).join(`
`),x.length>0&&(x+=`
`),_=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(da).join(`
`),_.length>0&&(_+=`
`)):(x=[Dg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(da).join(`
`),_=[Dg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==zi?"#define TONE_MAPPING":"",t.toneMapping!==zi?ut.tonemapping_pars_fragment:"",t.toneMapping!==zi?rA("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ut.colorspace_pars_fragment,iA("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(da).join(`
`)),l=gd(l),l=Ig(l,t),l=Lg(l,t),c=gd(c),c=Ig(c,t),c=Lg(c,t),l=Ng(l),c=Ng(c),t.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,x=[v,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,_=["#define varying in",t.glslVersion===pd?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===pd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const w=E+x+l,T=E+_+c,N=Rg(i,i.VERTEX_SHADER,w),P=Rg(i,i.FRAGMENT_SHADER,T);i.attachShader(S,N),i.attachShader(S,P),t.index0AttributeName!==void 0?i.bindAttribLocation(S,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(S,0,"position"),i.linkProgram(S);function I(F){if(r.debug.checkShaderErrors){const X=i.getProgramInfoLog(S).trim(),H=i.getShaderInfoLog(N).trim(),Z=i.getShaderInfoLog(P).trim();let $=!0,ae=!0;if(i.getProgramParameter(S,i.LINK_STATUS)===!1)if($=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,S,N,P);else{const ve=Pg(i,N,"vertex"),k=Pg(i,P,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(S,i.VALIDATE_STATUS)+`

Material Name: `+F.name+`
Material Type: `+F.type+`

Program Info Log: `+X+`
`+ve+`
`+k)}else X!==""?console.warn("THREE.WebGLProgram: Program Info Log:",X):(H===""||Z==="")&&(ae=!1);ae&&(F.diagnostics={runnable:$,programLog:X,vertexShader:{log:H,prefix:x},fragmentShader:{log:Z,prefix:_}})}i.deleteShader(N),i.deleteShader(P),z=new Qc(i,S),R=aA(i,S)}let z;this.getUniforms=function(){return z===void 0&&I(this),z};let R;this.getAttributes=function(){return R===void 0&&I(this),R};let b=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return b===!1&&(b=i.getProgramParameter(S,$E)),b},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(S),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=eA++,this.cacheKey=e,this.usedTimes=1,this.program=S,this.vertexShader=N,this.fragmentShader=P,this}let yA=0;class xA{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),l=this._getShaderCacheForMaterial(e);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(s)===!1&&(l.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new MA(e),t.set(e,n)),n}}class MA{constructor(e){this.id=yA++,this.code=e,this.usedTimes=0}}function SA(r,e,t,n,i,s,l){const c=new gs,u=new xA,h=new Set,f=[],p=i.logarithmicDepthBuffer,m=i.vertexTextures;let v=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function S(R){return h.add(R),R===0?"uv":`uv${R}`}function x(R,b,F,X,H){const Z=X.fog,$=H.geometry,ae=R.isMeshStandardMaterial?X.environment:null,ve=(R.isMeshStandardMaterial?t:e).get(R.envMap||ae),k=ve&&ve.mapping===To?ve.image.height:null,K=y[R.type];R.precision!==null&&(v=i.getMaxPrecision(R.precision),v!==R.precision&&console.warn("THREE.WebGLProgram.getParameters:",R.precision,"not supported, using",v,"instead."));const j=$.morphAttributes.position||$.morphAttributes.normal||$.morphAttributes.color,ue=j!==void 0?j.length:0;let Ae=0;$.morphAttributes.position!==void 0&&(Ae=1),$.morphAttributes.normal!==void 0&&(Ae=2),$.morphAttributes.color!==void 0&&(Ae=3);let Ne,te,ge,be;if(K){const an=Mi[K];Ne=an.vertexShader,te=an.fragmentShader}else Ne=R.vertexShader,te=R.fragmentShader,u.update(R),ge=u.getVertexShaderID(R),be=u.getFragmentShaderID(R);const Me=r.getRenderTarget(),je=H.isInstancedMesh===!0,tt=H.isBatchedMesh===!0,Fe=!!R.map,V=!!R.matcap,le=!!ve,re=!!R.aoMap,ye=!!R.lightMap,_e=!!R.bumpMap,xe=!!R.normalMap,D=!!R.displacementMap,C=!!R.emissiveMap,Y=!!R.metalnessMap,se=!!R.roughnessMap,ce=R.anisotropy>0,pe=R.clearcoat>0,qe=R.iridescence>0,me=R.sheen>0,He=R.transmission>0,Ze=ce&&!!R.anisotropyMap,Se=pe&&!!R.clearcoatMap,De=pe&&!!R.clearcoatNormalMap,it=pe&&!!R.clearcoatRoughnessMap,ze=qe&&!!R.iridescenceMap,Be=qe&&!!R.iridescenceThicknessMap,pt=me&&!!R.sheenColorMap,mt=me&&!!R.sheenRoughnessMap,Et=!!R.specularMap,_t=!!R.specularColorMap,Dt=!!R.specularIntensityMap,Ge=He&&!!R.transmissionMap,B=He&&!!R.thicknessMap,Te=!!R.gradientMap,Ee=!!R.alphaMap,Ye=R.alphaTest>0,Je=!!R.alphaHash,Pt=!!R.extensions;let Lt=zi;R.toneMapped&&(Me===null||Me.isXRRenderTarget===!0)&&(Lt=r.toneMapping);const Ut={shaderID:K,shaderType:R.type,shaderName:R.name,vertexShader:Ne,fragmentShader:te,defines:R.defines,customVertexShaderID:ge,customFragmentShaderID:be,isRawShaderMaterial:R.isRawShaderMaterial===!0,glslVersion:R.glslVersion,precision:v,batching:tt,instancing:je,instancingColor:je&&H.instanceColor!==null,instancingMorph:je&&H.morphTexture!==null,supportsVertexTextures:m,outputColorSpace:Me===null?r.outputColorSpace:Me.isXRRenderTarget===!0?Me.texture.colorSpace:lr,alphaToCoverage:!!R.alphaToCoverage,map:Fe,matcap:V,envMap:le,envMapMode:le&&ve.mapping,envMapCubeUVHeight:k,aoMap:re,lightMap:ye,bumpMap:_e,normalMap:xe,displacementMap:m&&D,emissiveMap:C,normalMapObjectSpace:xe&&R.normalMapType===Yv,normalMapTangentSpace:xe&&R.normalMapType===Nr,metalnessMap:Y,roughnessMap:se,anisotropy:ce,anisotropyMap:Ze,clearcoat:pe,clearcoatMap:Se,clearcoatNormalMap:De,clearcoatRoughnessMap:it,iridescence:qe,iridescenceMap:ze,iridescenceThicknessMap:Be,sheen:me,sheenColorMap:pt,sheenRoughnessMap:mt,specularMap:Et,specularColorMap:_t,specularIntensityMap:Dt,transmission:He,transmissionMap:Ge,thicknessMap:B,gradientMap:Te,opaque:R.transparent===!1&&R.blending===ds&&R.alphaToCoverage===!1,alphaMap:Ee,alphaTest:Ye,alphaHash:Je,combine:R.combine,mapUv:Fe&&S(R.map.channel),aoMapUv:re&&S(R.aoMap.channel),lightMapUv:ye&&S(R.lightMap.channel),bumpMapUv:_e&&S(R.bumpMap.channel),normalMapUv:xe&&S(R.normalMap.channel),displacementMapUv:D&&S(R.displacementMap.channel),emissiveMapUv:C&&S(R.emissiveMap.channel),metalnessMapUv:Y&&S(R.metalnessMap.channel),roughnessMapUv:se&&S(R.roughnessMap.channel),anisotropyMapUv:Ze&&S(R.anisotropyMap.channel),clearcoatMapUv:Se&&S(R.clearcoatMap.channel),clearcoatNormalMapUv:De&&S(R.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:it&&S(R.clearcoatRoughnessMap.channel),iridescenceMapUv:ze&&S(R.iridescenceMap.channel),iridescenceThicknessMapUv:Be&&S(R.iridescenceThicknessMap.channel),sheenColorMapUv:pt&&S(R.sheenColorMap.channel),sheenRoughnessMapUv:mt&&S(R.sheenRoughnessMap.channel),specularMapUv:Et&&S(R.specularMap.channel),specularColorMapUv:_t&&S(R.specularColorMap.channel),specularIntensityMapUv:Dt&&S(R.specularIntensityMap.channel),transmissionMapUv:Ge&&S(R.transmissionMap.channel),thicknessMapUv:B&&S(R.thicknessMap.channel),alphaMapUv:Ee&&S(R.alphaMap.channel),vertexTangents:!!$.attributes.tangent&&(xe||ce),vertexColors:R.vertexColors,vertexAlphas:R.vertexColors===!0&&!!$.attributes.color&&$.attributes.color.itemSize===4,pointsUvs:H.isPoints===!0&&!!$.attributes.uv&&(Fe||Ee),fog:!!Z,useFog:R.fog===!0,fogExp2:!!Z&&Z.isFogExp2,flatShading:R.flatShading===!0,sizeAttenuation:R.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:H.isSkinnedMesh===!0,morphTargets:$.morphAttributes.position!==void 0,morphNormals:$.morphAttributes.normal!==void 0,morphColors:$.morphAttributes.color!==void 0,morphTargetsCount:ue,morphTextureStride:Ae,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numLightProbes:b.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:R.dithering,shadowMapEnabled:r.shadowMap.enabled&&F.length>0,shadowMapType:r.shadowMap.type,toneMapping:Lt,useLegacyLights:r._useLegacyLights,decodeVideoTexture:Fe&&R.map.isVideoTexture===!0&&bt.getTransfer(R.map.colorSpace)===Ot,premultipliedAlpha:R.premultipliedAlpha,doubleSided:R.side===Si,flipSided:R.side===Ln,useDepthPacking:R.depthPacking>=0,depthPacking:R.depthPacking||0,index0AttributeName:R.index0AttributeName,extensionClipCullDistance:Pt&&R.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:Pt&&R.extensions.multiDraw===!0&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:R.customProgramCacheKey()};return Ut.vertexUv1s=h.has(1),Ut.vertexUv2s=h.has(2),Ut.vertexUv3s=h.has(3),h.clear(),Ut}function _(R){const b=[];if(R.shaderID?b.push(R.shaderID):(b.push(R.customVertexShaderID),b.push(R.customFragmentShaderID)),R.defines!==void 0)for(const F in R.defines)b.push(F),b.push(R.defines[F]);return R.isRawShaderMaterial===!1&&(E(b,R),w(b,R),b.push(r.outputColorSpace)),b.push(R.customProgramCacheKey),b.join()}function E(R,b){R.push(b.precision),R.push(b.outputColorSpace),R.push(b.envMapMode),R.push(b.envMapCubeUVHeight),R.push(b.mapUv),R.push(b.alphaMapUv),R.push(b.lightMapUv),R.push(b.aoMapUv),R.push(b.bumpMapUv),R.push(b.normalMapUv),R.push(b.displacementMapUv),R.push(b.emissiveMapUv),R.push(b.metalnessMapUv),R.push(b.roughnessMapUv),R.push(b.anisotropyMapUv),R.push(b.clearcoatMapUv),R.push(b.clearcoatNormalMapUv),R.push(b.clearcoatRoughnessMapUv),R.push(b.iridescenceMapUv),R.push(b.iridescenceThicknessMapUv),R.push(b.sheenColorMapUv),R.push(b.sheenRoughnessMapUv),R.push(b.specularMapUv),R.push(b.specularColorMapUv),R.push(b.specularIntensityMapUv),R.push(b.transmissionMapUv),R.push(b.thicknessMapUv),R.push(b.combine),R.push(b.fogExp2),R.push(b.sizeAttenuation),R.push(b.morphTargetsCount),R.push(b.morphAttributeCount),R.push(b.numDirLights),R.push(b.numPointLights),R.push(b.numSpotLights),R.push(b.numSpotLightMaps),R.push(b.numHemiLights),R.push(b.numRectAreaLights),R.push(b.numDirLightShadows),R.push(b.numPointLightShadows),R.push(b.numSpotLightShadows),R.push(b.numSpotLightShadowsWithMaps),R.push(b.numLightProbes),R.push(b.shadowMapType),R.push(b.toneMapping),R.push(b.numClippingPlanes),R.push(b.numClipIntersection),R.push(b.depthPacking)}function w(R,b){c.disableAll(),b.supportsVertexTextures&&c.enable(0),b.instancing&&c.enable(1),b.instancingColor&&c.enable(2),b.instancingMorph&&c.enable(3),b.matcap&&c.enable(4),b.envMap&&c.enable(5),b.normalMapObjectSpace&&c.enable(6),b.normalMapTangentSpace&&c.enable(7),b.clearcoat&&c.enable(8),b.iridescence&&c.enable(9),b.alphaTest&&c.enable(10),b.vertexColors&&c.enable(11),b.vertexAlphas&&c.enable(12),b.vertexUv1s&&c.enable(13),b.vertexUv2s&&c.enable(14),b.vertexUv3s&&c.enable(15),b.vertexTangents&&c.enable(16),b.anisotropy&&c.enable(17),b.alphaHash&&c.enable(18),b.batching&&c.enable(19),R.push(c.mask),c.disableAll(),b.fog&&c.enable(0),b.useFog&&c.enable(1),b.flatShading&&c.enable(2),b.logarithmicDepthBuffer&&c.enable(3),b.skinning&&c.enable(4),b.morphTargets&&c.enable(5),b.morphNormals&&c.enable(6),b.morphColors&&c.enable(7),b.premultipliedAlpha&&c.enable(8),b.shadowMapEnabled&&c.enable(9),b.useLegacyLights&&c.enable(10),b.doubleSided&&c.enable(11),b.flipSided&&c.enable(12),b.useDepthPacking&&c.enable(13),b.dithering&&c.enable(14),b.transmission&&c.enable(15),b.sheen&&c.enable(16),b.opaque&&c.enable(17),b.pointsUvs&&c.enable(18),b.decodeVideoTexture&&c.enable(19),b.alphaToCoverage&&c.enable(20),R.push(c.mask)}function T(R){const b=y[R.type];let F;if(b){const X=Mi[b];F=l_.clone(X.uniforms)}else F=R.uniforms;return F}function N(R,b){let F;for(let X=0,H=f.length;X<H;X++){const Z=f[X];if(Z.cacheKey===b){F=Z,++F.usedTimes;break}}return F===void 0&&(F=new _A(r,b,R,s),f.push(F)),F}function P(R){if(--R.usedTimes===0){const b=f.indexOf(R);f[b]=f[f.length-1],f.pop(),R.destroy()}}function I(R){u.remove(R)}function z(){u.dispose()}return{getParameters:x,getProgramCacheKey:_,getUniforms:T,acquireProgram:N,releaseProgram:P,releaseShaderCache:I,programs:f,dispose:z}}function wA(){let r=new WeakMap;function e(s){let l=r.get(s);return l===void 0&&(l={},r.set(s,l)),l}function t(s){r.delete(s)}function n(s,l,c){r.get(s)[l]=c}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function EA(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function Ug(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Og(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function l(p,m,v,y,S,x){let _=r[e];return _===void 0?(_={id:p.id,object:p,geometry:m,material:v,groupOrder:y,renderOrder:p.renderOrder,z:S,group:x},r[e]=_):(_.id=p.id,_.object=p,_.geometry=m,_.material=v,_.groupOrder=y,_.renderOrder=p.renderOrder,_.z=S,_.group=x),e++,_}function c(p,m,v,y,S,x){const _=l(p,m,v,y,S,x);v.transmission>0?n.push(_):v.transparent===!0?i.push(_):t.push(_)}function u(p,m,v,y,S,x){const _=l(p,m,v,y,S,x);v.transmission>0?n.unshift(_):v.transparent===!0?i.unshift(_):t.unshift(_)}function h(p,m){t.length>1&&t.sort(p||EA),n.length>1&&n.sort(m||Ug),i.length>1&&i.sort(m||Ug)}function f(){for(let p=e,m=r.length;p<m;p++){const v=r[p];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:f,sort:h}}function AA(){let r=new WeakMap;function e(n,i){const s=r.get(n);let l;return s===void 0?(l=new Og,r.set(n,[l])):i>=s.length?(l=new Og,s.push(l)):l=s[i],l}function t(){r=new WeakMap}return{get:e,dispose:t}}function TA(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new U,color:new Le};break;case"SpotLight":t={position:new U,direction:new U,color:new Le,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new U,color:new Le,distance:0,decay:0};break;case"HemisphereLight":t={direction:new U,skyColor:new Le,groundColor:new Le};break;case"RectAreaLight":t={color:new Le,position:new U,halfWidth:new U,halfHeight:new U};break}return r[e.id]=t,t}}}function bA(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new he};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new he};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new he,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let CA=0;function RA(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function PA(r){const e=new TA,t=bA(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let h=0;h<9;h++)n.probe.push(new U);const i=new U,s=new $e,l=new $e;function c(h,f){let p=0,m=0,v=0;for(let F=0;F<9;F++)n.probe[F].set(0,0,0);let y=0,S=0,x=0,_=0,E=0,w=0,T=0,N=0,P=0,I=0,z=0;h.sort(RA);const R=f===!0?Math.PI:1;for(let F=0,X=h.length;F<X;F++){const H=h[F],Z=H.color,$=H.intensity,ae=H.distance,ve=H.shadow&&H.shadow.map?H.shadow.map.texture:null;if(H.isAmbientLight)p+=Z.r*$*R,m+=Z.g*$*R,v+=Z.b*$*R;else if(H.isLightProbe){for(let k=0;k<9;k++)n.probe[k].addScaledVector(H.sh.coefficients[k],$);z++}else if(H.isDirectionalLight){const k=e.get(H);if(k.color.copy(H.color).multiplyScalar(H.intensity*R),H.castShadow){const K=H.shadow,j=t.get(H);j.shadowBias=K.bias,j.shadowNormalBias=K.normalBias,j.shadowRadius=K.radius,j.shadowMapSize=K.mapSize,n.directionalShadow[y]=j,n.directionalShadowMap[y]=ve,n.directionalShadowMatrix[y]=H.shadow.matrix,w++}n.directional[y]=k,y++}else if(H.isSpotLight){const k=e.get(H);k.position.setFromMatrixPosition(H.matrixWorld),k.color.copy(Z).multiplyScalar($*R),k.distance=ae,k.coneCos=Math.cos(H.angle),k.penumbraCos=Math.cos(H.angle*(1-H.penumbra)),k.decay=H.decay,n.spot[x]=k;const K=H.shadow;if(H.map&&(n.spotLightMap[P]=H.map,P++,K.updateMatrices(H),H.castShadow&&I++),n.spotLightMatrix[x]=K.matrix,H.castShadow){const j=t.get(H);j.shadowBias=K.bias,j.shadowNormalBias=K.normalBias,j.shadowRadius=K.radius,j.shadowMapSize=K.mapSize,n.spotShadow[x]=j,n.spotShadowMap[x]=ve,N++}x++}else if(H.isRectAreaLight){const k=e.get(H);k.color.copy(Z).multiplyScalar($),k.halfWidth.set(H.width*.5,0,0),k.halfHeight.set(0,H.height*.5,0),n.rectArea[_]=k,_++}else if(H.isPointLight){const k=e.get(H);if(k.color.copy(H.color).multiplyScalar(H.intensity*R),k.distance=H.distance,k.decay=H.decay,H.castShadow){const K=H.shadow,j=t.get(H);j.shadowBias=K.bias,j.shadowNormalBias=K.normalBias,j.shadowRadius=K.radius,j.shadowMapSize=K.mapSize,j.shadowCameraNear=K.camera.near,j.shadowCameraFar=K.camera.far,n.pointShadow[S]=j,n.pointShadowMap[S]=ve,n.pointShadowMatrix[S]=H.shadow.matrix,T++}n.point[S]=k,S++}else if(H.isHemisphereLight){const k=e.get(H);k.skyColor.copy(H.color).multiplyScalar($*R),k.groundColor.copy(H.groundColor).multiplyScalar($*R),n.hemi[E]=k,E++}}_>0&&(r.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Ce.LTC_FLOAT_1,n.rectAreaLTC2=Ce.LTC_FLOAT_2):(n.rectAreaLTC1=Ce.LTC_HALF_1,n.rectAreaLTC2=Ce.LTC_HALF_2)),n.ambient[0]=p,n.ambient[1]=m,n.ambient[2]=v;const b=n.hash;(b.directionalLength!==y||b.pointLength!==S||b.spotLength!==x||b.rectAreaLength!==_||b.hemiLength!==E||b.numDirectionalShadows!==w||b.numPointShadows!==T||b.numSpotShadows!==N||b.numSpotMaps!==P||b.numLightProbes!==z)&&(n.directional.length=y,n.spot.length=x,n.rectArea.length=_,n.point.length=S,n.hemi.length=E,n.directionalShadow.length=w,n.directionalShadowMap.length=w,n.pointShadow.length=T,n.pointShadowMap.length=T,n.spotShadow.length=N,n.spotShadowMap.length=N,n.directionalShadowMatrix.length=w,n.pointShadowMatrix.length=T,n.spotLightMatrix.length=N+P-I,n.spotLightMap.length=P,n.numSpotLightShadowsWithMaps=I,n.numLightProbes=z,b.directionalLength=y,b.pointLength=S,b.spotLength=x,b.rectAreaLength=_,b.hemiLength=E,b.numDirectionalShadows=w,b.numPointShadows=T,b.numSpotShadows=N,b.numSpotMaps=P,b.numLightProbes=z,n.version=CA++)}function u(h,f){let p=0,m=0,v=0,y=0,S=0;const x=f.matrixWorldInverse;for(let _=0,E=h.length;_<E;_++){const w=h[_];if(w.isDirectionalLight){const T=n.directional[p];T.direction.setFromMatrixPosition(w.matrixWorld),i.setFromMatrixPosition(w.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(x),p++}else if(w.isSpotLight){const T=n.spot[v];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(x),T.direction.setFromMatrixPosition(w.matrixWorld),i.setFromMatrixPosition(w.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(x),v++}else if(w.isRectAreaLight){const T=n.rectArea[y];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(x),l.identity(),s.copy(w.matrixWorld),s.premultiply(x),l.extractRotation(s),T.halfWidth.set(w.width*.5,0,0),T.halfHeight.set(0,w.height*.5,0),T.halfWidth.applyMatrix4(l),T.halfHeight.applyMatrix4(l),y++}else if(w.isPointLight){const T=n.point[m];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(x),m++}else if(w.isHemisphereLight){const T=n.hemi[S];T.direction.setFromMatrixPosition(w.matrixWorld),T.direction.transformDirection(x),S++}}}return{setup:c,setupView:u,state:n}}function Fg(r){const e=new PA(r),t=[],n=[];function i(){t.length=0,n.length=0}function s(f){t.push(f)}function l(f){n.push(f)}function c(f){e.setup(t,f)}function u(f){e.setupView(t,f)}return{init:i,state:{lightsArray:t,shadowsArray:n,lights:e,transmissionRenderTarget:null},setupLights:c,setupLightsView:u,pushLight:s,pushShadow:l}}function IA(r){let e=new WeakMap;function t(i,s=0){const l=e.get(i);let c;return l===void 0?(c=new Fg(r),e.set(i,[c])):s>=l.length?(c=new Fg(r),l.push(c)):c=l[s],c}function n(){e=new WeakMap}return{get:t,dispose:n}}class Yd extends mn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Xv,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class jd extends mn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const LA=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,NA=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function DA(r,e,t){let n=new Ya;const i=new he,s=new he,l=new Ct,c=new Yd({depthPacking:qv}),u=new jd,h={},f=t.maxTextureSize,p={[sr]:Ln,[Ln]:sr,[Si]:Si},m=new Ei({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new he},radius:{value:4}},vertexShader:LA,fragmentShader:NA}),v=m.clone();v.defines.HORIZONTAL_PASS=1;const y=new ht;y.setAttribute("position",new Rt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const S=new nn(y,m),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=au;let _=this.type;this.render=function(P,I,z){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||P.length===0)return;const R=r.getRenderTarget(),b=r.getActiveCubeFace(),F=r.getActiveMipmapLevel(),X=r.state;X.setBlending(rr),X.buffers.color.setClear(1,1,1,1),X.buffers.depth.setTest(!0),X.setScissorTest(!1);const H=_!==xi&&this.type===xi,Z=_===xi&&this.type!==xi;for(let $=0,ae=P.length;$<ae;$++){const ve=P[$],k=ve.shadow;if(k===void 0){console.warn("THREE.WebGLShadowMap:",ve,"has no shadow.");continue}if(k.autoUpdate===!1&&k.needsUpdate===!1)continue;i.copy(k.mapSize);const K=k.getFrameExtents();if(i.multiply(K),s.copy(k.mapSize),(i.x>f||i.y>f)&&(i.x>f&&(s.x=Math.floor(f/K.x),i.x=s.x*K.x,k.mapSize.x=s.x),i.y>f&&(s.y=Math.floor(f/K.y),i.y=s.y*K.y,k.mapSize.y=s.y)),k.map===null||H===!0||Z===!0){const ue=this.type!==xi?{minFilter:fn,magFilter:fn}:{};k.map!==null&&k.map.dispose(),k.map=new wi(i.x,i.y,ue),k.map.texture.name=ve.name+".shadowMap",k.camera.updateProjectionMatrix()}r.setRenderTarget(k.map),r.clear();const j=k.getViewportCount();for(let ue=0;ue<j;ue++){const Ae=k.getViewport(ue);l.set(s.x*Ae.x,s.y*Ae.y,s.x*Ae.z,s.y*Ae.w),X.viewport(l),k.updateMatrices(ve,ue),n=k.getFrustum(),T(I,z,k.camera,ve,this.type)}k.isPointLightShadow!==!0&&this.type===xi&&E(k,z),k.needsUpdate=!1}_=this.type,x.needsUpdate=!1,r.setRenderTarget(R,b,F)};function E(P,I){const z=e.update(S);m.defines.VSM_SAMPLES!==P.blurSamples&&(m.defines.VSM_SAMPLES=P.blurSamples,v.defines.VSM_SAMPLES=P.blurSamples,m.needsUpdate=!0,v.needsUpdate=!0),P.mapPass===null&&(P.mapPass=new wi(i.x,i.y)),m.uniforms.shadow_pass.value=P.map.texture,m.uniforms.resolution.value=P.mapSize,m.uniforms.radius.value=P.radius,r.setRenderTarget(P.mapPass),r.clear(),r.renderBufferDirect(I,null,z,m,S,null),v.uniforms.shadow_pass.value=P.mapPass.texture,v.uniforms.resolution.value=P.mapSize,v.uniforms.radius.value=P.radius,r.setRenderTarget(P.map),r.clear(),r.renderBufferDirect(I,null,z,v,S,null)}function w(P,I,z,R){let b=null;const F=z.isPointLight===!0?P.customDistanceMaterial:P.customDepthMaterial;if(F!==void 0)b=F;else if(b=z.isPointLight===!0?u:c,r.localClippingEnabled&&I.clipShadows===!0&&Array.isArray(I.clippingPlanes)&&I.clippingPlanes.length!==0||I.displacementMap&&I.displacementScale!==0||I.alphaMap&&I.alphaTest>0||I.map&&I.alphaTest>0){const X=b.uuid,H=I.uuid;let Z=h[X];Z===void 0&&(Z={},h[X]=Z);let $=Z[H];$===void 0&&($=b.clone(),Z[H]=$,I.addEventListener("dispose",N)),b=$}if(b.visible=I.visible,b.wireframe=I.wireframe,R===xi?b.side=I.shadowSide!==null?I.shadowSide:I.side:b.side=I.shadowSide!==null?I.shadowSide:p[I.side],b.alphaMap=I.alphaMap,b.alphaTest=I.alphaTest,b.map=I.map,b.clipShadows=I.clipShadows,b.clippingPlanes=I.clippingPlanes,b.clipIntersection=I.clipIntersection,b.displacementMap=I.displacementMap,b.displacementScale=I.displacementScale,b.displacementBias=I.displacementBias,b.wireframeLinewidth=I.wireframeLinewidth,b.linewidth=I.linewidth,z.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const X=r.properties.get(b);X.light=z}return b}function T(P,I,z,R,b){if(P.visible===!1)return;if(P.layers.test(I.layers)&&(P.isMesh||P.isLine||P.isPoints)&&(P.castShadow||P.receiveShadow&&b===xi)&&(!P.frustumCulled||n.intersectsObject(P))){P.modelViewMatrix.multiplyMatrices(z.matrixWorldInverse,P.matrixWorld);const H=e.update(P),Z=P.material;if(Array.isArray(Z)){const $=H.groups;for(let ae=0,ve=$.length;ae<ve;ae++){const k=$[ae],K=Z[k.materialIndex];if(K&&K.visible){const j=w(P,K,R,b);P.onBeforeShadow(r,P,I,z,H,j,k),r.renderBufferDirect(z,null,H,j,P,k),P.onAfterShadow(r,P,I,z,H,j,k)}}}else if(Z.visible){const $=w(P,Z,R,b);P.onBeforeShadow(r,P,I,z,H,$,null),r.renderBufferDirect(z,null,H,$,P,null),P.onAfterShadow(r,P,I,z,H,$,null)}}const X=P.children;for(let H=0,Z=X.length;H<Z;H++)T(X[H],I,z,R,b)}function N(P){P.target.removeEventListener("dispose",N);for(const z in h){const R=h[z],b=P.target.uuid;b in R&&(R[b].dispose(),delete R[b])}}}function UA(r){function e(){let B=!1;const Te=new Ct;let Ee=null;const Ye=new Ct(0,0,0,0);return{setMask:function(Je){Ee!==Je&&!B&&(r.colorMask(Je,Je,Je,Je),Ee=Je)},setLocked:function(Je){B=Je},setClear:function(Je,Pt,Lt,Ut,an){an===!0&&(Je*=Ut,Pt*=Ut,Lt*=Ut),Te.set(Je,Pt,Lt,Ut),Ye.equals(Te)===!1&&(r.clearColor(Je,Pt,Lt,Ut),Ye.copy(Te))},reset:function(){B=!1,Ee=null,Ye.set(-1,0,0,0)}}}function t(){let B=!1,Te=null,Ee=null,Ye=null;return{setTest:function(Je){Je?be(r.DEPTH_TEST):Me(r.DEPTH_TEST)},setMask:function(Je){Te!==Je&&!B&&(r.depthMask(Je),Te=Je)},setFunc:function(Je){if(Ee!==Je){switch(Je){case vv:r.depthFunc(r.NEVER);break;case _v:r.depthFunc(r.ALWAYS);break;case yv:r.depthFunc(r.LESS);break;case ya:r.depthFunc(r.LEQUAL);break;case xv:r.depthFunc(r.EQUAL);break;case Mv:r.depthFunc(r.GEQUAL);break;case Sv:r.depthFunc(r.GREATER);break;case wv:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}Ee=Je}},setLocked:function(Je){B=Je},setClear:function(Je){Ye!==Je&&(r.clearDepth(Je),Ye=Je)},reset:function(){B=!1,Te=null,Ee=null,Ye=null}}}function n(){let B=!1,Te=null,Ee=null,Ye=null,Je=null,Pt=null,Lt=null,Ut=null,an=null;return{setTest:function(It){B||(It?be(r.STENCIL_TEST):Me(r.STENCIL_TEST))},setMask:function(It){Te!==It&&!B&&(r.stencilMask(It),Te=It)},setFunc:function(It,Wn,Xn){(Ee!==It||Ye!==Wn||Je!==Xn)&&(r.stencilFunc(It,Wn,Xn),Ee=It,Ye=Wn,Je=Xn)},setOp:function(It,Wn,Xn){(Pt!==It||Lt!==Wn||Ut!==Xn)&&(r.stencilOp(It,Wn,Xn),Pt=It,Lt=Wn,Ut=Xn)},setLocked:function(It){B=It},setClear:function(It){an!==It&&(r.clearStencil(It),an=It)},reset:function(){B=!1,Te=null,Ee=null,Ye=null,Je=null,Pt=null,Lt=null,Ut=null,an=null}}}const i=new e,s=new t,l=new n,c=new WeakMap,u=new WeakMap;let h={},f={},p=new WeakMap,m=[],v=null,y=!1,S=null,x=null,_=null,E=null,w=null,T=null,N=null,P=new Le(0,0,0),I=0,z=!1,R=null,b=null,F=null,X=null,H=null;const Z=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let $=!1,ae=0;const ve=r.getParameter(r.VERSION);ve.indexOf("WebGL")!==-1?(ae=parseFloat(/^WebGL (\d)/.exec(ve)[1]),$=ae>=1):ve.indexOf("OpenGL ES")!==-1&&(ae=parseFloat(/^OpenGL ES (\d)/.exec(ve)[1]),$=ae>=2);let k=null,K={};const j=r.getParameter(r.SCISSOR_BOX),ue=r.getParameter(r.VIEWPORT),Ae=new Ct().fromArray(j),Ne=new Ct().fromArray(ue);function te(B,Te,Ee,Ye){const Je=new Uint8Array(4),Pt=r.createTexture();r.bindTexture(B,Pt),r.texParameteri(B,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(B,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Lt=0;Lt<Ee;Lt++)B===r.TEXTURE_3D||B===r.TEXTURE_2D_ARRAY?r.texImage3D(Te,0,r.RGBA,1,1,Ye,0,r.RGBA,r.UNSIGNED_BYTE,Je):r.texImage2D(Te+Lt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Je);return Pt}const ge={};ge[r.TEXTURE_2D]=te(r.TEXTURE_2D,r.TEXTURE_2D,1),ge[r.TEXTURE_CUBE_MAP]=te(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),ge[r.TEXTURE_2D_ARRAY]=te(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),ge[r.TEXTURE_3D]=te(r.TEXTURE_3D,r.TEXTURE_3D,1,1),i.setClear(0,0,0,1),s.setClear(1),l.setClear(0),be(r.DEPTH_TEST),s.setFunc(ya),_e(!1),xe(Ff),be(r.CULL_FACE),re(rr);function be(B){h[B]!==!0&&(r.enable(B),h[B]=!0)}function Me(B){h[B]!==!1&&(r.disable(B),h[B]=!1)}function je(B,Te){return f[B]!==Te?(r.bindFramebuffer(B,Te),f[B]=Te,B===r.DRAW_FRAMEBUFFER&&(f[r.FRAMEBUFFER]=Te),B===r.FRAMEBUFFER&&(f[r.DRAW_FRAMEBUFFER]=Te),!0):!1}function tt(B,Te){let Ee=m,Ye=!1;if(B){Ee=p.get(Te),Ee===void 0&&(Ee=[],p.set(Te,Ee));const Je=B.textures;if(Ee.length!==Je.length||Ee[0]!==r.COLOR_ATTACHMENT0){for(let Pt=0,Lt=Je.length;Pt<Lt;Pt++)Ee[Pt]=r.COLOR_ATTACHMENT0+Pt;Ee.length=Je.length,Ye=!0}}else Ee[0]!==r.BACK&&(Ee[0]=r.BACK,Ye=!0);Ye&&r.drawBuffers(Ee)}function Fe(B){return v!==B?(r.useProgram(B),v=B,!0):!1}const V={[Rr]:r.FUNC_ADD,[ev]:r.FUNC_SUBTRACT,[tv]:r.FUNC_REVERSE_SUBTRACT};V[nv]=r.MIN,V[iv]=r.MAX;const le={[rv]:r.ZERO,[sv]:r.ONE,[ov]:r.SRC_COLOR,[eu]:r.SRC_ALPHA,[fv]:r.SRC_ALPHA_SATURATE,[uv]:r.DST_COLOR,[lv]:r.DST_ALPHA,[av]:r.ONE_MINUS_SRC_COLOR,[tu]:r.ONE_MINUS_SRC_ALPHA,[hv]:r.ONE_MINUS_DST_COLOR,[cv]:r.ONE_MINUS_DST_ALPHA,[dv]:r.CONSTANT_COLOR,[pv]:r.ONE_MINUS_CONSTANT_COLOR,[mv]:r.CONSTANT_ALPHA,[gv]:r.ONE_MINUS_CONSTANT_ALPHA};function re(B,Te,Ee,Ye,Je,Pt,Lt,Ut,an,It){if(B===rr){y===!0&&(Me(r.BLEND),y=!1);return}if(y===!1&&(be(r.BLEND),y=!0),B!==$0){if(B!==S||It!==z){if((x!==Rr||w!==Rr)&&(r.blendEquation(r.FUNC_ADD),x=Rr,w=Rr),It)switch(B){case ds:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case zf:r.blendFunc(r.ONE,r.ONE);break;case Bf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case kf:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}else switch(B){case ds:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case zf:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case Bf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case kf:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}_=null,E=null,T=null,N=null,P.set(0,0,0),I=0,S=B,z=It}return}Je=Je||Te,Pt=Pt||Ee,Lt=Lt||Ye,(Te!==x||Je!==w)&&(r.blendEquationSeparate(V[Te],V[Je]),x=Te,w=Je),(Ee!==_||Ye!==E||Pt!==T||Lt!==N)&&(r.blendFuncSeparate(le[Ee],le[Ye],le[Pt],le[Lt]),_=Ee,E=Ye,T=Pt,N=Lt),(Ut.equals(P)===!1||an!==I)&&(r.blendColor(Ut.r,Ut.g,Ut.b,an),P.copy(Ut),I=an),S=B,z=!1}function ye(B,Te){B.side===Si?Me(r.CULL_FACE):be(r.CULL_FACE);let Ee=B.side===Ln;Te&&(Ee=!Ee),_e(Ee),B.blending===ds&&B.transparent===!1?re(rr):re(B.blending,B.blendEquation,B.blendSrc,B.blendDst,B.blendEquationAlpha,B.blendSrcAlpha,B.blendDstAlpha,B.blendColor,B.blendAlpha,B.premultipliedAlpha),s.setFunc(B.depthFunc),s.setTest(B.depthTest),s.setMask(B.depthWrite),i.setMask(B.colorWrite);const Ye=B.stencilWrite;l.setTest(Ye),Ye&&(l.setMask(B.stencilWriteMask),l.setFunc(B.stencilFunc,B.stencilRef,B.stencilFuncMask),l.setOp(B.stencilFail,B.stencilZFail,B.stencilZPass)),C(B.polygonOffset,B.polygonOffsetFactor,B.polygonOffsetUnits),B.alphaToCoverage===!0?be(r.SAMPLE_ALPHA_TO_COVERAGE):Me(r.SAMPLE_ALPHA_TO_COVERAGE)}function _e(B){R!==B&&(B?r.frontFace(r.CW):r.frontFace(r.CCW),R=B)}function xe(B){B!==J0?(be(r.CULL_FACE),B!==b&&(B===Ff?r.cullFace(r.BACK):B===K0?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):Me(r.CULL_FACE),b=B}function D(B){B!==F&&($&&r.lineWidth(B),F=B)}function C(B,Te,Ee){B?(be(r.POLYGON_OFFSET_FILL),(X!==Te||H!==Ee)&&(r.polygonOffset(Te,Ee),X=Te,H=Ee)):Me(r.POLYGON_OFFSET_FILL)}function Y(B){B?be(r.SCISSOR_TEST):Me(r.SCISSOR_TEST)}function se(B){B===void 0&&(B=r.TEXTURE0+Z-1),k!==B&&(r.activeTexture(B),k=B)}function ce(B,Te,Ee){Ee===void 0&&(k===null?Ee=r.TEXTURE0+Z-1:Ee=k);let Ye=K[Ee];Ye===void 0&&(Ye={type:void 0,texture:void 0},K[Ee]=Ye),(Ye.type!==B||Ye.texture!==Te)&&(k!==Ee&&(r.activeTexture(Ee),k=Ee),r.bindTexture(B,Te||ge[B]),Ye.type=B,Ye.texture=Te)}function pe(){const B=K[k];B!==void 0&&B.type!==void 0&&(r.bindTexture(B.type,null),B.type=void 0,B.texture=void 0)}function qe(){try{r.compressedTexImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function me(){try{r.compressedTexImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function He(){try{r.texSubImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Ze(){try{r.texSubImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Se(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function De(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function it(){try{r.texStorage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function ze(){try{r.texStorage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Be(){try{r.texImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function pt(){try{r.texImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function mt(B){Ae.equals(B)===!1&&(r.scissor(B.x,B.y,B.z,B.w),Ae.copy(B))}function Et(B){Ne.equals(B)===!1&&(r.viewport(B.x,B.y,B.z,B.w),Ne.copy(B))}function _t(B,Te){let Ee=u.get(Te);Ee===void 0&&(Ee=new WeakMap,u.set(Te,Ee));let Ye=Ee.get(B);Ye===void 0&&(Ye=r.getUniformBlockIndex(Te,B.name),Ee.set(B,Ye))}function Dt(B,Te){const Ye=u.get(Te).get(B);c.get(Te)!==Ye&&(r.uniformBlockBinding(Te,Ye,B.__bindingPointIndex),c.set(Te,Ye))}function Ge(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),h={},k=null,K={},f={},p=new WeakMap,m=[],v=null,y=!1,S=null,x=null,_=null,E=null,w=null,T=null,N=null,P=new Le(0,0,0),I=0,z=!1,R=null,b=null,F=null,X=null,H=null,Ae.set(0,0,r.canvas.width,r.canvas.height),Ne.set(0,0,r.canvas.width,r.canvas.height),i.reset(),s.reset(),l.reset()}return{buffers:{color:i,depth:s,stencil:l},enable:be,disable:Me,bindFramebuffer:je,drawBuffers:tt,useProgram:Fe,setBlending:re,setMaterial:ye,setFlipSided:_e,setCullFace:xe,setLineWidth:D,setPolygonOffset:C,setScissorTest:Y,activeTexture:se,bindTexture:ce,unbindTexture:pe,compressedTexImage2D:qe,compressedTexImage3D:me,texImage2D:Be,texImage3D:pt,updateUBOMapping:_t,uniformBlockBinding:Dt,texStorage2D:it,texStorage3D:ze,texSubImage2D:He,texSubImage3D:Ze,compressedTexSubImage2D:Se,compressedTexSubImage3D:De,scissor:mt,viewport:Et,reset:Ge}}function OA(r,e,t,n,i,s,l){const c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,u=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new he,f=new WeakMap;let p;const m=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(D,C){return v?new OffscreenCanvas(D,C):Na("canvas")}function S(D,C,Y){let se=1;const ce=xe(D);if((ce.width>Y||ce.height>Y)&&(se=Y/Math.max(ce.width,ce.height)),se<1)if(typeof HTMLImageElement<"u"&&D instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&D instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&D instanceof ImageBitmap||typeof VideoFrame<"u"&&D instanceof VideoFrame){const pe=Math.floor(se*ce.width),qe=Math.floor(se*ce.height);p===void 0&&(p=y(pe,qe));const me=C?y(pe,qe):p;return me.width=pe,me.height=qe,me.getContext("2d").drawImage(D,0,0,pe,qe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+ce.width+"x"+ce.height+") to ("+pe+"x"+qe+")."),me}else return"data"in D&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+ce.width+"x"+ce.height+")."),D;return D}function x(D){return D.generateMipmaps&&D.minFilter!==fn&&D.minFilter!==tn}function _(D){r.generateMipmap(D)}function E(D,C,Y,se,ce=!1){if(D!==null){if(r[D]!==void 0)return r[D];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+D+"'")}let pe=C;if(C===r.RED&&(Y===r.FLOAT&&(pe=r.R32F),Y===r.HALF_FLOAT&&(pe=r.R16F),Y===r.UNSIGNED_BYTE&&(pe=r.R8)),C===r.RED_INTEGER&&(Y===r.UNSIGNED_BYTE&&(pe=r.R8UI),Y===r.UNSIGNED_SHORT&&(pe=r.R16UI),Y===r.UNSIGNED_INT&&(pe=r.R32UI),Y===r.BYTE&&(pe=r.R8I),Y===r.SHORT&&(pe=r.R16I),Y===r.INT&&(pe=r.R32I)),C===r.RG&&(Y===r.FLOAT&&(pe=r.RG32F),Y===r.HALF_FLOAT&&(pe=r.RG16F),Y===r.UNSIGNED_BYTE&&(pe=r.RG8)),C===r.RG_INTEGER&&(Y===r.UNSIGNED_BYTE&&(pe=r.RG8UI),Y===r.UNSIGNED_SHORT&&(pe=r.RG16UI),Y===r.UNSIGNED_INT&&(pe=r.RG32UI),Y===r.BYTE&&(pe=r.RG8I),Y===r.SHORT&&(pe=r.RG16I),Y===r.INT&&(pe=r.RG32I)),C===r.RGB&&Y===r.UNSIGNED_INT_5_9_9_9_REV&&(pe=r.RGB9_E5),C===r.RGBA){const qe=ce?Ca:bt.getTransfer(se);Y===r.FLOAT&&(pe=r.RGBA32F),Y===r.HALF_FLOAT&&(pe=r.RGBA16F),Y===r.UNSIGNED_BYTE&&(pe=qe===Ot?r.SRGB8_ALPHA8:r.RGBA8),Y===r.UNSIGNED_SHORT_4_4_4_4&&(pe=r.RGBA4),Y===r.UNSIGNED_SHORT_5_5_5_1&&(pe=r.RGB5_A1)}return(pe===r.R16F||pe===r.R32F||pe===r.RG16F||pe===r.RG32F||pe===r.RGBA16F||pe===r.RGBA32F)&&e.get("EXT_color_buffer_float"),pe}function w(D,C){return x(D)===!0||D.isFramebufferTexture&&D.minFilter!==fn&&D.minFilter!==tn?Math.log2(Math.max(C.width,C.height))+1:D.mipmaps!==void 0&&D.mipmaps.length>0?D.mipmaps.length:D.isCompressedTexture&&Array.isArray(D.image)?C.mipmaps.length:1}function T(D){const C=D.target;C.removeEventListener("dispose",T),P(C),C.isVideoTexture&&f.delete(C)}function N(D){const C=D.target;C.removeEventListener("dispose",N),z(C)}function P(D){const C=n.get(D);if(C.__webglInit===void 0)return;const Y=D.source,se=m.get(Y);if(se){const ce=se[C.__cacheKey];ce.usedTimes--,ce.usedTimes===0&&I(D),Object.keys(se).length===0&&m.delete(Y)}n.remove(D)}function I(D){const C=n.get(D);r.deleteTexture(C.__webglTexture);const Y=D.source,se=m.get(Y);delete se[C.__cacheKey],l.memory.textures--}function z(D){const C=n.get(D);if(D.depthTexture&&D.depthTexture.dispose(),D.isWebGLCubeRenderTarget)for(let se=0;se<6;se++){if(Array.isArray(C.__webglFramebuffer[se]))for(let ce=0;ce<C.__webglFramebuffer[se].length;ce++)r.deleteFramebuffer(C.__webglFramebuffer[se][ce]);else r.deleteFramebuffer(C.__webglFramebuffer[se]);C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer[se])}else{if(Array.isArray(C.__webglFramebuffer))for(let se=0;se<C.__webglFramebuffer.length;se++)r.deleteFramebuffer(C.__webglFramebuffer[se]);else r.deleteFramebuffer(C.__webglFramebuffer);if(C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer),C.__webglMultisampledFramebuffer&&r.deleteFramebuffer(C.__webglMultisampledFramebuffer),C.__webglColorRenderbuffer)for(let se=0;se<C.__webglColorRenderbuffer.length;se++)C.__webglColorRenderbuffer[se]&&r.deleteRenderbuffer(C.__webglColorRenderbuffer[se]);C.__webglDepthRenderbuffer&&r.deleteRenderbuffer(C.__webglDepthRenderbuffer)}const Y=D.textures;for(let se=0,ce=Y.length;se<ce;se++){const pe=n.get(Y[se]);pe.__webglTexture&&(r.deleteTexture(pe.__webglTexture),l.memory.textures--),n.remove(Y[se])}n.remove(D)}let R=0;function b(){R=0}function F(){const D=R;return D>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+D+" texture units while this GPU supports only "+i.maxTextures),R+=1,D}function X(D){const C=[];return C.push(D.wrapS),C.push(D.wrapT),C.push(D.wrapR||0),C.push(D.magFilter),C.push(D.minFilter),C.push(D.anisotropy),C.push(D.internalFormat),C.push(D.format),C.push(D.type),C.push(D.generateMipmaps),C.push(D.premultiplyAlpha),C.push(D.flipY),C.push(D.unpackAlignment),C.push(D.colorSpace),C.join()}function H(D,C){const Y=n.get(D);if(D.isVideoTexture&&ye(D),D.isRenderTargetTexture===!1&&D.version>0&&Y.__version!==D.version){const se=D.image;if(se===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(se.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ae(Y,D,C);return}}t.bindTexture(r.TEXTURE_2D,Y.__webglTexture,r.TEXTURE0+C)}function Z(D,C){const Y=n.get(D);if(D.version>0&&Y.__version!==D.version){Ae(Y,D,C);return}t.bindTexture(r.TEXTURE_2D_ARRAY,Y.__webglTexture,r.TEXTURE0+C)}function $(D,C){const Y=n.get(D);if(D.version>0&&Y.__version!==D.version){Ae(Y,D,C);return}t.bindTexture(r.TEXTURE_3D,Y.__webglTexture,r.TEXTURE0+C)}function ae(D,C){const Y=n.get(D);if(D.version>0&&Y.__version!==D.version){Ne(Y,D,C);return}t.bindTexture(r.TEXTURE_CUBE_MAP,Y.__webglTexture,r.TEXTURE0+C)}const ve={[Sa]:r.REPEAT,[di]:r.CLAMP_TO_EDGE,[wa]:r.MIRRORED_REPEAT},k={[fn]:r.NEAREST,[Rd]:r.NEAREST_MIPMAP_NEAREST,[fo]:r.NEAREST_MIPMAP_LINEAR,[tn]:r.LINEAR,[ma]:r.LINEAR_MIPMAP_NEAREST,[Oi]:r.LINEAR_MIPMAP_LINEAR},K={[jv]:r.NEVER,[e_]:r.ALWAYS,[Zv]:r.LESS,[kd]:r.LEQUAL,[Jv]:r.EQUAL,[$v]:r.GEQUAL,[Kv]:r.GREATER,[Qv]:r.NOTEQUAL};function j(D,C){if(C.type===pi&&e.has("OES_texture_float_linear")===!1&&(C.magFilter===tn||C.magFilter===ma||C.magFilter===fo||C.magFilter===Oi||C.minFilter===tn||C.minFilter===ma||C.minFilter===fo||C.minFilter===Oi)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),r.texParameteri(D,r.TEXTURE_WRAP_S,ve[C.wrapS]),r.texParameteri(D,r.TEXTURE_WRAP_T,ve[C.wrapT]),(D===r.TEXTURE_3D||D===r.TEXTURE_2D_ARRAY)&&r.texParameteri(D,r.TEXTURE_WRAP_R,ve[C.wrapR]),r.texParameteri(D,r.TEXTURE_MAG_FILTER,k[C.magFilter]),r.texParameteri(D,r.TEXTURE_MIN_FILTER,k[C.minFilter]),C.compareFunction&&(r.texParameteri(D,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(D,r.TEXTURE_COMPARE_FUNC,K[C.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(C.magFilter===fn||C.minFilter!==fo&&C.minFilter!==Oi||C.type===pi&&e.has("OES_texture_float_linear")===!1)return;if(C.anisotropy>1||n.get(C).__currentAnisotropy){const Y=e.get("EXT_texture_filter_anisotropic");r.texParameterf(D,Y.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(C.anisotropy,i.getMaxAnisotropy())),n.get(C).__currentAnisotropy=C.anisotropy}}}function ue(D,C){let Y=!1;D.__webglInit===void 0&&(D.__webglInit=!0,C.addEventListener("dispose",T));const se=C.source;let ce=m.get(se);ce===void 0&&(ce={},m.set(se,ce));const pe=X(C);if(pe!==D.__cacheKey){ce[pe]===void 0&&(ce[pe]={texture:r.createTexture(),usedTimes:0},l.memory.textures++,Y=!0),ce[pe].usedTimes++;const qe=ce[D.__cacheKey];qe!==void 0&&(ce[D.__cacheKey].usedTimes--,qe.usedTimes===0&&I(C)),D.__cacheKey=pe,D.__webglTexture=ce[pe].texture}return Y}function Ae(D,C,Y){let se=r.TEXTURE_2D;(C.isDataArrayTexture||C.isCompressedArrayTexture)&&(se=r.TEXTURE_2D_ARRAY),C.isData3DTexture&&(se=r.TEXTURE_3D);const ce=ue(D,C),pe=C.source;t.bindTexture(se,D.__webglTexture,r.TEXTURE0+Y);const qe=n.get(pe);if(pe.version!==qe.__version||ce===!0){t.activeTexture(r.TEXTURE0+Y);const me=bt.getPrimaries(bt.workingColorSpace),He=C.colorSpace===tr?null:bt.getPrimaries(C.colorSpace),Ze=C.colorSpace===tr||me===He?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ze);let Se=S(C.image,!1,i.maxTextureSize);Se=_e(C,Se);const De=s.convert(C.format,C.colorSpace),it=s.convert(C.type);let ze=E(C.internalFormat,De,it,C.colorSpace,C.isVideoTexture);j(se,C);let Be;const pt=C.mipmaps,mt=C.isVideoTexture!==!0&&ze!==zd,Et=qe.__version===void 0||ce===!0,_t=pe.dataReady,Dt=w(C,Se);if(C.isDepthTexture)ze=r.DEPTH_COMPONENT16,C.type===pi?ze=r.DEPTH_COMPONENT32F:C.type===_s?ze=r.DEPTH_COMPONENT24:C.type===bo&&(ze=r.DEPTH24_STENCIL8),Et&&(mt?t.texStorage2D(r.TEXTURE_2D,1,ze,Se.width,Se.height):t.texImage2D(r.TEXTURE_2D,0,ze,Se.width,Se.height,0,De,it,null));else if(C.isDataTexture)if(pt.length>0){mt&&Et&&t.texStorage2D(r.TEXTURE_2D,Dt,ze,pt[0].width,pt[0].height);for(let Ge=0,B=pt.length;Ge<B;Ge++)Be=pt[Ge],mt?_t&&t.texSubImage2D(r.TEXTURE_2D,Ge,0,0,Be.width,Be.height,De,it,Be.data):t.texImage2D(r.TEXTURE_2D,Ge,ze,Be.width,Be.height,0,De,it,Be.data);C.generateMipmaps=!1}else mt?(Et&&t.texStorage2D(r.TEXTURE_2D,Dt,ze,Se.width,Se.height),_t&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,Se.width,Se.height,De,it,Se.data)):t.texImage2D(r.TEXTURE_2D,0,ze,Se.width,Se.height,0,De,it,Se.data);else if(C.isCompressedTexture)if(C.isCompressedArrayTexture){mt&&Et&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Dt,ze,pt[0].width,pt[0].height,Se.depth);for(let Ge=0,B=pt.length;Ge<B;Ge++)Be=pt[Ge],C.format!==Hn?De!==null?mt?_t&&t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,Ge,0,0,0,Be.width,Be.height,Se.depth,De,Be.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,Ge,ze,Be.width,Be.height,Se.depth,0,Be.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):mt?_t&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,Ge,0,0,0,Be.width,Be.height,Se.depth,De,it,Be.data):t.texImage3D(r.TEXTURE_2D_ARRAY,Ge,ze,Be.width,Be.height,Se.depth,0,De,it,Be.data)}else{mt&&Et&&t.texStorage2D(r.TEXTURE_2D,Dt,ze,pt[0].width,pt[0].height);for(let Ge=0,B=pt.length;Ge<B;Ge++)Be=pt[Ge],C.format!==Hn?De!==null?mt?_t&&t.compressedTexSubImage2D(r.TEXTURE_2D,Ge,0,0,Be.width,Be.height,De,Be.data):t.compressedTexImage2D(r.TEXTURE_2D,Ge,ze,Be.width,Be.height,0,Be.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):mt?_t&&t.texSubImage2D(r.TEXTURE_2D,Ge,0,0,Be.width,Be.height,De,it,Be.data):t.texImage2D(r.TEXTURE_2D,Ge,ze,Be.width,Be.height,0,De,it,Be.data)}else if(C.isDataArrayTexture)mt?(Et&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Dt,ze,Se.width,Se.height,Se.depth),_t&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,Se.width,Se.height,Se.depth,De,it,Se.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,ze,Se.width,Se.height,Se.depth,0,De,it,Se.data);else if(C.isData3DTexture)mt?(Et&&t.texStorage3D(r.TEXTURE_3D,Dt,ze,Se.width,Se.height,Se.depth),_t&&t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,Se.width,Se.height,Se.depth,De,it,Se.data)):t.texImage3D(r.TEXTURE_3D,0,ze,Se.width,Se.height,Se.depth,0,De,it,Se.data);else if(C.isFramebufferTexture){if(Et)if(mt)t.texStorage2D(r.TEXTURE_2D,Dt,ze,Se.width,Se.height);else{let Ge=Se.width,B=Se.height;for(let Te=0;Te<Dt;Te++)t.texImage2D(r.TEXTURE_2D,Te,ze,Ge,B,0,De,it,null),Ge>>=1,B>>=1}}else if(pt.length>0){if(mt&&Et){const Ge=xe(pt[0]);t.texStorage2D(r.TEXTURE_2D,Dt,ze,Ge.width,Ge.height)}for(let Ge=0,B=pt.length;Ge<B;Ge++)Be=pt[Ge],mt?_t&&t.texSubImage2D(r.TEXTURE_2D,Ge,0,0,De,it,Be):t.texImage2D(r.TEXTURE_2D,Ge,ze,De,it,Be);C.generateMipmaps=!1}else if(mt){if(Et){const Ge=xe(Se);t.texStorage2D(r.TEXTURE_2D,Dt,ze,Ge.width,Ge.height)}_t&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,De,it,Se)}else t.texImage2D(r.TEXTURE_2D,0,ze,De,it,Se);x(C)&&_(se),qe.__version=pe.version,C.onUpdate&&C.onUpdate(C)}D.__version=C.version}function Ne(D,C,Y){if(C.image.length!==6)return;const se=ue(D,C),ce=C.source;t.bindTexture(r.TEXTURE_CUBE_MAP,D.__webglTexture,r.TEXTURE0+Y);const pe=n.get(ce);if(ce.version!==pe.__version||se===!0){t.activeTexture(r.TEXTURE0+Y);const qe=bt.getPrimaries(bt.workingColorSpace),me=C.colorSpace===tr?null:bt.getPrimaries(C.colorSpace),He=C.colorSpace===tr||qe===me?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,He);const Ze=C.isCompressedTexture||C.image[0].isCompressedTexture,Se=C.image[0]&&C.image[0].isDataTexture,De=[];for(let B=0;B<6;B++)!Ze&&!Se?De[B]=S(C.image[B],!0,i.maxCubemapSize):De[B]=Se?C.image[B].image:C.image[B],De[B]=_e(C,De[B]);const it=De[0],ze=s.convert(C.format,C.colorSpace),Be=s.convert(C.type),pt=E(C.internalFormat,ze,Be,C.colorSpace),mt=C.isVideoTexture!==!0,Et=pe.__version===void 0||se===!0,_t=ce.dataReady;let Dt=w(C,it);j(r.TEXTURE_CUBE_MAP,C);let Ge;if(Ze){mt&&Et&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Dt,pt,it.width,it.height);for(let B=0;B<6;B++){Ge=De[B].mipmaps;for(let Te=0;Te<Ge.length;Te++){const Ee=Ge[Te];C.format!==Hn?ze!==null?mt?_t&&t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Te,0,0,Ee.width,Ee.height,ze,Ee.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Te,pt,Ee.width,Ee.height,0,Ee.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):mt?_t&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Te,0,0,Ee.width,Ee.height,ze,Be,Ee.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Te,pt,Ee.width,Ee.height,0,ze,Be,Ee.data)}}}else{if(Ge=C.mipmaps,mt&&Et){Ge.length>0&&Dt++;const B=xe(De[0]);t.texStorage2D(r.TEXTURE_CUBE_MAP,Dt,pt,B.width,B.height)}for(let B=0;B<6;B++)if(Se){mt?_t&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,0,0,De[B].width,De[B].height,ze,Be,De[B].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,pt,De[B].width,De[B].height,0,ze,Be,De[B].data);for(let Te=0;Te<Ge.length;Te++){const Ye=Ge[Te].image[B].image;mt?_t&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Te+1,0,0,Ye.width,Ye.height,ze,Be,Ye.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Te+1,pt,Ye.width,Ye.height,0,ze,Be,Ye.data)}}else{mt?_t&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,0,0,ze,Be,De[B]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,pt,ze,Be,De[B]);for(let Te=0;Te<Ge.length;Te++){const Ee=Ge[Te];mt?_t&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Te+1,0,0,ze,Be,Ee.image[B]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Te+1,pt,ze,Be,Ee.image[B])}}}x(C)&&_(r.TEXTURE_CUBE_MAP),pe.__version=ce.version,C.onUpdate&&C.onUpdate(C)}D.__version=C.version}function te(D,C,Y,se,ce,pe){const qe=s.convert(Y.format,Y.colorSpace),me=s.convert(Y.type),He=E(Y.internalFormat,qe,me,Y.colorSpace);if(!n.get(C).__hasExternalTextures){const Se=Math.max(1,C.width>>pe),De=Math.max(1,C.height>>pe);ce===r.TEXTURE_3D||ce===r.TEXTURE_2D_ARRAY?t.texImage3D(ce,pe,He,Se,De,C.depth,0,qe,me,null):t.texImage2D(ce,pe,He,Se,De,0,qe,me,null)}t.bindFramebuffer(r.FRAMEBUFFER,D),re(C)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,se,ce,n.get(Y).__webglTexture,0,le(C)):(ce===r.TEXTURE_2D||ce>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&ce<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,se,ce,n.get(Y).__webglTexture,pe),t.bindFramebuffer(r.FRAMEBUFFER,null)}function ge(D,C,Y){if(r.bindRenderbuffer(r.RENDERBUFFER,D),C.depthBuffer&&!C.stencilBuffer){let se=r.DEPTH_COMPONENT24;if(Y||re(C)){const ce=C.depthTexture;ce&&ce.isDepthTexture&&(ce.type===pi?se=r.DEPTH_COMPONENT32F:ce.type===_s&&(se=r.DEPTH_COMPONENT24));const pe=le(C);re(C)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,pe,se,C.width,C.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,pe,se,C.width,C.height)}else r.renderbufferStorage(r.RENDERBUFFER,se,C.width,C.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,D)}else if(C.depthBuffer&&C.stencilBuffer){const se=le(C);Y&&re(C)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,se,r.DEPTH24_STENCIL8,C.width,C.height):re(C)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,se,r.DEPTH24_STENCIL8,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,C.width,C.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,D)}else{const se=C.textures;for(let ce=0;ce<se.length;ce++){const pe=se[ce],qe=s.convert(pe.format,pe.colorSpace),me=s.convert(pe.type),He=E(pe.internalFormat,qe,me,pe.colorSpace),Ze=le(C);Y&&re(C)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Ze,He,C.width,C.height):re(C)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Ze,He,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,He,C.width,C.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function be(D,C){if(C&&C.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,D),!(C.depthTexture&&C.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(C.depthTexture).__webglTexture||C.depthTexture.image.width!==C.width||C.depthTexture.image.height!==C.height)&&(C.depthTexture.image.width=C.width,C.depthTexture.image.height=C.height,C.depthTexture.needsUpdate=!0),H(C.depthTexture,0);const se=n.get(C.depthTexture).__webglTexture,ce=le(C);if(C.depthTexture.format===ps)re(C)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,se,0,ce):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,se,0);else if(C.depthTexture.format===Mo)re(C)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,se,0,ce):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,se,0);else throw new Error("Unknown depthTexture format")}function Me(D){const C=n.get(D),Y=D.isWebGLCubeRenderTarget===!0;if(D.depthTexture&&!C.__autoAllocateDepthBuffer){if(Y)throw new Error("target.depthTexture not supported in Cube render targets");be(C.__webglFramebuffer,D)}else if(Y){C.__webglDepthbuffer=[];for(let se=0;se<6;se++)t.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer[se]),C.__webglDepthbuffer[se]=r.createRenderbuffer(),ge(C.__webglDepthbuffer[se],D,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer),C.__webglDepthbuffer=r.createRenderbuffer(),ge(C.__webglDepthbuffer,D,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function je(D,C,Y){const se=n.get(D);C!==void 0&&te(se.__webglFramebuffer,D,D.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),Y!==void 0&&Me(D)}function tt(D){const C=D.texture,Y=n.get(D),se=n.get(C);D.addEventListener("dispose",N);const ce=D.textures,pe=D.isWebGLCubeRenderTarget===!0,qe=ce.length>1;if(qe||(se.__webglTexture===void 0&&(se.__webglTexture=r.createTexture()),se.__version=C.version,l.memory.textures++),pe){Y.__webglFramebuffer=[];for(let me=0;me<6;me++)if(C.mipmaps&&C.mipmaps.length>0){Y.__webglFramebuffer[me]=[];for(let He=0;He<C.mipmaps.length;He++)Y.__webglFramebuffer[me][He]=r.createFramebuffer()}else Y.__webglFramebuffer[me]=r.createFramebuffer()}else{if(C.mipmaps&&C.mipmaps.length>0){Y.__webglFramebuffer=[];for(let me=0;me<C.mipmaps.length;me++)Y.__webglFramebuffer[me]=r.createFramebuffer()}else Y.__webglFramebuffer=r.createFramebuffer();if(qe)for(let me=0,He=ce.length;me<He;me++){const Ze=n.get(ce[me]);Ze.__webglTexture===void 0&&(Ze.__webglTexture=r.createTexture(),l.memory.textures++)}if(D.samples>0&&re(D)===!1){Y.__webglMultisampledFramebuffer=r.createFramebuffer(),Y.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,Y.__webglMultisampledFramebuffer);for(let me=0;me<ce.length;me++){const He=ce[me];Y.__webglColorRenderbuffer[me]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,Y.__webglColorRenderbuffer[me]);const Ze=s.convert(He.format,He.colorSpace),Se=s.convert(He.type),De=E(He.internalFormat,Ze,Se,He.colorSpace,D.isXRRenderTarget===!0),it=le(D);r.renderbufferStorageMultisample(r.RENDERBUFFER,it,De,D.width,D.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+me,r.RENDERBUFFER,Y.__webglColorRenderbuffer[me])}r.bindRenderbuffer(r.RENDERBUFFER,null),D.depthBuffer&&(Y.__webglDepthRenderbuffer=r.createRenderbuffer(),ge(Y.__webglDepthRenderbuffer,D,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(pe){t.bindTexture(r.TEXTURE_CUBE_MAP,se.__webglTexture),j(r.TEXTURE_CUBE_MAP,C);for(let me=0;me<6;me++)if(C.mipmaps&&C.mipmaps.length>0)for(let He=0;He<C.mipmaps.length;He++)te(Y.__webglFramebuffer[me][He],D,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+me,He);else te(Y.__webglFramebuffer[me],D,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+me,0);x(C)&&_(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(qe){for(let me=0,He=ce.length;me<He;me++){const Ze=ce[me],Se=n.get(Ze);t.bindTexture(r.TEXTURE_2D,Se.__webglTexture),j(r.TEXTURE_2D,Ze),te(Y.__webglFramebuffer,D,Ze,r.COLOR_ATTACHMENT0+me,r.TEXTURE_2D,0),x(Ze)&&_(r.TEXTURE_2D)}t.unbindTexture()}else{let me=r.TEXTURE_2D;if((D.isWebGL3DRenderTarget||D.isWebGLArrayRenderTarget)&&(me=D.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),t.bindTexture(me,se.__webglTexture),j(me,C),C.mipmaps&&C.mipmaps.length>0)for(let He=0;He<C.mipmaps.length;He++)te(Y.__webglFramebuffer[He],D,C,r.COLOR_ATTACHMENT0,me,He);else te(Y.__webglFramebuffer,D,C,r.COLOR_ATTACHMENT0,me,0);x(C)&&_(me),t.unbindTexture()}D.depthBuffer&&Me(D)}function Fe(D){const C=D.textures;for(let Y=0,se=C.length;Y<se;Y++){const ce=C[Y];if(x(ce)){const pe=D.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,qe=n.get(ce).__webglTexture;t.bindTexture(pe,qe),_(pe),t.unbindTexture()}}}function V(D){if(D.samples>0&&re(D)===!1){const C=D.textures,Y=D.width,se=D.height;let ce=r.COLOR_BUFFER_BIT;const pe=[],qe=D.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,me=n.get(D),He=C.length>1;if(He)for(let Ze=0;Ze<C.length;Ze++)t.bindFramebuffer(r.FRAMEBUFFER,me.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ze,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,me.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ze,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,me.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,me.__webglFramebuffer);for(let Ze=0;Ze<C.length;Ze++){pe.push(r.COLOR_ATTACHMENT0+Ze),D.depthBuffer&&pe.push(qe);const Se=me.__ignoreDepthValues!==void 0?me.__ignoreDepthValues:!1;if(Se===!1&&(D.depthBuffer&&(ce|=r.DEPTH_BUFFER_BIT),D.stencilBuffer&&me.__isTransmissionRenderTarget!==!0&&(ce|=r.STENCIL_BUFFER_BIT)),He&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,me.__webglColorRenderbuffer[Ze]),Se===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[qe]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[qe])),He){const De=n.get(C[Ze]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,De,0)}r.blitFramebuffer(0,0,Y,se,0,0,Y,se,ce,r.NEAREST),u&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,pe)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),He)for(let Ze=0;Ze<C.length;Ze++){t.bindFramebuffer(r.FRAMEBUFFER,me.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ze,r.RENDERBUFFER,me.__webglColorRenderbuffer[Ze]);const Se=n.get(C[Ze]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,me.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ze,r.TEXTURE_2D,Se,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,me.__webglMultisampledFramebuffer)}}function le(D){return Math.min(i.maxSamples,D.samples)}function re(D){const C=n.get(D);return D.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&C.__useRenderToTexture!==!1}function ye(D){const C=l.render.frame;f.get(D)!==C&&(f.set(D,C),D.update())}function _e(D,C){const Y=D.colorSpace,se=D.format,ce=D.type;return D.isCompressedTexture===!0||D.isVideoTexture===!0||Y!==lr&&Y!==tr&&(bt.getTransfer(Y)===Ot?(se!==Hn||ce!==Bi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Y)),C}function xe(D){return typeof HTMLImageElement<"u"&&D instanceof HTMLImageElement?(h.width=D.naturalWidth||D.width,h.height=D.naturalHeight||D.height):typeof VideoFrame<"u"&&D instanceof VideoFrame?(h.width=D.displayWidth,h.height=D.displayHeight):(h.width=D.width,h.height=D.height),h}this.allocateTextureUnit=F,this.resetTextureUnits=b,this.setTexture2D=H,this.setTexture2DArray=Z,this.setTexture3D=$,this.setTextureCube=ae,this.rebindTextures=je,this.setupRenderTarget=tt,this.updateRenderTargetMipmap=Fe,this.updateMultisampleRenderTarget=V,this.setupDepthRenderbuffer=Me,this.setupFrameBufferTexture=te,this.useMultisampledRTT=re}function v_(r,e){function t(n,i=tr){let s;const l=bt.getTransfer(i);if(n===Bi)return r.UNSIGNED_BYTE;if(n===Ld)return r.UNSIGNED_SHORT_4_4_4_4;if(n===Nd)return r.UNSIGNED_SHORT_5_5_5_1;if(n===Uv)return r.UNSIGNED_INT_5_9_9_9_REV;if(n===Nv)return r.BYTE;if(n===Dv)return r.SHORT;if(n===Pd)return r.UNSIGNED_SHORT;if(n===Id)return r.INT;if(n===_s)return r.UNSIGNED_INT;if(n===pi)return r.FLOAT;if(n===Ea)return r.HALF_FLOAT;if(n===Ov)return r.ALPHA;if(n===Fv)return r.RGB;if(n===Hn)return r.RGBA;if(n===zv)return r.LUMINANCE;if(n===Bv)return r.LUMINANCE_ALPHA;if(n===ps)return r.DEPTH_COMPONENT;if(n===Mo)return r.DEPTH_STENCIL;if(n===Dd)return r.RED;if(n===Ud)return r.RED_INTEGER;if(n===kv)return r.RG;if(n===Od)return r.RG_INTEGER;if(n===Fd)return r.RGBA_INTEGER;if(n===qc||n===Yc||n===jc||n===Zc)if(l===Ot)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===qc)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Yc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===jc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Zc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===qc)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Yc)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===jc)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Zc)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Vf||n===Gf||n===Wf||n===Xf)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===Vf)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Gf)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Wf)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===Xf)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===zd)return s=e.get("WEBGL_compressed_texture_etc1"),s!==null?s.COMPRESSED_RGB_ETC1_WEBGL:null;if(n===qf||n===Yf)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(n===qf)return l===Ot?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===Yf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===jf||n===Zf||n===Jf||n===Kf||n===Qf||n===$f||n===ed||n===td||n===nd||n===id||n===rd||n===sd||n===od||n===ad)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(n===jf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Zf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Jf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Kf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Qf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===$f)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===ed)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===td)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===nd)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===id)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===rd)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===sd)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===od)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===ad)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Jc||n===ld||n===cd)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(n===Jc)return l===Ot?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===ld)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===cd)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Hv||n===ud||n===hd||n===fd)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(n===Jc)return s.COMPRESSED_RED_RGTC1_EXT;if(n===ud)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===hd)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===fd)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===bo?r.UNSIGNED_INT_24_8:r[n]!==void 0?r[n]:null}return{convert:t}}class __ extends en{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class go extends wt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const FA={type:"move"};class ff{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new go,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new go,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new U,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new U),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new go,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new U,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new U),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,l=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){l=!0;for(const S of e.hand.values()){const x=t.getJointPose(S,n),_=this._getHandJoint(h,S);x!==null&&(_.matrix.fromArray(x.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=x.radius),_.visible=x!==null}const f=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=f.position.distanceTo(p.position),v=.02,y=.005;h.inputState.pinching&&m>v+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=v-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(FA)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=l!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new go;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}const zA=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,BA=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class kA{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new Gt,s=e.properties.get(i);s.__webglTexture=t.texture,(t.depthNear!=n.depthNear||t.depthFar!=n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}render(e,t){if(this.texture!==null){if(this.mesh===null){const n=t.cameras[0].viewport,i=new Ei({vertexShader:zA,fragmentShader:BA,uniforms:{depthColor:{value:this.texture},depthWidth:{value:n.z},depthHeight:{value:n.w}}});this.mesh=new nn(new Ro(20,20),i)}e.render(this.mesh,t)}}reset(){this.texture=null,this.mesh=null}}class HA extends cr{constructor(e,t){super();const n=this;let i=null,s=1,l=null,c="local-floor",u=1,h=null,f=null,p=null,m=null,v=null,y=null;const S=new kA,x=t.getContextAttributes();let _=null,E=null;const w=[],T=[],N=new he;let P=null;const I=new en;I.layers.enable(1),I.viewport=new Ct;const z=new en;z.layers.enable(2),z.viewport=new Ct;const R=[I,z],b=new __;b.layers.enable(1),b.layers.enable(2);let F=null,X=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(te){let ge=w[te];return ge===void 0&&(ge=new ff,w[te]=ge),ge.getTargetRaySpace()},this.getControllerGrip=function(te){let ge=w[te];return ge===void 0&&(ge=new ff,w[te]=ge),ge.getGripSpace()},this.getHand=function(te){let ge=w[te];return ge===void 0&&(ge=new ff,w[te]=ge),ge.getHandSpace()};function H(te){const ge=T.indexOf(te.inputSource);if(ge===-1)return;const be=w[ge];be!==void 0&&(be.update(te.inputSource,te.frame,h||l),be.dispatchEvent({type:te.type,data:te.inputSource}))}function Z(){i.removeEventListener("select",H),i.removeEventListener("selectstart",H),i.removeEventListener("selectend",H),i.removeEventListener("squeeze",H),i.removeEventListener("squeezestart",H),i.removeEventListener("squeezeend",H),i.removeEventListener("end",Z),i.removeEventListener("inputsourceschange",$);for(let te=0;te<w.length;te++){const ge=T[te];ge!==null&&(T[te]=null,w[te].disconnect(ge))}F=null,X=null,S.reset(),e.setRenderTarget(_),v=null,m=null,p=null,i=null,E=null,Ne.stop(),n.isPresenting=!1,e.setPixelRatio(P),e.setSize(N.width,N.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(te){s=te,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(te){c=te,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||l},this.setReferenceSpace=function(te){h=te},this.getBaseLayer=function(){return m!==null?m:v},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return i},this.setSession=async function(te){if(i=te,i!==null){if(_=e.getRenderTarget(),i.addEventListener("select",H),i.addEventListener("selectstart",H),i.addEventListener("selectend",H),i.addEventListener("squeeze",H),i.addEventListener("squeezestart",H),i.addEventListener("squeezeend",H),i.addEventListener("end",Z),i.addEventListener("inputsourceschange",$),x.xrCompatible!==!0&&await t.makeXRCompatible(),P=e.getPixelRatio(),e.getSize(N),i.renderState.layers===void 0){const ge={antialias:x.antialias,alpha:!0,depth:x.depth,stencil:x.stencil,framebufferScaleFactor:s};v=new XRWebGLLayer(i,t,ge),i.updateRenderState({baseLayer:v}),e.setPixelRatio(1),e.setSize(v.framebufferWidth,v.framebufferHeight,!1),E=new wi(v.framebufferWidth,v.framebufferHeight,{format:Hn,type:Bi,colorSpace:e.outputColorSpace,stencilBuffer:x.stencil})}else{let ge=null,be=null,Me=null;x.depth&&(Me=x.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,ge=x.stencil?Mo:ps,be=x.stencil?bo:_s);const je={colorFormat:t.RGBA8,depthFormat:Me,scaleFactor:s};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(je),i.updateRenderState({layers:[m]}),e.setPixelRatio(1),e.setSize(m.textureWidth,m.textureHeight,!1),E=new wi(m.textureWidth,m.textureHeight,{format:Hn,type:Bi,depthTexture:new qd(m.textureWidth,m.textureHeight,be,void 0,void 0,void 0,void 0,void 0,void 0,ge),stencilBuffer:x.stencil,colorSpace:e.outputColorSpace,samples:x.antialias?4:0});const tt=e.properties.get(E);tt.__ignoreDepthValues=m.ignoreDepthValues}E.isXRRenderTarget=!0,this.setFoveation(u),h=null,l=await i.requestReferenceSpace(c),Ne.setContext(i),Ne.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function $(te){for(let ge=0;ge<te.removed.length;ge++){const be=te.removed[ge],Me=T.indexOf(be);Me>=0&&(T[Me]=null,w[Me].disconnect(be))}for(let ge=0;ge<te.added.length;ge++){const be=te.added[ge];let Me=T.indexOf(be);if(Me===-1){for(let tt=0;tt<w.length;tt++)if(tt>=T.length){T.push(be),Me=tt;break}else if(T[tt]===null){T[tt]=be,Me=tt;break}if(Me===-1)break}const je=w[Me];je&&je.connect(be)}}const ae=new U,ve=new U;function k(te,ge,be){ae.setFromMatrixPosition(ge.matrixWorld),ve.setFromMatrixPosition(be.matrixWorld);const Me=ae.distanceTo(ve),je=ge.projectionMatrix.elements,tt=be.projectionMatrix.elements,Fe=je[14]/(je[10]-1),V=je[14]/(je[10]+1),le=(je[9]+1)/je[5],re=(je[9]-1)/je[5],ye=(je[8]-1)/je[0],_e=(tt[8]+1)/tt[0],xe=Fe*ye,D=Fe*_e,C=Me/(-ye+_e),Y=C*-ye;ge.matrixWorld.decompose(te.position,te.quaternion,te.scale),te.translateX(Y),te.translateZ(C),te.matrixWorld.compose(te.position,te.quaternion,te.scale),te.matrixWorldInverse.copy(te.matrixWorld).invert();const se=Fe+C,ce=V+C,pe=xe-Y,qe=D+(Me-Y),me=le*V/ce*se,He=re*V/ce*se;te.projectionMatrix.makePerspective(pe,qe,me,He,se,ce),te.projectionMatrixInverse.copy(te.projectionMatrix).invert()}function K(te,ge){ge===null?te.matrixWorld.copy(te.matrix):te.matrixWorld.multiplyMatrices(ge.matrixWorld,te.matrix),te.matrixWorldInverse.copy(te.matrixWorld).invert()}this.updateCamera=function(te){if(i===null)return;S.texture!==null&&(te.near=S.depthNear,te.far=S.depthFar),b.near=z.near=I.near=te.near,b.far=z.far=I.far=te.far,(F!==b.near||X!==b.far)&&(i.updateRenderState({depthNear:b.near,depthFar:b.far}),F=b.near,X=b.far,I.near=F,I.far=X,z.near=F,z.far=X,I.updateProjectionMatrix(),z.updateProjectionMatrix(),te.updateProjectionMatrix());const ge=te.parent,be=b.cameras;K(b,ge);for(let Me=0;Me<be.length;Me++)K(be[Me],ge);be.length===2?k(b,I,z):b.projectionMatrix.copy(I.projectionMatrix),j(te,b,ge)};function j(te,ge,be){be===null?te.matrix.copy(ge.matrixWorld):(te.matrix.copy(be.matrixWorld),te.matrix.invert(),te.matrix.multiply(ge.matrixWorld)),te.matrix.decompose(te.position,te.quaternion,te.scale),te.updateMatrixWorld(!0),te.projectionMatrix.copy(ge.projectionMatrix),te.projectionMatrixInverse.copy(ge.projectionMatrixInverse),te.isPerspectiveCamera&&(te.fov=So*2*Math.atan(1/te.projectionMatrix.elements[5]),te.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(m===null&&v===null))return u},this.setFoveation=function(te){u=te,m!==null&&(m.fixedFoveation=te),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=te)},this.hasDepthSensing=function(){return S.texture!==null};let ue=null;function Ae(te,ge){if(f=ge.getViewerPose(h||l),y=ge,f!==null){const be=f.views;v!==null&&(e.setRenderTargetFramebuffer(E,v.framebuffer),e.setRenderTarget(E));let Me=!1;be.length!==b.cameras.length&&(b.cameras.length=0,Me=!0);for(let tt=0;tt<be.length;tt++){const Fe=be[tt];let V=null;if(v!==null)V=v.getViewport(Fe);else{const re=p.getViewSubImage(m,Fe);V=re.viewport,tt===0&&(e.setRenderTargetTextures(E,re.colorTexture,m.ignoreDepthValues?void 0:re.depthStencilTexture),e.setRenderTarget(E))}let le=R[tt];le===void 0&&(le=new en,le.layers.enable(tt),le.viewport=new Ct,R[tt]=le),le.matrix.fromArray(Fe.transform.matrix),le.matrix.decompose(le.position,le.quaternion,le.scale),le.projectionMatrix.fromArray(Fe.projectionMatrix),le.projectionMatrixInverse.copy(le.projectionMatrix).invert(),le.viewport.set(V.x,V.y,V.width,V.height),tt===0&&(b.matrix.copy(le.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),Me===!0&&b.cameras.push(le)}const je=i.enabledFeatures;if(je&&je.includes("depth-sensing")){const tt=p.getDepthInformation(be[0]);tt&&tt.isValid&&tt.texture&&S.init(e,tt,i.renderState)}}for(let be=0;be<w.length;be++){const Me=T[be],je=w[be];Me!==null&&je!==void 0&&je.update(Me,ge,h||l)}S.render(e,b),ue&&ue(te,ge),ge.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:ge}),y=null}const Ne=new h_;Ne.setAnimationLoop(Ae),this.setAnimationLoop=function(te){ue=te},this.dispose=function(){}}}const Kr=new ni,VA=new $e;function GA(r,e){function t(x,_){x.matrixAutoUpdate===!0&&x.updateMatrix(),_.value.copy(x.matrix)}function n(x,_){_.color.getRGB(x.fogColor.value,a_(r)),_.isFog?(x.fogNear.value=_.near,x.fogFar.value=_.far):_.isFogExp2&&(x.fogDensity.value=_.density)}function i(x,_,E,w,T){_.isMeshBasicMaterial||_.isMeshLambertMaterial?s(x,_):_.isMeshToonMaterial?(s(x,_),p(x,_)):_.isMeshPhongMaterial?(s(x,_),f(x,_)):_.isMeshStandardMaterial?(s(x,_),m(x,_),_.isMeshPhysicalMaterial&&v(x,_,T)):_.isMeshMatcapMaterial?(s(x,_),y(x,_)):_.isMeshDepthMaterial?s(x,_):_.isMeshDistanceMaterial?(s(x,_),S(x,_)):_.isMeshNormalMaterial?s(x,_):_.isLineBasicMaterial?(l(x,_),_.isLineDashedMaterial&&c(x,_)):_.isPointsMaterial?u(x,_,E,w):_.isSpriteMaterial?h(x,_):_.isShadowMaterial?(x.color.value.copy(_.color),x.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function s(x,_){x.opacity.value=_.opacity,_.color&&x.diffuse.value.copy(_.color),_.emissive&&x.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(x.map.value=_.map,t(_.map,x.mapTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.bumpMap&&(x.bumpMap.value=_.bumpMap,t(_.bumpMap,x.bumpMapTransform),x.bumpScale.value=_.bumpScale,_.side===Ln&&(x.bumpScale.value*=-1)),_.normalMap&&(x.normalMap.value=_.normalMap,t(_.normalMap,x.normalMapTransform),x.normalScale.value.copy(_.normalScale),_.side===Ln&&x.normalScale.value.negate()),_.displacementMap&&(x.displacementMap.value=_.displacementMap,t(_.displacementMap,x.displacementMapTransform),x.displacementScale.value=_.displacementScale,x.displacementBias.value=_.displacementBias),_.emissiveMap&&(x.emissiveMap.value=_.emissiveMap,t(_.emissiveMap,x.emissiveMapTransform)),_.specularMap&&(x.specularMap.value=_.specularMap,t(_.specularMap,x.specularMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest);const E=e.get(_),w=E.envMap,T=E.envMapRotation;if(w&&(x.envMap.value=w,Kr.copy(T),Kr.x*=-1,Kr.y*=-1,Kr.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(Kr.y*=-1,Kr.z*=-1),x.envMapRotation.value.setFromMatrix4(VA.makeRotationFromEuler(Kr)),x.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=_.reflectivity,x.ior.value=_.ior,x.refractionRatio.value=_.refractionRatio),_.lightMap){x.lightMap.value=_.lightMap;const N=r._useLegacyLights===!0?Math.PI:1;x.lightMapIntensity.value=_.lightMapIntensity*N,t(_.lightMap,x.lightMapTransform)}_.aoMap&&(x.aoMap.value=_.aoMap,x.aoMapIntensity.value=_.aoMapIntensity,t(_.aoMap,x.aoMapTransform))}function l(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,_.map&&(x.map.value=_.map,t(_.map,x.mapTransform))}function c(x,_){x.dashSize.value=_.dashSize,x.totalSize.value=_.dashSize+_.gapSize,x.scale.value=_.scale}function u(x,_,E,w){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.size.value=_.size*E,x.scale.value=w*.5,_.map&&(x.map.value=_.map,t(_.map,x.uvTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest)}function h(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.rotation.value=_.rotation,_.map&&(x.map.value=_.map,t(_.map,x.mapTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest)}function f(x,_){x.specular.value.copy(_.specular),x.shininess.value=Math.max(_.shininess,1e-4)}function p(x,_){_.gradientMap&&(x.gradientMap.value=_.gradientMap)}function m(x,_){x.metalness.value=_.metalness,_.metalnessMap&&(x.metalnessMap.value=_.metalnessMap,t(_.metalnessMap,x.metalnessMapTransform)),x.roughness.value=_.roughness,_.roughnessMap&&(x.roughnessMap.value=_.roughnessMap,t(_.roughnessMap,x.roughnessMapTransform)),_.envMap&&(x.envMapIntensity.value=_.envMapIntensity)}function v(x,_,E){x.ior.value=_.ior,_.sheen>0&&(x.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),x.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(x.sheenColorMap.value=_.sheenColorMap,t(_.sheenColorMap,x.sheenColorMapTransform)),_.sheenRoughnessMap&&(x.sheenRoughnessMap.value=_.sheenRoughnessMap,t(_.sheenRoughnessMap,x.sheenRoughnessMapTransform))),_.clearcoat>0&&(x.clearcoat.value=_.clearcoat,x.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(x.clearcoatMap.value=_.clearcoatMap,t(_.clearcoatMap,x.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,t(_.clearcoatRoughnessMap,x.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(x.clearcoatNormalMap.value=_.clearcoatNormalMap,t(_.clearcoatNormalMap,x.clearcoatNormalMapTransform),x.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===Ln&&x.clearcoatNormalScale.value.negate())),_.iridescence>0&&(x.iridescence.value=_.iridescence,x.iridescenceIOR.value=_.iridescenceIOR,x.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(x.iridescenceMap.value=_.iridescenceMap,t(_.iridescenceMap,x.iridescenceMapTransform)),_.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=_.iridescenceThicknessMap,t(_.iridescenceThicknessMap,x.iridescenceThicknessMapTransform))),_.transmission>0&&(x.transmission.value=_.transmission,x.transmissionSamplerMap.value=E.texture,x.transmissionSamplerSize.value.set(E.width,E.height),_.transmissionMap&&(x.transmissionMap.value=_.transmissionMap,t(_.transmissionMap,x.transmissionMapTransform)),x.thickness.value=_.thickness,_.thicknessMap&&(x.thicknessMap.value=_.thicknessMap,t(_.thicknessMap,x.thicknessMapTransform)),x.attenuationDistance.value=_.attenuationDistance,x.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(x.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(x.anisotropyMap.value=_.anisotropyMap,t(_.anisotropyMap,x.anisotropyMapTransform))),x.specularIntensity.value=_.specularIntensity,x.specularColor.value.copy(_.specularColor),_.specularColorMap&&(x.specularColorMap.value=_.specularColorMap,t(_.specularColorMap,x.specularColorMapTransform)),_.specularIntensityMap&&(x.specularIntensityMap.value=_.specularIntensityMap,t(_.specularIntensityMap,x.specularIntensityMapTransform))}function y(x,_){_.matcap&&(x.matcap.value=_.matcap)}function S(x,_){const E=e.get(_).light;x.referencePosition.value.setFromMatrixPosition(E.matrixWorld),x.nearDistance.value=E.shadow.camera.near,x.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function WA(r,e,t,n){let i={},s={},l=[];const c=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function u(E,w){const T=w.program;n.uniformBlockBinding(E,T)}function h(E,w){let T=i[E.id];T===void 0&&(y(E),T=f(E),i[E.id]=T,E.addEventListener("dispose",x));const N=w.program;n.updateUBOMapping(E,N);const P=e.render.frame;s[E.id]!==P&&(m(E),s[E.id]=P)}function f(E){const w=p();E.__bindingPointIndex=w;const T=r.createBuffer(),N=E.__size,P=E.usage;return r.bindBuffer(r.UNIFORM_BUFFER,T),r.bufferData(r.UNIFORM_BUFFER,N,P),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,w,T),T}function p(){for(let E=0;E<c;E++)if(l.indexOf(E)===-1)return l.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(E){const w=i[E.id],T=E.uniforms,N=E.__cache;r.bindBuffer(r.UNIFORM_BUFFER,w);for(let P=0,I=T.length;P<I;P++){const z=Array.isArray(T[P])?T[P]:[T[P]];for(let R=0,b=z.length;R<b;R++){const F=z[R];if(v(F,P,R,N)===!0){const X=F.__offset,H=Array.isArray(F.value)?F.value:[F.value];let Z=0;for(let $=0;$<H.length;$++){const ae=H[$],ve=S(ae);typeof ae=="number"||typeof ae=="boolean"?(F.__data[0]=ae,r.bufferSubData(r.UNIFORM_BUFFER,X+Z,F.__data)):ae.isMatrix3?(F.__data[0]=ae.elements[0],F.__data[1]=ae.elements[1],F.__data[2]=ae.elements[2],F.__data[3]=0,F.__data[4]=ae.elements[3],F.__data[5]=ae.elements[4],F.__data[6]=ae.elements[5],F.__data[7]=0,F.__data[8]=ae.elements[6],F.__data[9]=ae.elements[7],F.__data[10]=ae.elements[8],F.__data[11]=0):(ae.toArray(F.__data,Z),Z+=ve.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,X,F.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function v(E,w,T,N){const P=E.value,I=w+"_"+T;if(N[I]===void 0)return typeof P=="number"||typeof P=="boolean"?N[I]=P:N[I]=P.clone(),!0;{const z=N[I];if(typeof P=="number"||typeof P=="boolean"){if(z!==P)return N[I]=P,!0}else if(z.equals(P)===!1)return z.copy(P),!0}return!1}function y(E){const w=E.uniforms;let T=0;const N=16;for(let I=0,z=w.length;I<z;I++){const R=Array.isArray(w[I])?w[I]:[w[I]];for(let b=0,F=R.length;b<F;b++){const X=R[b],H=Array.isArray(X.value)?X.value:[X.value];for(let Z=0,$=H.length;Z<$;Z++){const ae=H[Z],ve=S(ae),k=T%N;k!==0&&N-k<ve.boundary&&(T+=N-k),X.__data=new Float32Array(ve.storage/Float32Array.BYTES_PER_ELEMENT),X.__offset=T,T+=ve.storage}}}const P=T%N;return P>0&&(T+=N-P),E.__size=T,E.__cache={},this}function S(E){const w={boundary:0,storage:0};return typeof E=="number"||typeof E=="boolean"?(w.boundary=4,w.storage=4):E.isVector2?(w.boundary=8,w.storage=8):E.isVector3||E.isColor?(w.boundary=16,w.storage=12):E.isVector4?(w.boundary=16,w.storage=16):E.isMatrix3?(w.boundary=48,w.storage=48):E.isMatrix4?(w.boundary=64,w.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),w}function x(E){const w=E.target;w.removeEventListener("dispose",x);const T=l.indexOf(w.__bindingPointIndex);l.splice(T,1),r.deleteBuffer(i[w.id]),delete i[w.id],delete s[w.id]}function _(){for(const E in i)r.deleteBuffer(i[E]);l=[],i={},s={}}return{bind:u,update:h,dispose:_}}class y_{constructor(e={}){const{canvas:t=n_(),context:n=null,depth:i=!0,stencil:s=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:f="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");m=n.getContextAttributes().alpha}else m=l;const v=new Uint32Array(4),y=new Int32Array(4);let S=null,x=null;const _=[],E=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=fi,this._useLegacyLights=!1,this.toneMapping=zi,this.toneMappingExposure=1;const w=this;let T=!1,N=0,P=0,I=null,z=-1,R=null;const b=new Ct,F=new Ct;let X=null;const H=new Le(0);let Z=0,$=t.width,ae=t.height,ve=1,k=null,K=null;const j=new Ct(0,0,$,ae),ue=new Ct(0,0,$,ae);let Ae=!1;const Ne=new Ya;let te=!1,ge=!1;const be=new $e,Me=new he,je=new U,tt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Fe(){return I===null?ve:1}let V=n;function le(L,q){const ee=t.getContext(L,q);return ee!==null?ee:null}try{const L={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:f,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${ou}`),t.addEventListener("webglcontextlost",Te,!1),t.addEventListener("webglcontextrestored",Ee,!1),t.addEventListener("webglcontextcreationerror",Ye,!1),V===null){const q="webgl2";if(V=le(q,L),V===null)throw le(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(L){throw console.error("THREE.WebGLRenderer: "+L.message),L}let re,ye,_e,xe,D,C,Y,se,ce,pe,qe,me,He,Ze,Se,De,it,ze,Be,pt,mt,Et,_t,Dt;function Ge(){re=new iE(V),re.init(),ye=new Kw(V,re,e),Et=new v_(V,re),_e=new UA(V),xe=new oE(V),D=new wA,C=new OA(V,re,_e,D,ye,Et,xe),Y=new $w(w),se=new nE(w),ce=new fS(V),_t=new Zw(V,ce),pe=new rE(V,ce,xe,_t),qe=new lE(V,pe,ce,xe),Be=new aE(V,ye,C),De=new Qw(D),me=new SA(w,Y,se,re,ye,_t,De),He=new GA(w,D),Ze=new AA,Se=new IA(re),ze=new jw(w,Y,se,_e,qe,m,u),it=new DA(w,qe,ye),Dt=new WA(V,xe,ye,_e),pt=new Jw(V,re,xe),mt=new sE(V,re,xe),xe.programs=me.programs,w.capabilities=ye,w.extensions=re,w.properties=D,w.renderLists=Ze,w.shadowMap=it,w.state=_e,w.info=xe}Ge();const B=new HA(w,V);this.xr=B,this.getContext=function(){return V},this.getContextAttributes=function(){return V.getContextAttributes()},this.forceContextLoss=function(){const L=re.get("WEBGL_lose_context");L&&L.loseContext()},this.forceContextRestore=function(){const L=re.get("WEBGL_lose_context");L&&L.restoreContext()},this.getPixelRatio=function(){return ve},this.setPixelRatio=function(L){L!==void 0&&(ve=L,this.setSize($,ae,!1))},this.getSize=function(L){return L.set($,ae)},this.setSize=function(L,q,ee=!0){if(B.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}$=L,ae=q,t.width=Math.floor(L*ve),t.height=Math.floor(q*ve),ee===!0&&(t.style.width=L+"px",t.style.height=q+"px"),this.setViewport(0,0,L,q)},this.getDrawingBufferSize=function(L){return L.set($*ve,ae*ve).floor()},this.setDrawingBufferSize=function(L,q,ee){$=L,ae=q,ve=ee,t.width=Math.floor(L*ee),t.height=Math.floor(q*ee),this.setViewport(0,0,L,q)},this.getCurrentViewport=function(L){return L.copy(b)},this.getViewport=function(L){return L.copy(j)},this.setViewport=function(L,q,ee,ne){L.isVector4?j.set(L.x,L.y,L.z,L.w):j.set(L,q,ee,ne),_e.viewport(b.copy(j).multiplyScalar(ve).round())},this.getScissor=function(L){return L.copy(ue)},this.setScissor=function(L,q,ee,ne){L.isVector4?ue.set(L.x,L.y,L.z,L.w):ue.set(L,q,ee,ne),_e.scissor(F.copy(ue).multiplyScalar(ve).round())},this.getScissorTest=function(){return Ae},this.setScissorTest=function(L){_e.setScissorTest(Ae=L)},this.setOpaqueSort=function(L){k=L},this.setTransparentSort=function(L){K=L},this.getClearColor=function(L){return L.copy(ze.getClearColor())},this.setClearColor=function(){ze.setClearColor.apply(ze,arguments)},this.getClearAlpha=function(){return ze.getClearAlpha()},this.setClearAlpha=function(){ze.setClearAlpha.apply(ze,arguments)},this.clear=function(L=!0,q=!0,ee=!0){let ne=0;if(L){let Q=!1;if(I!==null){const Pe=I.texture.format;Q=Pe===Fd||Pe===Od||Pe===Ud}if(Q){const Pe=I.texture.type,We=Pe===Bi||Pe===_s||Pe===Pd||Pe===bo||Pe===Ld||Pe===Nd,Qe=ze.getClearColor(),nt=ze.getClearAlpha(),rt=Qe.r,et=Qe.g,st=Qe.b;We?(v[0]=rt,v[1]=et,v[2]=st,v[3]=nt,V.clearBufferuiv(V.COLOR,0,v)):(y[0]=rt,y[1]=et,y[2]=st,y[3]=nt,V.clearBufferiv(V.COLOR,0,y))}else ne|=V.COLOR_BUFFER_BIT}q&&(ne|=V.DEPTH_BUFFER_BIT),ee&&(ne|=V.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),V.clear(ne)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Te,!1),t.removeEventListener("webglcontextrestored",Ee,!1),t.removeEventListener("webglcontextcreationerror",Ye,!1),Ze.dispose(),Se.dispose(),D.dispose(),Y.dispose(),se.dispose(),qe.dispose(),_t.dispose(),Dt.dispose(),me.dispose(),B.dispose(),B.removeEventListener("sessionstart",Wn),B.removeEventListener("sessionend",Xn),Vi.stop()};function Te(L){L.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),T=!0}function Ee(){console.log("THREE.WebGLRenderer: Context Restored."),T=!1;const L=xe.autoReset,q=it.enabled,ee=it.autoUpdate,ne=it.needsUpdate,Q=it.type;Ge(),xe.autoReset=L,it.enabled=q,it.autoUpdate=ee,it.needsUpdate=ne,it.type=Q}function Ye(L){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",L.statusMessage)}function Je(L){const q=L.target;q.removeEventListener("dispose",Je),Pt(q)}function Pt(L){Lt(L),D.remove(L)}function Lt(L){const q=D.get(L).programs;q!==void 0&&(q.forEach(function(ee){me.releaseProgram(ee)}),L.isShaderMaterial&&me.releaseShaderCache(L))}this.renderBufferDirect=function(L,q,ee,ne,Q,Pe){q===null&&(q=tt);const We=Q.isMesh&&Q.matrixWorld.determinant()<0,Qe=Du(L,q,ee,ne,Q);_e.setMaterial(ne,We);let nt=ee.index,rt=1;if(ne.wireframe===!0){if(nt=pe.getWireframeAttribute(ee),nt===void 0)return;rt=2}const et=ee.drawRange,st=ee.attributes.position;let Ft=et.start*rt,An=(et.start+et.count)*rt;Pe!==null&&(Ft=Math.max(Ft,Pe.start*rt),An=Math.min(An,(Pe.start+Pe.count)*rt)),nt!==null?(Ft=Math.max(Ft,0),An=Math.min(An,nt.count)):st!=null&&(Ft=Math.max(Ft,0),An=Math.min(An,st.count));const Wt=An-Ft;if(Wt<0||Wt===1/0)return;_t.setup(Q,ne,Qe,ee,nt);let gn,yt=pt;if(nt!==null&&(gn=ce.get(nt),yt=mt,yt.setIndex(gn)),Q.isMesh)ne.wireframe===!0?(_e.setLineWidth(ne.wireframeLinewidth*Fe()),yt.setMode(V.LINES)):yt.setMode(V.TRIANGLES);else if(Q.isLine){let Ue=ne.linewidth;Ue===void 0&&(Ue=1),_e.setLineWidth(Ue*Fe()),Q.isLineSegments?yt.setMode(V.LINES):Q.isLineLoop?yt.setMode(V.LINE_LOOP):yt.setMode(V.LINE_STRIP)}else Q.isPoints?yt.setMode(V.POINTS):Q.isSprite&&yt.setMode(V.TRIANGLES);if(Q.isBatchedMesh)yt.renderMultiDraw(Q._multiDrawStarts,Q._multiDrawCounts,Q._multiDrawCount);else if(Q.isInstancedMesh)yt.renderInstances(Ft,Wt,Q.count);else if(ee.isInstancedBufferGeometry){const Ue=ee._maxInstanceCount!==void 0?ee._maxInstanceCount:1/0,Tt=Math.min(ee.instanceCount,Ue);yt.renderInstances(Ft,Wt,Tt)}else yt.render(Ft,Wt)};function Ut(L,q,ee){L.transparent===!0&&L.side===Si&&L.forceSinglePass===!1?(L.side=Ln,L.needsUpdate=!0,bi(L,q,ee),L.side=sr,L.needsUpdate=!0,bi(L,q,ee),L.side=Si):bi(L,q,ee)}this.compile=function(L,q,ee=null){ee===null&&(ee=L),x=Se.get(ee),x.init(),E.push(x),ee.traverseVisible(function(Q){Q.isLight&&Q.layers.test(q.layers)&&(x.pushLight(Q),Q.castShadow&&x.pushShadow(Q))}),L!==ee&&L.traverseVisible(function(Q){Q.isLight&&Q.layers.test(q.layers)&&(x.pushLight(Q),Q.castShadow&&x.pushShadow(Q))}),x.setupLights(w._useLegacyLights);const ne=new Set;return L.traverse(function(Q){const Pe=Q.material;if(Pe)if(Array.isArray(Pe))for(let We=0;We<Pe.length;We++){const Qe=Pe[We];Ut(Qe,ee,Q),ne.add(Qe)}else Ut(Pe,ee,Q),ne.add(Pe)}),E.pop(),x=null,ne},this.compileAsync=function(L,q,ee=null){const ne=this.compile(L,q,ee);return new Promise(Q=>{function Pe(){if(ne.forEach(function(We){D.get(We).currentProgram.isReady()&&ne.delete(We)}),ne.size===0){Q(L);return}setTimeout(Pe,10)}re.get("KHR_parallel_shader_compile")!==null?Pe():setTimeout(Pe,10)})};let an=null;function It(L){an&&an(L)}function Wn(){Vi.stop()}function Xn(){Vi.start()}const Vi=new h_;Vi.setAnimationLoop(It),typeof self<"u"&&Vi.setContext(self),this.setAnimationLoop=function(L){an=L,B.setAnimationLoop(L),L===null?Vi.stop():Vi.start()},B.addEventListener("sessionstart",Wn),B.addEventListener("sessionend",Xn),this.render=function(L,q){if(q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(T===!0)return;L.matrixWorldAutoUpdate===!0&&L.updateMatrixWorld(),q.parent===null&&q.matrixWorldAutoUpdate===!0&&q.updateMatrixWorld(),B.enabled===!0&&B.isPresenting===!0&&(B.cameraAutoUpdate===!0&&B.updateCamera(q),q=B.getCamera()),L.isScene===!0&&L.onBeforeRender(w,L,q,I),x=Se.get(L,E.length),x.init(),E.push(x),be.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),Ne.setFromProjectionMatrix(be),ge=this.localClippingEnabled,te=De.init(this.clippingPlanes,ge),S=Ze.get(L,_.length),S.init(),_.push(S),el(L,q,0,w.sortObjects),S.finish(),w.sortObjects===!0&&S.sort(k,K),this.info.render.frame++,te===!0&&De.beginShadows();const ee=x.state.shadowsArray;if(it.render(ee,L,q),te===!0&&De.endShadows(),this.info.autoReset===!0&&this.info.reset(),(B.enabled===!1||B.isPresenting===!1||B.hasDepthSensing()===!1)&&ze.render(S,L),x.setupLights(w._useLegacyLights),q.isArrayCamera){const ne=q.cameras;for(let Q=0,Pe=ne.length;Q<Pe;Q++){const We=ne[Q];tl(S,L,We,We.viewport)}}else tl(S,L,q);I!==null&&(C.updateMultisampleRenderTarget(I),C.updateRenderTargetMipmap(I)),L.isScene===!0&&L.onAfterRender(w,L,q),_t.resetDefaultState(),z=-1,R=null,E.pop(),E.length>0?x=E[E.length-1]:x=null,_.pop(),_.length>0?S=_[_.length-1]:S=null};function el(L,q,ee,ne){if(L.visible===!1)return;if(L.layers.test(q.layers)){if(L.isGroup)ee=L.renderOrder;else if(L.isLOD)L.autoUpdate===!0&&L.update(q);else if(L.isLight)x.pushLight(L),L.castShadow&&x.pushShadow(L);else if(L.isSprite){if(!L.frustumCulled||Ne.intersectsSprite(L)){ne&&je.setFromMatrixPosition(L.matrixWorld).applyMatrix4(be);const We=qe.update(L),Qe=L.material;Qe.visible&&S.push(L,We,Qe,ee,je.z,null)}}else if((L.isMesh||L.isLine||L.isPoints)&&(!L.frustumCulled||Ne.intersectsObject(L))){const We=qe.update(L),Qe=L.material;if(ne&&(L.boundingSphere!==void 0?(L.boundingSphere===null&&L.computeBoundingSphere(),je.copy(L.boundingSphere.center)):(We.boundingSphere===null&&We.computeBoundingSphere(),je.copy(We.boundingSphere.center)),je.applyMatrix4(L.matrixWorld).applyMatrix4(be)),Array.isArray(Qe)){const nt=We.groups;for(let rt=0,et=nt.length;rt<et;rt++){const st=nt[rt],Ft=Qe[st.materialIndex];Ft&&Ft.visible&&S.push(L,We,Ft,ee,je.z,st)}}else Qe.visible&&S.push(L,We,Qe,ee,je.z,null)}}const Pe=L.children;for(let We=0,Qe=Pe.length;We<Qe;We++)el(Pe[We],q,ee,ne)}function tl(L,q,ee,ne){const Q=L.opaque,Pe=L.transmissive,We=L.transparent;x.setupLightsView(ee),te===!0&&De.setGlobalState(w.clippingPlanes,ee),Pe.length>0&&nl(Q,Pe,q,ee),ne&&_e.viewport(b.copy(ne)),Q.length>0&&ur(Q,q,ee),Pe.length>0&&ur(Pe,q,ee),We.length>0&&ur(We,q,ee),_e.buffers.depth.setTest(!0),_e.buffers.depth.setMask(!0),_e.buffers.color.setMask(!0),_e.setPolygonOffset(!1)}function nl(L,q,ee,ne){if((ee.isScene===!0?ee.overrideMaterial:null)!==null)return;if(x.state.transmissionRenderTarget===null){x.state.transmissionRenderTarget=new wi(1,1,{generateMipmaps:!0,type:re.has("EXT_color_buffer_half_float")||re.has("EXT_color_buffer_float")?Ea:Bi,minFilter:Oi,samples:4,stencilBuffer:s});const rt=D.get(x.state.transmissionRenderTarget);rt.__isTransmissionRenderTarget=!0}const Pe=x.state.transmissionRenderTarget;w.getDrawingBufferSize(Me),Pe.setSize(Me.x,Me.y);const We=w.getRenderTarget();w.setRenderTarget(Pe),w.getClearColor(H),Z=w.getClearAlpha(),Z<1&&w.setClearColor(16777215,.5),w.clear();const Qe=w.toneMapping;w.toneMapping=zi,ur(L,ee,ne),C.updateMultisampleRenderTarget(Pe),C.updateRenderTargetMipmap(Pe);let nt=!1;for(let rt=0,et=q.length;rt<et;rt++){const st=q[rt],Ft=st.object,An=st.geometry,Wt=st.material,gn=st.group;if(Wt.side===Si&&Ft.layers.test(ne.layers)){const yt=Wt.side;Wt.side=Ln,Wt.needsUpdate=!0,il(Ft,ee,ne,An,Wt,gn),Wt.side=yt,Wt.needsUpdate=!0,nt=!0}}nt===!0&&(C.updateMultisampleRenderTarget(Pe),C.updateRenderTargetMipmap(Pe)),w.setRenderTarget(We),w.setClearColor(H,Z),w.toneMapping=Qe}function ur(L,q,ee){const ne=q.isScene===!0?q.overrideMaterial:null;for(let Q=0,Pe=L.length;Q<Pe;Q++){const We=L[Q],Qe=We.object,nt=We.geometry,rt=ne===null?We.material:ne,et=We.group;Qe.layers.test(ee.layers)&&il(Qe,q,ee,nt,rt,et)}}function il(L,q,ee,ne,Q,Pe){L.onBeforeRender(w,q,ee,ne,Q,Pe),L.modelViewMatrix.multiplyMatrices(ee.matrixWorldInverse,L.matrixWorld),L.normalMatrix.getNormalMatrix(L.modelViewMatrix),Q.onBeforeRender(w,q,ee,ne,L,Pe),Q.transparent===!0&&Q.side===Si&&Q.forceSinglePass===!1?(Q.side=Ln,Q.needsUpdate=!0,w.renderBufferDirect(ee,q,ne,Q,L,Pe),Q.side=sr,Q.needsUpdate=!0,w.renderBufferDirect(ee,q,ne,Q,L,Pe),Q.side=Si):w.renderBufferDirect(ee,q,ne,Q,L,Pe),L.onAfterRender(w,q,ee,ne,Q,Pe)}function bi(L,q,ee){q.isScene!==!0&&(q=tt);const ne=D.get(L),Q=x.state.lights,Pe=x.state.shadowsArray,We=Q.state.version,Qe=me.getParameters(L,Q.state,Pe,q,ee),nt=me.getProgramCacheKey(Qe);let rt=ne.programs;ne.environment=L.isMeshStandardMaterial?q.environment:null,ne.fog=q.fog,ne.envMap=(L.isMeshStandardMaterial?se:Y).get(L.envMap||ne.environment),ne.envMapRotation=ne.environment!==null&&L.envMap===null?q.environmentRotation:L.envMapRotation,rt===void 0&&(L.addEventListener("dispose",Je),rt=new Map,ne.programs=rt);let et=rt.get(nt);if(et!==void 0){if(ne.currentProgram===et&&ne.lightsStateVersion===We)return sl(L,Qe),et}else Qe.uniforms=me.getUniforms(L),L.onBuild(ee,Qe,w),L.onBeforeCompile(Qe,w),et=me.acquireProgram(Qe,nt),rt.set(nt,et),ne.uniforms=Qe.uniforms;const st=ne.uniforms;return(!L.isShaderMaterial&&!L.isRawShaderMaterial||L.clipping===!0)&&(st.clippingPlanes=De.uniform),sl(L,Qe),ne.needsLights=Ou(L),ne.lightsStateVersion=We,ne.needsLights&&(st.ambientLightColor.value=Q.state.ambient,st.lightProbe.value=Q.state.probe,st.directionalLights.value=Q.state.directional,st.directionalLightShadows.value=Q.state.directionalShadow,st.spotLights.value=Q.state.spot,st.spotLightShadows.value=Q.state.spotShadow,st.rectAreaLights.value=Q.state.rectArea,st.ltc_1.value=Q.state.rectAreaLTC1,st.ltc_2.value=Q.state.rectAreaLTC2,st.pointLights.value=Q.state.point,st.pointLightShadows.value=Q.state.pointShadow,st.hemisphereLights.value=Q.state.hemi,st.directionalShadowMap.value=Q.state.directionalShadowMap,st.directionalShadowMatrix.value=Q.state.directionalShadowMatrix,st.spotShadowMap.value=Q.state.spotShadowMap,st.spotLightMatrix.value=Q.state.spotLightMatrix,st.spotLightMap.value=Q.state.spotLightMap,st.pointShadowMap.value=Q.state.pointShadowMap,st.pointShadowMatrix.value=Q.state.pointShadowMatrix),ne.currentProgram=et,ne.uniformsList=null,et}function rl(L){if(L.uniformsList===null){const q=L.currentProgram.getUniforms();L.uniformsList=Qc.seqWithValue(q.seq,L.uniforms)}return L.uniformsList}function sl(L,q){const ee=D.get(L);ee.outputColorSpace=q.outputColorSpace,ee.batching=q.batching,ee.instancing=q.instancing,ee.instancingColor=q.instancingColor,ee.instancingMorph=q.instancingMorph,ee.skinning=q.skinning,ee.morphTargets=q.morphTargets,ee.morphNormals=q.morphNormals,ee.morphColors=q.morphColors,ee.morphTargetsCount=q.morphTargetsCount,ee.numClippingPlanes=q.numClippingPlanes,ee.numIntersection=q.numClipIntersection,ee.vertexAlphas=q.vertexAlphas,ee.vertexTangents=q.vertexTangents,ee.toneMapping=q.toneMapping}function Du(L,q,ee,ne,Q){q.isScene!==!0&&(q=tt),C.resetTextureUnits();const Pe=q.fog,We=ne.isMeshStandardMaterial?q.environment:null,Qe=I===null?w.outputColorSpace:I.isXRRenderTarget===!0?I.texture.colorSpace:lr,nt=(ne.isMeshStandardMaterial?se:Y).get(ne.envMap||We),rt=ne.vertexColors===!0&&!!ee.attributes.color&&ee.attributes.color.itemSize===4,et=!!ee.attributes.tangent&&(!!ne.normalMap||ne.anisotropy>0),st=!!ee.morphAttributes.position,Ft=!!ee.morphAttributes.normal,An=!!ee.morphAttributes.color;let Wt=zi;ne.toneMapped&&(I===null||I.isXRRenderTarget===!0)&&(Wt=w.toneMapping);const gn=ee.morphAttributes.position||ee.morphAttributes.normal||ee.morphAttributes.color,yt=gn!==void 0?gn.length:0,Ue=D.get(ne),Tt=x.state.lights;if(te===!0&&(ge===!0||L!==R)){const Tn=L===R&&ne.id===z;De.setState(ne,L,Tn)}let gt=!1;ne.version===Ue.__version?(Ue.needsLights&&Ue.lightsStateVersion!==Tt.state.version||Ue.outputColorSpace!==Qe||Q.isBatchedMesh&&Ue.batching===!1||!Q.isBatchedMesh&&Ue.batching===!0||Q.isInstancedMesh&&Ue.instancing===!1||!Q.isInstancedMesh&&Ue.instancing===!0||Q.isSkinnedMesh&&Ue.skinning===!1||!Q.isSkinnedMesh&&Ue.skinning===!0||Q.isInstancedMesh&&Ue.instancingColor===!0&&Q.instanceColor===null||Q.isInstancedMesh&&Ue.instancingColor===!1&&Q.instanceColor!==null||Q.isInstancedMesh&&Ue.instancingMorph===!0&&Q.morphTexture===null||Q.isInstancedMesh&&Ue.instancingMorph===!1&&Q.morphTexture!==null||Ue.envMap!==nt||ne.fog===!0&&Ue.fog!==Pe||Ue.numClippingPlanes!==void 0&&(Ue.numClippingPlanes!==De.numPlanes||Ue.numIntersection!==De.numIntersection)||Ue.vertexAlphas!==rt||Ue.vertexTangents!==et||Ue.morphTargets!==st||Ue.morphNormals!==Ft||Ue.morphColors!==An||Ue.toneMapping!==Wt||Ue.morphTargetsCount!==yt)&&(gt=!0):(gt=!0,Ue.__version=ne.version);let Bt=Ue.currentProgram;gt===!0&&(Bt=bi(ne,q,Q));let dn=!1,qn=!1,Ci=!1;const At=Bt.getUniforms(),Yn=Ue.uniforms;if(_e.useProgram(Bt.program)&&(dn=!0,qn=!0,Ci=!0),ne.id!==z&&(z=ne.id,qn=!0),dn||R!==L){At.setValue(V,"projectionMatrix",L.projectionMatrix),At.setValue(V,"viewMatrix",L.matrixWorldInverse);const Tn=At.map.cameraPosition;Tn!==void 0&&Tn.setValue(V,je.setFromMatrixPosition(L.matrixWorld)),ye.logarithmicDepthBuffer&&At.setValue(V,"logDepthBufFC",2/(Math.log(L.far+1)/Math.LN2)),(ne.isMeshPhongMaterial||ne.isMeshToonMaterial||ne.isMeshLambertMaterial||ne.isMeshBasicMaterial||ne.isMeshStandardMaterial||ne.isShaderMaterial)&&At.setValue(V,"isOrthographic",L.isOrthographicCamera===!0),R!==L&&(R=L,qn=!0,Ci=!0)}if(Q.isSkinnedMesh){At.setOptional(V,Q,"bindMatrix"),At.setOptional(V,Q,"bindMatrixInverse");const Tn=Q.skeleton;Tn&&(Tn.boneTexture===null&&Tn.computeBoneTexture(),At.setValue(V,"boneTexture",Tn.boneTexture,C))}Q.isBatchedMesh&&(At.setOptional(V,Q,"batchingTexture"),At.setValue(V,"batchingTexture",Q._matricesTexture,C));const Ts=ee.morphAttributes;if((Ts.position!==void 0||Ts.normal!==void 0||Ts.color!==void 0)&&Be.update(Q,ee,Bt),(qn||Ue.receiveShadow!==Q.receiveShadow)&&(Ue.receiveShadow=Q.receiveShadow,At.setValue(V,"receiveShadow",Q.receiveShadow)),ne.isMeshGouraudMaterial&&ne.envMap!==null&&(Yn.envMap.value=nt,Yn.flipEnvMap.value=nt.isCubeTexture&&nt.isRenderTargetTexture===!1?-1:1),ne.isMeshStandardMaterial&&ne.envMap===null&&q.environment!==null&&(Yn.envMapIntensity.value=q.environmentIntensity),qn&&(At.setValue(V,"toneMappingExposure",w.toneMappingExposure),Ue.needsLights&&Uu(Yn,Ci),Pe&&ne.fog===!0&&He.refreshFogUniforms(Yn,Pe),He.refreshMaterialUniforms(Yn,ne,ve,ae,x.state.transmissionRenderTarget),Qc.upload(V,rl(Ue),Yn,C)),ne.isShaderMaterial&&ne.uniformsNeedUpdate===!0&&(Qc.upload(V,rl(Ue),Yn,C),ne.uniformsNeedUpdate=!1),ne.isSpriteMaterial&&At.setValue(V,"center",Q.center),At.setValue(V,"modelViewMatrix",Q.modelViewMatrix),At.setValue(V,"normalMatrix",Q.normalMatrix),At.setValue(V,"modelMatrix",Q.matrixWorld),ne.isShaderMaterial||ne.isRawShaderMaterial){const Tn=ne.uniformsGroups;for(let hr=0,ol=Tn.length;hr<ol;hr++){const Un=Tn[hr];Dt.update(Un,Bt),Dt.bind(Un,Bt)}}return Bt}function Uu(L,q){L.ambientLightColor.needsUpdate=q,L.lightProbe.needsUpdate=q,L.directionalLights.needsUpdate=q,L.directionalLightShadows.needsUpdate=q,L.pointLights.needsUpdate=q,L.pointLightShadows.needsUpdate=q,L.spotLights.needsUpdate=q,L.spotLightShadows.needsUpdate=q,L.rectAreaLights.needsUpdate=q,L.hemisphereLights.needsUpdate=q}function Ou(L){return L.isMeshLambertMaterial||L.isMeshToonMaterial||L.isMeshPhongMaterial||L.isMeshStandardMaterial||L.isShadowMaterial||L.isShaderMaterial&&L.lights===!0}this.getActiveCubeFace=function(){return N},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(L,q,ee){D.get(L.texture).__webglTexture=q,D.get(L.depthTexture).__webglTexture=ee;const ne=D.get(L);ne.__hasExternalTextures=!0,ne.__autoAllocateDepthBuffer=ee===void 0,ne.__autoAllocateDepthBuffer||re.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ne.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(L,q){const ee=D.get(L);ee.__webglFramebuffer=q,ee.__useDefaultFramebuffer=q===void 0},this.setRenderTarget=function(L,q=0,ee=0){I=L,N=q,P=ee;let ne=!0,Q=null,Pe=!1,We=!1;if(L){const nt=D.get(L);nt.__useDefaultFramebuffer!==void 0?(_e.bindFramebuffer(V.FRAMEBUFFER,null),ne=!1):nt.__webglFramebuffer===void 0?C.setupRenderTarget(L):nt.__hasExternalTextures&&C.rebindTextures(L,D.get(L.texture).__webglTexture,D.get(L.depthTexture).__webglTexture);const rt=L.texture;(rt.isData3DTexture||rt.isDataArrayTexture||rt.isCompressedArrayTexture)&&(We=!0);const et=D.get(L).__webglFramebuffer;L.isWebGLCubeRenderTarget?(Array.isArray(et[q])?Q=et[q][ee]:Q=et[q],Pe=!0):L.samples>0&&C.useMultisampledRTT(L)===!1?Q=D.get(L).__webglMultisampledFramebuffer:Array.isArray(et)?Q=et[ee]:Q=et,b.copy(L.viewport),F.copy(L.scissor),X=L.scissorTest}else b.copy(j).multiplyScalar(ve).floor(),F.copy(ue).multiplyScalar(ve).floor(),X=Ae;if(_e.bindFramebuffer(V.FRAMEBUFFER,Q)&&ne&&_e.drawBuffers(L,Q),_e.viewport(b),_e.scissor(F),_e.setScissorTest(X),Pe){const nt=D.get(L.texture);V.framebufferTexture2D(V.FRAMEBUFFER,V.COLOR_ATTACHMENT0,V.TEXTURE_CUBE_MAP_POSITIVE_X+q,nt.__webglTexture,ee)}else if(We){const nt=D.get(L.texture),rt=q||0;V.framebufferTextureLayer(V.FRAMEBUFFER,V.COLOR_ATTACHMENT0,nt.__webglTexture,ee||0,rt)}z=-1},this.readRenderTargetPixels=function(L,q,ee,ne,Q,Pe,We){if(!(L&&L.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Qe=D.get(L).__webglFramebuffer;if(L.isWebGLCubeRenderTarget&&We!==void 0&&(Qe=Qe[We]),Qe){_e.bindFramebuffer(V.FRAMEBUFFER,Qe);try{const nt=L.texture,rt=nt.format,et=nt.type;if(rt!==Hn&&Et.convert(rt)!==V.getParameter(V.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const st=et===Ea&&(re.has("EXT_color_buffer_half_float")||re.has("EXT_color_buffer_float"));if(et!==Bi&&Et.convert(et)!==V.getParameter(V.IMPLEMENTATION_COLOR_READ_TYPE)&&et!==pi&&!st){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}q>=0&&q<=L.width-ne&&ee>=0&&ee<=L.height-Q&&V.readPixels(q,ee,ne,Q,Et.convert(rt),Et.convert(et),Pe)}finally{const nt=I!==null?D.get(I).__webglFramebuffer:null;_e.bindFramebuffer(V.FRAMEBUFFER,nt)}}},this.copyFramebufferToTexture=function(L,q,ee=0){const ne=Math.pow(2,-ee),Q=Math.floor(q.image.width*ne),Pe=Math.floor(q.image.height*ne);C.setTexture2D(q,0),V.copyTexSubImage2D(V.TEXTURE_2D,ee,0,0,L.x,L.y,Q,Pe),_e.unbindTexture()},this.copyTextureToTexture=function(L,q,ee,ne=0){const Q=q.image.width,Pe=q.image.height,We=Et.convert(ee.format),Qe=Et.convert(ee.type);C.setTexture2D(ee,0),V.pixelStorei(V.UNPACK_FLIP_Y_WEBGL,ee.flipY),V.pixelStorei(V.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ee.premultiplyAlpha),V.pixelStorei(V.UNPACK_ALIGNMENT,ee.unpackAlignment),q.isDataTexture?V.texSubImage2D(V.TEXTURE_2D,ne,L.x,L.y,Q,Pe,We,Qe,q.image.data):q.isCompressedTexture?V.compressedTexSubImage2D(V.TEXTURE_2D,ne,L.x,L.y,q.mipmaps[0].width,q.mipmaps[0].height,We,q.mipmaps[0].data):V.texSubImage2D(V.TEXTURE_2D,ne,L.x,L.y,We,Qe,q.image),ne===0&&ee.generateMipmaps&&V.generateMipmap(V.TEXTURE_2D),_e.unbindTexture()},this.copyTextureToTexture3D=function(L,q,ee,ne,Q=0){const Pe=Math.round(L.max.x-L.min.x),We=Math.round(L.max.y-L.min.y),Qe=L.max.z-L.min.z+1,nt=Et.convert(ne.format),rt=Et.convert(ne.type);let et;if(ne.isData3DTexture)C.setTexture3D(ne,0),et=V.TEXTURE_3D;else if(ne.isDataArrayTexture||ne.isCompressedArrayTexture)C.setTexture2DArray(ne,0),et=V.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}V.pixelStorei(V.UNPACK_FLIP_Y_WEBGL,ne.flipY),V.pixelStorei(V.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ne.premultiplyAlpha),V.pixelStorei(V.UNPACK_ALIGNMENT,ne.unpackAlignment);const st=V.getParameter(V.UNPACK_ROW_LENGTH),Ft=V.getParameter(V.UNPACK_IMAGE_HEIGHT),An=V.getParameter(V.UNPACK_SKIP_PIXELS),Wt=V.getParameter(V.UNPACK_SKIP_ROWS),gn=V.getParameter(V.UNPACK_SKIP_IMAGES),yt=ee.isCompressedTexture?ee.mipmaps[Q]:ee.image;V.pixelStorei(V.UNPACK_ROW_LENGTH,yt.width),V.pixelStorei(V.UNPACK_IMAGE_HEIGHT,yt.height),V.pixelStorei(V.UNPACK_SKIP_PIXELS,L.min.x),V.pixelStorei(V.UNPACK_SKIP_ROWS,L.min.y),V.pixelStorei(V.UNPACK_SKIP_IMAGES,L.min.z),ee.isDataTexture||ee.isData3DTexture?V.texSubImage3D(et,Q,q.x,q.y,q.z,Pe,We,Qe,nt,rt,yt.data):ne.isCompressedArrayTexture?V.compressedTexSubImage3D(et,Q,q.x,q.y,q.z,Pe,We,Qe,nt,yt.data):V.texSubImage3D(et,Q,q.x,q.y,q.z,Pe,We,Qe,nt,rt,yt),V.pixelStorei(V.UNPACK_ROW_LENGTH,st),V.pixelStorei(V.UNPACK_IMAGE_HEIGHT,Ft),V.pixelStorei(V.UNPACK_SKIP_PIXELS,An),V.pixelStorei(V.UNPACK_SKIP_ROWS,Wt),V.pixelStorei(V.UNPACK_SKIP_IMAGES,gn),Q===0&&ne.generateMipmaps&&V.generateMipmap(et),_e.unbindTexture()},this.initTexture=function(L){L.isCubeTexture?C.setTextureCube(L,0):L.isData3DTexture?C.setTexture3D(L,0):L.isDataArrayTexture||L.isCompressedArrayTexture?C.setTexture2DArray(L,0):C.setTexture2D(L,0),_e.unbindTexture()},this.resetState=function(){N=0,P=0,I=null,_e.reset(),_t.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Fi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===uu?"display-p3":"srgb",t.unpackColorSpace=bt.workingColorSpace===Wa?"display-p3":"srgb"}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class du{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Le(e),this.density=t}clone(){return new du(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class pu{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Le(e),this.near=t,this.far=n}clone(){return new pu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}let nu=class extends wt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new ni,this.environmentIntensity=1,this.environmentRotation=new ni,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}};class mu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Ia,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=ti()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return i_("THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ti()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ti()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Rn=new U;class ys{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Rn.fromBufferAttribute(this,t),Rn.applyMatrix4(e),this.setXYZ(t,Rn.x,Rn.y,Rn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Rn.fromBufferAttribute(this,t),Rn.applyNormalMatrix(e),this.setXYZ(t,Rn.x,Rn.y,Rn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Rn.fromBufferAttribute(this,t),Rn.transformDirection(e),this.setXYZ(t,Rn.x,Rn.y,Rn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=In(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ct(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=In(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=In(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=In(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=In(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array),s=ct(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Rt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new ys(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Zd extends mn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let to;const na=new U,no=new U,io=new U,ro=new he,ia=new he,x_=new $e,xc=new U,ra=new U,Mc=new U,zg=new he,df=new he,Bg=new he;class M_ extends wt{constructor(e=new Zd){if(super(),this.isSprite=!0,this.type="Sprite",to===void 0){to=new ht;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new mu(t,5);to.setIndex([0,1,2,0,2,3]),to.setAttribute("position",new ys(n,3,0,!1)),to.setAttribute("uv",new ys(n,2,3,!1))}this.geometry=to,this.material=e,this.center=new he(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),no.setFromMatrixScale(this.matrixWorld),x_.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),io.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&no.multiplyScalar(-io.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const l=this.center;Sc(xc.set(-.5,-.5,0),io,l,no,i,s),Sc(ra.set(.5,-.5,0),io,l,no,i,s),Sc(Mc.set(.5,.5,0),io,l,no,i,s),zg.set(0,0),df.set(1,0),Bg.set(1,1);let c=e.ray.intersectTriangle(xc,ra,Mc,!1,na);if(c===null&&(Sc(ra.set(-.5,.5,0),io,l,no,i,s),df.set(0,1),c=e.ray.intersectTriangle(xc,Mc,ra,!1,na),c===null))return;const u=e.ray.origin.distanceTo(na);u<e.near||u>e.far||t.push({distance:u,point:na.clone(),uv:ei.getInterpolation(na,xc,ra,Mc,zg,df,Bg,new he),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Sc(r,e,t,n,i,s){ro.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(ia.x=s*ro.x-i*ro.y,ia.y=i*ro.x+s*ro.y):ia.copy(ro),r.copy(e),r.x+=ia.x,r.y+=ia.y,r.applyMatrix4(x_)}const wc=new U,kg=new U;class S_ extends wt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){wc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(wc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){wc.setFromMatrixPosition(e.matrixWorld),kg.setFromMatrixPosition(this.matrixWorld);const n=wc.distanceTo(kg)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let l=t[i].distance;if(t[i].object.visible&&(l-=l*t[i].hysteresis),n>=l)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const l=n[i];t.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return t}}const Hg=new U,Vg=new Ct,Gg=new Ct,XA=new U,Wg=new $e,Ec=new U,pf=new En,Xg=new $e,mf=new Co;class w_ extends nn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Hf,this.bindMatrix=new $e,this.bindMatrixInverse=new $e,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Nn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Ec),this.boundingBox.expandByPoint(Ec)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new En),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Ec),this.boundingSphere.expandByPoint(Ec)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),pf.copy(this.boundingSphere),pf.applyMatrix4(i),e.ray.intersectsSphere(pf)!==!1&&(Xg.copy(i).invert(),mf.copy(e.ray).applyMatrix4(Xg),!(this.boundingBox!==null&&mf.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,mf)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Ct,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Hf?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Lv?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;Vg.fromBufferAttribute(i.attributes.skinIndex,e),Gg.fromBufferAttribute(i.attributes.skinWeight,e),Hg.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const l=Gg.getComponent(s);if(l!==0){const c=Vg.getComponent(s);Wg.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(XA.copy(Hg).applyMatrix4(Wg),l)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Jd extends wt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Pr extends Gt{constructor(e=null,t=1,n=1,i,s,l,c,u,h=fn,f=fn,p,m){super(null,l,c,u,h,f,i,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const qg=new $e,qA=new $e;class gu{constructor(e=[],t=[]){this.uuid=ti(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new $e)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new $e;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,l=e.length;s<l;s++){const c=e[s]?e[s].matrixWorld:qA;qg.multiplyMatrices(c,t[s]),qg.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new gu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Pr(t,e,e,Hn,pi);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let l=t[s];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),l=new Jd),this.bones.push(l),this.boneInverses.push(new $e().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const l=t[i];e.bones.push(l.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class Eo extends Rt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const so=new $e,Yg=new $e,Ac=[],jg=new Nn,YA=new $e,sa=new nn,oa=new En;class E_ extends nn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Eo(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,YA)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Nn),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,so),jg.copy(e.boundingBox).applyMatrix4(so),this.boundingBox.union(jg)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new En),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,so),oa.copy(e.boundingSphere).applyMatrix4(so),this.boundingSphere.union(oa)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,s=n.length+1,l=e*s+1;for(let c=0;c<n.length;c++)n[c]=i[l+c]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(sa.geometry=this.geometry,sa.material=this.material,sa.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),oa.copy(this.boundingSphere),oa.applyMatrix4(n),e.ray.intersectsSphere(oa)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,so),Yg.multiplyMatrices(n,so),sa.matrixWorld=Yg,sa.raycast(e,Ac);for(let l=0,c=Ac.length;l<c;l++){const u=Ac[l];u.instanceId=s,u.object=this,t.push(u)}Ac.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Eo(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new Pr(new Float32Array(i*this.count),i,this.count,Dd,pi));const s=this.morphTexture.source.data.data;let l=0;for(let h=0;h<n.length;h++)l+=n[h];const c=this.geometry.morphTargetsRelative?1:1-l,u=i*e;s[u]=c,s.set(n,u+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}}function jA(r,e){return r.z-e.z}function ZA(r,e){return e.z-r.z}class JA{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t){const n=this.pool,i=this.list;this.index>=n.length&&n.push({start:-1,count:-1,z:-1});const s=n[this.index];i.push(s),this.index++,s.start=e.start,s.count=e.count,s.z=t}reset(){this.list.length=0,this.index=0}}const oo="batchId",Tr=new $e,Zg=new $e,KA=new $e,Jg=new $e,gf=new Ya,Tc=new Nn,Qr=new En,aa=new U,vf=new JA,wn=new nn,bc=[];function QA(r,e,t=0){const n=e.itemSize;if(r.isInterleavedBufferAttribute||r.array.constructor!==e.array.constructor){const i=r.count;for(let s=0;s<i;s++)for(let l=0;l<n;l++)e.setComponent(s+t,l,r.getComponent(s,l))}else e.array.set(r.array,t*n);e.needsUpdate=!0}class A_ extends nn{get maxGeometryCount(){return this._maxGeometryCount}constructor(e,t,n=t*2,i){super(new ht,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawRanges=[],this._reservedRanges=[],this._visibility=[],this._active=[],this._bounds=[],this._maxGeometryCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._visibilityChanged=!0,this._matricesTexture=null,this._initMatricesTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxGeometryCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new Pr(t,e,e,Hn,pi);this._matricesTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxGeometryCount,s=this._maxIndexCount;if(this._geometryInitialized===!1){for(const c in e.attributes){const u=e.getAttribute(c),{array:h,itemSize:f,normalized:p}=u,m=new h.constructor(n*f),v=new Rt(m,f,p);t.setAttribute(c,v)}if(e.getIndex()!==null){const c=n>65536?new Uint32Array(s):new Uint16Array(s);t.setIndex(new Rt(c,1))}const l=i>65536?new Uint32Array(n):new Uint16Array(n);t.setAttribute(oo,new Rt(l,1)),this._geometryInitialized=!0}}_validateGeometry(e){if(e.getAttribute(oo))throw new Error(`BatchedMesh: Geometry cannot use attribute "${oo}"`);const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(n===oo)continue;if(!e.hasAttribute(n))throw new Error(`BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),s=t.getAttribute(n);if(i.itemSize!==s.itemSize||i.normalized!==s.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Nn);const e=this._geometryCount,t=this.boundingBox,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,Tr),this.getBoundingBoxAt(i,Tc).applyMatrix4(Tr),t.union(Tc))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new En);const e=this._geometryCount,t=this.boundingSphere,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,Tr),this.getBoundingSphereAt(i,Qr).applyMatrix4(Tr),t.union(Qr))}addGeometry(e,t=-1,n=-1){if(this._initializeGeometry(e),this._validateGeometry(e),this._geometryCount>=this._maxGeometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");const i={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let s=null;const l=this._reservedRanges,c=this._drawRanges,u=this._bounds;this._geometryCount!==0&&(s=l[l.length-1]),t===-1?i.vertexCount=e.getAttribute("position").count:i.vertexCount=t,s===null?i.vertexStart=0:i.vertexStart=s.vertexStart+s.vertexCount;const h=e.getIndex(),f=h!==null;if(f&&(n===-1?i.indexCount=h.count:i.indexCount=n,s===null?i.indexStart=0:i.indexStart=s.indexStart+s.indexCount),i.indexStart!==-1&&i.indexStart+i.indexCount>this._maxIndexCount||i.vertexStart+i.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const p=this._visibility,m=this._active,v=this._matricesTexture,y=this._matricesTexture.image.data;p.push(!0),m.push(!0);const S=this._geometryCount;this._geometryCount++,KA.toArray(y,S*16),v.needsUpdate=!0,l.push(i),c.push({start:f?i.indexStart:i.vertexStart,count:-1}),u.push({boxInitialized:!1,box:new Nn,sphereInitialized:!1,sphere:new En});const x=this.geometry.getAttribute(oo);for(let _=0;_<i.vertexCount;_++)x.setX(i.vertexStart+_,S);return x.needsUpdate=!0,this.setGeometryAt(S,e),S}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,s=n.getIndex(),l=t.getIndex(),c=this._reservedRanges[e];if(i&&l.count>c.indexCount||t.attributes.position.count>c.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const u=c.vertexStart,h=c.vertexCount;for(const v in n.attributes){if(v===oo)continue;const y=t.getAttribute(v),S=n.getAttribute(v);QA(y,S,u);const x=y.itemSize;for(let _=y.count,E=h;_<E;_++){const w=u+_;for(let T=0;T<x;T++)S.setComponent(w,T,0)}S.needsUpdate=!0,S.addUpdateRange(u*x,h*x)}if(i){const v=c.indexStart;for(let y=0;y<l.count;y++)s.setX(v+y,u+l.getX(y));for(let y=l.count,S=c.indexCount;y<S;y++)s.setX(v+y,u);s.needsUpdate=!0,s.addUpdateRange(v,c.indexCount)}const f=this._bounds[e];t.boundingBox!==null?(f.box.copy(t.boundingBox),f.boxInitialized=!0):f.boxInitialized=!1,t.boundingSphere!==null?(f.sphere.copy(t.boundingSphere),f.sphereInitialized=!0):f.sphereInitialized=!1;const p=this._drawRanges[e],m=t.getAttribute("position");return p.count=i?l.count:m.count,this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._active;return e>=t.length||t[e]===!1?this:(t[e]=!1,this._visibilityChanged=!0,this)}getBoundingBoxAt(e,t){if(this._active[e]===!1)return null;const i=this._bounds[e],s=i.box,l=this.geometry;if(i.boxInitialized===!1){s.makeEmpty();const c=l.index,u=l.attributes.position,h=this._drawRanges[e];for(let f=h.start,p=h.start+h.count;f<p;f++){let m=f;c&&(m=c.getX(m)),s.expandByPoint(aa.fromBufferAttribute(u,m))}i.boxInitialized=!0}return t.copy(s),t}getBoundingSphereAt(e,t){if(this._active[e]===!1)return null;const i=this._bounds[e],s=i.sphere,l=this.geometry;if(i.sphereInitialized===!1){s.makeEmpty(),this.getBoundingBoxAt(e,Tc),Tc.getCenter(s.center);const c=l.index,u=l.attributes.position,h=this._drawRanges[e];let f=0;for(let p=h.start,m=h.start+h.count;p<m;p++){let v=p;c&&(v=c.getX(v)),aa.fromBufferAttribute(u,v),f=Math.max(f,s.center.distanceToSquared(aa))}s.radius=Math.sqrt(f),i.sphereInitialized=!0}return t.copy(s),t}setMatrixAt(e,t){const n=this._active,i=this._matricesTexture,s=this._matricesTexture.image.data,l=this._geometryCount;return e>=l||n[e]===!1?this:(t.toArray(s,e*16),i.needsUpdate=!0,this)}getMatrixAt(e,t){const n=this._active,i=this._matricesTexture.image.data,s=this._geometryCount;return e>=s||n[e]===!1?null:t.fromArray(i,e*16)}setVisibleAt(e,t){const n=this._visibility,i=this._active,s=this._geometryCount;return e>=s||i[e]===!1||n[e]===t?this:(n[e]=t,this._visibilityChanged=!0,this)}getVisibleAt(e){const t=this._visibility,n=this._active,i=this._geometryCount;return e>=i||n[e]===!1?!1:t[e]}raycast(e,t){const n=this._visibility,i=this._active,s=this._drawRanges,l=this._geometryCount,c=this.matrixWorld,u=this.geometry;wn.material=this.material,wn.geometry.index=u.index,wn.geometry.attributes=u.attributes,wn.geometry.boundingBox===null&&(wn.geometry.boundingBox=new Nn),wn.geometry.boundingSphere===null&&(wn.geometry.boundingSphere=new En);for(let h=0;h<l;h++){if(!n[h]||!i[h])continue;const f=s[h];wn.geometry.setDrawRange(f.start,f.count),this.getMatrixAt(h,wn.matrixWorld).premultiply(c),this.getBoundingBoxAt(h,wn.geometry.boundingBox),this.getBoundingSphereAt(h,wn.geometry.boundingSphere),wn.raycast(e,bc);for(let p=0,m=bc.length;p<m;p++){const v=bc[p];v.object=this,v.batchId=h,t.push(v)}bc.length=0}wn.material=null,wn.geometry.index=null,wn.geometry.attributes={},wn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._drawRanges=e._drawRanges.map(t=>({...t})),this._reservedRanges=e._reservedRanges.map(t=>({...t})),this._visibility=e._visibility.slice(),this._active=e._active.slice(),this._bounds=e._bounds.map(t=>({boxInitialized:t.boxInitialized,box:t.box.clone(),sphereInitialized:t.sphereInitialized,sphere:t.sphere.clone()})),this._maxGeometryCount=e._maxGeometryCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.slice(),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this}onBeforeRender(e,t,n,i,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,u=this._active,h=this._visibility,f=this._multiDrawStarts,p=this._multiDrawCounts,m=this._drawRanges,v=this.perObjectFrustumCulled;v&&(Jg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),gf.setFromProjectionMatrix(Jg,e.coordinateSystem));let y=0;if(this.sortObjects){Zg.copy(this.matrixWorld).invert(),aa.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Zg);for(let _=0,E=h.length;_<E;_++)if(h[_]&&u[_]){this.getMatrixAt(_,Tr),this.getBoundingSphereAt(_,Qr).applyMatrix4(Tr);let w=!1;if(v&&(w=!gf.intersectsSphere(Qr)),!w){const T=aa.distanceTo(Qr.center);vf.push(m[_],T)}}const S=vf.list,x=this.customSort;x===null?S.sort(s.transparent?ZA:jA):x.call(this,S,n);for(let _=0,E=S.length;_<E;_++){const w=S[_];f[y]=w.start*c,p[y]=w.count,y++}vf.reset()}else for(let S=0,x=h.length;S<x;S++)if(h[S]&&u[S]){let _=!1;if(v&&(this.getMatrixAt(S,Tr),this.getBoundingSphereAt(S,Qr).applyMatrix4(Tr),_=!gf.intersectsSphere(Qr)),!_){const E=m[S];f[y]=E.start*c,p[y]=E.count,y++}}this._multiDrawCount=y,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,s,l){this.onBeforeRender(e,null,i,s,l)}}class Dn extends mn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Le(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Kg=new U,Qg=new U,$g=new $e,_f=new Co,Cc=new En;class Lr extends wt{constructor(e=new ht,t=new Dn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)Kg.fromBufferAttribute(t,i-1),Qg.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Kg.distanceTo(Qg);e.setAttribute("lineDistance",new ke(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Cc.copy(n.boundingSphere),Cc.applyMatrix4(i),Cc.radius+=s,e.ray.intersectsSphere(Cc)===!1)return;$g.copy(i).invert(),_f.copy(e.ray).applyMatrix4($g);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new U,f=new U,p=new U,m=new U,v=this.isLineSegments?2:1,y=n.index,x=n.attributes.position;if(y!==null){const _=Math.max(0,l.start),E=Math.min(y.count,l.start+l.count);for(let w=_,T=E-1;w<T;w+=v){const N=y.getX(w),P=y.getX(w+1);if(h.fromBufferAttribute(x,N),f.fromBufferAttribute(x,P),_f.distanceSqToSegment(h,f,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const z=e.ray.origin.distanceTo(m);z<e.near||z>e.far||t.push({distance:z,point:p.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,l.start),E=Math.min(x.count,l.start+l.count);for(let w=_,T=E-1;w<T;w+=v){if(h.fromBufferAttribute(x,w),f.fromBufferAttribute(x,w+1),_f.distanceSqToSegment(h,f,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const P=e.ray.origin.distanceTo(m);P<e.near||P>e.far||t.push({distance:P,point:p.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}const e0=new U,t0=new U;class Hi extends Lr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)e0.fromBufferAttribute(t,i),t0.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+e0.distanceTo(t0);e.setAttribute("lineDistance",new ke(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class T_ extends Lr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Kd extends mn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const n0=new $e,vd=new Co,Rc=new En,Pc=new U;class b_ extends wt{constructor(e=new ht,t=new Kd){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Rc.copy(n.boundingSphere),Rc.applyMatrix4(i),Rc.radius+=s,e.ray.intersectsSphere(Rc)===!1)return;n0.copy(i).invert(),vd.copy(e.ray).applyMatrix4(n0);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,l.start),v=Math.min(h.count,l.start+l.count);for(let y=m,S=v;y<S;y++){const x=h.getX(y);Pc.fromBufferAttribute(p,x),i0(Pc,x,u,i,e,t,this)}}else{const m=Math.max(0,l.start),v=Math.min(p.count,l.start+l.count);for(let y=m,S=v;y<S;y++)Pc.fromBufferAttribute(p,y),i0(Pc,y,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function i0(r,e,t,n,i,s,l){const c=vd.distanceSqToPoint(r);if(c<t){const u=new U;vd.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:l})}}class $A extends Gt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isVideoTexture=!0,this.minFilter=l!==void 0?l:tn,this.magFilter=s!==void 0?s:tn,this.generateMipmaps=!1;const f=this;function p(){f.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class eT extends Gt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=fn,this.minFilter=fn,this.generateMipmaps=!1,this.needsUpdate=!0}}class vu extends Gt{constructor(e,t,n,i,s,l,c,u,h,f,p,m){super(null,l,c,u,h,f,i,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class tT extends vu{constructor(e,t,n,i,s,l){super(e,t,n,s,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=di}}class nT extends vu{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,or),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class iT extends Gt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Ai{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let l=1;l<=e;l++)n=this.getPoint(l/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let l;t?l=t:l=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-l,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===l)return i/(s-1);const f=n[i],m=n[i+1]-f,v=(l-f)/m;return(i+v)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const l=this.getPoint(i),c=this.getPoint(s),u=t||(l.isVector2?new he:new U);return u.copy(c).sub(l).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new U,i=[],s=[],l=[],c=new U,u=new $e;for(let v=0;v<=e;v++){const y=v/e;i[v]=this.getTangentAt(y,new U)}s[0]=new U,l[0]=new U;let h=Number.MAX_VALUE;const f=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);f<=h&&(h=f,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),l[0].crossVectors(i[0],s[0]);for(let v=1;v<=e;v++){if(s[v]=s[v-1].clone(),l[v]=l[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(jt(i[v-1].dot(i[v]),-1,1));s[v].applyMatrix4(u.makeRotationAxis(c,y))}l[v].crossVectors(i[v],s[v])}if(t===!0){let v=Math.acos(jt(s[0].dot(s[e]),-1,1));v/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(v=-v);for(let y=1;y<=e;y++)s[y].applyMatrix4(u.makeRotationAxis(i[y],v*y)),l[y].crossVectors(i[y],s[y])}return{tangents:i,normals:s,binormals:l}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class _u extends Ai{constructor(e=0,t=0,n=1,i=1,s=0,l=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=l,this.aClockwise=c,this.aRotation=u}getPoint(e,t=new he){const n=t,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const l=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(l?s=0:s=i),this.aClockwise===!0&&!l&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const f=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,v=h-this.aY;u=m*f-v*p+this.aX,h=m*p+v*f+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class C_ extends _u{constructor(e,t,n,i,s,l){super(e,t,n,n,i,s,l),this.isArcCurve=!0,this.type="ArcCurve"}}function Qd(){let r=0,e=0,t=0,n=0;function i(s,l,c,u){r=s,e=c,t=-3*s+3*l-2*c-u,n=2*s-2*l+c+u}return{initCatmullRom:function(s,l,c,u,h){i(l,c,h*(c-s),h*(u-l))},initNonuniformCatmullRom:function(s,l,c,u,h,f,p){let m=(l-s)/h-(c-s)/(h+f)+(c-l)/f,v=(c-l)/f-(u-l)/(f+p)+(u-c)/p;m*=f,v*=f,i(l,c,m,v)},calc:function(s){const l=s*s,c=l*s;return r+e*s+t*l+n*c}}}const Ic=new U,yf=new Qd,xf=new Qd,Mf=new Qd;class R_ extends Ai{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new U){const n=t,i=this.points,s=i.length,l=(s-(this.closed?0:1))*e;let c=Math.floor(l),u=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,f;this.closed||c>0?h=i[(c-1)%s]:(Ic.subVectors(i[0],i[1]).add(i[0]),h=Ic);const p=i[c%s],m=i[(c+1)%s];if(this.closed||c+2<s?f=i[(c+2)%s]:(Ic.subVectors(i[s-1],i[s-2]).add(i[s-1]),f=Ic),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),v),S=Math.pow(p.distanceToSquared(m),v),x=Math.pow(m.distanceToSquared(f),v);S<1e-4&&(S=1),y<1e-4&&(y=S),x<1e-4&&(x=S),yf.initNonuniformCatmullRom(h.x,p.x,m.x,f.x,y,S,x),xf.initNonuniformCatmullRom(h.y,p.y,m.y,f.y,y,S,x),Mf.initNonuniformCatmullRom(h.z,p.z,m.z,f.z,y,S,x)}else this.curveType==="catmullrom"&&(yf.initCatmullRom(h.x,p.x,m.x,f.x,this.tension),xf.initCatmullRom(h.y,p.y,m.y,f.y,this.tension),Mf.initCatmullRom(h.z,p.z,m.z,f.z,this.tension));return n.set(yf.calc(u),xf.calc(u),Mf.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new U().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function r0(r,e,t,n,i){const s=(n-e)*.5,l=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+l)*u+(-3*t+3*n-2*s-l)*c+s*r+t}function rT(r,e){const t=1-r;return t*t*e}function sT(r,e){return 2*(1-r)*r*e}function oT(r,e){return r*r*e}function va(r,e,t,n){return rT(r,e)+sT(r,t)+oT(r,n)}function aT(r,e){const t=1-r;return t*t*t*e}function lT(r,e){const t=1-r;return 3*t*t*r*e}function cT(r,e){return 3*(1-r)*r*r*e}function uT(r,e){return r*r*r*e}function _a(r,e,t,n,i){return aT(r,e)+lT(r,t)+cT(r,n)+uT(r,i)}class $d extends Ai{constructor(e=new he,t=new he,n=new he,i=new he){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new he){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(_a(e,i.x,s.x,l.x,c.x),_a(e,i.y,s.y,l.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class P_ extends Ai{constructor(e=new U,t=new U,n=new U,i=new U){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new U){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(_a(e,i.x,s.x,l.x,c.x),_a(e,i.y,s.y,l.y,c.y),_a(e,i.z,s.z,l.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ep extends Ai{constructor(e=new he,t=new he){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new he){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new he){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class I_ extends Ai{constructor(e=new U,t=new U){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new U){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new U){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class tp extends Ai{constructor(e=new he,t=new he,n=new he){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new he){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(va(e,i.x,s.x,l.x),va(e,i.y,s.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class np extends Ai{constructor(e=new U,t=new U,n=new U){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new U){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(va(e,i.x,s.x,l.x),va(e,i.y,s.y,l.y),va(e,i.z,s.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ip extends Ai{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new he){const n=t,i=this.points,s=(i.length-1)*e,l=Math.floor(s),c=s-l,u=i[l===0?l:l-1],h=i[l],f=i[l>i.length-2?i.length-1:l+1],p=i[l>i.length-3?i.length-1:l+2];return n.set(r0(c,u.x,h.x,f.x,p.x),r0(c,u.y,h.y,f.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new he().fromArray(i))}return this}}var iu=Object.freeze({__proto__:null,ArcCurve:C_,CatmullRomCurve3:R_,CubicBezierCurve:$d,CubicBezierCurve3:P_,EllipseCurve:_u,LineCurve:ep,LineCurve3:I_,QuadraticBezierCurve:tp,QuadraticBezierCurve3:np,SplineCurve:ip});class L_ extends Ai{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new iu[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const l=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-l/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const l=s[i],c=l.isEllipseCurve?e*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?e*l.points.length:e,u=l.getPoints(c);for(let h=0;h<u.length;h++){const f=u[h];n&&n.equals(f)||(t.push(f),n=f)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new iu[i.type]().fromJSON(i))}return this}}class Da extends L_{constructor(e){super(),this.type="Path",this.currentPoint=new he,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new ep(this.currentPoint.clone(),new he(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new tp(this.currentPoint.clone(),new he(e,t),new he(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,l){const c=new $d(this.currentPoint.clone(),new he(e,t),new he(n,i),new he(s,l));return this.curves.push(c),this.currentPoint.set(s,l),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new ip(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,l),this}absarc(e,t,n,i,s,l){return this.absellipse(e,t,n,n,i,s,l),this}ellipse(e,t,n,i,s,l,c,u){const h=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(e+h,t+f,n,i,s,l,c,u),this}absellipse(e,t,n,i,s,l,c,u){const h=new _u(e,t,n,i,s,l,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const f=h.getPoint(1);return this.currentPoint.copy(f),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class ja extends ht{constructor(e=[new he(0,-.5),new he(.5,0),new he(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=jt(i,0,Math.PI*2);const s=[],l=[],c=[],u=[],h=[],f=1/t,p=new U,m=new he,v=new U,y=new U,S=new U;let x=0,_=0;for(let E=0;E<=e.length-1;E++)switch(E){case 0:x=e[E+1].x-e[E].x,_=e[E+1].y-e[E].y,v.x=_*1,v.y=-x,v.z=_*0,S.copy(v),v.normalize(),u.push(v.x,v.y,v.z);break;case e.length-1:u.push(S.x,S.y,S.z);break;default:x=e[E+1].x-e[E].x,_=e[E+1].y-e[E].y,v.x=_*1,v.y=-x,v.z=_*0,y.copy(v),v.x+=S.x,v.y+=S.y,v.z+=S.z,v.normalize(),u.push(v.x,v.y,v.z),S.copy(y)}for(let E=0;E<=t;E++){const w=n+E*f*i,T=Math.sin(w),N=Math.cos(w);for(let P=0;P<=e.length-1;P++){p.x=e[P].x*T,p.y=e[P].y,p.z=e[P].x*N,l.push(p.x,p.y,p.z),m.x=E/t,m.y=P/(e.length-1),c.push(m.x,m.y);const I=u[3*P+0]*T,z=u[3*P+1],R=u[3*P+0]*N;h.push(I,z,R)}}for(let E=0;E<t;E++)for(let w=0;w<e.length-1;w++){const T=w+E*e.length,N=T,P=T+e.length,I=T+e.length+1,z=T+1;s.push(N,P,z),s.push(I,z,P)}this.setIndex(s),this.setAttribute("position",new ke(l,3)),this.setAttribute("uv",new ke(c,2)),this.setAttribute("normal",new ke(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ja(e.points,e.segments,e.phiStart,e.phiLength)}}class yu extends ja{constructor(e=1,t=1,n=4,i=8){const s=new Da;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new yu(e.radius,e.length,e.capSegments,e.radialSegments)}}class xu extends ht{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],l=[],c=[],u=[],h=new U,f=new he;l.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const v=n+p/t*i;h.x=e*Math.cos(v),h.y=e*Math.sin(v),l.push(h.x,h.y,h.z),c.push(0,0,1),f.x=(l[m]/e+1)/2,f.y=(l[m+1]/e+1)/2,u.push(f.x,f.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new ke(l,3)),this.setAttribute("normal",new ke(c,3)),this.setAttribute("uv",new ke(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xu(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Io extends ht{constructor(e=1,t=1,n=1,i=32,s=1,l=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:l,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const f=[],p=[],m=[],v=[];let y=0;const S=[],x=n/2;let _=0;E(),l===!1&&(e>0&&w(!0),t>0&&w(!1)),this.setIndex(f),this.setAttribute("position",new ke(p,3)),this.setAttribute("normal",new ke(m,3)),this.setAttribute("uv",new ke(v,2));function E(){const T=new U,N=new U;let P=0;const I=(t-e)/n;for(let z=0;z<=s;z++){const R=[],b=z/s,F=b*(t-e)+e;for(let X=0;X<=i;X++){const H=X/i,Z=H*u+c,$=Math.sin(Z),ae=Math.cos(Z);N.x=F*$,N.y=-b*n+x,N.z=F*ae,p.push(N.x,N.y,N.z),T.set($,I,ae).normalize(),m.push(T.x,T.y,T.z),v.push(H,1-b),R.push(y++)}S.push(R)}for(let z=0;z<i;z++)for(let R=0;R<s;R++){const b=S[R][z],F=S[R+1][z],X=S[R+1][z+1],H=S[R][z+1];f.push(b,F,H),f.push(F,X,H),P+=6}h.addGroup(_,P,0),_+=P}function w(T){const N=y,P=new he,I=new U;let z=0;const R=T===!0?e:t,b=T===!0?1:-1;for(let X=1;X<=i;X++)p.push(0,x*b,0),m.push(0,b,0),v.push(.5,.5),y++;const F=y;for(let X=0;X<=i;X++){const Z=X/i*u+c,$=Math.cos(Z),ae=Math.sin(Z);I.x=R*ae,I.y=x*b,I.z=R*$,p.push(I.x,I.y,I.z),m.push(0,b,0),P.x=$*.5+.5,P.y=ae*.5*b+.5,v.push(P.x,P.y),y++}for(let X=0;X<i;X++){const H=N+X,Z=F+X;T===!0?f.push(Z,Z+1,H):f.push(Z+1,Z,H),z+=3}h.addGroup(_,z,T===!0?1:2),_+=z}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Io(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Mu extends Io{constructor(e=1,t=1,n=32,i=1,s=!1,l=0,c=Math.PI*2){super(0,e,t,n,i,s,l,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:l,thetaLength:c}}static fromJSON(e){return new Mu(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ur extends ht{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],l=[];c(i),h(n),f(),this.setAttribute("position",new ke(s,3)),this.setAttribute("normal",new ke(s.slice(),3)),this.setAttribute("uv",new ke(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const w=new U,T=new U,N=new U;for(let P=0;P<t.length;P+=3)v(t[P+0],w),v(t[P+1],T),v(t[P+2],N),u(w,T,N,E)}function u(E,w,T,N){const P=N+1,I=[];for(let z=0;z<=P;z++){I[z]=[];const R=E.clone().lerp(T,z/P),b=w.clone().lerp(T,z/P),F=P-z;for(let X=0;X<=F;X++)X===0&&z===P?I[z][X]=R:I[z][X]=R.clone().lerp(b,X/F)}for(let z=0;z<P;z++)for(let R=0;R<2*(P-z)-1;R++){const b=Math.floor(R/2);R%2===0?(m(I[z][b+1]),m(I[z+1][b]),m(I[z][b])):(m(I[z][b+1]),m(I[z+1][b+1]),m(I[z+1][b]))}}function h(E){const w=new U;for(let T=0;T<s.length;T+=3)w.x=s[T+0],w.y=s[T+1],w.z=s[T+2],w.normalize().multiplyScalar(E),s[T+0]=w.x,s[T+1]=w.y,s[T+2]=w.z}function f(){const E=new U;for(let w=0;w<s.length;w+=3){E.x=s[w+0],E.y=s[w+1],E.z=s[w+2];const T=x(E)/2/Math.PI+.5,N=_(E)/Math.PI+.5;l.push(T,1-N)}y(),p()}function p(){for(let E=0;E<l.length;E+=6){const w=l[E+0],T=l[E+2],N=l[E+4],P=Math.max(w,T,N),I=Math.min(w,T,N);P>.9&&I<.1&&(w<.2&&(l[E+0]+=1),T<.2&&(l[E+2]+=1),N<.2&&(l[E+4]+=1))}}function m(E){s.push(E.x,E.y,E.z)}function v(E,w){const T=E*3;w.x=e[T+0],w.y=e[T+1],w.z=e[T+2]}function y(){const E=new U,w=new U,T=new U,N=new U,P=new he,I=new he,z=new he;for(let R=0,b=0;R<s.length;R+=9,b+=6){E.set(s[R+0],s[R+1],s[R+2]),w.set(s[R+3],s[R+4],s[R+5]),T.set(s[R+6],s[R+7],s[R+8]),P.set(l[b+0],l[b+1]),I.set(l[b+2],l[b+3]),z.set(l[b+4],l[b+5]),N.copy(E).add(w).add(T).divideScalar(3);const F=x(N);S(P,b+0,E,F),S(I,b+2,w,F),S(z,b+4,T,F)}}function S(E,w,T,N){N<0&&E.x===1&&(l[w]=E.x-1),T.x===0&&T.z===0&&(l[w]=N/2/Math.PI+.5)}function x(E){return Math.atan2(E.z,-E.x)}function _(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ur(e.vertices,e.indices,e.radius,e.details)}}class Su extends Ur{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,l,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Su(e.radius,e.detail)}}const Lc=new U,Nc=new U,Sf=new U,Dc=new ei;class N_ extends ht{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(ms*t),l=e.getIndex(),c=e.getAttribute("position"),u=l?l.count:c.count,h=[0,0,0],f=["a","b","c"],p=new Array(3),m={},v=[];for(let y=0;y<u;y+=3){l?(h[0]=l.getX(y),h[1]=l.getX(y+1),h[2]=l.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:S,b:x,c:_}=Dc;if(S.fromBufferAttribute(c,h[0]),x.fromBufferAttribute(c,h[1]),_.fromBufferAttribute(c,h[2]),Dc.getNormal(Sf),p[0]=`${Math.round(S.x*i)},${Math.round(S.y*i)},${Math.round(S.z*i)}`,p[1]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,p[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let E=0;E<3;E++){const w=(E+1)%3,T=p[E],N=p[w],P=Dc[f[E]],I=Dc[f[w]],z=`${T}_${N}`,R=`${N}_${T}`;R in m&&m[R]?(Sf.dot(m[R].normal)<=s&&(v.push(P.x,P.y,P.z),v.push(I.x,I.y,I.z)),m[R]=null):z in m||(m[z]={index0:h[E],index1:h[w],normal:Sf.clone()})}}for(const y in m)if(m[y]){const{index0:S,index1:x}=m[y];Lc.fromBufferAttribute(c,S),Nc.fromBufferAttribute(c,x),v.push(Lc.x,Lc.y,Lc.z),v.push(Nc.x,Nc.y,Nc.z)}this.setAttribute("position",new ke(v,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class vs extends Da{constructor(e){super(e),this.uuid=ti(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Da().fromJSON(i))}return this}}const hT={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=D_(r,0,i,t,!0);const l=[];if(!s||s.next===s.prev)return l;let c,u,h,f,p,m,v;if(n&&(s=gT(r,e,s,t)),r.length>80*t){c=h=r[0],u=f=r[1];for(let y=t;y<i;y+=t)p=r[y],m=r[y+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>f&&(f=m);v=Math.max(h-c,f-u),v=v!==0?32767/v:0}return Ua(s,l,t,c,u,v,0),l}};function D_(r,e,t,n,i){let s,l;if(i===bT(r,e,t,n)>0)for(s=e;s<t;s+=n)l=s0(s,r[s],r[s+1],l);else for(s=t-n;s>=e;s-=n)l=s0(s,r[s],r[s+1],l);return l&&wu(l,l.next)&&(Fa(l),l=l.next),l}function xs(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(wu(t,t.next)||Vt(t.prev,t,t.next)===0)){if(Fa(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Ua(r,e,t,n,i,s,l){if(!r)return;!l&&s&&MT(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?dT(r,n,i,s):fT(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),Fa(r),r=h.next,c=h.next;continue}if(r=h,r===c){l?l===1?(r=pT(xs(r),e,t),Ua(r,e,t,n,i,s,2)):l===2&&mT(r,e,t,n,i,s):Ua(xs(r),e,t,n,i,s,1);break}}}function fT(r){const e=r.prev,t=r,n=r.next;if(Vt(e,t,n)>=0)return!1;const i=e.x,s=t.x,l=n.x,c=e.y,u=t.y,h=n.y,f=i<s?i<l?i:l:s<l?s:l,p=c<u?c<h?c:h:u<h?u:h,m=i>s?i>l?i:l:s>l?s:l,v=c>u?c>h?c:h:u>h?u:h;let y=n.next;for(;y!==e;){if(y.x>=f&&y.x<=m&&y.y>=p&&y.y<=v&&vo(i,c,s,u,l,h,y.x,y.y)&&Vt(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function dT(r,e,t,n){const i=r.prev,s=r,l=r.next;if(Vt(i,s,l)>=0)return!1;const c=i.x,u=s.x,h=l.x,f=i.y,p=s.y,m=l.y,v=c<u?c<h?c:h:u<h?u:h,y=f<p?f<m?f:m:p<m?p:m,S=c>u?c>h?c:h:u>h?u:h,x=f>p?f>m?f:m:p>m?p:m,_=_d(v,y,e,t,n),E=_d(S,x,e,t,n);let w=r.prevZ,T=r.nextZ;for(;w&&w.z>=_&&T&&T.z<=E;){if(w.x>=v&&w.x<=S&&w.y>=y&&w.y<=x&&w!==i&&w!==l&&vo(c,f,u,p,h,m,w.x,w.y)&&Vt(w.prev,w,w.next)>=0||(w=w.prevZ,T.x>=v&&T.x<=S&&T.y>=y&&T.y<=x&&T!==i&&T!==l&&vo(c,f,u,p,h,m,T.x,T.y)&&Vt(T.prev,T,T.next)>=0))return!1;T=T.nextZ}for(;w&&w.z>=_;){if(w.x>=v&&w.x<=S&&w.y>=y&&w.y<=x&&w!==i&&w!==l&&vo(c,f,u,p,h,m,w.x,w.y)&&Vt(w.prev,w,w.next)>=0)return!1;w=w.prevZ}for(;T&&T.z<=E;){if(T.x>=v&&T.x<=S&&T.y>=y&&T.y<=x&&T!==i&&T!==l&&vo(c,f,u,p,h,m,T.x,T.y)&&Vt(T.prev,T,T.next)>=0)return!1;T=T.nextZ}return!0}function pT(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!wu(i,s)&&U_(i,n,n.next,s)&&Oa(i,s)&&Oa(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),Fa(n),Fa(n.next),n=r=s),n=n.next}while(n!==r);return xs(n)}function mT(r,e,t,n,i,s){let l=r;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&ET(l,c)){let u=O_(l,c);l=xs(l,l.next),u=xs(u,u.next),Ua(l,e,t,n,i,s,0),Ua(u,e,t,n,i,s,0);return}c=c.next}l=l.next}while(l!==r)}function gT(r,e,t,n){const i=[];let s,l,c,u,h;for(s=0,l=e.length;s<l;s++)c=e[s]*n,u=s<l-1?e[s+1]*n:r.length,h=D_(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(wT(h));for(i.sort(vT),s=0;s<i.length;s++)t=_T(i[s],t);return t}function vT(r,e){return r.x-e.x}function _T(r,e){const t=yT(r,e);if(!t)return e;const n=O_(t,r);return xs(n,n.next),xs(t,t.next)}function yT(r,e){let t=e,n=-1/0,i;const s=r.x,l=r.y;do{if(l<=t.y&&l>=t.next.y&&t.next.y!==t.y){const m=t.x+(l-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=s&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let f=1/0,p;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&vo(l<h?s:n,l,u,h,l<h?n:s,l,t.x,t.y)&&(p=Math.abs(l-t.y)/(s-t.x),Oa(t,r)&&(p<f||p===f&&(t.x>i.x||t.x===i.x&&xT(i,t)))&&(i=t,f=p)),t=t.next;while(t!==c);return i}function xT(r,e){return Vt(r.prev,r,e.prev)<0&&Vt(e.next,r,r.next)<0}function MT(r,e,t,n){let i=r;do i.z===0&&(i.z=_d(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,ST(i)}function ST(r){let e,t,n,i,s,l,c,u,h=1;do{for(t=r,r=null,s=null,l=0;t;){for(l++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(l>1);return r}function _d(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function wT(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function vo(r,e,t,n,i,s,l,c){return(i-l)*(e-c)>=(r-l)*(s-c)&&(r-l)*(n-c)>=(t-l)*(e-c)&&(t-l)*(s-c)>=(i-l)*(n-c)}function ET(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!AT(r,e)&&(Oa(r,e)&&Oa(e,r)&&TT(r,e)&&(Vt(r.prev,r,e.prev)||Vt(r,e.prev,e))||wu(r,e)&&Vt(r.prev,r,r.next)>0&&Vt(e.prev,e,e.next)>0)}function Vt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function wu(r,e){return r.x===e.x&&r.y===e.y}function U_(r,e,t,n){const i=Oc(Vt(r,e,t)),s=Oc(Vt(r,e,n)),l=Oc(Vt(t,n,r)),c=Oc(Vt(t,n,e));return!!(i!==s&&l!==c||i===0&&Uc(r,t,e)||s===0&&Uc(r,n,e)||l===0&&Uc(t,r,n)||c===0&&Uc(t,e,n))}function Uc(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Oc(r){return r>0?1:r<0?-1:0}function AT(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&U_(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Oa(r,e){return Vt(r.prev,r,r.next)<0?Vt(r,e,r.next)>=0&&Vt(r,r.prev,e)>=0:Vt(r,e,r.prev)<0||Vt(r,r.next,e)<0}function TT(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function O_(r,e){const t=new yd(r.i,r.x,r.y),n=new yd(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function s0(r,e,t,n){const i=new yd(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Fa(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function yd(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function bT(r,e,t,n){let i=0;for(let s=e,l=t-n;s<t;s+=n)i+=(r[l]-r[s])*(r[s+1]+r[l+1]),l=s;return i}class ki{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return ki.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];o0(e),a0(n,e);let l=e.length;t.forEach(o0);for(let u=0;u<t.length;u++)i.push(l),l+=t[u].length,a0(n,t[u]);const c=hT.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function o0(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function a0(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Eu extends ht{constructor(e=new vs([new he(.5,.5),new he(-.5,.5),new he(-.5,-.5),new he(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];l(h)}this.setAttribute("position",new ke(i,3)),this.setAttribute("uv",new ke(s,2)),this.computeVertexNormals();function l(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,f=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,v=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:v-.1,S=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,E=t.UVGenerator!==void 0?t.UVGenerator:CT;let w,T=!1,N,P,I,z;_&&(w=_.getSpacedPoints(f),T=!0,m=!1,N=_.computeFrenetFrames(f,!1),P=new U,I=new U,z=new U),m||(x=0,v=0,y=0,S=0);const R=c.extractPoints(h);let b=R.shape;const F=R.holes;if(!ki.isClockWise(b)){b=b.reverse();for(let le=0,re=F.length;le<re;le++){const ye=F[le];ki.isClockWise(ye)&&(F[le]=ye.reverse())}}const H=ki.triangulateShape(b,F),Z=b;for(let le=0,re=F.length;le<re;le++){const ye=F[le];b=b.concat(ye)}function $(le,re,ye){return re||console.error("THREE.ExtrudeGeometry: vec does not exist"),le.clone().addScaledVector(re,ye)}const ae=b.length,ve=H.length;function k(le,re,ye){let _e,xe,D;const C=le.x-re.x,Y=le.y-re.y,se=ye.x-le.x,ce=ye.y-le.y,pe=C*C+Y*Y,qe=C*ce-Y*se;if(Math.abs(qe)>Number.EPSILON){const me=Math.sqrt(pe),He=Math.sqrt(se*se+ce*ce),Ze=re.x-Y/me,Se=re.y+C/me,De=ye.x-ce/He,it=ye.y+se/He,ze=((De-Ze)*ce-(it-Se)*se)/(C*ce-Y*se);_e=Ze+C*ze-le.x,xe=Se+Y*ze-le.y;const Be=_e*_e+xe*xe;if(Be<=2)return new he(_e,xe);D=Math.sqrt(Be/2)}else{let me=!1;C>Number.EPSILON?se>Number.EPSILON&&(me=!0):C<-Number.EPSILON?se<-Number.EPSILON&&(me=!0):Math.sign(Y)===Math.sign(ce)&&(me=!0),me?(_e=-Y,xe=C,D=Math.sqrt(pe)):(_e=C,xe=Y,D=Math.sqrt(pe/2))}return new he(_e/D,xe/D)}const K=[];for(let le=0,re=Z.length,ye=re-1,_e=le+1;le<re;le++,ye++,_e++)ye===re&&(ye=0),_e===re&&(_e=0),K[le]=k(Z[le],Z[ye],Z[_e]);const j=[];let ue,Ae=K.concat();for(let le=0,re=F.length;le<re;le++){const ye=F[le];ue=[];for(let _e=0,xe=ye.length,D=xe-1,C=_e+1;_e<xe;_e++,D++,C++)D===xe&&(D=0),C===xe&&(C=0),ue[_e]=k(ye[_e],ye[D],ye[C]);j.push(ue),Ae=Ae.concat(ue)}for(let le=0;le<x;le++){const re=le/x,ye=v*Math.cos(re*Math.PI/2),_e=y*Math.sin(re*Math.PI/2)+S;for(let xe=0,D=Z.length;xe<D;xe++){const C=$(Z[xe],K[xe],_e);Me(C.x,C.y,-ye)}for(let xe=0,D=F.length;xe<D;xe++){const C=F[xe];ue=j[xe];for(let Y=0,se=C.length;Y<se;Y++){const ce=$(C[Y],ue[Y],_e);Me(ce.x,ce.y,-ye)}}}const Ne=y+S;for(let le=0;le<ae;le++){const re=m?$(b[le],Ae[le],Ne):b[le];T?(I.copy(N.normals[0]).multiplyScalar(re.x),P.copy(N.binormals[0]).multiplyScalar(re.y),z.copy(w[0]).add(I).add(P),Me(z.x,z.y,z.z)):Me(re.x,re.y,0)}for(let le=1;le<=f;le++)for(let re=0;re<ae;re++){const ye=m?$(b[re],Ae[re],Ne):b[re];T?(I.copy(N.normals[le]).multiplyScalar(ye.x),P.copy(N.binormals[le]).multiplyScalar(ye.y),z.copy(w[le]).add(I).add(P),Me(z.x,z.y,z.z)):Me(ye.x,ye.y,p/f*le)}for(let le=x-1;le>=0;le--){const re=le/x,ye=v*Math.cos(re*Math.PI/2),_e=y*Math.sin(re*Math.PI/2)+S;for(let xe=0,D=Z.length;xe<D;xe++){const C=$(Z[xe],K[xe],_e);Me(C.x,C.y,p+ye)}for(let xe=0,D=F.length;xe<D;xe++){const C=F[xe];ue=j[xe];for(let Y=0,se=C.length;Y<se;Y++){const ce=$(C[Y],ue[Y],_e);T?Me(ce.x,ce.y+w[f-1].y,w[f-1].x+ye):Me(ce.x,ce.y,p+ye)}}}te(),ge();function te(){const le=i.length/3;if(m){let re=0,ye=ae*re;for(let _e=0;_e<ve;_e++){const xe=H[_e];je(xe[2]+ye,xe[1]+ye,xe[0]+ye)}re=f+x*2,ye=ae*re;for(let _e=0;_e<ve;_e++){const xe=H[_e];je(xe[0]+ye,xe[1]+ye,xe[2]+ye)}}else{for(let re=0;re<ve;re++){const ye=H[re];je(ye[2],ye[1],ye[0])}for(let re=0;re<ve;re++){const ye=H[re];je(ye[0]+ae*f,ye[1]+ae*f,ye[2]+ae*f)}}n.addGroup(le,i.length/3-le,0)}function ge(){const le=i.length/3;let re=0;be(Z,re),re+=Z.length;for(let ye=0,_e=F.length;ye<_e;ye++){const xe=F[ye];be(xe,re),re+=xe.length}n.addGroup(le,i.length/3-le,1)}function be(le,re){let ye=le.length;for(;--ye>=0;){const _e=ye;let xe=ye-1;xe<0&&(xe=le.length-1);for(let D=0,C=f+x*2;D<C;D++){const Y=ae*D,se=ae*(D+1),ce=re+_e+Y,pe=re+xe+Y,qe=re+xe+se,me=re+_e+se;tt(ce,pe,qe,me)}}}function Me(le,re,ye){u.push(le),u.push(re),u.push(ye)}function je(le,re,ye){Fe(le),Fe(re),Fe(ye);const _e=i.length/3,xe=E.generateTopUV(n,i,_e-3,_e-2,_e-1);V(xe[0]),V(xe[1]),V(xe[2])}function tt(le,re,ye,_e){Fe(le),Fe(re),Fe(_e),Fe(re),Fe(ye),Fe(_e);const xe=i.length/3,D=E.generateSideWallUV(n,i,xe-6,xe-3,xe-2,xe-1);V(D[0]),V(D[1]),V(D[3]),V(D[1]),V(D[2]),V(D[3])}function Fe(le){i.push(u[le*3+0]),i.push(u[le*3+1]),i.push(u[le*3+2])}function V(le){s.push(le.x),s.push(le.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return RT(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,l=e.shapes.length;s<l;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new iu[i.type]().fromJSON(i)),new Eu(n,e.options)}}const CT={generateTopUV:function(r,e,t,n,i){const s=e[t*3],l=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],f=e[i*3+1];return[new he(s,l),new he(c,u),new he(h,f)]},generateSideWallUV:function(r,e,t,n,i,s){const l=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],f=e[n*3+1],p=e[n*3+2],m=e[i*3],v=e[i*3+1],y=e[i*3+2],S=e[s*3],x=e[s*3+1],_=e[s*3+2];return Math.abs(c-f)<Math.abs(l-h)?[new he(l,1-u),new he(h,1-p),new he(m,1-y),new he(S,1-_)]:[new he(c,1-u),new he(f,1-p),new he(v,1-y),new he(x,1-_)]}};function RT(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Au extends Ur{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Au(e.radius,e.detail)}}class Za extends Ur{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Za(e.radius,e.detail)}}class Tu extends ht{constructor(e=.5,t=1,n=32,i=1,s=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],f=[];let p=e;const m=(t-e)/i,v=new U,y=new he;for(let S=0;S<=i;S++){for(let x=0;x<=n;x++){const _=s+x/n*l;v.x=p*Math.cos(_),v.y=p*Math.sin(_),u.push(v.x,v.y,v.z),h.push(0,0,1),y.x=(v.x/t+1)/2,y.y=(v.y/t+1)/2,f.push(y.x,y.y)}p+=m}for(let S=0;S<i;S++){const x=S*(n+1);for(let _=0;_<n;_++){const E=_+x,w=E,T=E+n+1,N=E+n+2,P=E+1;c.push(w,T,P),c.push(T,N,P)}}this.setIndex(c),this.setAttribute("position",new ke(u,3)),this.setAttribute("normal",new ke(h,3)),this.setAttribute("uv",new ke(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Tu(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class bu extends ht{constructor(e=new vs([new he(0,.5),new he(-.5,-.5),new he(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],l=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let f=0;f<e.length;f++)h(e[f]),this.addGroup(c,u,f),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new ke(i,3)),this.setAttribute("normal",new ke(s,3)),this.setAttribute("uv",new ke(l,2));function h(f){const p=i.length/3,m=f.extractPoints(t);let v=m.shape;const y=m.holes;ki.isClockWise(v)===!1&&(v=v.reverse());for(let x=0,_=y.length;x<_;x++){const E=y[x];ki.isClockWise(E)===!0&&(y[x]=E.reverse())}const S=ki.triangulateShape(v,y);for(let x=0,_=y.length;x<_;x++){const E=y[x];v=v.concat(E)}for(let x=0,_=v.length;x<_;x++){const E=v[x];i.push(E.x,E.y,0),s.push(0,0,1),l.push(E.x,E.y)}for(let x=0,_=S.length;x<_;x++){const E=S[x],w=E[0]+p,T=E[1]+p,N=E[2]+p;n.push(w,T,N),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return PT(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const l=t[e.shapes[i]];n.push(l)}return new bu(n,e.curveSegments)}}function PT(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class Ja extends ht{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:l,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(l+c,Math.PI);let h=0;const f=[],p=new U,m=new U,v=[],y=[],S=[],x=[];for(let _=0;_<=n;_++){const E=[],w=_/n;let T=0;_===0&&l===0?T=.5/t:_===n&&u===Math.PI&&(T=-.5/t);for(let N=0;N<=t;N++){const P=N/t;p.x=-e*Math.cos(i+P*s)*Math.sin(l+w*c),p.y=e*Math.cos(l+w*c),p.z=e*Math.sin(i+P*s)*Math.sin(l+w*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),S.push(m.x,m.y,m.z),x.push(P+T,1-w),E.push(h++)}f.push(E)}for(let _=0;_<n;_++)for(let E=0;E<t;E++){const w=f[_][E+1],T=f[_][E],N=f[_+1][E],P=f[_+1][E+1];(_!==0||l>0)&&v.push(w,T,P),(_!==n-1||u<Math.PI)&&v.push(T,N,P)}this.setIndex(v),this.setAttribute("position",new ke(y,3)),this.setAttribute("normal",new ke(S,3)),this.setAttribute("uv",new ke(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ja(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Cu extends Ur{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Cu(e.radius,e.detail)}}class Ru extends ht{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],u=[],h=[],f=new U,p=new U,m=new U;for(let v=0;v<=n;v++)for(let y=0;y<=i;y++){const S=y/i*s,x=v/n*Math.PI*2;p.x=(e+t*Math.cos(x))*Math.cos(S),p.y=(e+t*Math.cos(x))*Math.sin(S),p.z=t*Math.sin(x),c.push(p.x,p.y,p.z),f.x=e*Math.cos(S),f.y=e*Math.sin(S),m.subVectors(p,f).normalize(),u.push(m.x,m.y,m.z),h.push(y/i),h.push(v/n)}for(let v=1;v<=n;v++)for(let y=1;y<=i;y++){const S=(i+1)*v+y-1,x=(i+1)*(v-1)+y-1,_=(i+1)*(v-1)+y,E=(i+1)*v+y;l.push(S,x,E),l.push(x,_,E)}this.setIndex(l),this.setAttribute("position",new ke(c,3)),this.setAttribute("normal",new ke(u,3)),this.setAttribute("uv",new ke(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ru(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Pu extends ht{constructor(e=1,t=.4,n=64,i=8,s=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],f=[],p=new U,m=new U,v=new U,y=new U,S=new U,x=new U,_=new U;for(let w=0;w<=n;++w){const T=w/n*s*Math.PI*2;E(T,s,l,e,v),E(T+.01,s,l,e,y),x.subVectors(y,v),_.addVectors(y,v),S.crossVectors(x,_),_.crossVectors(S,x),S.normalize(),_.normalize();for(let N=0;N<=i;++N){const P=N/i*Math.PI*2,I=-t*Math.cos(P),z=t*Math.sin(P);p.x=v.x+(I*_.x+z*S.x),p.y=v.y+(I*_.y+z*S.y),p.z=v.z+(I*_.z+z*S.z),u.push(p.x,p.y,p.z),m.subVectors(p,v).normalize(),h.push(m.x,m.y,m.z),f.push(w/n),f.push(N/i)}}for(let w=1;w<=n;w++)for(let T=1;T<=i;T++){const N=(i+1)*(w-1)+(T-1),P=(i+1)*w+(T-1),I=(i+1)*w+T,z=(i+1)*(w-1)+T;c.push(N,P,z),c.push(P,I,z)}this.setIndex(c),this.setAttribute("position",new ke(u,3)),this.setAttribute("normal",new ke(h,3)),this.setAttribute("uv",new ke(f,2));function E(w,T,N,P,I){const z=Math.cos(w),R=Math.sin(w),b=N/T*w,F=Math.cos(b);I.x=P*(2+F)*.5*z,I.y=P*(2+F)*R*.5,I.z=P*Math.sin(b)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Pu(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Iu extends ht{constructor(e=new np(new U(-1,-1,0),new U(-1,1,0),new U(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const l=e.computeFrenetFrames(t,s);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new U,u=new U,h=new he;let f=new U;const p=[],m=[],v=[],y=[];S(),this.setIndex(y),this.setAttribute("position",new ke(p,3)),this.setAttribute("normal",new ke(m,3)),this.setAttribute("uv",new ke(v,2));function S(){for(let w=0;w<t;w++)x(w);x(s===!1?t:0),E(),_()}function x(w){f=e.getPointAt(w/t,f);const T=l.normals[w],N=l.binormals[w];for(let P=0;P<=i;P++){const I=P/i*Math.PI*2,z=Math.sin(I),R=-Math.cos(I);u.x=R*T.x+z*N.x,u.y=R*T.y+z*N.y,u.z=R*T.z+z*N.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=f.x+n*u.x,c.y=f.y+n*u.y,c.z=f.z+n*u.z,p.push(c.x,c.y,c.z)}}function _(){for(let w=1;w<=t;w++)for(let T=1;T<=i;T++){const N=(i+1)*(w-1)+(T-1),P=(i+1)*w+(T-1),I=(i+1)*w+T,z=(i+1)*(w-1)+T;y.push(N,P,z),y.push(P,I,z)}}function E(){for(let w=0;w<=t;w++)for(let T=0;T<=i;T++)h.x=w/t,h.y=T/i,v.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Iu(new iu[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class F_ extends ht{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new U,s=new U;if(e.index!==null){const l=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,f=u.length;h<f;++h){const p=u[h],m=p.start,v=p.count;for(let y=m,S=m+v;y<S;y+=3)for(let x=0;x<3;x++){const _=c.getX(y+x),E=c.getX(y+(x+1)%3);i.fromBufferAttribute(l,_),s.fromBufferAttribute(l,E),l0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const l=e.attributes.position;for(let c=0,u=l.count/3;c<u;c++)for(let h=0;h<3;h++){const f=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(l,f),s.fromBufferAttribute(l,p),l0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new ke(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function l0(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var c0=Object.freeze({__proto__:null,BoxGeometry:Ms,CapsuleGeometry:yu,CircleGeometry:xu,ConeGeometry:Mu,CylinderGeometry:Io,DodecahedronGeometry:Su,EdgesGeometry:N_,ExtrudeGeometry:Eu,IcosahedronGeometry:Au,LatheGeometry:ja,OctahedronGeometry:Za,PlaneGeometry:Ro,PolyhedronGeometry:Ur,RingGeometry:Tu,ShapeGeometry:bu,SphereGeometry:Ja,TetrahedronGeometry:Cu,TorusGeometry:Ru,TorusKnotGeometry:Pu,TubeGeometry:Iu,WireframeGeometry:F_});class z_ extends mn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Le(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class B_ extends Ei{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class rp extends mn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Le(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ni,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class k_ extends rp{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new he(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return jt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Le(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Le(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Le(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class H_ extends mn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Le(16777215),this.specular=new Le(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ni,this.combine=Ga,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class V_ extends mn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Le(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class G_ extends mn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class W_ extends mn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ni,this.combine=Ga,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class X_ extends mn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Le(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class q_ extends Dn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function hs(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function Y_(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function j_(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function xd(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,l=0;l!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[l++]=r[c+u]}return i}function sp(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let l=s[n];if(l!==void 0)if(Array.isArray(l))do l=s[n],l!==void 0&&(e.push(s.time),t.push.apply(t,l)),s=r[i++];while(s!==void 0);else if(l.toArray!==void 0)do l=s[n],l!==void 0&&(e.push(s.time),l.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do l=s[n],l!==void 0&&(e.push(s.time),t.push(l)),s=r[i++];while(s!==void 0)}function IT(r,e,t,n,i=30){const s=r.clone();s.name=e;const l=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],f=h.getValueSize(),p=[],m=[];for(let v=0;v<h.times.length;++v){const y=h.times[v]*i;if(!(y<t||y>=n)){p.push(h.times[v]);for(let S=0;S<f;++S)m.push(h.values[v*f+S])}}p.length!==0&&(h.times=hs(p,h.times.constructor),h.values=hs(m,h.values.constructor),l.push(h))}s.tracks=l;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function LT(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let l=0;l<i;++l){const c=t.tracks[l],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===u});if(h===void 0)continue;let f=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=p/3);let m=0;const v=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=v/3);const y=c.times.length-1;let S;if(s<=c.times[0]){const _=f,E=p-f;S=c.values.slice(_,E)}else if(s>=c.times[y]){const _=y*p+f,E=_+p-f;S=c.values.slice(_,E)}else{const _=c.createInterpolant(),E=f,w=p-f;_.evaluate(s),S=_.resultBuffer.slice(E,w)}u==="quaternion"&&new Vn().fromArray(S).normalize().conjugate().toArray(S);const x=h.times.length;for(let _=0;_<x;++_){const E=_*v+m;if(u==="quaternion")Vn.multiplyQuaternionsFlat(h.values,E,S,0,h.values,E);else{const w=v-m*2;for(let T=0;T<w;++T)h.values[E+T]-=S[T]}}}return r.blendMode=Bd,r}const NT={convertArray:hs,isTypedArray:Y_,getKeyframeOrder:j_,sortedArray:xd,flattenJSON:sp,subclip:IT,makeClipAdditive:LT};class Ka{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let l;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}l=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}l=n,n=0;break n}break e}for(;n<l;){const c=n+l>>>1;e<t[c]?l=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let l=0;l!==i;++l)t[l]=n[s+l];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Z_ extends Ka{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ls,endingEnd:ls}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,l=e+1,c=i[s],u=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case cs:s=e,c=2*t-n;break;case ba:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case cs:l=e,u=2*n-t;break;case ba:l=1,u=n+i[1]-i[0];break;default:l=e-1,u=t}const h=(n-t)*.5,f=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*f,this._offsetNext=l*f}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,v=this._weightNext,y=(n-t)/(i-t),S=y*y,x=S*y,_=-m*x+2*m*S-m*y,E=(1+m)*x+(-1.5-2*m)*S+(-.5+m)*y+1,w=(-1-v)*x+(1.5+v)*S+.5*y,T=v*x-v*S;for(let N=0;N!==c;++N)s[N]=_*l[f+N]+E*l[h+N]+w*l[u+N]+T*l[p+N];return s}}class op extends Ka{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=(n-t)/(i-t),p=1-f;for(let m=0;m!==c;++m)s[m]=l[h+m]*p+l[u+m]*f;return s}}class J_ extends Ka{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Ti{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=hs(t,this.TimeBufferType),this.values=hs(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:hs(e.times,Array),values:hs(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new J_(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new op(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Z_(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Aa:t=this.InterpolantFactoryMethodDiscrete;break;case Ta:t=this.InterpolantFactoryMethodLinear;break;case Kc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Aa;case this.InterpolantFactoryMethodLinear:return Ta;case this.InterpolantFactoryMethodSmooth:return Kc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,l=i-1;for(;s!==i&&n[s]<e;)++s;for(;l!==-1&&n[l]>t;)--l;if(++l,s!==0||l!==i){s>=l&&(l=Math.max(l,1),s=l-1);const c=this.getValueSize();this.times=n.slice(s,l),this.values=this.values.slice(s*c,l*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let l=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(l!==null&&l>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,l),e=!1;break}l=u}if(i!==void 0&&Y_(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Kc,s=e.length-1;let l=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],f=e[c+1];if(h!==f&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,v=p+n;for(let y=0;y!==n;++y){const S=t[p+y];if(S!==t[m+y]||S!==t[v+y]){u=!0;break}}}if(u){if(c!==l){e[l]=e[c];const p=c*n,m=l*n;for(let v=0;v!==n;++v)t[m+v]=t[p+v]}++l}}if(s>0){e[l]=e[s];for(let c=s*n,u=l*n,h=0;h!==n;++h)t[u+h]=t[c+h];++l}return l!==e.length?(this.times=e.slice(0,l),this.values=t.slice(0,l*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Ti.prototype.TimeBufferType=Float32Array;Ti.prototype.ValueBufferType=Float32Array;Ti.prototype.DefaultInterpolation=Ta;class ws extends Ti{}ws.prototype.ValueTypeName="bool";ws.prototype.ValueBufferType=Array;ws.prototype.DefaultInterpolation=Aa;ws.prototype.InterpolantFactoryMethodLinear=void 0;ws.prototype.InterpolantFactoryMethodSmooth=void 0;class ap extends Ti{}ap.prototype.ValueTypeName="color";class za extends Ti{}za.prototype.ValueTypeName="number";class K_ extends Ka{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let f=h+c;h!==f;h+=4)Vn.slerpFlat(s,0,l,h-c,l,h,u);return s}}class Lo extends Ti{InterpolantFactoryMethodLinear(e){return new K_(this.times,this.values,this.getValueSize(),e)}}Lo.prototype.ValueTypeName="quaternion";Lo.prototype.DefaultInterpolation=Ta;Lo.prototype.InterpolantFactoryMethodSmooth=void 0;class Es extends Ti{}Es.prototype.ValueTypeName="string";Es.prototype.ValueBufferType=Array;Es.prototype.DefaultInterpolation=Aa;Es.prototype.InterpolantFactoryMethodLinear=void 0;Es.prototype.InterpolantFactoryMethodSmooth=void 0;class Ba extends Ti{}Ba.prototype.ValueTypeName="vector";class ka{constructor(e="",t=-1,n=[],i=cu){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=ti(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let l=0,c=n.length;l!==c;++l)t.push(UT(n[l]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,l=n.length;s!==l;++s)t.push(Ti.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,l=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const f=j_(u);u=xd(u,1,f),h=xd(h,1,f),!i&&u[0]===0&&(u.push(s),h.push(h[0])),l.push(new za(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,l)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.name.match(s);if(f&&f.length>1){const p=f[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return l}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,v,y,S){if(v.length!==0){const x=[],_=[];sp(v,x,_,y),x.length!==0&&S.push(new p(m,x,_))}},i=[],s=e.name||"default",l=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const v={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let S=0;S<m[y].morphTargets.length;S++)v[m[y].morphTargets[S]]=-1;for(const S in v){const x=[],_=[];for(let E=0;E!==m[y].morphTargets.length;++E){const w=m[y];x.push(w.time),_.push(w.morphTarget===S?1:0)}i.push(new za(".morphTargetInfluence["+S+"]",x,_))}u=v.length*l}else{const v=".bones["+t[p].name+"]";n(Ba,v+".position",m,"pos",i),n(Lo,v+".quaternion",m,"rot",i),n(Ba,v+".scale",m,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function DT(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return za;case"vector":case"vector2":case"vector3":case"vector4":return Ba;case"color":return ap;case"quaternion":return Lo;case"bool":case"boolean":return ws;case"string":return Es}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function UT(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=DT(r.type);if(r.times===void 0){const t=[],n=[];sp(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const ir={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class lp{constructor(e,t,n){const i=this;let s=!1,l=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(f){c++,s===!1&&i.onStart!==void 0&&i.onStart(f,l,c),s=!0},this.itemEnd=function(f){l++,i.onProgress!==void 0&&i.onProgress(f,l,c),l===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(f){i.onError!==void 0&&i.onError(f)},this.resolveURL=function(f){return u?u(f):f},this.setURLModifier=function(f){return u=f,this},this.addHandler=function(f,p){return h.push(f,p),this},this.removeHandler=function(f){const p=h.indexOf(f);return p!==-1&&h.splice(p,2),this},this.getHandler=function(f){for(let p=0,m=h.length;p<m;p+=2){const v=h[p],y=h[p+1];if(v.global&&(v.lastIndex=0),v.test(f))return y}return null}}}const _o=new lp;let Gn=class{constructor(e){this.manager=e!==void 0?e:_o,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}};Gn.DEFAULT_MATERIAL_NAME="__DEFAULT";const er={};class OT extends Error{constructor(e,t){super(e),this.response=t}}class ar extends Gn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=ir.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(er[e]!==void 0){er[e].push({onLoad:t,onProgress:n,onError:i});return}er[e]=[],er[e].push({onLoad:t,onProgress:n,onError:i});const l=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(l).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const f=er[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),v=m?parseInt(m):0,y=v!==0;let S=0;const x=new ReadableStream({start(_){E();function E(){p.read().then(({done:w,value:T})=>{if(w)_.close();else{S+=T.byteLength;const N=new ProgressEvent("progress",{lengthComputable:y,loaded:S,total:v});for(let P=0,I=f.length;P<I;P++){const z=f[P];z.onProgress&&z.onProgress(N)}_.enqueue(T),E()}})}}});return new Response(x)}else throw new OT(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(f=>new DOMParser().parseFromString(f,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,v=new TextDecoder(m);return h.arrayBuffer().then(y=>v.decode(y))}}}).then(h=>{ir.add(e,h);const f=er[e];delete er[e];for(let p=0,m=f.length;p<m;p++){const v=f[p];v.onLoad&&v.onLoad(h)}}).catch(h=>{const f=er[e];if(f===void 0)throw this.manager.itemError(e),h;delete er[e];for(let p=0,m=f.length;p<m;p++){const v=f[p];v.onError&&v.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class FT extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new ar(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=ka.parse(e[n]);t.push(i)}return t}}class zT extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=[],c=new vu,u=new ar(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function f(p){u.load(e[p],function(m){const v=s.parse(m,!0);l[p]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},h+=1,h===6&&(v.mipmapCount===1&&(c.minFilter=tn),c.image=l,c.format=v.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)f(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const v=m.mipmaps.length/m.mipmapCount;for(let y=0;y<v;y++){l[y]={mipmaps:[]};for(let S=0;S<m.mipmapCount;S++)l[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+S]),l[y].format=m.format,l[y].width=m.width,l[y].height=m.height}c.image=l}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=tn),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class Ha extends Gn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=ir.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c=Na("img");function u(){f(),ir.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){f(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function f(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class BT extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=new qa;s.colorSpace=fi;const l=new Ha(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function u(h){l.load(e[h],function(f){s.images[h]=f,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class kT extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new Pr,c=new ar(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){let h;try{h=s.parse(u)}catch(f){if(i!==void 0)i(f);else{console.error(f);return}}h.image!==void 0?l.image=h.image:h.data!==void 0&&(l.image.width=h.width,l.image.height=h.height,l.image.data=h.data),l.wrapS=h.wrapS!==void 0?h.wrapS:di,l.wrapT=h.wrapT!==void 0?h.wrapT:di,l.magFilter=h.magFilter!==void 0?h.magFilter:tn,l.minFilter=h.minFilter!==void 0?h.minFilter:tn,l.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0&&(l.colorSpace=h.colorSpace),h.flipY!==void 0&&(l.flipY=h.flipY),h.format!==void 0&&(l.format=h.format),h.type!==void 0&&(l.type=h.type),h.mipmaps!==void 0&&(l.mipmaps=h.mipmaps,l.minFilter=Oi),h.mipmapCount===1&&(l.minFilter=tn),h.generateMipmaps!==void 0&&(l.generateMipmaps=h.generateMipmaps),l.needsUpdate=!0,t&&t(l,h)},n,i),l}}class cp extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=new Gt,l=new Ha(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Or extends wt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Le(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class Q_ extends Or{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(wt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Le(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const wf=new $e,u0=new U,h0=new U;class up{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new he(512,512),this.map=null,this.mapPass=null,this.matrix=new $e,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ya,this._frameExtents=new he(1,1),this._viewportCount=1,this._viewports=[new Ct(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;u0.setFromMatrixPosition(e.matrixWorld),t.position.copy(u0),h0.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(h0),t.updateMatrixWorld(),wf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(wf),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(wf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class HT extends up{constructor(){super(new en(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=So*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class $_ extends Or{constructor(e,t,n=0,i=Math.PI/3,s=0,l=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(wt.DEFAULT_UP),this.updateMatrix(),this.target=new wt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=l,this.map=null,this.shadow=new HT}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const f0=new $e,la=new U,Ef=new U;class VT extends up{constructor(){super(new en(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new he(4,2),this._viewportCount=6,this._viewports=[new Ct(2,1,1,1),new Ct(0,1,1,1),new Ct(3,1,1,1),new Ct(1,1,1,1),new Ct(3,0,1,1),new Ct(1,0,1,1)],this._cubeDirections=[new U(1,0,0),new U(-1,0,0),new U(0,0,1),new U(0,0,-1),new U(0,1,0),new U(0,-1,0)],this._cubeUps=[new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,0,1),new U(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),la.setFromMatrixPosition(e.matrixWorld),n.position.copy(la),Ef.copy(n.position),Ef.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Ef),n.updateMatrixWorld(),i.makeTranslation(-la.x,-la.y,-la.z),f0.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(f0)}}class ey extends Or{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new VT}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class GT extends up{constructor(){super(new Ss(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class ty extends Or{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(wt.DEFAULT_UP),this.updateMatrix(),this.target=new wt,this.shadow=new GT}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class ny extends Or{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class iy extends Or{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class ry{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new U)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.282095),t.addScaledVector(l[1],.488603*i),t.addScaledVector(l[2],.488603*s),t.addScaledVector(l[3],.488603*n),t.addScaledVector(l[4],1.092548*(n*i)),t.addScaledVector(l[5],1.092548*(i*s)),t.addScaledVector(l[6],.315392*(3*s*s-1)),t.addScaledVector(l[7],1.092548*(n*s)),t.addScaledVector(l[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.886227),t.addScaledVector(l[1],2*.511664*i),t.addScaledVector(l[2],2*.511664*s),t.addScaledVector(l[3],2*.511664*n),t.addScaledVector(l[4],2*.429043*n*i),t.addScaledVector(l[5],2*.429043*i*s),t.addScaledVector(l[6],.743125*s*s-.247708),t.addScaledVector(l[7],2*.429043*n*s),t.addScaledVector(l[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class sy extends Or{constructor(e=new ry,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Lu extends Gn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,l=new ar(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=Lu.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Le().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const l=e.uniforms[s];switch(i.uniforms[s]={},l.type){case"t":i.uniforms[s].value=n(l.value);break;case"c":i.uniforms[s].value=new Le().setHex(l.value);break;case"v2":i.uniforms[s].value=new he().fromArray(l.value);break;case"v3":i.uniforms[s].value=new U().fromArray(l.value);break;case"v4":i.uniforms[s].value=new Ct().fromArray(l.value);break;case"m3":i.uniforms[s].value=new lt().fromArray(l.value);break;case"m4":i.uniforms[s].value=new $e().fromArray(l.value);break;default:i.uniforms[s].value=l.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new he().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new he().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:z_,SpriteMaterial:Zd,RawShaderMaterial:B_,ShaderMaterial:Ei,PointsMaterial:Kd,MeshPhysicalMaterial:k_,MeshStandardMaterial:rp,MeshPhongMaterial:H_,MeshToonMaterial:V_,MeshNormalMaterial:G_,MeshLambertMaterial:W_,MeshDepthMaterial:Yd,MeshDistanceMaterial:jd,MeshBasicMaterial:Dr,MeshMatcapMaterial:X_,LineDashedMaterial:q_,LineBasicMaterial:Dn,Material:mn};return new t[e]}}class Md{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class oy extends ht{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class ay extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new ar(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(v,y){if(t[y]!==void 0)return t[y];const x=v.interleavedBuffers[y],_=s(v,x.buffer),E=po(x.type,_),w=new mu(E,x.stride);return w.uuid=x.uuid,t[y]=w,w}function s(v,y){if(n[y]!==void 0)return n[y];const x=v.arrayBuffers[y],_=new Uint32Array(x).buffer;return n[y]=_,_}const l=e.isInstancedBufferGeometry?new oy:new ht,c=e.data.index;if(c!==void 0){const v=po(c.type,c.array);l.setIndex(new Rt(v,1))}const u=e.data.attributes;for(const v in u){const y=u[v];let S;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);S=new ys(x,y.itemSize,y.offset,y.normalized)}else{const x=po(y.type,y.array),_=y.isInstancedBufferAttribute?Eo:Rt;S=new _(x,y.itemSize,y.normalized)}y.name!==void 0&&(S.name=y.name),y.usage!==void 0&&S.setUsage(y.usage),l.setAttribute(v,S)}const h=e.data.morphAttributes;if(h)for(const v in h){const y=h[v],S=[];for(let x=0,_=y.length;x<_;x++){const E=y[x];let w;if(E.isInterleavedBufferAttribute){const T=i(e.data,E.data);w=new ys(T,E.itemSize,E.offset,E.normalized)}else{const T=po(E.type,E.array);w=new Rt(T,E.itemSize,E.normalized)}E.name!==void 0&&(w.name=E.name),S.push(w)}l.morphAttributes[v]=S}e.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let v=0,y=p.length;v!==y;++v){const S=p[v];l.addGroup(S.start,S.count,S.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const v=new U;m.center!==void 0&&v.fromArray(m.center),l.boundingSphere=new En(v,m.radius)}return e.name&&(l.name=e.name),e.userData&&(l.userData=e.userData),l}}class WT extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=this.path===""?Md.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||l;const c=new ar(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const f=h.metadata;if(f===void 0||f.type===void 0||f.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Md.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new ar(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const l=await s.loadAsync(e,t),c=JSON.parse(l),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),l=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,l),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),f=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,f),t!==void 0){let p=!1;for(const m in l)if(l[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),l=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,l),u=this.parseObject(e.object,i,c,l,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new vs().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=new gu().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new ay;for(let s=0,l=e.length;s<l;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in c0?c=c0[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Lu;s.setTextures(t);for(let l=0,c=e.length;l<c;l++){const u=e[l];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=ka.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function l(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return l(f)}else return u.data?{data:po(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new lp(t);s=new Ha(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,f=e.length;h<f;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const v=[];for(let y=0,S=m.length;y<S;y++){const x=m[y],_=c(x);_!==null&&(_ instanceof HTMLImageElement?v.push(_):v.push(new Pr(_.data,_.width,_.height)))}i[p.uuid]=new us(v)}else{const v=c(p.url);i[p.uuid]=new us(v)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return l.data?{data:po(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){i=new Ha(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=e.length;l<c;l++){const u=e[l],h=u.url;if(Array.isArray(h)){const f=[];for(let p=0,m=h.length;p<m;p++){const v=h[p],y=await s(v);y!==null&&(y instanceof HTMLImageElement?f.push(y):f.push(new Pr(y.data,y.width,y.height)))}n[u.uuid]=new us(f)}else{const f=await s(u.url);n[u.uuid]=new us(f)}}}return n}parseTextures(e,t){function n(s,l){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),l[s])}const i={};if(e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let f;Array.isArray(h)?(f=new qa,h.length===6&&(f.needsUpdate=!0)):(h&&h.data?f=new Pr:f=new Gt,h&&(f.needsUpdate=!0)),f.source=u,f.uuid=c.uuid,c.name!==void 0&&(f.name=c.name),c.mapping!==void 0&&(f.mapping=n(c.mapping,XT)),c.channel!==void 0&&(f.channel=c.channel),c.offset!==void 0&&f.offset.fromArray(c.offset),c.repeat!==void 0&&f.repeat.fromArray(c.repeat),c.center!==void 0&&f.center.fromArray(c.center),c.rotation!==void 0&&(f.rotation=c.rotation),c.wrap!==void 0&&(f.wrapS=n(c.wrap[0],d0),f.wrapT=n(c.wrap[1],d0)),c.format!==void 0&&(f.format=c.format),c.internalFormat!==void 0&&(f.internalFormat=c.internalFormat),c.type!==void 0&&(f.type=c.type),c.colorSpace!==void 0&&(f.colorSpace=c.colorSpace),c.minFilter!==void 0&&(f.minFilter=n(c.minFilter,p0)),c.magFilter!==void 0&&(f.magFilter=n(c.magFilter,p0)),c.anisotropy!==void 0&&(f.anisotropy=c.anisotropy),c.flipY!==void 0&&(f.flipY=c.flipY),c.generateMipmaps!==void 0&&(f.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(f.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(f.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(f.compareFunction=c.compareFunction),c.userData!==void 0&&(f.userData=c.userData),i[c.uuid]=f}return i}parseObject(e,t,n,i,s){let l;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const v=[];for(let y=0,S=m.length;y<S;y++){const x=m[y];n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),v.push(n[x])}return v}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let f,p;switch(e.type){case"Scene":l=new nu,e.background!==void 0&&(Number.isInteger(e.background)?l.background=new Le(e.background):l.background=h(e.background)),e.environment!==void 0&&(l.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?l.fog=new pu(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(l.fog=new du(e.fog.color,e.fog.density)),e.fog.name!==""&&(l.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(l.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&l.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(l.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&l.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":l=new en(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(l.focus=e.focus),e.zoom!==void 0&&(l.zoom=e.zoom),e.filmGauge!==void 0&&(l.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(l.filmOffset=e.filmOffset),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"OrthographicCamera":l=new Ss(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(l.zoom=e.zoom),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"AmbientLight":l=new ny(e.color,e.intensity);break;case"DirectionalLight":l=new ty(e.color,e.intensity);break;case"PointLight":l=new ey(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":l=new iy(e.color,e.intensity,e.width,e.height);break;case"SpotLight":l=new $_(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":l=new Q_(e.color,e.groundColor,e.intensity);break;case"LightProbe":l=new sy().fromJSON(e);break;case"SkinnedMesh":f=c(e.geometry),p=u(e.material),l=new w_(f,p),e.bindMode!==void 0&&(l.bindMode=e.bindMode),e.bindMatrix!==void 0&&l.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(l.skeleton=e.skeleton);break;case"Mesh":f=c(e.geometry),p=u(e.material),l=new nn(f,p);break;case"InstancedMesh":f=c(e.geometry),p=u(e.material);const m=e.count,v=e.instanceMatrix,y=e.instanceColor;l=new E_(f,p,m),l.instanceMatrix=new Eo(new Float32Array(v.array),16),y!==void 0&&(l.instanceColor=new Eo(new Float32Array(y.array),y.itemSize));break;case"BatchedMesh":f=c(e.geometry),p=u(e.material),l=new A_(e.maxGeometryCount,e.maxVertexCount,e.maxIndexCount,p),l.geometry=f,l.perObjectFrustumCulled=e.perObjectFrustumCulled,l.sortObjects=e.sortObjects,l._drawRanges=e.drawRanges,l._reservedRanges=e.reservedRanges,l._visibility=e.visibility,l._active=e.active,l._bounds=e.bounds.map(S=>{const x=new Nn;x.min.fromArray(S.boxMin),x.max.fromArray(S.boxMax);const _=new En;return _.radius=S.sphereRadius,_.center.fromArray(S.sphereCenter),{boxInitialized:S.boxInitialized,box:x,sphereInitialized:S.sphereInitialized,sphere:_}}),l._maxGeometryCount=e.maxGeometryCount,l._maxVertexCount=e.maxVertexCount,l._maxIndexCount=e.maxIndexCount,l._geometryInitialized=e.geometryInitialized,l._geometryCount=e.geometryCount,l._matricesTexture=h(e.matricesTexture.uuid);break;case"LOD":l=new S_;break;case"Line":l=new Lr(c(e.geometry),u(e.material));break;case"LineLoop":l=new T_(c(e.geometry),u(e.material));break;case"LineSegments":l=new Hi(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":l=new b_(c(e.geometry),u(e.material));break;case"Sprite":l=new M_(u(e.material));break;case"Group":l=new go;break;case"Bone":l=new Jd;break;default:l=new wt}if(l.uuid=e.uuid,e.name!==void 0&&(l.name=e.name),e.matrix!==void 0?(l.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=e.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(e.position!==void 0&&l.position.fromArray(e.position),e.rotation!==void 0&&l.rotation.fromArray(e.rotation),e.quaternion!==void 0&&l.quaternion.fromArray(e.quaternion),e.scale!==void 0&&l.scale.fromArray(e.scale)),e.up!==void 0&&l.up.fromArray(e.up),e.castShadow!==void 0&&(l.castShadow=e.castShadow),e.receiveShadow!==void 0&&(l.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(l.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(l.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(l.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(l.visible=e.visible),e.frustumCulled!==void 0&&(l.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(l.renderOrder=e.renderOrder),e.userData!==void 0&&(l.userData=e.userData),e.layers!==void 0&&(l.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let v=0;v<m.length;v++)l.add(this.parseObject(m[v],t,n,i,s))}if(e.animations!==void 0){const m=e.animations;for(let v=0;v<m.length;v++){const y=m[v];l.animations.push(s[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(l.autoUpdate=e.autoUpdate);const m=e.levels;for(let v=0;v<m.length;v++){const y=m[v],S=l.getObjectByProperty("uuid",y.object);S!==void 0&&l.addLevel(S,y.distance,y.hysteresis)}}return l}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const XT={UVMapping:lu,CubeReflectionMapping:or,CubeRefractionMapping:Ir,EquirectangularReflectionMapping:xa,EquirectangularRefractionMapping:Ma,CubeUVReflectionMapping:To},d0={RepeatWrapping:Sa,ClampToEdgeWrapping:di,MirroredRepeatWrapping:wa},p0={NearestFilter:fn,NearestMipmapNearestFilter:Rd,NearestMipmapLinearFilter:fo,LinearFilter:tn,LinearMipmapNearestFilter:ma,LinearMipmapLinearFilter:Oi};class qT extends Gn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=ir.get(e);if(l!==void 0){if(s.manager.itemStart(e),l.then){l.then(h=>{t&&t(h),s.manager.itemEnd(e)}).catch(h=>{i&&i(h)});return}return setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const u=fetch(e,c).then(function(h){return h.blob()}).then(function(h){return createImageBitmap(h,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(h){return ir.add(e,h),t&&t(h),s.manager.itemEnd(e),h}).catch(function(h){i&&i(h),ir.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});ir.add(e,u),s.manager.itemStart(e)}}let Fc;class hp{static getContext(){return Fc===void 0&&(Fc=new(window.AudioContext||window.webkitAudioContext)),Fc}static setContext(e){Fc=e}}class YT extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new ar(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(u){try{const h=u.slice(0);hp.getContext().decodeAudioData(h,function(p){t(p)}).catch(c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}const m0=new $e,g0=new $e,$r=new $e;class jT{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new en,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new en,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,$r.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,l=t.near*Math.tan(ms*t.fov*.5)/t.zoom;let c,u;g0.elements[12]=-i,m0.elements[12]=i,c=-l*t.aspect+s,u=l*t.aspect+s,$r.elements[0]=2*t.near/(u-c),$r.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy($r),c=-l*t.aspect-s,u=l*t.aspect-s,$r.elements[0]=2*t.near/(u-c),$r.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy($r)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(g0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(m0)}}class fp{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=v0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=v0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function v0(){return(typeof performance>"u"?Date:performance).now()}const es=new U,_0=new Vn,ZT=new U,ts=new U;class JT extends wt{constructor(){super(),this.type="AudioListener",this.context=hp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new fp}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(es,_0,ZT),ts.set(0,0,-1).applyQuaternion(_0),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(es.x,i),t.positionY.linearRampToValueAtTime(es.y,i),t.positionZ.linearRampToValueAtTime(es.z,i),t.forwardX.linearRampToValueAtTime(ts.x,i),t.forwardY.linearRampToValueAtTime(ts.y,i),t.forwardZ.linearRampToValueAtTime(ts.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(es.x,es.y,es.z),t.setOrientation(ts.x,ts.y,ts.z,n.x,n.y,n.z)}}class ly extends wt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const ns=new U,y0=new Vn,KT=new U,is=new U;class QT extends ly{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ns,y0,KT),is.set(0,0,1).applyQuaternion(y0);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ns.x,n),t.positionY.linearRampToValueAtTime(ns.y,n),t.positionZ.linearRampToValueAtTime(ns.z,n),t.orientationX.linearRampToValueAtTime(is.x,n),t.orientationY.linearRampToValueAtTime(is.y,n),t.orientationZ.linearRampToValueAtTime(is.z,n)}else t.setPosition(ns.x,ns.y,ns.z),t.setOrientation(is.x,is.y,is.z)}}class $T{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class cy{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,l;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[s+c]=n[c];l=t}else{l+=t;const c=t/l;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,l=i;s!==l;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let l=0;l!==s;++l)e[t+l]=e[n+l]}_slerp(e,t,n,i){Vn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const l=this._workIndex*s;Vn.multiplyQuaternionsFlat(e,l,e,t,e,n),Vn.slerpFlat(e,t,e,t,e,l,i)}_lerp(e,t,n,i,s){const l=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*l+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let l=0;l!==s;++l){const c=t+l;e[c]=e[c]+e[n+l]*i}}}const dp="\\[\\]\\.:\\/",eb=new RegExp("["+dp+"]","g"),pp="[^"+dp+"]",tb="[^"+dp.replace("\\.","")+"]",nb=/((?:WC+[\/:])*)/.source.replace("WC",pp),ib=/(WCOD+)?/.source.replace("WCOD",tb),rb=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",pp),sb=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",pp),ob=new RegExp("^"+nb+ib+rb+sb+"$"),ab=["material","materials","bones","map"];class lb{constructor(e,t,n){const i=n||vt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class vt{constructor(e,t,n){this.path=t,this.parsedPath=n||vt.parseTrackName(t),this.node=vt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new vt.Composite(e,t,n):new vt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(eb,"")}static parseTrackName(e){const t=ob.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);ab.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let l=0;l<s.length;l++){const c=s[l];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=vt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let f=0;f<e.length;f++)if(e[f].name===h){h=f;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const l=e[i];if(l===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=s}else l.fromArray!==void 0&&l.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(u=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}vt.Composite=lb;vt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};vt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};vt.prototype.GetterByBindingType=[vt.prototype._getValue_direct,vt.prototype._getValue_array,vt.prototype._getValue_arrayElement,vt.prototype._getValue_toArray];vt.prototype.SetterByBindingTypeAndVersioning=[[vt.prototype._setValue_direct,vt.prototype._setValue_direct_setNeedsUpdate,vt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[vt.prototype._setValue_array,vt.prototype._setValue_array_setNeedsUpdate,vt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[vt.prototype._setValue_arrayElement,vt.prototype._setValue_arrayElement_setNeedsUpdate,vt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[vt.prototype._setValue_fromArray,vt.prototype._setValue_fromArray_setNeedsUpdate,vt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class cb{constructor(){this.isAnimationObjectGroup=!0,this.uuid=ti(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,l=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let f=0,p=arguments.length;f!==p;++f){const m=arguments[f],v=m.uuid;let y=t[v];if(y===void 0){y=u++,t[v]=y,e.push(m);for(let S=0,x=l;S!==x;++S)s[S].push(new vt(m,n[S],i[S]))}else if(y<h){c=e[y];const S=--h,x=e[S];t[x.uuid]=y,e[y]=x,t[v]=S,e[S]=m;for(let _=0,E=l;_!==E;++_){const w=s[_],T=w[S];let N=w[y];w[y]=T,N===void 0&&(N=new vt(m,n[_],i[_])),w[S]=N}}else e[y]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const u=arguments[l],h=u.uuid,f=t[h];if(f!==void 0&&f>=s){const p=s++,m=e[p];t[m.uuid]=f,e[f]=m,t[h]=p,e[p]=u;for(let v=0,y=i;v!==y;++v){const S=n[v],x=S[p],_=S[f];S[f]=x,S[p]=_}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,l=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],f=h.uuid,p=t[f];if(p!==void 0)if(delete t[f],p<s){const m=--s,v=e[m],y=--l,S=e[y];t[v.uuid]=p,e[p]=v,t[S.uuid]=m,e[m]=S,e.pop();for(let x=0,_=i;x!==_;++x){const E=n[x],w=E[m],T=E[y];E[p]=w,E[m]=T,E.pop()}}else{const m=--l,v=e[m];m>0&&(t[v.uuid]=p),e[p]=v,e.pop();for(let y=0,S=i;y!==S;++y){const x=n[y];x[p]=x[m],x.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const l=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,f=this.nCachedObjects_,p=new Array(h);i=s.length,n[e]=i,l.push(e),c.push(t),s.push(p);for(let m=f,v=u.length;m!==v;++m){const y=u[m];p[m]=new vt(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,l=this._bindings,c=l.length-1,u=l[c],h=e[c];t[h]=n,l[n]=u,l.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class uy{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,l=s.length,c=new Array(l),u={endingStart:ls,endingEnd:ls};for(let h=0;h!==l;++h){const f=s[h].createInterpolant(null);c[h]=f,f.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Gv,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,l=s/i,c=i/s;e.warp(1,l,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/l,h[1]=t/l,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const l=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Bd:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(l),h[f].accumulateAdditive(c);break;case cu:default:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(l),h[f].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const l=n===Wv;if(e===0)return s===-1?i:l&&(s&1)===1?t-i:i;if(n===Vv){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,l)}else this._setEndings(!1,!1,l);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=cs,i.endingEnd=cs):(e?i.endingStart=this.zeroSlopeAtStart?cs:ls:i.endingStart=ba,t?i.endingEnd=this.zeroSlopeAtEnd?cs:ls:i.endingEnd=ba)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,u=l.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const ub=new Float32Array(1);class hb extends cr{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,l=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let f=h[u];f===void 0&&(f={},h[u]=f);for(let p=0;p!==s;++p){const m=i[p],v=m.name;let y=f[v];if(y!==void 0)++y.referenceCount,l[p]=y;else{if(y=l[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,v));continue}const S=t&&t._propertyBindings[p].binding.parsedPath;y=new cy(vt.create(n,v,S),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,v),l[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let l=s[t];if(l===void 0)l={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=l;else{const c=l.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),l.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,l=this._actionsByClip,c=l[s],u=c.knownActions,h=u[u.length-1],f=e._byClipCacheIndex;h._byClipCacheIndex=f,u[f]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete l[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let l=i[t];l===void 0&&(l={},i[t]=l),l[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,l=this._bindingsByRootAndName,c=l[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete l[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new op(new Float32Array(2),new Float32Array(2),1,ub),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let l=typeof e=="string"?ka.findByName(i,e):e;const c=l!==null?l.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(l!==null?n=l.blendMode:n=cu),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],l===null&&(l=h._clip)}if(l===null)return null;const f=new uy(this,l,t,n);return this._bindAction(f,h),this._addInactiveAction(f,c,s),f}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?ka.findByName(n,e):e,l=s?s.uuid:e,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),l=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,l);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(l);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const l=s.knownActions;for(let c=0,u=l.length;c!==u;++c){const h=l[c];this._deactivateAction(h);const f=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=f,t[f]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const l in s){const c=s[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class mp{constructor(e){this.value=e}clone(){return new mp(this.value.clone===void 0?this.value:this.value.clone())}}let fb=0;class db extends cr{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:fb++}),this.name="",this.usage=Ia,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const s=Array.isArray(t[n])?t[n]:[t[n]];for(let l=0;l<s.length;l++)this.uniforms.push(s[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class pb extends mu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class mb{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const x0=new $e;class hy{constructor(e,t,n=0,i=1/0){this.ray=new Co(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new gs,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return x0.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(x0),this}intersectObject(e,t=!0,n=[]){return Sd(e,this,n,t),n.sort(M0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Sd(e[i],this,n,t);return n.sort(M0),n}}function M0(r,e){return r.distance-e.distance}function Sd(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,l=i.length;s<l;s++)Sd(i[s],e,t,!0)}}class gb{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(jt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class vb{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const S0=new he;class _b{constructor(e=new he(1/0,1/0),t=new he(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=S0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,S0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const w0=new U,zc=new U;class yb{constructor(e=new U,t=new U){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){w0.subVectors(e,this.start),zc.subVectors(this.end,this.start);const n=zc.dot(zc);let s=zc.dot(w0)/n;return t&&(s=jt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const E0=new U;class xb extends wt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new ht,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,u=32;l<u;l++,c++){const h=l/u*Math.PI*2,f=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(f),Math.sin(f),1)}n.setAttribute("position",new ke(i,3));const s=new Dn({fog:!1,toneMapped:!1});this.cone=new Hi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),E0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(E0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const br=new U,Bc=new $e,Af=new $e;class Mb extends Hi{constructor(e){const t=fy(e),n=new ht,i=[],s=[],l=new Le(0,0,1),c=new Le(0,1,0);for(let h=0;h<t.length;h++){const f=t[h];f.parent&&f.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(l.r,l.g,l.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new ke(i,3)),n.setAttribute("color",new ke(s,3));const u=new Dn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Af.copy(this.root.matrixWorld).invert();for(let s=0,l=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(Bc.multiplyMatrices(Af,c.matrixWorld),br.setFromMatrixPosition(Bc),i.setXYZ(l,br.x,br.y,br.z),Bc.multiplyMatrices(Af,c.parent.matrixWorld),br.setFromMatrixPosition(Bc),i.setXYZ(l+1,br.x,br.y,br.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function fy(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,fy(r.children[t]));return e}class Sb extends nn{constructor(e,t,n){const i=new Ja(t,4,2),s=new Dr({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const wb=new U,A0=new Le,T0=new Le;class Eb extends wt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Za(t);i.rotateY(Math.PI*.5),this.material=new Dr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),l=new Float32Array(s.count*3);i.setAttribute("color",new Rt(l,3)),this.add(new nn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");A0.copy(this.light.color),T0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?A0:T0;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(wb.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Ab extends Hi{constructor(e=10,t=10,n=4473924,i=8947848){n=new Le(n),i=new Le(i);const s=t/2,l=e/t,c=e/2,u=[],h=[];for(let m=0,v=0,y=-c;m<=t;m++,y+=l){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const S=m===s?n:i;S.toArray(h,v),v+=3,S.toArray(h,v),v+=3,S.toArray(h,v),v+=3,S.toArray(h,v),v+=3}const f=new ht;f.setAttribute("position",new ke(u,3)),f.setAttribute("color",new ke(h,3));const p=new Dn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class Tb extends Hi{constructor(e=10,t=16,n=8,i=64,s=4473924,l=8947848){s=new Le(s),l=new Le(l);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),v=Math.sin(m)*e,y=Math.cos(m)*e;c.push(0,0,0),c.push(v,0,y);const S=p&1?s:l;u.push(S.r,S.g,S.b),u.push(S.r,S.g,S.b)}for(let p=0;p<n;p++){const m=p&1?s:l,v=e-e/n*p;for(let y=0;y<i;y++){let S=y/i*(Math.PI*2),x=Math.sin(S)*v,_=Math.cos(S)*v;c.push(x,0,_),u.push(m.r,m.g,m.b),S=(y+1)/i*(Math.PI*2),x=Math.sin(S)*v,_=Math.cos(S)*v,c.push(x,0,_),u.push(m.r,m.g,m.b)}}const h=new ht;h.setAttribute("position",new ke(c,3)),h.setAttribute("color",new ke(u,3));const f=new Dn({vertexColors:!0,toneMapped:!1});super(h,f),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const b0=new U,kc=new U,C0=new U;class bb extends wt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new ht;i.setAttribute("position",new ke([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Dn({fog:!1,toneMapped:!1});this.lightPlane=new Lr(i,s),this.add(this.lightPlane),i=new ht,i.setAttribute("position",new ke([0,0,0,0,0,1],3)),this.targetLine=new Lr(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),b0.setFromMatrixPosition(this.light.matrixWorld),kc.setFromMatrixPosition(this.light.target.matrixWorld),C0.subVectors(kc,b0),this.lightPlane.lookAt(kc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(kc),this.targetLine.scale.z=C0.length()}}const Hc=new U,Yt=new Xa;class Cb extends Hi{constructor(e){const t=new ht,n=new Dn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,S){u(y),u(S)}function u(y){i.push(0,0,0),s.push(0,0,0),l[y]===void 0&&(l[y]=[]),l[y].push(i.length/3-1)}t.setAttribute("position",new ke(i,3)),t.setAttribute("color",new ke(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const h=new Le(16755200),f=new Le(16711680),p=new Le(43775),m=new Le(16777215),v=new Le(3355443);this.setColors(h,f,p,m,v)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Yt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Jt("c",t,e,Yt,0,0,-1),Jt("t",t,e,Yt,0,0,1),Jt("n1",t,e,Yt,-n,-i,-1),Jt("n2",t,e,Yt,n,-i,-1),Jt("n3",t,e,Yt,-n,i,-1),Jt("n4",t,e,Yt,n,i,-1),Jt("f1",t,e,Yt,-n,-i,1),Jt("f2",t,e,Yt,n,-i,1),Jt("f3",t,e,Yt,-n,i,1),Jt("f4",t,e,Yt,n,i,1),Jt("u1",t,e,Yt,n*.7,i*1.1,-1),Jt("u2",t,e,Yt,-n*.7,i*1.1,-1),Jt("u3",t,e,Yt,0,i*2,-1),Jt("cf1",t,e,Yt,-n,0,1),Jt("cf2",t,e,Yt,n,0,1),Jt("cf3",t,e,Yt,0,-i,1),Jt("cf4",t,e,Yt,0,i,1),Jt("cn1",t,e,Yt,-n,0,-1),Jt("cn2",t,e,Yt,n,0,-1),Jt("cn3",t,e,Yt,0,-i,-1),Jt("cn4",t,e,Yt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Jt(r,e,t,n,i,s,l){Hc.set(i,s,l).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,f=c.length;h<f;h++)u.setXYZ(c[h],Hc.x,Hc.y,Hc.z)}}const Vc=new Nn;class Rb extends Hi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new ht;s.setIndex(new Rt(n,1)),s.setAttribute("position",new Rt(i,3)),super(s,new Dn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Vc.setFromObject(this.object),Vc.isEmpty())return;const t=Vc.min,n=Vc.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Pb extends Hi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new ht;s.setIndex(new Rt(n,1)),s.setAttribute("position",new ke(i,3)),super(s,new Dn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class Ib extends Lr{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new ht;l.setAttribute("position",new ke(s,3)),l.computeBoundingSphere(),super(l,new Dn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new ht;u.setAttribute("position",new ke(c,3)),u.computeBoundingSphere(),this.add(new nn(u,new Dr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const R0=new U;let Gc,Tf;class Lb extends wt{constructor(e=new U(0,0,1),t=new U(0,0,0),n=1,i=16776960,s=n*.2,l=s*.2){super(),this.type="ArrowHelper",Gc===void 0&&(Gc=new ht,Gc.setAttribute("position",new ke([0,0,0,0,1,0],3)),Tf=new Io(0,.5,1,5,1),Tf.translate(0,-.5,0)),this.position.copy(t),this.line=new Lr(Gc,new Dn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new nn(Tf,new Dr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,l)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{R0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(R0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Nb extends Hi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new ht;i.setAttribute("position",new ke(t,3)),i.setAttribute("color",new ke(n,3));const s=new Dn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Le,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Db{constructor(){this.type="ShapePath",this.color=new Le,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Da,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,l){return this.currentPath.bezierCurveTo(e,t,n,i,s,l),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const E=[];for(let w=0,T=_.length;w<T;w++){const N=_[w],P=new vs;P.curves=N.curves,E.push(P)}return E}function n(_,E){const w=E.length;let T=!1;for(let N=w-1,P=0;P<w;N=P++){let I=E[N],z=E[P],R=z.x-I.x,b=z.y-I.y;if(Math.abs(b)>Number.EPSILON){if(b<0&&(I=E[P],R=-R,z=E[N],b=-b),_.y<I.y||_.y>z.y)continue;if(_.y===I.y){if(_.x===I.x)return!0}else{const F=b*(_.x-I.x)-R*(_.y-I.y);if(F===0)return!0;if(F<0)continue;T=!T}}else{if(_.y!==I.y)continue;if(z.x<=_.x&&_.x<=I.x||I.x<=_.x&&_.x<=z.x)return!0}}return T}const i=ki.isClockWise,s=this.subPaths;if(s.length===0)return[];let l,c,u;const h=[];if(s.length===1)return c=s[0],u=new vs,u.curves=c.curves,h.push(u),h;let f=!i(s[0].getPoints());f=e?!f:f;const p=[],m=[];let v=[],y=0,S;m[y]=void 0,v[y]=[];for(let _=0,E=s.length;_<E;_++)c=s[_],S=c.getPoints(),l=i(S),l=e?!l:l,l?(!f&&m[y]&&y++,m[y]={s:new vs,p:S},m[y].s.curves=c.curves,f&&y++,v[y]=[]):v[y].push({h:c,p:S[0]});if(!m[0])return t(s);if(m.length>1){let _=!1,E=0;for(let w=0,T=m.length;w<T;w++)p[w]=[];for(let w=0,T=m.length;w<T;w++){const N=v[w];for(let P=0;P<N.length;P++){const I=N[P];let z=!0;for(let R=0;R<m.length;R++)n(I.p,m[R].p)&&(w!==R&&E++,z?(z=!1,p[R].push(I)):_=!0);z&&p[w].push(I)}}E>0&&_===!1&&(v=p)}let x;for(let _=0,E=m.length;_<E;_++){u=m[_].s,h.push(u),x=v[_];for(let w=0,T=x.length;w<T;w++)u.holes.push(x[w].h)}return h}}class Ub extends wi{constructor(e=1,t=1,n=1,i={}){console.warn('THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the "count" parameter to enable MRT.'),super(e,t,{...i,count:n}),this.isWebGLMultipleRenderTargets=!0}get texture(){return this.textures}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ou}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ou);const Ob=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Cd,AddEquation:Rr,AddOperation:Av,AdditiveAnimationBlendMode:Bd,AdditiveBlending:zf,AgXToneMapping:Pv,AlphaFormat:Ov,AlwaysCompare:e_,AlwaysDepth:_v,AlwaysStencilFunc:dd,AmbientLight:ny,AnimationAction:uy,AnimationClip:ka,AnimationLoader:FT,AnimationMixer:hb,AnimationObjectGroup:cb,AnimationUtils:NT,ArcCurve:C_,ArrayCamera:__,ArrowHelper:Lb,AttachedBindMode:Hf,Audio:ly,AudioAnalyser:$T,AudioContext:hp,AudioListener:JT,AudioLoader:YT,AxesHelper:Nb,BackSide:Ln,BasicDepthPacking:Xv,BasicShadowMap:Q0,BatchedMesh:A_,Bone:Jd,BooleanKeyframeTrack:ws,Box2:_b,Box3:Nn,Box3Helper:Pb,BoxGeometry:Ms,BoxHelper:Rb,BufferAttribute:Rt,BufferGeometry:ht,BufferGeometryLoader:ay,ByteType:Nv,Cache:ir,Camera:Xa,CameraHelper:Cb,CanvasTexture:iT,CapsuleGeometry:yu,CatmullRomCurve3:R_,CineonToneMapping:Cv,CircleGeometry:xu,ClampToEdgeWrapping:di,Clock:fp,Color:Le,ColorKeyframeTrack:ap,ColorManagement:bt,CompressedArrayTexture:tT,CompressedCubeTexture:nT,CompressedTexture:vu,CompressedTextureLoader:zT,ConeGeometry:Mu,ConstantAlphaFactor:mv,ConstantColorFactor:dv,CubeCamera:c_,CubeReflectionMapping:or,CubeRefractionMapping:Ir,CubeTexture:qa,CubeTextureLoader:BT,CubeUVReflectionMapping:To,CubicBezierCurve:$d,CubicBezierCurve3:P_,CubicInterpolant:Z_,CullFaceBack:Ff,CullFaceFront:K0,CullFaceFrontBack:Wx,CullFaceNone:J0,Curve:Ai,CurvePath:L_,CustomBlending:$0,CustomToneMapping:Rv,CylinderGeometry:Io,Cylindrical:vb,Data3DTexture:Vd,DataArrayTexture:hu,DataTexture:Pr,DataTextureLoader:kT,DataUtils:QM,DecrementStencilOp:tM,DecrementWrapStencilOp:iM,DefaultLoadingManager:_o,DepthFormat:ps,DepthStencilFormat:Mo,DepthTexture:qd,DetachedBindMode:Lv,DirectionalLight:ty,DirectionalLightHelper:bb,DiscreteInterpolant:J_,DisplayP3ColorSpace:uu,DodecahedronGeometry:Su,DoubleSide:Si,DstAlphaFactor:lv,DstColorFactor:uv,DynamicCopyUsage:_M,DynamicDrawUsage:fM,DynamicReadUsage:mM,EdgesGeometry:N_,EllipseCurve:_u,EqualCompare:Jv,EqualDepth:xv,EqualStencilFunc:aM,EquirectangularReflectionMapping:xa,EquirectangularRefractionMapping:Ma,Euler:ni,EventDispatcher:cr,ExtrudeGeometry:Eu,FileLoader:ar,Float16BufferAttribute:rS,Float32BufferAttribute:ke,FloatType:pi,Fog:pu,FogExp2:du,FramebufferTexture:eT,FrontSide:sr,Frustum:Ya,GLBufferAttribute:mb,GLSL1:xM,GLSL3:pd,GreaterCompare:Kv,GreaterDepth:Sv,GreaterEqualCompare:$v,GreaterEqualDepth:Mv,GreaterEqualStencilFunc:hM,GreaterStencilFunc:cM,GridHelper:Ab,Group:go,HalfFloatType:Ea,HemisphereLight:Q_,HemisphereLightHelper:Eb,IcosahedronGeometry:Au,ImageBitmapLoader:qT,ImageLoader:Ha,ImageUtils:r_,IncrementStencilOp:eM,IncrementWrapStencilOp:nM,InstancedBufferAttribute:Eo,InstancedBufferGeometry:oy,InstancedInterleavedBuffer:pb,InstancedMesh:E_,Int16BufferAttribute:nS,Int32BufferAttribute:iS,Int8BufferAttribute:$M,IntType:Id,InterleavedBuffer:mu,InterleavedBufferAttribute:ys,Interpolant:Ka,InterpolateDiscrete:Aa,InterpolateLinear:Ta,InterpolateSmooth:Kc,InvertStencilOp:rM,KeepStencilOp:rs,KeyframeTrack:Ti,LOD:S_,LatheGeometry:ja,Layers:gs,LessCompare:Zv,LessDepth:yv,LessEqualCompare:kd,LessEqualDepth:ya,LessEqualStencilFunc:lM,LessStencilFunc:oM,Light:Or,LightProbe:sy,Line:Lr,Line3:yb,LineBasicMaterial:Dn,LineCurve:ep,LineCurve3:I_,LineDashedMaterial:q_,LineLoop:T_,LineSegments:Hi,LinearDisplayP3ColorSpace:Wa,LinearFilter:tn,LinearInterpolant:op,LinearMipMapLinearFilter:jx,LinearMipMapNearestFilter:Yx,LinearMipmapLinearFilter:Oi,LinearMipmapNearestFilter:ma,LinearSRGBColorSpace:lr,LinearToneMapping:Tv,LinearTransfer:Ca,Loader:Gn,LoaderUtils:Md,LoadingManager:lp,LoopOnce:Vv,LoopPingPong:Wv,LoopRepeat:Gv,LuminanceAlphaFormat:Bv,LuminanceFormat:zv,MOUSE:Vx,Material:mn,MaterialLoader:Lu,MathUtils:ss,Matrix3:lt,Matrix4:$e,MaxEquation:iv,Mesh:nn,MeshBasicMaterial:Dr,MeshDepthMaterial:Yd,MeshDistanceMaterial:jd,MeshLambertMaterial:W_,MeshMatcapMaterial:X_,MeshNormalMaterial:G_,MeshPhongMaterial:H_,MeshPhysicalMaterial:k_,MeshStandardMaterial:rp,MeshToonMaterial:V_,MinEquation:nv,MirroredRepeatWrapping:wa,MixOperation:Ev,MultiplyBlending:kf,MultiplyOperation:Ga,NearestFilter:fn,NearestMipMapLinearFilter:qx,NearestMipMapNearestFilter:Xx,NearestMipmapLinearFilter:fo,NearestMipmapNearestFilter:Rd,NeutralToneMapping:Iv,NeverCompare:jv,NeverDepth:vv,NeverStencilFunc:sM,NoBlending:rr,NoColorSpace:tr,NoToneMapping:zi,NormalAnimationBlendMode:cu,NormalBlending:ds,NotEqualCompare:Qv,NotEqualDepth:wv,NotEqualStencilFunc:uM,NumberKeyframeTrack:za,Object3D:wt,ObjectLoader:WT,ObjectSpaceNormalMap:Yv,OctahedronGeometry:Za,OneFactor:sv,OneMinusConstantAlphaFactor:gv,OneMinusConstantColorFactor:pv,OneMinusDstAlphaFactor:cv,OneMinusDstColorFactor:hv,OneMinusSrcAlphaFactor:tu,OneMinusSrcColorFactor:av,OrthographicCamera:Ss,P3Primaries:Pa,PCFShadowMap:au,PCFSoftShadowMap:pa,PMREMGenerator:md,Path:Da,PerspectiveCamera:en,Plane:Cr,PlaneGeometry:Ro,PlaneHelper:Ib,PointLight:ey,PointLightHelper:Sb,Points:b_,PointsMaterial:Kd,PolarGridHelper:Tb,PolyhedronGeometry:Ur,PositionalAudio:QT,PropertyBinding:vt,PropertyMixer:cy,QuadraticBezierCurve:tp,QuadraticBezierCurve3:np,Quaternion:Vn,QuaternionKeyframeTrack:Lo,QuaternionLinearInterpolant:K_,RED_GREEN_RGTC2_Format:hd,RED_RGTC1_Format:Hv,REVISION:ou,RGBADepthPacking:qv,RGBAFormat:Hn,RGBAIntegerFormat:Fd,RGBA_ASTC_10x10_Format:sd,RGBA_ASTC_10x5_Format:nd,RGBA_ASTC_10x6_Format:id,RGBA_ASTC_10x8_Format:rd,RGBA_ASTC_12x10_Format:od,RGBA_ASTC_12x12_Format:ad,RGBA_ASTC_4x4_Format:jf,RGBA_ASTC_5x4_Format:Zf,RGBA_ASTC_5x5_Format:Jf,RGBA_ASTC_6x5_Format:Kf,RGBA_ASTC_6x6_Format:Qf,RGBA_ASTC_8x5_Format:$f,RGBA_ASTC_8x6_Format:ed,RGBA_ASTC_8x8_Format:td,RGBA_BPTC_Format:Jc,RGBA_ETC2_EAC_Format:Yf,RGBA_PVRTC_2BPPV1_Format:Xf,RGBA_PVRTC_4BPPV1_Format:Wf,RGBA_S3TC_DXT1_Format:Yc,RGBA_S3TC_DXT3_Format:jc,RGBA_S3TC_DXT5_Format:Zc,RGBFormat:Fv,RGB_BPTC_SIGNED_Format:ld,RGB_BPTC_UNSIGNED_Format:cd,RGB_ETC1_Format:zd,RGB_ETC2_Format:qf,RGB_PVRTC_2BPPV1_Format:Gf,RGB_PVRTC_4BPPV1_Format:Vf,RGB_S3TC_DXT1_Format:qc,RGFormat:kv,RGIntegerFormat:Od,RawShaderMaterial:B_,Ray:Co,Raycaster:hy,Rec709Primaries:Ra,RectAreaLight:iy,RedFormat:Dd,RedIntegerFormat:Ud,ReinhardToneMapping:bv,RenderTarget:s_,RepeatWrapping:Sa,ReplaceStencilOp:$x,ReverseSubtractEquation:tv,RingGeometry:Tu,SIGNED_RED_GREEN_RGTC2_Format:fd,SIGNED_RED_RGTC1_Format:ud,SRGBColorSpace:fi,SRGBTransfer:Ot,Scene:nu,ShaderChunk:ut,ShaderLib:Mi,ShaderMaterial:Ei,ShadowMaterial:z_,Shape:vs,ShapeGeometry:bu,ShapePath:Db,ShapeUtils:ki,ShortType:Dv,Skeleton:gu,SkeletonHelper:Mb,SkinnedMesh:w_,Source:us,Sphere:En,SphereGeometry:Ja,Spherical:gb,SphericalHarmonics3:ry,SplineCurve:ip,SpotLight:$_,SpotLightHelper:xb,Sprite:M_,SpriteMaterial:Zd,SrcAlphaFactor:eu,SrcAlphaSaturateFactor:fv,SrcColorFactor:ov,StaticCopyUsage:vM,StaticDrawUsage:Ia,StaticReadUsage:pM,StereoCamera:jT,StreamCopyUsage:yM,StreamDrawUsage:dM,StreamReadUsage:gM,StringKeyframeTrack:Es,SubtractEquation:ev,SubtractiveBlending:Bf,TOUCH:Gx,TangentSpaceNormalMap:Nr,TetrahedronGeometry:Cu,Texture:Gt,TextureLoader:cp,TorusGeometry:Ru,TorusKnotGeometry:Pu,Triangle:ei,TriangleFanDrawMode:Kx,TriangleStripDrawMode:Jx,TrianglesDrawMode:Zx,TubeGeometry:Iu,UVMapping:lu,Uint16BufferAttribute:Gd,Uint32BufferAttribute:Wd,Uint8BufferAttribute:eS,Uint8ClampedBufferAttribute:tS,Uniform:mp,UniformsGroup:db,UniformsLib:Ce,UniformsUtils:l_,UnsignedByteType:Bi,UnsignedInt248Type:bo,UnsignedInt5999Type:Uv,UnsignedIntType:_s,UnsignedShort4444Type:Ld,UnsignedShort5551Type:Nd,UnsignedShortType:Pd,VSMShadowMap:xi,Vector2:he,Vector3:U,Vector4:Ct,VectorKeyframeTrack:Ba,VideoTexture:$A,WebGL3DRenderTarget:VM,WebGLArrayRenderTarget:HM,WebGLCoordinateSystem:Fi,WebGLCubeRenderTarget:u_,WebGLMultipleRenderTargets:Ub,WebGLRenderTarget:wi,WebGLRenderer:y_,WebGLUtils:v_,WebGPUCoordinateSystem:La,WireframeGeometry:F_,WrapAroundEnding:ba,ZeroCurvatureEnding:ls,ZeroFactor:rv,ZeroSlopeEnding:cs,ZeroStencilOp:Qx,createCanvasElement:n_},Symbol.toStringTag,{value:"Module"}));var dy={exports:{}},As={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */As.ConcurrentRoot=1;As.ContinuousEventPriority=4;As.DefaultEventPriority=16;As.DiscreteEventPriority=1;As.IdleEventPriority=536870912;As.LegacyRoot=0;dy.exports=As;var yo=dy.exports;function Fb(r){let e;const t=new Set,n=(h,f)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=f?p:Object.assign({},e,p),t.forEach(v=>v(e,m))}},i=()=>e,s=(h,f=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=f(e);function v(){const y=f(e);if(!p(m,y)){const S=m;h(m=y,S)}}return t.add(v),()=>t.delete(v)},u={setState:n,getState:i,subscribe:(h,f,p)=>f||p?s(h,f,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=r(n,i,u),u}const zb=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),P0=zb?de.useEffect:de.useLayoutEffect;function py(r){const e=typeof r=="function"?Fb(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=de.useReducer(x=>x+1,0),l=e.getState(),c=de.useRef(l),u=de.useRef(n),h=de.useRef(i),f=de.useRef(!1),p=de.useRef();p.current===void 0&&(p.current=n(l));let m,v=!1;(c.current!==l||u.current!==n||h.current!==i||f.current)&&(m=n(l),v=!i(p.current,m)),P0(()=>{v&&(p.current=m),c.current=l,u.current=n,h.current=i,f.current=!1});const y=de.useRef(l);P0(()=>{const x=()=>{try{const E=e.getState(),w=u.current(E);h.current(p.current,w)||(c.current=E,p.current=w,s())}catch{f.current=!0,s()}},_=e.subscribe(x);return e.getState()!==y.current&&x(),_},[]);const S=v?m:p.current;return de.useDebugValue(S),S};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}var my={exports:{}},gy={exports:{}},vy={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(r){function e(k,K){var j=k.length;k.push(K);e:for(;0<j;){var ue=j-1>>>1,Ae=k[ue];if(0<i(Ae,K))k[ue]=K,k[j]=Ae,j=ue;else break e}}function t(k){return k.length===0?null:k[0]}function n(k){if(k.length===0)return null;var K=k[0],j=k.pop();if(j!==K){k[0]=j;e:for(var ue=0,Ae=k.length,Ne=Ae>>>1;ue<Ne;){var te=2*(ue+1)-1,ge=k[te],be=te+1,Me=k[be];if(0>i(ge,j))be<Ae&&0>i(Me,ge)?(k[ue]=Me,k[be]=j,ue=be):(k[ue]=ge,k[te]=j,ue=te);else if(be<Ae&&0>i(Me,j))k[ue]=Me,k[be]=j,ue=be;else break e}}return K}function i(k,K){var j=k.sortIndex-K.sortIndex;return j!==0?j:k.id-K.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var l=Date,c=l.now();r.unstable_now=function(){return l.now()-c}}var u=[],h=[],f=1,p=null,m=3,v=!1,y=!1,S=!1,x=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function w(k){for(var K=t(h);K!==null;){if(K.callback===null)n(h);else if(K.startTime<=k)n(h),K.sortIndex=K.expirationTime,e(u,K);else break;K=t(h)}}function T(k){if(S=!1,w(k),!y)if(t(u)!==null)y=!0,ae(N);else{var K=t(h);K!==null&&ve(T,K.startTime-k)}}function N(k,K){y=!1,S&&(S=!1,_(z),z=-1),v=!0;var j=m;try{for(w(K),p=t(u);p!==null&&(!(p.expirationTime>K)||k&&!F());){var ue=p.callback;if(typeof ue=="function"){p.callback=null,m=p.priorityLevel;var Ae=ue(p.expirationTime<=K);K=r.unstable_now(),typeof Ae=="function"?p.callback=Ae:p===t(u)&&n(u),w(K)}else n(u);p=t(u)}if(p!==null)var Ne=!0;else{var te=t(h);te!==null&&ve(T,te.startTime-K),Ne=!1}return Ne}finally{p=null,m=j,v=!1}}var P=!1,I=null,z=-1,R=5,b=-1;function F(){return!(r.unstable_now()-b<R)}function X(){if(I!==null){var k=r.unstable_now();b=k;var K=!0;try{K=I(!0,k)}finally{K?H():(P=!1,I=null)}}else P=!1}var H;if(typeof E=="function")H=function(){E(X)};else if(typeof MessageChannel<"u"){var Z=new MessageChannel,$=Z.port2;Z.port1.onmessage=X,H=function(){$.postMessage(null)}}else H=function(){x(X,0)};function ae(k){I=k,P||(P=!0,H())}function ve(k,K){z=x(function(){k(r.unstable_now())},K)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(k){k.callback=null},r.unstable_continueExecution=function(){y||v||(y=!0,ae(N))},r.unstable_forceFrameRate=function(k){0>k||125<k?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):R=0<k?Math.floor(1e3/k):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(k){switch(m){case 1:case 2:case 3:var K=3;break;default:K=m}var j=m;m=K;try{return k()}finally{m=j}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(k,K){switch(k){case 1:case 2:case 3:case 4:case 5:break;default:k=3}var j=m;m=k;try{return K()}finally{m=j}},r.unstable_scheduleCallback=function(k,K,j){var ue=r.unstable_now();switch(typeof j=="object"&&j!==null?(j=j.delay,j=typeof j=="number"&&0<j?ue+j:ue):j=ue,k){case 1:var Ae=-1;break;case 2:Ae=250;break;case 5:Ae=1073741823;break;case 4:Ae=1e4;break;default:Ae=5e3}return Ae=j+Ae,k={id:f++,callback:K,priorityLevel:k,startTime:j,expirationTime:Ae,sortIndex:-1},j>ue?(k.sortIndex=j,e(h,k),t(u)===null&&k===t(h)&&(S?(_(z),z=-1):S=!0,ve(T,j-ue))):(k.sortIndex=Ae,e(u,k),y||v||(y=!0,ae(N))),k},r.unstable_shouldYield=F,r.unstable_wrapCallback=function(k){var K=m;return function(){var j=m;m=K;try{return k.apply(this,arguments)}finally{m=j}}}})(vy);gy.exports=vy;var wd=gy.exports;/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Bb=function(e){var t={},n=de,i=wd,s=Object.assign;function l(o){for(var a="https://reactjs.org/docs/error-decoder.html?invariant="+o,d=1;d<arguments.length;d++)a+="&args[]="+encodeURIComponent(arguments[d]);return"Minified React error #"+o+"; visit "+a+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),f=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),v=Symbol.for("react.provider"),y=Symbol.for("react.context"),S=Symbol.for("react.forward_ref"),x=Symbol.for("react.suspense"),_=Symbol.for("react.suspense_list"),E=Symbol.for("react.memo"),w=Symbol.for("react.lazy"),T=Symbol.for("react.offscreen"),N=Symbol.iterator;function P(o){return o===null||typeof o!="object"?null:(o=N&&o[N]||o["@@iterator"],typeof o=="function"?o:null)}function I(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case f:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case x:return"Suspense";case _:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Consumer";case v:return(o._context.displayName||"Context")+".Provider";case S:var a=o.render;return o=o.displayName,o||(o=a.displayName||a.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case E:return a=o.displayName||null,a!==null?a:I(o.type)||"Memo";case w:a=o._payload,o=o._init;try{return I(o(a))}catch{}}return null}function z(o){var a=o.type;switch(o.tag){case 24:return"Cache";case 9:return(a.displayName||"Context")+".Consumer";case 10:return(a._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=a.render,o=o.displayName||o.name||"",a.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return a;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return I(a);case 8:return a===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof a=="function")return a.displayName||a.name||null;if(typeof a=="string")return a}return null}function R(o){var a=o,d=o;if(o.alternate)for(;a.return;)a=a.return;else{o=a;do a=o,a.flags&4098&&(d=a.return),o=a.return;while(o)}return a.tag===3?d:null}function b(o){if(R(o)!==o)throw Error(l(188))}function F(o){var a=o.alternate;if(!a){if(a=R(o),a===null)throw Error(l(188));return a!==o?null:o}for(var d=o,g=a;;){var M=d.return;if(M===null)break;var A=M.alternate;if(A===null){if(g=M.return,g!==null){d=g;continue}break}if(M.child===A.child){for(A=M.child;A;){if(A===d)return b(M),o;if(A===g)return b(M),a;A=A.sibling}throw Error(l(188))}if(d.return!==g.return)d=M,g=A;else{for(var O=!1,G=M.child;G;){if(G===d){O=!0,d=M,g=A;break}if(G===g){O=!0,g=M,d=A;break}G=G.sibling}if(!O){for(G=A.child;G;){if(G===d){O=!0,d=A,g=M;break}if(G===g){O=!0,g=A,d=M;break}G=G.sibling}if(!O)throw Error(l(189))}}if(d.alternate!==g)throw Error(l(190))}if(d.tag!==3)throw Error(l(188));return d.stateNode.current===d?o:a}function X(o){return o=F(o),o!==null?H(o):null}function H(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var a=H(o);if(a!==null)return a;o=o.sibling}return null}function Z(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var a=Z(o);if(a!==null)return a}o=o.sibling}return null}var $=Array.isArray,ae=e.getPublicInstance,ve=e.getRootHostContext,k=e.getChildHostContext,K=e.prepareForCommit,j=e.resetAfterCommit,ue=e.createInstance,Ae=e.appendInitialChild,Ne=e.finalizeInitialChildren,te=e.prepareUpdate,ge=e.shouldSetTextContent,be=e.createTextInstance,Me=e.scheduleTimeout,je=e.cancelTimeout,tt=e.noTimeout,Fe=e.isPrimaryRenderer,V=e.supportsMutation,le=e.supportsPersistence,re=e.supportsHydration,ye=e.getInstanceFromNode,_e=e.preparePortalMount,xe=e.getCurrentEventPriority,D=e.detachDeletedInstance,C=e.supportsMicrotasks,Y=e.scheduleMicrotask,se=e.supportsTestSelectors,ce=e.findFiberRoot,pe=e.getBoundingRect,qe=e.getTextContent,me=e.isHiddenSubtree,He=e.matchAccessibilityRole,Ze=e.setFocusIfFocusable,Se=e.setupIntersectionObserver,De=e.appendChild,it=e.appendChildToContainer,ze=e.commitTextUpdate,Be=e.commitMount,pt=e.commitUpdate,mt=e.insertBefore,Et=e.insertInContainerBefore,_t=e.removeChild,Dt=e.removeChildFromContainer,Ge=e.resetTextContent,B=e.hideInstance,Te=e.hideTextInstance,Ee=e.unhideInstance,Ye=e.unhideTextInstance,Je=e.clearContainer,Pt=e.cloneInstance,Lt=e.createContainerChildSet,Ut=e.appendChildToContainerChildSet,an=e.finalizeContainerChildren,It=e.replaceContainerChildren,Wn=e.cloneHiddenInstance,Xn=e.cloneHiddenTextInstance,Vi=e.canHydrateInstance,el=e.canHydrateTextInstance,tl=e.canHydrateSuspenseInstance,nl=e.isSuspenseInstancePending,ur=e.isSuspenseInstanceFallback,il=e.registerSuspenseInstanceRetry,bi=e.getNextHydratableSibling,rl=e.getFirstHydratableChild,sl=e.getFirstHydratableChildWithinContainer,Du=e.getFirstHydratableChildWithinSuspenseInstance,Uu=e.hydrateInstance,Ou=e.hydrateTextInstance,L=e.hydrateSuspenseInstance,q=e.getNextHydratableInstanceAfterSuspenseInstance,ee=e.commitHydratedContainer,ne=e.commitHydratedSuspenseInstance,Q=e.clearSuspenseBoundary,Pe=e.clearSuspenseBoundaryFromContainer,We=e.shouldDeleteUnhydratedTailInstances,Qe=e.didNotMatchHydratedContainerTextInstance,nt=e.didNotMatchHydratedTextInstance,rt;function et(o){if(rt===void 0)try{throw Error()}catch(d){var a=d.stack.trim().match(/\n( *(at )?)/);rt=a&&a[1]||""}return`
`+rt+o}var st=!1;function Ft(o,a){if(!o||st)return"";st=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(a)if(a=function(){throw Error()},Object.defineProperty(a.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(a,[])}catch(we){var g=we}Reflect.construct(o,[],a)}else{try{a.call()}catch(we){g=we}o.call(a.prototype)}else{try{throw Error()}catch(we){g=we}o()}}catch(we){if(we&&g&&typeof we.stack=="string"){for(var M=we.stack.split(`
`),A=g.stack.split(`
`),O=M.length-1,G=A.length-1;1<=O&&0<=G&&M[O]!==A[G];)G--;for(;1<=O&&0<=G;O--,G--)if(M[O]!==A[G]){if(O!==1||G!==1)do if(O--,G--,0>G||M[O]!==A[G]){var oe=`
`+M[O].replace(" at new "," at ");return o.displayName&&oe.includes("<anonymous>")&&(oe=oe.replace("<anonymous>",o.displayName)),oe}while(1<=O&&0<=G);break}}}finally{st=!1,Error.prepareStackTrace=d}return(o=o?o.displayName||o.name:"")?et(o):""}var An=Object.prototype.hasOwnProperty,Wt=[],gn=-1;function yt(o){return{current:o}}function Ue(o){0>gn||(o.current=Wt[gn],Wt[gn]=null,gn--)}function Tt(o,a){gn++,Wt[gn]=o.current,o.current=a}var gt={},Bt=yt(gt),dn=yt(!1),qn=gt;function Ci(o,a){var d=o.type.contextTypes;if(!d)return gt;var g=o.stateNode;if(g&&g.__reactInternalMemoizedUnmaskedChildContext===a)return g.__reactInternalMemoizedMaskedChildContext;var M={},A;for(A in d)M[A]=a[A];return g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=a,o.__reactInternalMemoizedMaskedChildContext=M),M}function At(o){return o=o.childContextTypes,o!=null}function Yn(){Ue(dn),Ue(Bt)}function Ts(o,a,d){if(Bt.current!==gt)throw Error(l(168));Tt(Bt,a),Tt(dn,d)}function Tn(o,a,d){var g=o.stateNode;if(a=a.childContextTypes,typeof g.getChildContext!="function")return d;g=g.getChildContext();for(var M in g)if(!(M in a))throw Error(l(108,z(o)||"Unknown",M));return s({},d,g)}function hr(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||gt,qn=Bt.current,Tt(Bt,o),Tt(dn,dn.current),!0}function ol(o,a,d){var g=o.stateNode;if(!g)throw Error(l(169));d?(o=Tn(o,a,qn),g.__reactInternalMemoizedMergedChildContext=o,Ue(dn),Ue(Bt),Tt(Bt,o)):Ue(dn),Tt(dn,d)}var Un=Math.clz32?Math.clz32:Hy,By=Math.log,ky=Math.LN2;function Hy(o){return o>>>=0,o===0?32:31-(By(o)/ky|0)|0}var al=64,ll=4194304;function No(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function cl(o,a){var d=o.pendingLanes;if(d===0)return 0;var g=0,M=o.suspendedLanes,A=o.pingedLanes,O=d&268435455;if(O!==0){var G=O&~M;G!==0?g=No(G):(A&=O,A!==0&&(g=No(A)))}else O=d&~M,O!==0?g=No(O):A!==0&&(g=No(A));if(g===0)return 0;if(a!==0&&a!==g&&!(a&M)&&(M=g&-g,A=a&-a,M>=A||M===16&&(A&4194240)!==0))return a;if(g&4&&(g|=d&16),a=o.entangledLanes,a!==0)for(o=o.entanglements,a&=g;0<a;)d=31-Un(a),M=1<<d,g|=o[d],a&=~M;return g}function Vy(o,a){switch(o){case 1:case 2:case 4:return a+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Gy(o,a){for(var d=o.suspendedLanes,g=o.pingedLanes,M=o.expirationTimes,A=o.pendingLanes;0<A;){var O=31-Un(A),G=1<<O,oe=M[O];oe===-1?(!(G&d)||G&g)&&(M[O]=Vy(G,a)):oe<=a&&(o.expiredLanes|=G),A&=~G}}function Fu(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function zu(o){for(var a=[],d=0;31>d;d++)a.push(o);return a}function Do(o,a,d){o.pendingLanes|=a,a!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,a=31-Un(a),o[a]=d}function Wy(o,a){var d=o.pendingLanes&~a;o.pendingLanes=a,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=a,o.mutableReadLanes&=a,o.entangledLanes&=a,a=o.entanglements;var g=o.eventTimes;for(o=o.expirationTimes;0<d;){var M=31-Un(d),A=1<<M;a[M]=0,g[M]=-1,o[M]=-1,d&=~A}}function Bu(o,a){var d=o.entangledLanes|=a;for(o=o.entanglements;d;){var g=31-Un(d),M=1<<g;M&a|o[g]&a&&(o[g]|=a),d&=~M}}var xt=0;function yp(o){return o&=-o,1<o?4<o?o&268435455?16:536870912:4:1}var ku=i.unstable_scheduleCallback,xp=i.unstable_cancelCallback,Xy=i.unstable_shouldYield,qy=i.unstable_requestPaint,ln=i.unstable_now,Hu=i.unstable_ImmediatePriority,Yy=i.unstable_UserBlockingPriority,Vu=i.unstable_NormalPriority,jy=i.unstable_IdlePriority,ul=null,Ri=null;function Zy(o){if(Ri&&typeof Ri.onCommitFiberRoot=="function")try{Ri.onCommitFiberRoot(ul,o,void 0,(o.current.flags&128)===128)}catch{}}function Jy(o,a){return o===a&&(o!==0||1/o===1/a)||o!==o&&a!==a}var Pi=typeof Object.is=="function"?Object.is:Jy,Gi=null,hl=!1,Gu=!1;function Mp(o){Gi===null?Gi=[o]:Gi.push(o)}function Ky(o){hl=!0,Mp(o)}function Ii(){if(!Gu&&Gi!==null){Gu=!0;var o=0,a=xt;try{var d=Gi;for(xt=1;o<d.length;o++){var g=d[o];do g=g(!0);while(g!==null)}Gi=null,hl=!1}catch(M){throw Gi!==null&&(Gi=Gi.slice(o+1)),ku(Hu,Ii),M}finally{xt=a,Gu=!1}}return null}var Qy=c.ReactCurrentBatchConfig;function fl(o,a){if(Pi(o,a))return!0;if(typeof o!="object"||o===null||typeof a!="object"||a===null)return!1;var d=Object.keys(o),g=Object.keys(a);if(d.length!==g.length)return!1;for(g=0;g<d.length;g++){var M=d[g];if(!An.call(a,M)||!Pi(o[M],a[M]))return!1}return!0}function $y(o){switch(o.tag){case 5:return et(o.type);case 16:return et("Lazy");case 13:return et("Suspense");case 19:return et("SuspenseList");case 0:case 2:case 15:return o=Ft(o.type,!1),o;case 11:return o=Ft(o.type.render,!1),o;case 1:return o=Ft(o.type,!0),o;default:return""}}function mi(o,a){if(o&&o.defaultProps){a=s({},a),o=o.defaultProps;for(var d in o)a[d]===void 0&&(a[d]=o[d]);return a}return a}var dl=yt(null),pl=null,bs=null,Wu=null;function Xu(){Wu=bs=pl=null}function Sp(o,a,d){Fe?(Tt(dl,a._currentValue),a._currentValue=d):(Tt(dl,a._currentValue2),a._currentValue2=d)}function qu(o){var a=dl.current;Ue(dl),Fe?o._currentValue=a:o._currentValue2=a}function Yu(o,a,d){for(;o!==null;){var g=o.alternate;if((o.childLanes&a)!==a?(o.childLanes|=a,g!==null&&(g.childLanes|=a)):g!==null&&(g.childLanes&a)!==a&&(g.childLanes|=a),o===d)break;o=o.return}}function Cs(o,a){pl=o,Wu=bs=null,o=o.dependencies,o!==null&&o.firstContext!==null&&(o.lanes&a&&(Jn=!0),o.firstContext=null)}function ii(o){var a=Fe?o._currentValue:o._currentValue2;if(Wu!==o)if(o={context:o,memoizedValue:a,next:null},bs===null){if(pl===null)throw Error(l(308));bs=o,pl.dependencies={lanes:0,firstContext:o}}else bs=bs.next=o;return a}var Li=null,fr=!1;function ju(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function wp(o,a){o=o.updateQueue,a.updateQueue===o&&(a.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function Wi(o,a){return{eventTime:o,lane:a,tag:0,payload:null,callback:null,next:null}}function dr(o,a){var d=o.updateQueue;d!==null&&(d=d.shared,Kt!==null&&o.mode&1&&!(dt&2)?(o=d.interleaved,o===null?(a.next=a,Li===null?Li=[d]:Li.push(d)):(a.next=o.next,o.next=a),d.interleaved=a):(o=d.pending,o===null?a.next=a:(a.next=o.next,o.next=a),d.pending=a))}function ml(o,a,d){if(a=a.updateQueue,a!==null&&(a=a.shared,(d&4194240)!==0)){var g=a.lanes;g&=o.pendingLanes,d|=g,a.lanes=d,Bu(o,d)}}function Ep(o,a){var d=o.updateQueue,g=o.alternate;if(g!==null&&(g=g.updateQueue,d===g)){var M=null,A=null;if(d=d.firstBaseUpdate,d!==null){do{var O={eventTime:d.eventTime,lane:d.lane,tag:d.tag,payload:d.payload,callback:d.callback,next:null};A===null?M=A=O:A=A.next=O,d=d.next}while(d!==null);A===null?M=A=a:A=A.next=a}else M=A=a;d={baseState:g.baseState,firstBaseUpdate:M,lastBaseUpdate:A,shared:g.shared,effects:g.effects},o.updateQueue=d;return}o=d.lastBaseUpdate,o===null?d.firstBaseUpdate=a:o.next=a,d.lastBaseUpdate=a}function gl(o,a,d,g){var M=o.updateQueue;fr=!1;var A=M.firstBaseUpdate,O=M.lastBaseUpdate,G=M.shared.pending;if(G!==null){M.shared.pending=null;var oe=G,we=oe.next;oe.next=null,O===null?A=we:O.next=we,O=oe;var Oe=o.alternate;Oe!==null&&(Oe=Oe.updateQueue,G=Oe.lastBaseUpdate,G!==O&&(G===null?Oe.firstBaseUpdate=we:G.next=we,Oe.lastBaseUpdate=oe))}if(A!==null){var ot=M.baseState;O=0,Oe=we=oe=null,G=A;do{var Ke=G.lane,Nt=G.eventTime;if((g&Ke)===Ke){Oe!==null&&(Oe=Oe.next={eventTime:Nt,lane:0,tag:G.tag,payload:G.payload,callback:G.callback,next:null});e:{var Xe=o,xn=G;switch(Ke=a,Nt=d,xn.tag){case 1:if(Xe=xn.payload,typeof Xe=="function"){ot=Xe.call(Nt,ot,Ke);break e}ot=Xe;break e;case 3:Xe.flags=Xe.flags&-65537|128;case 0:if(Xe=xn.payload,Ke=typeof Xe=="function"?Xe.call(Nt,ot,Ke):Xe,Ke==null)break e;ot=s({},ot,Ke);break e;case 2:fr=!0}}G.callback!==null&&G.lane!==0&&(o.flags|=64,Ke=M.effects,Ke===null?M.effects=[G]:Ke.push(G))}else Nt={eventTime:Nt,lane:Ke,tag:G.tag,payload:G.payload,callback:G.callback,next:null},Oe===null?(we=Oe=Nt,oe=ot):Oe=Oe.next=Nt,O|=Ke;if(G=G.next,G===null){if(G=M.shared.pending,G===null)break;Ke=G,G=Ke.next,Ke.next=null,M.lastBaseUpdate=Ke,M.shared.pending=null}}while(!0);if(Oe===null&&(oe=ot),M.baseState=oe,M.firstBaseUpdate=we,M.lastBaseUpdate=Oe,a=M.shared.interleaved,a!==null){M=a;do O|=M.lane,M=M.next;while(M!==a)}else A===null&&(M.shared.lanes=0);Fs|=O,o.lanes=O,o.memoizedState=ot}}function Ap(o,a,d){if(o=a.effects,a.effects=null,o!==null)for(a=0;a<o.length;a++){var g=o[a],M=g.callback;if(M!==null){if(g.callback=null,g=d,typeof M!="function")throw Error(l(191,M));M.call(g)}}}var Tp=new n.Component().refs;function Zu(o,a,d,g){a=o.memoizedState,d=d(g,a),d=d==null?a:s({},a,d),o.memoizedState=d,o.lanes===0&&(o.updateQueue.baseState=d)}var vl={isMounted:function(o){return(o=o._reactInternals)?R(o)===o:!1},enqueueSetState:function(o,a,d){o=o._reactInternals;var g=Cn(),M=gr(o),A=Wi(g,M);A.payload=a,d!=null&&(A.callback=d),dr(o,A),a=li(o,M,g),a!==null&&ml(a,o,M)},enqueueReplaceState:function(o,a,d){o=o._reactInternals;var g=Cn(),M=gr(o),A=Wi(g,M);A.tag=1,A.payload=a,d!=null&&(A.callback=d),dr(o,A),a=li(o,M,g),a!==null&&ml(a,o,M)},enqueueForceUpdate:function(o,a){o=o._reactInternals;var d=Cn(),g=gr(o),M=Wi(d,g);M.tag=2,a!=null&&(M.callback=a),dr(o,M),a=li(o,g,d),a!==null&&ml(a,o,g)}};function bp(o,a,d,g,M,A,O){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(g,A,O):a.prototype&&a.prototype.isPureReactComponent?!fl(d,g)||!fl(M,A):!0}function Cp(o,a,d){var g=!1,M=gt,A=a.contextType;return typeof A=="object"&&A!==null?A=ii(A):(M=At(a)?qn:Bt.current,g=a.contextTypes,A=(g=g!=null)?Ci(o,M):gt),a=new a(d,A),o.memoizedState=a.state!==null&&a.state!==void 0?a.state:null,a.updater=vl,o.stateNode=a,a._reactInternals=o,g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=M,o.__reactInternalMemoizedMaskedChildContext=A),a}function Rp(o,a,d,g){o=a.state,typeof a.componentWillReceiveProps=="function"&&a.componentWillReceiveProps(d,g),typeof a.UNSAFE_componentWillReceiveProps=="function"&&a.UNSAFE_componentWillReceiveProps(d,g),a.state!==o&&vl.enqueueReplaceState(a,a.state,null)}function Ju(o,a,d,g){var M=o.stateNode;M.props=d,M.state=o.memoizedState,M.refs=Tp,ju(o);var A=a.contextType;typeof A=="object"&&A!==null?M.context=ii(A):(A=At(a)?qn:Bt.current,M.context=Ci(o,A)),M.state=o.memoizedState,A=a.getDerivedStateFromProps,typeof A=="function"&&(Zu(o,a,A,d),M.state=o.memoizedState),typeof a.getDerivedStateFromProps=="function"||typeof M.getSnapshotBeforeUpdate=="function"||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(a=M.state,typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount(),a!==M.state&&vl.enqueueReplaceState(M,M.state,null),gl(o,d,M,g),M.state=o.memoizedState),typeof M.componentDidMount=="function"&&(o.flags|=4194308)}var Rs=[],Ps=0,_l=null,yl=0,ri=[],si=0,Fr=null,Xi=1,qi="";function zr(o,a){Rs[Ps++]=yl,Rs[Ps++]=_l,_l=o,yl=a}function Pp(o,a,d){ri[si++]=Xi,ri[si++]=qi,ri[si++]=Fr,Fr=o;var g=Xi;o=qi;var M=32-Un(g)-1;g&=~(1<<M),d+=1;var A=32-Un(a)+M;if(30<A){var O=M-M%5;A=(g&(1<<O)-1).toString(32),g>>=O,M-=O,Xi=1<<32-Un(a)+M|d<<M|g,qi=A+o}else Xi=1<<A|d<<M|g,qi=o}function Ku(o){o.return!==null&&(zr(o,1),Pp(o,1,0))}function Qu(o){for(;o===_l;)_l=Rs[--Ps],Rs[Ps]=null,yl=Rs[--Ps],Rs[Ps]=null;for(;o===Fr;)Fr=ri[--si],ri[si]=null,qi=ri[--si],ri[si]=null,Xi=ri[--si],ri[si]=null}var jn=null,Zn=null,kt=!1,Uo=!1,gi=null;function Ip(o,a){var d=ci(5,null,null,0);d.elementType="DELETED",d.stateNode=a,d.return=o,a=o.deletions,a===null?(o.deletions=[d],o.flags|=16):a.push(d)}function Lp(o,a){switch(o.tag){case 5:return a=Vi(a,o.type,o.pendingProps),a!==null?(o.stateNode=a,jn=o,Zn=rl(a),!0):!1;case 6:return a=el(a,o.pendingProps),a!==null?(o.stateNode=a,jn=o,Zn=null,!0):!1;case 13:if(a=tl(a),a!==null){var d=Fr!==null?{id:Xi,overflow:qi}:null;return o.memoizedState={dehydrated:a,treeContext:d,retryLane:1073741824},d=ci(18,null,null,0),d.stateNode=a,d.return=o,o.child=d,jn=o,Zn=null,!0}return!1;default:return!1}}function $u(o){return(o.mode&1)!==0&&(o.flags&128)===0}function eh(o){if(kt){var a=Zn;if(a){var d=a;if(!Lp(o,a)){if($u(o))throw Error(l(418));a=bi(d);var g=jn;a&&Lp(o,a)?Ip(g,d):(o.flags=o.flags&-4097|2,kt=!1,jn=o)}}else{if($u(o))throw Error(l(418));o.flags=o.flags&-4097|2,kt=!1,jn=o}}}function Np(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;jn=o}function Oo(o){if(!re||o!==jn)return!1;if(!kt)return Np(o),kt=!0,!1;if(o.tag!==3&&(o.tag!==5||We(o.type)&&!ge(o.type,o.memoizedProps))){var a=Zn;if(a){if($u(o)){for(o=Zn;o;)o=bi(o);throw Error(l(418))}for(;a;)Ip(o,a),a=bi(a)}}if(Np(o),o.tag===13){if(!re)throw Error(l(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));Zn=q(o)}else Zn=jn?bi(o.stateNode):null;return!0}function Is(){re&&(Zn=jn=null,Uo=kt=!1)}function th(o){gi===null?gi=[o]:gi.push(o)}function Fo(o,a,d){if(o=d.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(d._owner){if(d=d._owner,d){if(d.tag!==1)throw Error(l(309));var g=d.stateNode}if(!g)throw Error(l(147,o));var M=g,A=""+o;return a!==null&&a.ref!==null&&typeof a.ref=="function"&&a.ref._stringRef===A?a.ref:(a=function(O){var G=M.refs;G===Tp&&(G=M.refs={}),O===null?delete G[A]:G[A]=O},a._stringRef=A,a)}if(typeof o!="string")throw Error(l(284));if(!d._owner)throw Error(l(290,o))}return o}function xl(o,a){throw o=Object.prototype.toString.call(a),Error(l(31,o==="[object Object]"?"object with keys {"+Object.keys(a).join(", ")+"}":o))}function Dp(o){var a=o._init;return a(o._payload)}function Up(o){function a(J,W){if(o){var ie=J.deletions;ie===null?(J.deletions=[W],J.flags|=16):ie.push(W)}}function d(J,W){if(!o)return null;for(;W!==null;)a(J,W),W=W.sibling;return null}function g(J,W){for(J=new Map;W!==null;)W.key!==null?J.set(W.key,W):J.set(W.index,W),W=W.sibling;return J}function M(J,W){return J=_r(J,W),J.index=0,J.sibling=null,J}function A(J,W,ie){return J.index=ie,o?(ie=J.alternate,ie!==null?(ie=ie.index,ie<W?(J.flags|=2,W):ie):(J.flags|=2,W)):(J.flags|=1048576,W)}function O(J){return o&&J.alternate===null&&(J.flags|=2),J}function G(J,W,ie,Ie){return W===null||W.tag!==6?(W=zh(ie,J.mode,Ie),W.return=J,W):(W=M(W,ie),W.return=J,W)}function oe(J,W,ie,Ie){var Ve=ie.type;return Ve===f?Oe(J,W,ie.props.children,Ie,ie.key):W!==null&&(W.elementType===Ve||typeof Ve=="object"&&Ve!==null&&Ve.$$typeof===w&&Dp(Ve)===W.type)?(Ie=M(W,ie.props),Ie.ref=Fo(J,W,ie),Ie.return=J,Ie):(Ie=Kl(ie.type,ie.key,ie.props,null,J.mode,Ie),Ie.ref=Fo(J,W,ie),Ie.return=J,Ie)}function we(J,W,ie,Ie){return W===null||W.tag!==4||W.stateNode.containerInfo!==ie.containerInfo||W.stateNode.implementation!==ie.implementation?(W=Bh(ie,J.mode,Ie),W.return=J,W):(W=M(W,ie.children||[]),W.return=J,W)}function Oe(J,W,ie,Ie,Ve){return W===null||W.tag!==7?(W=Xr(ie,J.mode,Ie,Ve),W.return=J,W):(W=M(W,ie),W.return=J,W)}function ot(J,W,ie){if(typeof W=="string"&&W!==""||typeof W=="number")return W=zh(""+W,J.mode,ie),W.return=J,W;if(typeof W=="object"&&W!==null){switch(W.$$typeof){case u:return ie=Kl(W.type,W.key,W.props,null,J.mode,ie),ie.ref=Fo(J,null,W),ie.return=J,ie;case h:return W=Bh(W,J.mode,ie),W.return=J,W;case w:var Ie=W._init;return ot(J,Ie(W._payload),ie)}if($(W)||P(W))return W=Xr(W,J.mode,ie,null),W.return=J,W;xl(J,W)}return null}function Ke(J,W,ie,Ie){var Ve=W!==null?W.key:null;if(typeof ie=="string"&&ie!==""||typeof ie=="number")return Ve!==null?null:G(J,W,""+ie,Ie);if(typeof ie=="object"&&ie!==null){switch(ie.$$typeof){case u:return ie.key===Ve?oe(J,W,ie,Ie):null;case h:return ie.key===Ve?we(J,W,ie,Ie):null;case w:return Ve=ie._init,Ke(J,W,Ve(ie._payload),Ie)}if($(ie)||P(ie))return Ve!==null?null:Oe(J,W,ie,Ie,null);xl(J,ie)}return null}function Nt(J,W,ie,Ie,Ve){if(typeof Ie=="string"&&Ie!==""||typeof Ie=="number")return J=J.get(ie)||null,G(W,J,""+Ie,Ve);if(typeof Ie=="object"&&Ie!==null){switch(Ie.$$typeof){case u:return J=J.get(Ie.key===null?ie:Ie.key)||null,oe(W,J,Ie,Ve);case h:return J=J.get(Ie.key===null?ie:Ie.key)||null,we(W,J,Ie,Ve);case w:var ft=Ie._init;return Nt(J,W,ie,ft(Ie._payload),Ve)}if($(Ie)||P(Ie))return J=J.get(ie)||null,Oe(W,J,Ie,Ve,null);xl(W,Ie)}return null}function Xe(J,W,ie,Ie){for(var Ve=null,ft=null,at=W,Mt=W=0,un=null;at!==null&&Mt<ie.length;Mt++){at.index>Mt?(un=at,at=null):un=at.sibling;var St=Ke(J,at,ie[Mt],Ie);if(St===null){at===null&&(at=un);break}o&&at&&St.alternate===null&&a(J,at),W=A(St,W,Mt),ft===null?Ve=St:ft.sibling=St,ft=St,at=un}if(Mt===ie.length)return d(J,at),kt&&zr(J,Mt),Ve;if(at===null){for(;Mt<ie.length;Mt++)at=ot(J,ie[Mt],Ie),at!==null&&(W=A(at,W,Mt),ft===null?Ve=at:ft.sibling=at,ft=at);return kt&&zr(J,Mt),Ve}for(at=g(J,at);Mt<ie.length;Mt++)un=Nt(at,J,Mt,ie[Mt],Ie),un!==null&&(o&&un.alternate!==null&&at.delete(un.key===null?Mt:un.key),W=A(un,W,Mt),ft===null?Ve=un:ft.sibling=un,ft=un);return o&&at.forEach(function(yr){return a(J,yr)}),kt&&zr(J,Mt),Ve}function xn(J,W,ie,Ie){var Ve=P(ie);if(typeof Ve!="function")throw Error(l(150));if(ie=Ve.call(ie),ie==null)throw Error(l(151));for(var ft=Ve=null,at=W,Mt=W=0,un=null,St=ie.next();at!==null&&!St.done;Mt++,St=ie.next()){at.index>Mt?(un=at,at=null):un=at.sibling;var yr=Ke(J,at,St.value,Ie);if(yr===null){at===null&&(at=un);break}o&&at&&yr.alternate===null&&a(J,at),W=A(yr,W,Mt),ft===null?Ve=yr:ft.sibling=yr,ft=yr,at=un}if(St.done)return d(J,at),kt&&zr(J,Mt),Ve;if(at===null){for(;!St.done;Mt++,St=ie.next())St=ot(J,St.value,Ie),St!==null&&(W=A(St,W,Mt),ft===null?Ve=St:ft.sibling=St,ft=St);return kt&&zr(J,Mt),Ve}for(at=g(J,at);!St.done;Mt++,St=ie.next())St=Nt(at,J,Mt,St.value,Ie),St!==null&&(o&&St.alternate!==null&&at.delete(St.key===null?Mt:St.key),W=A(St,W,Mt),ft===null?Ve=St:ft.sibling=St,ft=St);return o&&at.forEach(function(Rx){return a(J,Rx)}),kt&&zr(J,Mt),Ve}function ui(J,W,ie,Ie){if(typeof ie=="object"&&ie!==null&&ie.type===f&&ie.key===null&&(ie=ie.props.children),typeof ie=="object"&&ie!==null){switch(ie.$$typeof){case u:e:{for(var Ve=ie.key,ft=W;ft!==null;){if(ft.key===Ve){if(Ve=ie.type,Ve===f){if(ft.tag===7){d(J,ft.sibling),W=M(ft,ie.props.children),W.return=J,J=W;break e}}else if(ft.elementType===Ve||typeof Ve=="object"&&Ve!==null&&Ve.$$typeof===w&&Dp(Ve)===ft.type){d(J,ft.sibling),W=M(ft,ie.props),W.ref=Fo(J,ft,ie),W.return=J,J=W;break e}d(J,ft);break}else a(J,ft);ft=ft.sibling}ie.type===f?(W=Xr(ie.props.children,J.mode,Ie,ie.key),W.return=J,J=W):(Ie=Kl(ie.type,ie.key,ie.props,null,J.mode,Ie),Ie.ref=Fo(J,W,ie),Ie.return=J,J=Ie)}return O(J);case h:e:{for(ft=ie.key;W!==null;){if(W.key===ft)if(W.tag===4&&W.stateNode.containerInfo===ie.containerInfo&&W.stateNode.implementation===ie.implementation){d(J,W.sibling),W=M(W,ie.children||[]),W.return=J,J=W;break e}else{d(J,W);break}else a(J,W);W=W.sibling}W=Bh(ie,J.mode,Ie),W.return=J,J=W}return O(J);case w:return ft=ie._init,ui(J,W,ft(ie._payload),Ie)}if($(ie))return Xe(J,W,ie,Ie);if(P(ie))return xn(J,W,ie,Ie);xl(J,ie)}return typeof ie=="string"&&ie!==""||typeof ie=="number"?(ie=""+ie,W!==null&&W.tag===6?(d(J,W.sibling),W=M(W,ie),W.return=J,J=W):(d(J,W),W=zh(ie,J.mode,Ie),W.return=J,J=W),O(J)):d(J,W)}return ui}var Ls=Up(!0),Op=Up(!1),zo={},oi=yt(zo),Bo=yt(zo),Ns=yt(zo);function Ni(o){if(o===zo)throw Error(l(174));return o}function nh(o,a){Tt(Ns,a),Tt(Bo,o),Tt(oi,zo),o=ve(a),Ue(oi),Tt(oi,o)}function Ds(){Ue(oi),Ue(Bo),Ue(Ns)}function Fp(o){var a=Ni(Ns.current),d=Ni(oi.current);a=k(d,o.type,a),d!==a&&(Tt(Bo,o),Tt(oi,a))}function ih(o){Bo.current===o&&(Ue(oi),Ue(Bo))}var Ht=yt(0);function Ml(o){for(var a=o;a!==null;){if(a.tag===13){var d=a.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||nl(d)||ur(d)))return a}else if(a.tag===19&&a.memoizedProps.revealOrder!==void 0){if(a.flags&128)return a}else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return null;a=a.return}a.sibling.return=a.return,a=a.sibling}return null}var rh=[];function sh(){for(var o=0;o<rh.length;o++){var a=rh[o];Fe?a._workInProgressVersionPrimary=null:a._workInProgressVersionSecondary=null}rh.length=0}var Sl=c.ReactCurrentDispatcher,ai=c.ReactCurrentBatchConfig,Us=0,Xt=null,vn=null,cn=null,wl=!1,ko=!1,Ho=0,ex=0;function _n(){throw Error(l(321))}function oh(o,a){if(a===null)return!1;for(var d=0;d<a.length&&d<o.length;d++)if(!Pi(o[d],a[d]))return!1;return!0}function ah(o,a,d,g,M,A){if(Us=A,Xt=a,a.memoizedState=null,a.updateQueue=null,a.lanes=0,Sl.current=o===null||o.memoizedState===null?rx:sx,o=d(g,M),ko){A=0;do{if(ko=!1,Ho=0,25<=A)throw Error(l(301));A+=1,cn=vn=null,a.updateQueue=null,Sl.current=ox,o=d(g,M)}while(ko)}if(Sl.current=Cl,a=vn!==null&&vn.next!==null,Us=0,cn=vn=Xt=null,wl=!1,a)throw Error(l(300));return o}function lh(){var o=Ho!==0;return Ho=0,o}function Yi(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return cn===null?Xt.memoizedState=cn=o:cn=cn.next=o,cn}function Di(){if(vn===null){var o=Xt.alternate;o=o!==null?o.memoizedState:null}else o=vn.next;var a=cn===null?Xt.memoizedState:cn.next;if(a!==null)cn=a,vn=o;else{if(o===null)throw Error(l(310));vn=o,o={memoizedState:vn.memoizedState,baseState:vn.baseState,baseQueue:vn.baseQueue,queue:vn.queue,next:null},cn===null?Xt.memoizedState=cn=o:cn=cn.next=o}return cn}function Br(o,a){return typeof a=="function"?a(o):a}function El(o){var a=Di(),d=a.queue;if(d===null)throw Error(l(311));d.lastRenderedReducer=o;var g=vn,M=g.baseQueue,A=d.pending;if(A!==null){if(M!==null){var O=M.next;M.next=A.next,A.next=O}g.baseQueue=M=A,d.pending=null}if(M!==null){A=M.next,g=g.baseState;var G=O=null,oe=null,we=A;do{var Oe=we.lane;if((Us&Oe)===Oe)oe!==null&&(oe=oe.next={lane:0,action:we.action,hasEagerState:we.hasEagerState,eagerState:we.eagerState,next:null}),g=we.hasEagerState?we.eagerState:o(g,we.action);else{var ot={lane:Oe,action:we.action,hasEagerState:we.hasEagerState,eagerState:we.eagerState,next:null};oe===null?(G=oe=ot,O=g):oe=oe.next=ot,Xt.lanes|=Oe,Fs|=Oe}we=we.next}while(we!==null&&we!==A);oe===null?O=g:oe.next=G,Pi(g,a.memoizedState)||(Jn=!0),a.memoizedState=g,a.baseState=O,a.baseQueue=oe,d.lastRenderedState=g}if(o=d.interleaved,o!==null){M=o;do A=M.lane,Xt.lanes|=A,Fs|=A,M=M.next;while(M!==o)}else M===null&&(d.lanes=0);return[a.memoizedState,d.dispatch]}function Al(o){var a=Di(),d=a.queue;if(d===null)throw Error(l(311));d.lastRenderedReducer=o;var g=d.dispatch,M=d.pending,A=a.memoizedState;if(M!==null){d.pending=null;var O=M=M.next;do A=o(A,O.action),O=O.next;while(O!==M);Pi(A,a.memoizedState)||(Jn=!0),a.memoizedState=A,a.baseQueue===null&&(a.baseState=A),d.lastRenderedState=A}return[A,g]}function zp(){}function Bp(o,a){var d=Xt,g=Di(),M=a(),A=!Pi(g.memoizedState,M);if(A&&(g.memoizedState=M,Jn=!0),g=g.queue,Go(Vp.bind(null,d,g,o),[o]),g.getSnapshot!==a||A||cn!==null&&cn.memoizedState.tag&1){if(d.flags|=2048,Vo(9,Hp.bind(null,d,g,M,a),void 0,null),Kt===null)throw Error(l(349));Us&30||kp(d,a,M)}return M}function kp(o,a,d){o.flags|=16384,o={getSnapshot:a,value:d},a=Xt.updateQueue,a===null?(a={lastEffect:null,stores:null},Xt.updateQueue=a,a.stores=[o]):(d=a.stores,d===null?a.stores=[o]:d.push(o))}function Hp(o,a,d,g){a.value=d,a.getSnapshot=g,Gp(a)&&li(o,1,-1)}function Vp(o,a,d){return d(function(){Gp(a)&&li(o,1,-1)})}function Gp(o){var a=o.getSnapshot;o=o.value;try{var d=a();return!Pi(o,d)}catch{return!0}}function ch(o){var a=Yi();return typeof o=="function"&&(o=o()),a.memoizedState=a.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Br,lastRenderedState:o},a.queue=o,o=o.dispatch=ix.bind(null,Xt,o),[a.memoizedState,o]}function Vo(o,a,d,g){return o={tag:o,create:a,destroy:d,deps:g,next:null},a=Xt.updateQueue,a===null?(a={lastEffect:null,stores:null},Xt.updateQueue=a,a.lastEffect=o.next=o):(d=a.lastEffect,d===null?a.lastEffect=o.next=o:(g=d.next,d.next=o,o.next=g,a.lastEffect=o)),o}function Wp(){return Di().memoizedState}function Tl(o,a,d,g){var M=Yi();Xt.flags|=o,M.memoizedState=Vo(1|a,d,void 0,g===void 0?null:g)}function bl(o,a,d,g){var M=Di();g=g===void 0?null:g;var A=void 0;if(vn!==null){var O=vn.memoizedState;if(A=O.destroy,g!==null&&oh(g,O.deps)){M.memoizedState=Vo(a,d,A,g);return}}Xt.flags|=o,M.memoizedState=Vo(1|a,d,A,g)}function uh(o,a){return Tl(8390656,8,o,a)}function Go(o,a){return bl(2048,8,o,a)}function Xp(o,a){return bl(4,2,o,a)}function qp(o,a){return bl(4,4,o,a)}function Yp(o,a){if(typeof a=="function")return o=o(),a(o),function(){a(null)};if(a!=null)return o=o(),a.current=o,function(){a.current=null}}function jp(o,a,d){return d=d!=null?d.concat([o]):null,bl(4,4,Yp.bind(null,a,o),d)}function hh(){}function Zp(o,a){var d=Di();a=a===void 0?null:a;var g=d.memoizedState;return g!==null&&a!==null&&oh(a,g[1])?g[0]:(d.memoizedState=[o,a],o)}function Jp(o,a){var d=Di();a=a===void 0?null:a;var g=d.memoizedState;return g!==null&&a!==null&&oh(a,g[1])?g[0]:(o=o(),d.memoizedState=[o,a],o)}function tx(o,a){var d=xt;xt=d!==0&&4>d?d:4,o(!0);var g=ai.transition;ai.transition={};try{o(!1),a()}finally{xt=d,ai.transition=g}}function Kp(){return Di().memoizedState}function nx(o,a,d){var g=gr(o);d={lane:g,action:d,hasEagerState:!1,eagerState:null,next:null},Qp(o)?$p(a,d):(em(o,a,d),d=Cn(),o=li(o,g,d),o!==null&&tm(o,a,g))}function ix(o,a,d){var g=gr(o),M={lane:g,action:d,hasEagerState:!1,eagerState:null,next:null};if(Qp(o))$p(a,M);else{em(o,a,M);var A=o.alternate;if(o.lanes===0&&(A===null||A.lanes===0)&&(A=a.lastRenderedReducer,A!==null))try{var O=a.lastRenderedState,G=A(O,d);if(M.hasEagerState=!0,M.eagerState=G,Pi(G,O))return}catch{}finally{}d=Cn(),o=li(o,g,d),o!==null&&tm(o,a,g)}}function Qp(o){var a=o.alternate;return o===Xt||a!==null&&a===Xt}function $p(o,a){ko=wl=!0;var d=o.pending;d===null?a.next=a:(a.next=d.next,d.next=a),o.pending=a}function em(o,a,d){Kt!==null&&o.mode&1&&!(dt&2)?(o=a.interleaved,o===null?(d.next=d,Li===null?Li=[a]:Li.push(a)):(d.next=o.next,o.next=d),a.interleaved=d):(o=a.pending,o===null?d.next=d:(d.next=o.next,o.next=d),a.pending=d)}function tm(o,a,d){if(d&4194240){var g=a.lanes;g&=o.pendingLanes,d|=g,a.lanes=d,Bu(o,d)}}var Cl={readContext:ii,useCallback:_n,useContext:_n,useEffect:_n,useImperativeHandle:_n,useInsertionEffect:_n,useLayoutEffect:_n,useMemo:_n,useReducer:_n,useRef:_n,useState:_n,useDebugValue:_n,useDeferredValue:_n,useTransition:_n,useMutableSource:_n,useSyncExternalStore:_n,useId:_n,unstable_isNewReconciler:!1},rx={readContext:ii,useCallback:function(o,a){return Yi().memoizedState=[o,a===void 0?null:a],o},useContext:ii,useEffect:uh,useImperativeHandle:function(o,a,d){return d=d!=null?d.concat([o]):null,Tl(4194308,4,Yp.bind(null,a,o),d)},useLayoutEffect:function(o,a){return Tl(4194308,4,o,a)},useInsertionEffect:function(o,a){return Tl(4,2,o,a)},useMemo:function(o,a){var d=Yi();return a=a===void 0?null:a,o=o(),d.memoizedState=[o,a],o},useReducer:function(o,a,d){var g=Yi();return a=d!==void 0?d(a):a,g.memoizedState=g.baseState=a,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:a},g.queue=o,o=o.dispatch=nx.bind(null,Xt,o),[g.memoizedState,o]},useRef:function(o){var a=Yi();return o={current:o},a.memoizedState=o},useState:ch,useDebugValue:hh,useDeferredValue:function(o){var a=ch(o),d=a[0],g=a[1];return uh(function(){var M=ai.transition;ai.transition={};try{g(o)}finally{ai.transition=M}},[o]),d},useTransition:function(){var o=ch(!1),a=o[0];return o=tx.bind(null,o[1]),Yi().memoizedState=o,[a,o]},useMutableSource:function(){},useSyncExternalStore:function(o,a,d){var g=Xt,M=Yi();if(kt){if(d===void 0)throw Error(l(407));d=d()}else{if(d=a(),Kt===null)throw Error(l(349));Us&30||kp(g,a,d)}M.memoizedState=d;var A={value:d,getSnapshot:a};return M.queue=A,uh(Vp.bind(null,g,A,o),[o]),g.flags|=2048,Vo(9,Hp.bind(null,g,A,d,a),void 0,null),d},useId:function(){var o=Yi(),a=Kt.identifierPrefix;if(kt){var d=qi,g=Xi;d=(g&~(1<<32-Un(g)-1)).toString(32)+d,a=":"+a+"R"+d,d=Ho++,0<d&&(a+="H"+d.toString(32)),a+=":"}else d=ex++,a=":"+a+"r"+d.toString(32)+":";return o.memoizedState=a},unstable_isNewReconciler:!1},sx={readContext:ii,useCallback:Zp,useContext:ii,useEffect:Go,useImperativeHandle:jp,useInsertionEffect:Xp,useLayoutEffect:qp,useMemo:Jp,useReducer:El,useRef:Wp,useState:function(){return El(Br)},useDebugValue:hh,useDeferredValue:function(o){var a=El(Br),d=a[0],g=a[1];return Go(function(){var M=ai.transition;ai.transition={};try{g(o)}finally{ai.transition=M}},[o]),d},useTransition:function(){var o=El(Br)[0],a=Di().memoizedState;return[o,a]},useMutableSource:zp,useSyncExternalStore:Bp,useId:Kp,unstable_isNewReconciler:!1},ox={readContext:ii,useCallback:Zp,useContext:ii,useEffect:Go,useImperativeHandle:jp,useInsertionEffect:Xp,useLayoutEffect:qp,useMemo:Jp,useReducer:Al,useRef:Wp,useState:function(){return Al(Br)},useDebugValue:hh,useDeferredValue:function(o){var a=Al(Br),d=a[0],g=a[1];return Go(function(){var M=ai.transition;ai.transition={};try{g(o)}finally{ai.transition=M}},[o]),d},useTransition:function(){var o=Al(Br)[0],a=Di().memoizedState;return[o,a]},useMutableSource:zp,useSyncExternalStore:Bp,useId:Kp,unstable_isNewReconciler:!1};function fh(o,a){try{var d="",g=a;do d+=$y(g),g=g.return;while(g);var M=d}catch(A){M=`
Error generating stack: `+A.message+`
`+A.stack}return{value:o,source:a,stack:M}}function dh(o,a){try{console.error(a.value)}catch(d){setTimeout(function(){throw d})}}var ax=typeof WeakMap=="function"?WeakMap:Map;function nm(o,a,d){d=Wi(-1,d),d.tag=3,d.payload={element:null};var g=a.value;return d.callback=function(){Wl||(Wl=!0,Ih=g),dh(o,a)},d}function im(o,a,d){d=Wi(-1,d),d.tag=3;var g=o.type.getDerivedStateFromError;if(typeof g=="function"){var M=a.value;d.payload=function(){return g(M)},d.callback=function(){dh(o,a)}}var A=o.stateNode;return A!==null&&typeof A.componentDidCatch=="function"&&(d.callback=function(){dh(o,a),typeof g!="function"&&(pr===null?pr=new Set([this]):pr.add(this));var O=a.stack;this.componentDidCatch(a.value,{componentStack:O!==null?O:""})}),d}function rm(o,a,d){var g=o.pingCache;if(g===null){g=o.pingCache=new ax;var M=new Set;g.set(a,M)}else M=g.get(a),M===void 0&&(M=new Set,g.set(a,M));M.has(d)||(M.add(d),o=Mx.bind(null,o,a,d),a.then(o,o))}function sm(o){do{var a;if((a=o.tag===13)&&(a=o.memoizedState,a=a!==null?a.dehydrated!==null:!0),a)return o;o=o.return}while(o!==null);return null}function om(o,a,d,g,M){return o.mode&1?(o.flags|=65536,o.lanes=M,o):(o===a?o.flags|=65536:(o.flags|=128,d.flags|=131072,d.flags&=-52805,d.tag===1&&(d.alternate===null?d.tag=17:(a=Wi(-1,1),a.tag=2,dr(d,a))),d.lanes|=1),o)}function Ui(o){o.flags|=4}function am(o,a){if(o!==null&&o.child===a.child)return!0;if(a.flags&16)return!1;for(o=a.child;o!==null;){if(o.flags&12854||o.subtreeFlags&12854)return!1;o=o.sibling}return!0}var Wo,Xo,Rl,Pl;if(V)Wo=function(o,a){for(var d=a.child;d!==null;){if(d.tag===5||d.tag===6)Ae(o,d.stateNode);else if(d.tag!==4&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===a)break;for(;d.sibling===null;){if(d.return===null||d.return===a)return;d=d.return}d.sibling.return=d.return,d=d.sibling}},Xo=function(){},Rl=function(o,a,d,g,M){if(o=o.memoizedProps,o!==g){var A=a.stateNode,O=Ni(oi.current);d=te(A,d,o,g,M,O),(a.updateQueue=d)&&Ui(a)}},Pl=function(o,a,d,g){d!==g&&Ui(a)};else if(le){Wo=function(o,a,d,g){for(var M=a.child;M!==null;){if(M.tag===5){var A=M.stateNode;d&&g&&(A=Wn(A,M.type,M.memoizedProps,M)),Ae(o,A)}else if(M.tag===6)A=M.stateNode,d&&g&&(A=Xn(A,M.memoizedProps,M)),Ae(o,A);else if(M.tag!==4){if(M.tag===22&&M.memoizedState!==null)A=M.child,A!==null&&(A.return=M),Wo(o,M,!0,!0);else if(M.child!==null){M.child.return=M,M=M.child;continue}}if(M===a)break;for(;M.sibling===null;){if(M.return===null||M.return===a)return;M=M.return}M.sibling.return=M.return,M=M.sibling}};var lm=function(o,a,d,g){for(var M=a.child;M!==null;){if(M.tag===5){var A=M.stateNode;d&&g&&(A=Wn(A,M.type,M.memoizedProps,M)),Ut(o,A)}else if(M.tag===6)A=M.stateNode,d&&g&&(A=Xn(A,M.memoizedProps,M)),Ut(o,A);else if(M.tag!==4){if(M.tag===22&&M.memoizedState!==null)A=M.child,A!==null&&(A.return=M),lm(o,M,!0,!0);else if(M.child!==null){M.child.return=M,M=M.child;continue}}if(M===a)break;for(;M.sibling===null;){if(M.return===null||M.return===a)return;M=M.return}M.sibling.return=M.return,M=M.sibling}};Xo=function(o,a){var d=a.stateNode;if(!am(o,a)){o=d.containerInfo;var g=Lt(o);lm(g,a,!1,!1),d.pendingChildren=g,Ui(a),an(o,g)}},Rl=function(o,a,d,g,M){var A=o.stateNode,O=o.memoizedProps;if((o=am(o,a))&&O===g)a.stateNode=A;else{var G=a.stateNode,oe=Ni(oi.current),we=null;O!==g&&(we=te(G,d,O,g,M,oe)),o&&we===null?a.stateNode=A:(A=Pt(A,we,d,O,g,a,o,G),Ne(A,d,g,M,oe)&&Ui(a),a.stateNode=A,o?Ui(a):Wo(A,a,!1,!1))}},Pl=function(o,a,d,g){d!==g?(o=Ni(Ns.current),d=Ni(oi.current),a.stateNode=be(g,o,d,a),Ui(a)):a.stateNode=o.stateNode}}else Xo=function(){},Rl=function(){},Pl=function(){};function qo(o,a){if(!kt)switch(o.tailMode){case"hidden":a=o.tail;for(var d=null;a!==null;)a.alternate!==null&&(d=a),a=a.sibling;d===null?o.tail=null:d.sibling=null;break;case"collapsed":d=o.tail;for(var g=null;d!==null;)d.alternate!==null&&(g=d),d=d.sibling;g===null?a||o.tail===null?o.tail=null:o.tail.sibling=null:g.sibling=null}}function yn(o){var a=o.alternate!==null&&o.alternate.child===o.child,d=0,g=0;if(a)for(var M=o.child;M!==null;)d|=M.lanes|M.childLanes,g|=M.subtreeFlags&14680064,g|=M.flags&14680064,M.return=o,M=M.sibling;else for(M=o.child;M!==null;)d|=M.lanes|M.childLanes,g|=M.subtreeFlags,g|=M.flags,M.return=o,M=M.sibling;return o.subtreeFlags|=g,o.childLanes=d,a}function lx(o,a,d){var g=a.pendingProps;switch(Qu(a),a.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return yn(a),null;case 1:return At(a.type)&&Yn(),yn(a),null;case 3:return g=a.stateNode,Ds(),Ue(dn),Ue(Bt),sh(),g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null),(o===null||o.child===null)&&(Oo(a)?Ui(a):o===null||o.memoizedState.isDehydrated&&!(a.flags&256)||(a.flags|=1024,gi!==null&&(Dh(gi),gi=null))),Xo(o,a),yn(a),null;case 5:ih(a),d=Ni(Ns.current);var M=a.type;if(o!==null&&a.stateNode!=null)Rl(o,a,M,g,d),o.ref!==a.ref&&(a.flags|=512,a.flags|=2097152);else{if(!g){if(a.stateNode===null)throw Error(l(166));return yn(a),null}if(o=Ni(oi.current),Oo(a)){if(!re)throw Error(l(175));o=Uu(a.stateNode,a.type,a.memoizedProps,d,o,a,!Uo),a.updateQueue=o,o!==null&&Ui(a)}else{var A=ue(M,g,d,o,a);Wo(A,a,!1,!1),a.stateNode=A,Ne(A,M,g,d,o)&&Ui(a)}a.ref!==null&&(a.flags|=512,a.flags|=2097152)}return yn(a),null;case 6:if(o&&a.stateNode!=null)Pl(o,a,o.memoizedProps,g);else{if(typeof g!="string"&&a.stateNode===null)throw Error(l(166));if(o=Ni(Ns.current),d=Ni(oi.current),Oo(a)){if(!re)throw Error(l(176));if(o=a.stateNode,g=a.memoizedProps,(d=Ou(o,g,a,!Uo))&&(M=jn,M!==null))switch(A=(M.mode&1)!==0,M.tag){case 3:Qe(M.stateNode.containerInfo,o,g,A);break;case 5:nt(M.type,M.memoizedProps,M.stateNode,o,g,A)}d&&Ui(a)}else a.stateNode=be(g,o,d,a)}return yn(a),null;case 13:if(Ue(Ht),g=a.memoizedState,kt&&Zn!==null&&a.mode&1&&!(a.flags&128)){for(o=Zn;o;)o=bi(o);return Is(),a.flags|=98560,a}if(g!==null&&g.dehydrated!==null){if(g=Oo(a),o===null){if(!g)throw Error(l(318));if(!re)throw Error(l(344));if(o=a.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));L(o,a)}else Is(),!(a.flags&128)&&(a.memoizedState=null),a.flags|=4;return yn(a),null}return gi!==null&&(Dh(gi),gi=null),a.flags&128?(a.lanes=d,a):(g=g!==null,d=!1,o===null?Oo(a):d=o.memoizedState!==null,g&&!d&&(a.child.flags|=8192,a.mode&1&&(o===null||Ht.current&1?rn===0&&(rn=3):Oh())),a.updateQueue!==null&&(a.flags|=4),yn(a),null);case 4:return Ds(),Xo(o,a),o===null&&_e(a.stateNode.containerInfo),yn(a),null;case 10:return qu(a.type._context),yn(a),null;case 17:return At(a.type)&&Yn(),yn(a),null;case 19:if(Ue(Ht),M=a.memoizedState,M===null)return yn(a),null;if(g=(a.flags&128)!==0,A=M.rendering,A===null)if(g)qo(M,!1);else{if(rn!==0||o!==null&&o.flags&128)for(o=a.child;o!==null;){if(A=Ml(o),A!==null){for(a.flags|=128,qo(M,!1),o=A.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),a.subtreeFlags=0,o=d,g=a.child;g!==null;)d=g,M=o,d.flags&=14680066,A=d.alternate,A===null?(d.childLanes=0,d.lanes=M,d.child=null,d.subtreeFlags=0,d.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null,d.stateNode=null):(d.childLanes=A.childLanes,d.lanes=A.lanes,d.child=A.child,d.subtreeFlags=0,d.deletions=null,d.memoizedProps=A.memoizedProps,d.memoizedState=A.memoizedState,d.updateQueue=A.updateQueue,d.type=A.type,M=A.dependencies,d.dependencies=M===null?null:{lanes:M.lanes,firstContext:M.firstContext}),g=g.sibling;return Tt(Ht,Ht.current&1|2),a.child}o=o.sibling}M.tail!==null&&ln()>Ph&&(a.flags|=128,g=!0,qo(M,!1),a.lanes=4194304)}else{if(!g)if(o=Ml(A),o!==null){if(a.flags|=128,g=!0,o=o.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),qo(M,!0),M.tail===null&&M.tailMode==="hidden"&&!A.alternate&&!kt)return yn(a),null}else 2*ln()-M.renderingStartTime>Ph&&d!==1073741824&&(a.flags|=128,g=!0,qo(M,!1),a.lanes=4194304);M.isBackwards?(A.sibling=a.child,a.child=A):(o=M.last,o!==null?o.sibling=A:a.child=A,M.last=A)}return M.tail!==null?(a=M.tail,M.rendering=a,M.tail=a.sibling,M.renderingStartTime=ln(),a.sibling=null,o=Ht.current,Tt(Ht,g?o&1|2:o&1),a):(yn(a),null);case 22:case 23:return Uh(),g=a.memoizedState!==null,o!==null&&o.memoizedState!==null!==g&&(a.flags|=8192),g&&a.mode&1?Kn&1073741824&&(yn(a),V&&a.subtreeFlags&6&&(a.flags|=8192)):yn(a),null;case 24:return null;case 25:return null}throw Error(l(156,a.tag))}var cx=c.ReactCurrentOwner,Jn=!1;function bn(o,a,d,g){a.child=o===null?Op(a,null,d,g):Ls(a,o.child,d,g)}function cm(o,a,d,g,M){d=d.render;var A=a.ref;return Cs(a,M),g=ah(o,a,d,g,A,M),d=lh(),o!==null&&!Jn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~M,ji(o,a,M)):(kt&&d&&Ku(a),a.flags|=1,bn(o,a,g,M),a.child)}function um(o,a,d,g,M){if(o===null){var A=d.type;return typeof A=="function"&&!Fh(A)&&A.defaultProps===void 0&&d.compare===null&&d.defaultProps===void 0?(a.tag=15,a.type=A,hm(o,a,A,g,M)):(o=Kl(d.type,null,g,a,a.mode,M),o.ref=a.ref,o.return=a,a.child=o)}if(A=o.child,!(o.lanes&M)){var O=A.memoizedProps;if(d=d.compare,d=d!==null?d:fl,d(O,g)&&o.ref===a.ref)return ji(o,a,M)}return a.flags|=1,o=_r(A,g),o.ref=a.ref,o.return=a,a.child=o}function hm(o,a,d,g,M){if(o!==null&&fl(o.memoizedProps,g)&&o.ref===a.ref)if(Jn=!1,(o.lanes&M)!==0)o.flags&131072&&(Jn=!0);else return a.lanes=o.lanes,ji(o,a,M);return ph(o,a,d,g,M)}function fm(o,a,d){var g=a.pendingProps,M=g.children,A=o!==null?o.memoizedState:null;if(g.mode==="hidden")if(!(a.mode&1))a.memoizedState={baseLanes:0,cachePool:null},Tt(Os,Kn),Kn|=d;else if(d&1073741824)a.memoizedState={baseLanes:0,cachePool:null},g=A!==null?A.baseLanes:d,Tt(Os,Kn),Kn|=g;else return o=A!==null?A.baseLanes|d:d,a.lanes=a.childLanes=1073741824,a.memoizedState={baseLanes:o,cachePool:null},a.updateQueue=null,Tt(Os,Kn),Kn|=o,null;else A!==null?(g=A.baseLanes|d,a.memoizedState=null):g=d,Tt(Os,Kn),Kn|=g;return bn(o,a,M,d),a.child}function dm(o,a){var d=a.ref;(o===null&&d!==null||o!==null&&o.ref!==d)&&(a.flags|=512,a.flags|=2097152)}function ph(o,a,d,g,M){var A=At(d)?qn:Bt.current;return A=Ci(a,A),Cs(a,M),d=ah(o,a,d,g,A,M),g=lh(),o!==null&&!Jn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~M,ji(o,a,M)):(kt&&g&&Ku(a),a.flags|=1,bn(o,a,d,M),a.child)}function pm(o,a,d,g,M){if(At(d)){var A=!0;hr(a)}else A=!1;if(Cs(a,M),a.stateNode===null)o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),Cp(a,d,g),Ju(a,d,g,M),g=!0;else if(o===null){var O=a.stateNode,G=a.memoizedProps;O.props=G;var oe=O.context,we=d.contextType;typeof we=="object"&&we!==null?we=ii(we):(we=At(d)?qn:Bt.current,we=Ci(a,we));var Oe=d.getDerivedStateFromProps,ot=typeof Oe=="function"||typeof O.getSnapshotBeforeUpdate=="function";ot||typeof O.UNSAFE_componentWillReceiveProps!="function"&&typeof O.componentWillReceiveProps!="function"||(G!==g||oe!==we)&&Rp(a,O,g,we),fr=!1;var Ke=a.memoizedState;O.state=Ke,gl(a,g,O,M),oe=a.memoizedState,G!==g||Ke!==oe||dn.current||fr?(typeof Oe=="function"&&(Zu(a,d,Oe,g),oe=a.memoizedState),(G=fr||bp(a,d,G,g,Ke,oe,we))?(ot||typeof O.UNSAFE_componentWillMount!="function"&&typeof O.componentWillMount!="function"||(typeof O.componentWillMount=="function"&&O.componentWillMount(),typeof O.UNSAFE_componentWillMount=="function"&&O.UNSAFE_componentWillMount()),typeof O.componentDidMount=="function"&&(a.flags|=4194308)):(typeof O.componentDidMount=="function"&&(a.flags|=4194308),a.memoizedProps=g,a.memoizedState=oe),O.props=g,O.state=oe,O.context=we,g=G):(typeof O.componentDidMount=="function"&&(a.flags|=4194308),g=!1)}else{O=a.stateNode,wp(o,a),G=a.memoizedProps,we=a.type===a.elementType?G:mi(a.type,G),O.props=we,ot=a.pendingProps,Ke=O.context,oe=d.contextType,typeof oe=="object"&&oe!==null?oe=ii(oe):(oe=At(d)?qn:Bt.current,oe=Ci(a,oe));var Nt=d.getDerivedStateFromProps;(Oe=typeof Nt=="function"||typeof O.getSnapshotBeforeUpdate=="function")||typeof O.UNSAFE_componentWillReceiveProps!="function"&&typeof O.componentWillReceiveProps!="function"||(G!==ot||Ke!==oe)&&Rp(a,O,g,oe),fr=!1,Ke=a.memoizedState,O.state=Ke,gl(a,g,O,M);var Xe=a.memoizedState;G!==ot||Ke!==Xe||dn.current||fr?(typeof Nt=="function"&&(Zu(a,d,Nt,g),Xe=a.memoizedState),(we=fr||bp(a,d,we,g,Ke,Xe,oe)||!1)?(Oe||typeof O.UNSAFE_componentWillUpdate!="function"&&typeof O.componentWillUpdate!="function"||(typeof O.componentWillUpdate=="function"&&O.componentWillUpdate(g,Xe,oe),typeof O.UNSAFE_componentWillUpdate=="function"&&O.UNSAFE_componentWillUpdate(g,Xe,oe)),typeof O.componentDidUpdate=="function"&&(a.flags|=4),typeof O.getSnapshotBeforeUpdate=="function"&&(a.flags|=1024)):(typeof O.componentDidUpdate!="function"||G===o.memoizedProps&&Ke===o.memoizedState||(a.flags|=4),typeof O.getSnapshotBeforeUpdate!="function"||G===o.memoizedProps&&Ke===o.memoizedState||(a.flags|=1024),a.memoizedProps=g,a.memoizedState=Xe),O.props=g,O.state=Xe,O.context=oe,g=we):(typeof O.componentDidUpdate!="function"||G===o.memoizedProps&&Ke===o.memoizedState||(a.flags|=4),typeof O.getSnapshotBeforeUpdate!="function"||G===o.memoizedProps&&Ke===o.memoizedState||(a.flags|=1024),g=!1)}return mh(o,a,d,g,A,M)}function mh(o,a,d,g,M,A){dm(o,a);var O=(a.flags&128)!==0;if(!g&&!O)return M&&ol(a,d,!1),ji(o,a,A);g=a.stateNode,cx.current=a;var G=O&&typeof d.getDerivedStateFromError!="function"?null:g.render();return a.flags|=1,o!==null&&O?(a.child=Ls(a,o.child,null,A),a.child=Ls(a,null,G,A)):bn(o,a,G,A),a.memoizedState=g.state,M&&ol(a,d,!0),a.child}function mm(o){var a=o.stateNode;a.pendingContext?Ts(o,a.pendingContext,a.pendingContext!==a.context):a.context&&Ts(o,a.context,!1),nh(o,a.containerInfo)}function gm(o,a,d,g,M){return Is(),th(M),a.flags|=256,bn(o,a,d,g),a.child}var Il={dehydrated:null,treeContext:null,retryLane:0};function Ll(o){return{baseLanes:o,cachePool:null}}function vm(o,a,d){var g=a.pendingProps,M=Ht.current,A=!1,O=(a.flags&128)!==0,G;if((G=O)||(G=o!==null&&o.memoizedState===null?!1:(M&2)!==0),G?(A=!0,a.flags&=-129):(o===null||o.memoizedState!==null)&&(M|=1),Tt(Ht,M&1),o===null)return eh(a),o=a.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?(a.mode&1?ur(o)?a.lanes=8:a.lanes=1073741824:a.lanes=1,null):(M=g.children,o=g.fallback,A?(g=a.mode,A=a.child,M={mode:"hidden",children:M},!(g&1)&&A!==null?(A.childLanes=0,A.pendingProps=M):A=Ql(M,g,0,null),o=Xr(o,g,d,null),A.return=a,o.return=a,A.sibling=o,a.child=A,a.child.memoizedState=Ll(d),a.memoizedState=Il,o):gh(a,M));if(M=o.memoizedState,M!==null){if(G=M.dehydrated,G!==null){if(O)return a.flags&256?(a.flags&=-257,Nl(o,a,d,Error(l(422)))):a.memoizedState!==null?(a.child=o.child,a.flags|=128,null):(A=g.fallback,M=a.mode,g=Ql({mode:"visible",children:g.children},M,0,null),A=Xr(A,M,d,null),A.flags|=2,g.return=a,A.return=a,g.sibling=A,a.child=g,a.mode&1&&Ls(a,o.child,null,d),a.child.memoizedState=Ll(d),a.memoizedState=Il,A);if(!(a.mode&1))a=Nl(o,a,d,null);else if(ur(G))a=Nl(o,a,d,Error(l(419)));else if(g=(d&o.childLanes)!==0,Jn||g){if(g=Kt,g!==null){switch(d&-d){case 4:A=2;break;case 16:A=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:A=32;break;case 536870912:A=268435456;break;default:A=0}g=A&(g.suspendedLanes|d)?0:A,g!==0&&g!==M.retryLane&&(M.retryLane=g,li(o,g,-1))}Oh(),a=Nl(o,a,d,Error(l(421)))}else nl(G)?(a.flags|=128,a.child=o.child,a=Sx.bind(null,o),il(G,a),a=null):(d=M.treeContext,re&&(Zn=Du(G),jn=a,kt=!0,gi=null,Uo=!1,d!==null&&(ri[si++]=Xi,ri[si++]=qi,ri[si++]=Fr,Xi=d.id,qi=d.overflow,Fr=a)),a=gh(a,a.pendingProps.children),a.flags|=4096);return a}return A?(g=ym(o,a,g.children,g.fallback,d),A=a.child,M=o.child.memoizedState,A.memoizedState=M===null?Ll(d):{baseLanes:M.baseLanes|d,cachePool:null},A.childLanes=o.childLanes&~d,a.memoizedState=Il,g):(d=_m(o,a,g.children,d),a.memoizedState=null,d)}return A?(g=ym(o,a,g.children,g.fallback,d),A=a.child,M=o.child.memoizedState,A.memoizedState=M===null?Ll(d):{baseLanes:M.baseLanes|d,cachePool:null},A.childLanes=o.childLanes&~d,a.memoizedState=Il,g):(d=_m(o,a,g.children,d),a.memoizedState=null,d)}function gh(o,a){return a=Ql({mode:"visible",children:a},o.mode,0,null),a.return=o,o.child=a}function _m(o,a,d,g){var M=o.child;return o=M.sibling,d=_r(M,{mode:"visible",children:d}),!(a.mode&1)&&(d.lanes=g),d.return=a,d.sibling=null,o!==null&&(g=a.deletions,g===null?(a.deletions=[o],a.flags|=16):g.push(o)),a.child=d}function ym(o,a,d,g,M){var A=a.mode;o=o.child;var O=o.sibling,G={mode:"hidden",children:d};return!(A&1)&&a.child!==o?(d=a.child,d.childLanes=0,d.pendingProps=G,a.deletions=null):(d=_r(o,G),d.subtreeFlags=o.subtreeFlags&14680064),O!==null?g=_r(O,g):(g=Xr(g,A,M,null),g.flags|=2),g.return=a,d.return=a,d.sibling=g,a.child=d,g}function Nl(o,a,d,g){return g!==null&&th(g),Ls(a,o.child,null,d),o=gh(a,a.pendingProps.children),o.flags|=2,a.memoizedState=null,o}function xm(o,a,d){o.lanes|=a;var g=o.alternate;g!==null&&(g.lanes|=a),Yu(o.return,a,d)}function vh(o,a,d,g,M){var A=o.memoizedState;A===null?o.memoizedState={isBackwards:a,rendering:null,renderingStartTime:0,last:g,tail:d,tailMode:M}:(A.isBackwards=a,A.rendering=null,A.renderingStartTime=0,A.last=g,A.tail=d,A.tailMode=M)}function Mm(o,a,d){var g=a.pendingProps,M=g.revealOrder,A=g.tail;if(bn(o,a,g.children,d),g=Ht.current,g&2)g=g&1|2,a.flags|=128;else{if(o!==null&&o.flags&128)e:for(o=a.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&xm(o,d,a);else if(o.tag===19)xm(o,d,a);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break e;for(;o.sibling===null;){if(o.return===null||o.return===a)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}g&=1}if(Tt(Ht,g),!(a.mode&1))a.memoizedState=null;else switch(M){case"forwards":for(d=a.child,M=null;d!==null;)o=d.alternate,o!==null&&Ml(o)===null&&(M=d),d=d.sibling;d=M,d===null?(M=a.child,a.child=null):(M=d.sibling,d.sibling=null),vh(a,!1,M,d,A);break;case"backwards":for(d=null,M=a.child,a.child=null;M!==null;){if(o=M.alternate,o!==null&&Ml(o)===null){a.child=M;break}o=M.sibling,M.sibling=d,d=M,M=o}vh(a,!0,d,null,A);break;case"together":vh(a,!1,null,null,void 0);break;default:a.memoizedState=null}return a.child}function ji(o,a,d){if(o!==null&&(a.dependencies=o.dependencies),Fs|=a.lanes,!(d&a.childLanes))return null;if(o!==null&&a.child!==o.child)throw Error(l(153));if(a.child!==null){for(o=a.child,d=_r(o,o.pendingProps),a.child=d,d.return=a;o.sibling!==null;)o=o.sibling,d=d.sibling=_r(o,o.pendingProps),d.return=a;d.sibling=null}return a.child}function ux(o,a,d){switch(a.tag){case 3:mm(a),Is();break;case 5:Fp(a);break;case 1:At(a.type)&&hr(a);break;case 4:nh(a,a.stateNode.containerInfo);break;case 10:Sp(a,a.type._context,a.memoizedProps.value);break;case 13:var g=a.memoizedState;if(g!==null)return g.dehydrated!==null?(Tt(Ht,Ht.current&1),a.flags|=128,null):d&a.child.childLanes?vm(o,a,d):(Tt(Ht,Ht.current&1),o=ji(o,a,d),o!==null?o.sibling:null);Tt(Ht,Ht.current&1);break;case 19:if(g=(d&a.childLanes)!==0,o.flags&128){if(g)return Mm(o,a,d);a.flags|=128}var M=a.memoizedState;if(M!==null&&(M.rendering=null,M.tail=null,M.lastEffect=null),Tt(Ht,Ht.current),g)break;return null;case 22:case 23:return a.lanes=0,fm(o,a,d)}return ji(o,a,d)}function hx(o,a){switch(Qu(a),a.tag){case 1:return At(a.type)&&Yn(),o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 3:return Ds(),Ue(dn),Ue(Bt),sh(),o=a.flags,o&65536&&!(o&128)?(a.flags=o&-65537|128,a):null;case 5:return ih(a),null;case 13:if(Ue(Ht),o=a.memoizedState,o!==null&&o.dehydrated!==null){if(a.alternate===null)throw Error(l(340));Is()}return o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 19:return Ue(Ht),null;case 4:return Ds(),null;case 10:return qu(a.type._context),null;case 22:case 23:return Uh(),null;case 24:return null;default:return null}}var Dl=!1,kr=!1,fx=typeof WeakSet=="function"?WeakSet:Set,Re=null;function Ul(o,a){var d=o.ref;if(d!==null)if(typeof d=="function")try{d(null)}catch(g){zn(o,a,g)}else d.current=null}function _h(o,a,d){try{d()}catch(g){zn(o,a,g)}}var Sm=!1;function dx(o,a){for(K(o.containerInfo),Re=a;Re!==null;)if(o=Re,a=o.child,(o.subtreeFlags&1028)!==0&&a!==null)a.return=o,Re=a;else for(;Re!==null;){o=Re;try{var d=o.alternate;if(o.flags&1024)switch(o.tag){case 0:case 11:case 15:break;case 1:if(d!==null){var g=d.memoizedProps,M=d.memoizedState,A=o.stateNode,O=A.getSnapshotBeforeUpdate(o.elementType===o.type?g:mi(o.type,g),M);A.__reactInternalSnapshotBeforeUpdate=O}break;case 3:V&&Je(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(l(163))}}catch(G){zn(o,o.return,G)}if(a=o.sibling,a!==null){a.return=o.return,Re=a;break}Re=o.return}return d=Sm,Sm=!1,d}function Hr(o,a,d){var g=a.updateQueue;if(g=g!==null?g.lastEffect:null,g!==null){var M=g=g.next;do{if((M.tag&o)===o){var A=M.destroy;M.destroy=void 0,A!==void 0&&_h(a,d,A)}M=M.next}while(M!==g)}}function Yo(o,a){if(a=a.updateQueue,a=a!==null?a.lastEffect:null,a!==null){var d=a=a.next;do{if((d.tag&o)===o){var g=d.create;d.destroy=g()}d=d.next}while(d!==a)}}function yh(o){var a=o.ref;if(a!==null){var d=o.stateNode;switch(o.tag){case 5:o=ae(d);break;default:o=d}typeof a=="function"?a(o):a.current=o}}function wm(o,a,d){if(Ri&&typeof Ri.onCommitFiberUnmount=="function")try{Ri.onCommitFiberUnmount(ul,a)}catch{}switch(a.tag){case 0:case 11:case 14:case 15:if(o=a.updateQueue,o!==null&&(o=o.lastEffect,o!==null)){var g=o=o.next;do{var M=g,A=M.destroy;M=M.tag,A!==void 0&&(M&2||M&4)&&_h(a,d,A),g=g.next}while(g!==o)}break;case 1:if(Ul(a,d),o=a.stateNode,typeof o.componentWillUnmount=="function")try{o.props=a.memoizedProps,o.state=a.memoizedState,o.componentWillUnmount()}catch(O){zn(a,d,O)}break;case 5:Ul(a,d);break;case 4:V?Rm(o,a,d):le&&le&&(a=a.stateNode.containerInfo,d=Lt(a),It(a,d))}}function Em(o,a,d){for(var g=a;;)if(wm(o,g,d),g.child===null||V&&g.tag===4){if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return}g.sibling.return=g.return,g=g.sibling}else g.child.return=g,g=g.child}function Am(o){var a=o.alternate;a!==null&&(o.alternate=null,Am(a)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(a=o.stateNode,a!==null&&D(a)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function Tm(o){return o.tag===5||o.tag===3||o.tag===4}function bm(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||Tm(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function Cm(o){if(V){e:{for(var a=o.return;a!==null;){if(Tm(a))break e;a=a.return}throw Error(l(160))}var d=a;switch(d.tag){case 5:a=d.stateNode,d.flags&32&&(Ge(a),d.flags&=-33),d=bm(o),Mh(o,d,a);break;case 3:case 4:a=d.stateNode.containerInfo,d=bm(o),xh(o,d,a);break;default:throw Error(l(161))}}}function xh(o,a,d){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?Et(d,o,a):it(d,o);else if(g!==4&&(o=o.child,o!==null))for(xh(o,a,d),o=o.sibling;o!==null;)xh(o,a,d),o=o.sibling}function Mh(o,a,d){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?mt(d,o,a):De(d,o);else if(g!==4&&(o=o.child,o!==null))for(Mh(o,a,d),o=o.sibling;o!==null;)Mh(o,a,d),o=o.sibling}function Rm(o,a,d){for(var g=a,M=!1,A,O;;){if(!M){M=g.return;e:for(;;){if(M===null)throw Error(l(160));switch(A=M.stateNode,M.tag){case 5:O=!1;break e;case 3:A=A.containerInfo,O=!0;break e;case 4:A=A.containerInfo,O=!0;break e}M=M.return}M=!0}if(g.tag===5||g.tag===6)Em(o,g,d),O?Dt(A,g.stateNode):_t(A,g.stateNode);else if(g.tag===18)O?Pe(A,g.stateNode):Q(A,g.stateNode);else if(g.tag===4){if(g.child!==null){A=g.stateNode.containerInfo,O=!0,g.child.return=g,g=g.child;continue}}else if(wm(o,g,d),g.child!==null){g.child.return=g,g=g.child;continue}if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return,g.tag===4&&(M=!1)}g.sibling.return=g.return,g=g.sibling}}function Sh(o,a){if(V){switch(a.tag){case 0:case 11:case 14:case 15:Hr(3,a,a.return),Yo(3,a),Hr(5,a,a.return);return;case 1:return;case 5:var d=a.stateNode;if(d!=null){var g=a.memoizedProps;o=o!==null?o.memoizedProps:g;var M=a.type,A=a.updateQueue;a.updateQueue=null,A!==null&&pt(d,A,M,o,g,a)}return;case 6:if(a.stateNode===null)throw Error(l(162));d=a.memoizedProps,ze(a.stateNode,o!==null?o.memoizedProps:d,d);return;case 3:re&&o!==null&&o.memoizedState.isDehydrated&&ee(a.stateNode.containerInfo);return;case 12:return;case 13:Ol(a);return;case 19:Ol(a);return;case 17:return}throw Error(l(163))}switch(a.tag){case 0:case 11:case 14:case 15:Hr(3,a,a.return),Yo(3,a),Hr(5,a,a.return);return;case 12:return;case 13:Ol(a);return;case 19:Ol(a);return;case 3:re&&o!==null&&o.memoizedState.isDehydrated&&ee(a.stateNode.containerInfo);break;case 22:case 23:return}e:if(le){switch(a.tag){case 1:case 5:case 6:break e;case 3:case 4:a=a.stateNode,It(a.containerInfo,a.pendingChildren);break e}throw Error(l(163))}}function Ol(o){var a=o.updateQueue;if(a!==null){o.updateQueue=null;var d=o.stateNode;d===null&&(d=o.stateNode=new fx),a.forEach(function(g){var M=wx.bind(null,o,g);d.has(g)||(d.add(g),g.then(M,M))})}}function px(o,a){for(Re=a;Re!==null;){a=Re;var d=a.deletions;if(d!==null)for(var g=0;g<d.length;g++){var M=d[g];try{var A=o;V?Rm(A,M,a):Em(A,M,a);var O=M.alternate;O!==null&&(O.return=null),M.return=null}catch(Ve){zn(M,a,Ve)}}if(d=a.child,a.subtreeFlags&12854&&d!==null)d.return=a,Re=d;else for(;Re!==null;){a=Re;try{var G=a.flags;if(G&32&&V&&Ge(a.stateNode),G&512){var oe=a.alternate;if(oe!==null){var we=oe.ref;we!==null&&(typeof we=="function"?we(null):we.current=null)}}if(G&8192)switch(a.tag){case 13:if(a.memoizedState!==null){var Oe=a.alternate;(Oe===null||Oe.memoizedState===null)&&(Rh=ln())}break;case 22:var ot=a.memoizedState!==null,Ke=a.alternate,Nt=Ke!==null&&Ke.memoizedState!==null;if(d=a,V){e:if(g=d,M=ot,A=null,V)for(var Xe=g;;){if(Xe.tag===5){if(A===null){A=Xe;var xn=Xe.stateNode;M?B(xn):Ee(Xe.stateNode,Xe.memoizedProps)}}else if(Xe.tag===6){if(A===null){var ui=Xe.stateNode;M?Te(ui):Ye(ui,Xe.memoizedProps)}}else if((Xe.tag!==22&&Xe.tag!==23||Xe.memoizedState===null||Xe===g)&&Xe.child!==null){Xe.child.return=Xe,Xe=Xe.child;continue}if(Xe===g)break;for(;Xe.sibling===null;){if(Xe.return===null||Xe.return===g)break e;A===Xe&&(A=null),Xe=Xe.return}A===Xe&&(A=null),Xe.sibling.return=Xe.return,Xe=Xe.sibling}}if(ot&&!Nt&&d.mode&1){Re=d;for(var J=d.child;J!==null;){for(d=Re=J;Re!==null;){g=Re;var W=g.child;switch(g.tag){case 0:case 11:case 14:case 15:Hr(4,g,g.return);break;case 1:Ul(g,g.return);var ie=g.stateNode;if(typeof ie.componentWillUnmount=="function"){var Ie=g.return;try{ie.props=g.memoizedProps,ie.state=g.memoizedState,ie.componentWillUnmount()}catch(Ve){zn(g,Ie,Ve)}}break;case 5:Ul(g,g.return);break;case 22:if(g.memoizedState!==null){Lm(d);continue}}W!==null?(W.return=g,Re=W):Lm(d)}J=J.sibling}}}switch(G&4102){case 2:Cm(a),a.flags&=-3;break;case 6:Cm(a),a.flags&=-3,Sh(a.alternate,a);break;case 4096:a.flags&=-4097;break;case 4100:a.flags&=-4097,Sh(a.alternate,a);break;case 4:Sh(a.alternate,a)}}catch(Ve){zn(a,a.return,Ve)}if(d=a.sibling,d!==null){d.return=a.return,Re=d;break}Re=a.return}}}function mx(o,a,d){Re=o,Pm(o)}function Pm(o,a,d){for(var g=(o.mode&1)!==0;Re!==null;){var M=Re,A=M.child;if(M.tag===22&&g){var O=M.memoizedState!==null||Dl;if(!O){var G=M.alternate,oe=G!==null&&G.memoizedState!==null||kr;G=Dl;var we=kr;if(Dl=O,(kr=oe)&&!we)for(Re=M;Re!==null;)O=Re,oe=O.child,O.tag===22&&O.memoizedState!==null?Nm(M):oe!==null?(oe.return=O,Re=oe):Nm(M);for(;A!==null;)Re=A,Pm(A),A=A.sibling;Re=M,Dl=G,kr=we}Im(o)}else M.subtreeFlags&8772&&A!==null?(A.return=M,Re=A):Im(o)}}function Im(o){for(;Re!==null;){var a=Re;if(a.flags&8772){var d=a.alternate;try{if(a.flags&8772)switch(a.tag){case 0:case 11:case 15:kr||Yo(5,a);break;case 1:var g=a.stateNode;if(a.flags&4&&!kr)if(d===null)g.componentDidMount();else{var M=a.elementType===a.type?d.memoizedProps:mi(a.type,d.memoizedProps);g.componentDidUpdate(M,d.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}var A=a.updateQueue;A!==null&&Ap(a,A,g);break;case 3:var O=a.updateQueue;if(O!==null){if(d=null,a.child!==null)switch(a.child.tag){case 5:d=ae(a.child.stateNode);break;case 1:d=a.child.stateNode}Ap(a,O,d)}break;case 5:var G=a.stateNode;d===null&&a.flags&4&&Be(G,a.type,a.memoizedProps,a);break;case 6:break;case 4:break;case 12:break;case 13:if(re&&a.memoizedState===null){var oe=a.alternate;if(oe!==null){var we=oe.memoizedState;if(we!==null){var Oe=we.dehydrated;Oe!==null&&ne(Oe)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(l(163))}kr||a.flags&512&&yh(a)}catch(ot){zn(a,a.return,ot)}}if(a===o){Re=null;break}if(d=a.sibling,d!==null){d.return=a.return,Re=d;break}Re=a.return}}function Lm(o){for(;Re!==null;){var a=Re;if(a===o){Re=null;break}var d=a.sibling;if(d!==null){d.return=a.return,Re=d;break}Re=a.return}}function Nm(o){for(;Re!==null;){var a=Re;try{switch(a.tag){case 0:case 11:case 15:var d=a.return;try{Yo(4,a)}catch(oe){zn(a,d,oe)}break;case 1:var g=a.stateNode;if(typeof g.componentDidMount=="function"){var M=a.return;try{g.componentDidMount()}catch(oe){zn(a,M,oe)}}var A=a.return;try{yh(a)}catch(oe){zn(a,A,oe)}break;case 5:var O=a.return;try{yh(a)}catch(oe){zn(a,O,oe)}}}catch(oe){zn(a,a.return,oe)}if(a===o){Re=null;break}var G=a.sibling;if(G!==null){G.return=a.return,Re=G;break}Re=a.return}}var Fl=0,zl=1,Bl=2,kl=3,Hl=4;if(typeof Symbol=="function"&&Symbol.for){var jo=Symbol.for;Fl=jo("selector.component"),zl=jo("selector.has_pseudo_class"),Bl=jo("selector.role"),kl=jo("selector.test_id"),Hl=jo("selector.text")}function wh(o){var a=ye(o);if(a!=null){if(typeof a.memoizedProps["data-testname"]!="string")throw Error(l(364));return a}if(o=ce(o),o===null)throw Error(l(362));return o.stateNode.current}function Eh(o,a){switch(a.$$typeof){case Fl:if(o.type===a.value)return!0;break;case zl:e:{a=a.value,o=[o,0];for(var d=0;d<o.length;){var g=o[d++],M=o[d++],A=a[M];if(g.tag!==5||!me(g)){for(;A!=null&&Eh(g,A);)M++,A=a[M];if(M===a.length){a=!0;break e}else for(g=g.child;g!==null;)o.push(g,M),g=g.sibling}}a=!1}return a;case Bl:if(o.tag===5&&He(o.stateNode,a.value))return!0;break;case Hl:if((o.tag===5||o.tag===6)&&(o=qe(o),o!==null&&0<=o.indexOf(a.value)))return!0;break;case kl:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===a.value.toLowerCase()))return!0;break;default:throw Error(l(365))}return!1}function Ah(o){switch(o.$$typeof){case Fl:return"<"+(I(o.value)||"Unknown")+">";case zl:return":has("+(Ah(o)||"")+")";case Bl:return'[role="'+o.value+'"]';case Hl:return'"'+o.value+'"';case kl:return'[data-testname="'+o.value+'"]';default:throw Error(l(365))}}function Dm(o,a){var d=[];o=[o,0];for(var g=0;g<o.length;){var M=o[g++],A=o[g++],O=a[A];if(M.tag!==5||!me(M)){for(;O!=null&&Eh(M,O);)A++,O=a[A];if(A===a.length)d.push(M);else for(M=M.child;M!==null;)o.push(M,A),M=M.sibling}}return d}function Th(o,a){if(!se)throw Error(l(363));o=wh(o),o=Dm(o,a),a=[],o=Array.from(o);for(var d=0;d<o.length;){var g=o[d++];if(g.tag===5)me(g)||a.push(g.stateNode);else for(g=g.child;g!==null;)o.push(g),g=g.sibling}return a}var gx=Math.ceil,Vl=c.ReactCurrentDispatcher,bh=c.ReactCurrentOwner,Zt=c.ReactCurrentBatchConfig,dt=0,Kt=null,Qt=null,pn=0,Kn=0,Os=yt(0),rn=0,Zo=null,Fs=0,Gl=0,Ch=0,Jo=null,On=null,Rh=0,Ph=1/0;function zs(){Ph=ln()+500}var Wl=!1,Ih=null,pr=null,Xl=!1,mr=null,ql=0,Ko=0,Lh=null,Yl=-1,jl=0;function Cn(){return dt&6?ln():Yl!==-1?Yl:Yl=ln()}function gr(o){return o.mode&1?dt&2&&pn!==0?pn&-pn:Qy.transition!==null?(jl===0&&(o=al,al<<=1,!(al&4194240)&&(al=64),jl=o),jl):(o=xt,o!==0?o:xe()):1}function li(o,a,d){if(50<Ko)throw Ko=0,Lh=null,Error(l(185));var g=Zl(o,a);return g===null?null:(Do(g,a,d),(!(dt&2)||g!==Kt)&&(g===Kt&&(!(dt&2)&&(Gl|=a),rn===4&&vr(g,pn)),Fn(g,d),a===1&&dt===0&&!(o.mode&1)&&(zs(),hl&&Ii())),g)}function Zl(o,a){o.lanes|=a;var d=o.alternate;for(d!==null&&(d.lanes|=a),d=o,o=o.return;o!==null;)o.childLanes|=a,d=o.alternate,d!==null&&(d.childLanes|=a),d=o,o=o.return;return d.tag===3?d.stateNode:null}function Fn(o,a){var d=o.callbackNode;Gy(o,a);var g=cl(o,o===Kt?pn:0);if(g===0)d!==null&&xp(d),o.callbackNode=null,o.callbackPriority=0;else if(a=g&-g,o.callbackPriority!==a){if(d!=null&&xp(d),a===1)o.tag===0?Ky(Om.bind(null,o)):Mp(Om.bind(null,o)),C?Y(function(){dt===0&&Ii()}):ku(Hu,Ii),d=null;else{switch(yp(g)){case 1:d=Hu;break;case 4:d=Yy;break;case 16:d=Vu;break;case 536870912:d=jy;break;default:d=Vu}d=Xm(d,Um.bind(null,o))}o.callbackPriority=a,o.callbackNode=d}}function Um(o,a){if(Yl=-1,jl=0,dt&6)throw Error(l(327));var d=o.callbackNode;if(Wr()&&o.callbackNode!==d)return null;var g=cl(o,o===Kt?pn:0);if(g===0)return null;if(g&30||g&o.expiredLanes||a)a=Jl(o,g);else{a=g;var M=dt;dt|=2;var A=Bm();(Kt!==o||pn!==a)&&(zs(),Vr(o,a));do try{yx();break}catch(G){zm(o,G)}while(!0);Xu(),Vl.current=A,dt=M,Qt!==null?a=0:(Kt=null,pn=0,a=rn)}if(a!==0){if(a===2&&(M=Fu(o),M!==0&&(g=M,a=Nh(o,M))),a===1)throw d=Zo,Vr(o,0),vr(o,g),Fn(o,ln()),d;if(a===6)vr(o,g);else{if(M=o.current.alternate,!(g&30)&&!vx(M)&&(a=Jl(o,g),a===2&&(A=Fu(o),A!==0&&(g=A,a=Nh(o,A))),a===1))throw d=Zo,Vr(o,0),vr(o,g),Fn(o,ln()),d;switch(o.finishedWork=M,o.finishedLanes=g,a){case 0:case 1:throw Error(l(345));case 2:Gr(o,On);break;case 3:if(vr(o,g),(g&130023424)===g&&(a=Rh+500-ln(),10<a)){if(cl(o,0)!==0)break;if(M=o.suspendedLanes,(M&g)!==g){Cn(),o.pingedLanes|=o.suspendedLanes&M;break}o.timeoutHandle=Me(Gr.bind(null,o,On),a);break}Gr(o,On);break;case 4:if(vr(o,g),(g&4194240)===g)break;for(a=o.eventTimes,M=-1;0<g;){var O=31-Un(g);A=1<<O,O=a[O],O>M&&(M=O),g&=~A}if(g=M,g=ln()-g,g=(120>g?120:480>g?480:1080>g?1080:1920>g?1920:3e3>g?3e3:4320>g?4320:1960*gx(g/1960))-g,10<g){o.timeoutHandle=Me(Gr.bind(null,o,On),g);break}Gr(o,On);break;case 5:Gr(o,On);break;default:throw Error(l(329))}}}return Fn(o,ln()),o.callbackNode===d?Um.bind(null,o):null}function Nh(o,a){var d=Jo;return o.current.memoizedState.isDehydrated&&(Vr(o,a).flags|=256),o=Jl(o,a),o!==2&&(a=On,On=d,a!==null&&Dh(a)),o}function Dh(o){On===null?On=o:On.push.apply(On,o)}function vx(o){for(var a=o;;){if(a.flags&16384){var d=a.updateQueue;if(d!==null&&(d=d.stores,d!==null))for(var g=0;g<d.length;g++){var M=d[g],A=M.getSnapshot;M=M.value;try{if(!Pi(A(),M))return!1}catch{return!1}}}if(d=a.child,a.subtreeFlags&16384&&d!==null)d.return=a,a=d;else{if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return!0;a=a.return}a.sibling.return=a.return,a=a.sibling}}return!0}function vr(o,a){for(a&=~Ch,a&=~Gl,o.suspendedLanes|=a,o.pingedLanes&=~a,o=o.expirationTimes;0<a;){var d=31-Un(a),g=1<<d;o[d]=-1,a&=~g}}function Om(o){if(dt&6)throw Error(l(327));Wr();var a=cl(o,0);if(!(a&1))return Fn(o,ln()),null;var d=Jl(o,a);if(o.tag!==0&&d===2){var g=Fu(o);g!==0&&(a=g,d=Nh(o,g))}if(d===1)throw d=Zo,Vr(o,0),vr(o,a),Fn(o,ln()),d;if(d===6)throw Error(l(345));return o.finishedWork=o.current.alternate,o.finishedLanes=a,Gr(o,On),Fn(o,ln()),null}function Fm(o){mr!==null&&mr.tag===0&&!(dt&6)&&Wr();var a=dt;dt|=1;var d=Zt.transition,g=xt;try{if(Zt.transition=null,xt=1,o)return o()}finally{xt=g,Zt.transition=d,dt=a,!(dt&6)&&Ii()}}function Uh(){Kn=Os.current,Ue(Os)}function Vr(o,a){o.finishedWork=null,o.finishedLanes=0;var d=o.timeoutHandle;if(d!==tt&&(o.timeoutHandle=tt,je(d)),Qt!==null)for(d=Qt.return;d!==null;){var g=d;switch(Qu(g),g.tag){case 1:g=g.type.childContextTypes,g!=null&&Yn();break;case 3:Ds(),Ue(dn),Ue(Bt),sh();break;case 5:ih(g);break;case 4:Ds();break;case 13:Ue(Ht);break;case 19:Ue(Ht);break;case 10:qu(g.type._context);break;case 22:case 23:Uh()}d=d.return}if(Kt=o,Qt=o=_r(o.current,null),pn=Kn=a,rn=0,Zo=null,Ch=Gl=Fs=0,On=Jo=null,Li!==null){for(a=0;a<Li.length;a++)if(d=Li[a],g=d.interleaved,g!==null){d.interleaved=null;var M=g.next,A=d.pending;if(A!==null){var O=A.next;A.next=M,g.next=O}d.pending=g}Li=null}return o}function zm(o,a){do{var d=Qt;try{if(Xu(),Sl.current=Cl,wl){for(var g=Xt.memoizedState;g!==null;){var M=g.queue;M!==null&&(M.pending=null),g=g.next}wl=!1}if(Us=0,cn=vn=Xt=null,ko=!1,Ho=0,bh.current=null,d===null||d.return===null){rn=1,Zo=a,Qt=null;break}e:{var A=o,O=d.return,G=d,oe=a;if(a=pn,G.flags|=32768,oe!==null&&typeof oe=="object"&&typeof oe.then=="function"){var we=oe,Oe=G,ot=Oe.tag;if(!(Oe.mode&1)&&(ot===0||ot===11||ot===15)){var Ke=Oe.alternate;Ke?(Oe.updateQueue=Ke.updateQueue,Oe.memoizedState=Ke.memoizedState,Oe.lanes=Ke.lanes):(Oe.updateQueue=null,Oe.memoizedState=null)}var Nt=sm(O);if(Nt!==null){Nt.flags&=-257,om(Nt,O,G,A,a),Nt.mode&1&&rm(A,we,a),a=Nt,oe=we;var Xe=a.updateQueue;if(Xe===null){var xn=new Set;xn.add(oe),a.updateQueue=xn}else Xe.add(oe);break e}else{if(!(a&1)){rm(A,we,a),Oh();break e}oe=Error(l(426))}}else if(kt&&G.mode&1){var ui=sm(O);if(ui!==null){!(ui.flags&65536)&&(ui.flags|=256),om(ui,O,G,A,a),th(oe);break e}}A=oe,rn!==4&&(rn=2),Jo===null?Jo=[A]:Jo.push(A),oe=fh(oe,G),G=O;do{switch(G.tag){case 3:G.flags|=65536,a&=-a,G.lanes|=a;var J=nm(G,oe,a);Ep(G,J);break e;case 1:A=oe;var W=G.type,ie=G.stateNode;if(!(G.flags&128)&&(typeof W.getDerivedStateFromError=="function"||ie!==null&&typeof ie.componentDidCatch=="function"&&(pr===null||!pr.has(ie)))){G.flags|=65536,a&=-a,G.lanes|=a;var Ie=im(G,A,a);Ep(G,Ie);break e}}G=G.return}while(G!==null)}Hm(d)}catch(Ve){a=Ve,Qt===d&&d!==null&&(Qt=d=d.return);continue}break}while(!0)}function Bm(){var o=Vl.current;return Vl.current=Cl,o===null?Cl:o}function Oh(){(rn===0||rn===3||rn===2)&&(rn=4),Kt===null||!(Fs&268435455)&&!(Gl&268435455)||vr(Kt,pn)}function Jl(o,a){var d=dt;dt|=2;var g=Bm();Kt===o&&pn===a||Vr(o,a);do try{_x();break}catch(M){zm(o,M)}while(!0);if(Xu(),dt=d,Vl.current=g,Qt!==null)throw Error(l(261));return Kt=null,pn=0,rn}function _x(){for(;Qt!==null;)km(Qt)}function yx(){for(;Qt!==null&&!Xy();)km(Qt)}function km(o){var a=Wm(o.alternate,o,Kn);o.memoizedProps=o.pendingProps,a===null?Hm(o):Qt=a,bh.current=null}function Hm(o){var a=o;do{var d=a.alternate;if(o=a.return,a.flags&32768){if(d=hx(d,a),d!==null){d.flags&=32767,Qt=d;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{rn=6,Qt=null;return}}else if(d=lx(d,a,Kn),d!==null){Qt=d;return}if(a=a.sibling,a!==null){Qt=a;return}Qt=a=o}while(a!==null);rn===0&&(rn=5)}function Gr(o,a){var d=xt,g=Zt.transition;try{Zt.transition=null,xt=1,xx(o,a,d)}finally{Zt.transition=g,xt=d}return null}function xx(o,a,d){do Wr();while(mr!==null);if(dt&6)throw Error(l(327));var g=o.finishedWork,M=o.finishedLanes;if(g===null)return null;if(o.finishedWork=null,o.finishedLanes=0,g===o.current)throw Error(l(177));o.callbackNode=null,o.callbackPriority=0;var A=g.lanes|g.childLanes;if(Wy(o,A),o===Kt&&(Qt=Kt=null,pn=0),!(g.subtreeFlags&2064)&&!(g.flags&2064)||Xl||(Xl=!0,Xm(Vu,function(){return Wr(),null})),A=(g.flags&15990)!==0,g.subtreeFlags&15990||A){A=Zt.transition,Zt.transition=null;var O=xt;xt=1;var G=dt;dt|=4,bh.current=null,dx(o,g),px(o,g),j(o.containerInfo),o.current=g,mx(g),qy(),dt=G,xt=O,Zt.transition=A}else o.current=g;if(Xl&&(Xl=!1,mr=o,ql=M),A=o.pendingLanes,A===0&&(pr=null),Zy(g.stateNode),Fn(o,ln()),a!==null)for(d=o.onRecoverableError,g=0;g<a.length;g++)d(a[g]);if(Wl)throw Wl=!1,o=Ih,Ih=null,o;return ql&1&&o.tag!==0&&Wr(),A=o.pendingLanes,A&1?o===Lh?Ko++:(Ko=0,Lh=o):Ko=0,Ii(),null}function Wr(){if(mr!==null){var o=yp(ql),a=Zt.transition,d=xt;try{if(Zt.transition=null,xt=16>o?16:o,mr===null)var g=!1;else{if(o=mr,mr=null,ql=0,dt&6)throw Error(l(331));var M=dt;for(dt|=4,Re=o.current;Re!==null;){var A=Re,O=A.child;if(Re.flags&16){var G=A.deletions;if(G!==null){for(var oe=0;oe<G.length;oe++){var we=G[oe];for(Re=we;Re!==null;){var Oe=Re;switch(Oe.tag){case 0:case 11:case 15:Hr(8,Oe,A)}var ot=Oe.child;if(ot!==null)ot.return=Oe,Re=ot;else for(;Re!==null;){Oe=Re;var Ke=Oe.sibling,Nt=Oe.return;if(Am(Oe),Oe===we){Re=null;break}if(Ke!==null){Ke.return=Nt,Re=Ke;break}Re=Nt}}}var Xe=A.alternate;if(Xe!==null){var xn=Xe.child;if(xn!==null){Xe.child=null;do{var ui=xn.sibling;xn.sibling=null,xn=ui}while(xn!==null)}}Re=A}}if(A.subtreeFlags&2064&&O!==null)O.return=A,Re=O;else e:for(;Re!==null;){if(A=Re,A.flags&2048)switch(A.tag){case 0:case 11:case 15:Hr(9,A,A.return)}var J=A.sibling;if(J!==null){J.return=A.return,Re=J;break e}Re=A.return}}var W=o.current;for(Re=W;Re!==null;){O=Re;var ie=O.child;if(O.subtreeFlags&2064&&ie!==null)ie.return=O,Re=ie;else e:for(O=W;Re!==null;){if(G=Re,G.flags&2048)try{switch(G.tag){case 0:case 11:case 15:Yo(9,G)}}catch(Ve){zn(G,G.return,Ve)}if(G===O){Re=null;break e}var Ie=G.sibling;if(Ie!==null){Ie.return=G.return,Re=Ie;break e}Re=G.return}}if(dt=M,Ii(),Ri&&typeof Ri.onPostCommitFiberRoot=="function")try{Ri.onPostCommitFiberRoot(ul,o)}catch{}g=!0}return g}finally{xt=d,Zt.transition=a}}return!1}function Vm(o,a,d){a=fh(d,a),a=nm(o,a,1),dr(o,a),a=Cn(),o=Zl(o,1),o!==null&&(Do(o,1,a),Fn(o,a))}function zn(o,a,d){if(o.tag===3)Vm(o,o,d);else for(;a!==null;){if(a.tag===3){Vm(a,o,d);break}else if(a.tag===1){var g=a.stateNode;if(typeof a.type.getDerivedStateFromError=="function"||typeof g.componentDidCatch=="function"&&(pr===null||!pr.has(g))){o=fh(d,o),o=im(a,o,1),dr(a,o),o=Cn(),a=Zl(a,1),a!==null&&(Do(a,1,o),Fn(a,o));break}}a=a.return}}function Mx(o,a,d){var g=o.pingCache;g!==null&&g.delete(a),a=Cn(),o.pingedLanes|=o.suspendedLanes&d,Kt===o&&(pn&d)===d&&(rn===4||rn===3&&(pn&130023424)===pn&&500>ln()-Rh?Vr(o,0):Ch|=d),Fn(o,a)}function Gm(o,a){a===0&&(o.mode&1?(a=ll,ll<<=1,!(ll&130023424)&&(ll=4194304)):a=1);var d=Cn();o=Zl(o,a),o!==null&&(Do(o,a,d),Fn(o,d))}function Sx(o){var a=o.memoizedState,d=0;a!==null&&(d=a.retryLane),Gm(o,d)}function wx(o,a){var d=0;switch(o.tag){case 13:var g=o.stateNode,M=o.memoizedState;M!==null&&(d=M.retryLane);break;case 19:g=o.stateNode;break;default:throw Error(l(314))}g!==null&&g.delete(a),Gm(o,d)}var Wm;Wm=function(o,a,d){if(o!==null)if(o.memoizedProps!==a.pendingProps||dn.current)Jn=!0;else{if(!(o.lanes&d)&&!(a.flags&128))return Jn=!1,ux(o,a,d);Jn=!!(o.flags&131072)}else Jn=!1,kt&&a.flags&1048576&&Pp(a,yl,a.index);switch(a.lanes=0,a.tag){case 2:var g=a.type;o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps;var M=Ci(a,Bt.current);Cs(a,d),M=ah(null,a,g,o,M,d);var A=lh();return a.flags|=1,typeof M=="object"&&M!==null&&typeof M.render=="function"&&M.$$typeof===void 0?(a.tag=1,a.memoizedState=null,a.updateQueue=null,At(g)?(A=!0,hr(a)):A=!1,a.memoizedState=M.state!==null&&M.state!==void 0?M.state:null,ju(a),M.updater=vl,a.stateNode=M,M._reactInternals=a,Ju(a,g,o,d),a=mh(null,a,g,!0,A,d)):(a.tag=0,kt&&A&&Ku(a),bn(null,a,M,d),a=a.child),a;case 16:g=a.elementType;e:{switch(o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps,M=g._init,g=M(g._payload),a.type=g,M=a.tag=Ax(g),o=mi(g,o),M){case 0:a=ph(null,a,g,o,d);break e;case 1:a=pm(null,a,g,o,d);break e;case 11:a=cm(null,a,g,o,d);break e;case 14:a=um(null,a,g,mi(g.type,o),d);break e}throw Error(l(306,g,""))}return a;case 0:return g=a.type,M=a.pendingProps,M=a.elementType===g?M:mi(g,M),ph(o,a,g,M,d);case 1:return g=a.type,M=a.pendingProps,M=a.elementType===g?M:mi(g,M),pm(o,a,g,M,d);case 3:e:{if(mm(a),o===null)throw Error(l(387));g=a.pendingProps,A=a.memoizedState,M=A.element,wp(o,a),gl(a,g,null,d);var O=a.memoizedState;if(g=O.element,re&&A.isDehydrated)if(A={element:g,isDehydrated:!1,cache:O.cache,transitions:O.transitions},a.updateQueue.baseState=A,a.memoizedState=A,a.flags&256){M=Error(l(423)),a=gm(o,a,g,d,M);break e}else if(g!==M){M=Error(l(424)),a=gm(o,a,g,d,M);break e}else for(re&&(Zn=sl(a.stateNode.containerInfo),jn=a,kt=!0,gi=null,Uo=!1),d=Op(a,null,g,d),a.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling;else{if(Is(),g===M){a=ji(o,a,d);break e}bn(o,a,g,d)}a=a.child}return a;case 5:return Fp(a),o===null&&eh(a),g=a.type,M=a.pendingProps,A=o!==null?o.memoizedProps:null,O=M.children,ge(g,M)?O=null:A!==null&&ge(g,A)&&(a.flags|=32),dm(o,a),bn(o,a,O,d),a.child;case 6:return o===null&&eh(a),null;case 13:return vm(o,a,d);case 4:return nh(a,a.stateNode.containerInfo),g=a.pendingProps,o===null?a.child=Ls(a,null,g,d):bn(o,a,g,d),a.child;case 11:return g=a.type,M=a.pendingProps,M=a.elementType===g?M:mi(g,M),cm(o,a,g,M,d);case 7:return bn(o,a,a.pendingProps,d),a.child;case 8:return bn(o,a,a.pendingProps.children,d),a.child;case 12:return bn(o,a,a.pendingProps.children,d),a.child;case 10:e:{if(g=a.type._context,M=a.pendingProps,A=a.memoizedProps,O=M.value,Sp(a,g,O),A!==null)if(Pi(A.value,O)){if(A.children===M.children&&!dn.current){a=ji(o,a,d);break e}}else for(A=a.child,A!==null&&(A.return=a);A!==null;){var G=A.dependencies;if(G!==null){O=A.child;for(var oe=G.firstContext;oe!==null;){if(oe.context===g){if(A.tag===1){oe=Wi(-1,d&-d),oe.tag=2;var we=A.updateQueue;if(we!==null){we=we.shared;var Oe=we.pending;Oe===null?oe.next=oe:(oe.next=Oe.next,Oe.next=oe),we.pending=oe}}A.lanes|=d,oe=A.alternate,oe!==null&&(oe.lanes|=d),Yu(A.return,d,a),G.lanes|=d;break}oe=oe.next}}else if(A.tag===10)O=A.type===a.type?null:A.child;else if(A.tag===18){if(O=A.return,O===null)throw Error(l(341));O.lanes|=d,G=O.alternate,G!==null&&(G.lanes|=d),Yu(O,d,a),O=A.sibling}else O=A.child;if(O!==null)O.return=A;else for(O=A;O!==null;){if(O===a){O=null;break}if(A=O.sibling,A!==null){A.return=O.return,O=A;break}O=O.return}A=O}bn(o,a,M.children,d),a=a.child}return a;case 9:return M=a.type,g=a.pendingProps.children,Cs(a,d),M=ii(M),g=g(M),a.flags|=1,bn(o,a,g,d),a.child;case 14:return g=a.type,M=mi(g,a.pendingProps),M=mi(g.type,M),um(o,a,g,M,d);case 15:return hm(o,a,a.type,a.pendingProps,d);case 17:return g=a.type,M=a.pendingProps,M=a.elementType===g?M:mi(g,M),o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),a.tag=1,At(g)?(o=!0,hr(a)):o=!1,Cs(a,d),Cp(a,g,M),Ju(a,g,M,d),mh(null,a,g,!0,o,d);case 19:return Mm(o,a,d);case 22:return fm(o,a,d)}throw Error(l(156,a.tag))};function Xm(o,a){return ku(o,a)}function Ex(o,a,d,g){this.tag=o,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=a,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=g,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function ci(o,a,d,g){return new Ex(o,a,d,g)}function Fh(o){return o=o.prototype,!(!o||!o.isReactComponent)}function Ax(o){if(typeof o=="function")return Fh(o)?1:0;if(o!=null){if(o=o.$$typeof,o===S)return 11;if(o===E)return 14}return 2}function _r(o,a){var d=o.alternate;return d===null?(d=ci(o.tag,a,o.key,o.mode),d.elementType=o.elementType,d.type=o.type,d.stateNode=o.stateNode,d.alternate=o,o.alternate=d):(d.pendingProps=a,d.type=o.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=o.flags&14680064,d.childLanes=o.childLanes,d.lanes=o.lanes,d.child=o.child,d.memoizedProps=o.memoizedProps,d.memoizedState=o.memoizedState,d.updateQueue=o.updateQueue,a=o.dependencies,d.dependencies=a===null?null:{lanes:a.lanes,firstContext:a.firstContext},d.sibling=o.sibling,d.index=o.index,d.ref=o.ref,d}function Kl(o,a,d,g,M,A){var O=2;if(g=o,typeof o=="function")Fh(o)&&(O=1);else if(typeof o=="string")O=5;else e:switch(o){case f:return Xr(d.children,M,A,a);case p:O=8,M|=8;break;case m:return o=ci(12,d,a,M|2),o.elementType=m,o.lanes=A,o;case x:return o=ci(13,d,a,M),o.elementType=x,o.lanes=A,o;case _:return o=ci(19,d,a,M),o.elementType=_,o.lanes=A,o;case T:return Ql(d,M,A,a);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case v:O=10;break e;case y:O=9;break e;case S:O=11;break e;case E:O=14;break e;case w:O=16,g=null;break e}throw Error(l(130,o==null?o:typeof o,""))}return a=ci(O,d,a,M),a.elementType=o,a.type=g,a.lanes=A,a}function Xr(o,a,d,g){return o=ci(7,o,g,a),o.lanes=d,o}function Ql(o,a,d,g){return o=ci(22,o,g,a),o.elementType=T,o.lanes=d,o.stateNode={},o}function zh(o,a,d){return o=ci(6,o,null,a),o.lanes=d,o}function Bh(o,a,d){return a=ci(4,o.children!==null?o.children:[],o.key,a),a.lanes=d,a.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},a}function Tx(o,a,d,g,M){this.tag=a,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=tt,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=zu(0),this.expirationTimes=zu(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=zu(0),this.identifierPrefix=g,this.onRecoverableError=M,re&&(this.mutableSourceEagerHydrationData=null)}function qm(o,a,d,g,M,A,O,G,oe){return o=new Tx(o,a,d,G,oe),a===1?(a=1,A===!0&&(a|=8)):a=0,A=ci(3,null,null,a),o.current=A,A.stateNode=o,A.memoizedState={element:g,isDehydrated:d,cache:null,transitions:null},ju(A),o}function Ym(o){if(!o)return gt;o=o._reactInternals;e:{if(R(o)!==o||o.tag!==1)throw Error(l(170));var a=o;do{switch(a.tag){case 3:a=a.stateNode.context;break e;case 1:if(At(a.type)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break e}}a=a.return}while(a!==null);throw Error(l(171))}if(o.tag===1){var d=o.type;if(At(d))return Tn(o,d,a)}return a}function jm(o){var a=o._reactInternals;if(a===void 0)throw typeof o.render=="function"?Error(l(188)):(o=Object.keys(o).join(","),Error(l(268,o)));return o=X(a),o===null?null:o.stateNode}function Zm(o,a){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var d=o.retryLane;o.retryLane=d!==0&&d<a?d:a}}function kh(o,a){Zm(o,a),(o=o.alternate)&&Zm(o,a)}function bx(o){return o=X(o),o===null?null:o.stateNode}function Cx(){return null}return t.attemptContinuousHydration=function(o){if(o.tag===13){var a=Cn();li(o,134217728,a),kh(o,134217728)}},t.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var a=Cn(),d=gr(o);li(o,d,a),kh(o,d)}},t.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var a=o.stateNode;if(a.current.memoizedState.isDehydrated){var d=No(a.pendingLanes);d!==0&&(Bu(a,d|1),Fn(a,ln()),!(dt&6)&&(zs(),Ii()))}break;case 13:var g=Cn();Fm(function(){return li(o,1,g)}),kh(o,1)}},t.batchedUpdates=function(o,a){var d=dt;dt|=1;try{return o(a)}finally{dt=d,dt===0&&(zs(),hl&&Ii())}},t.createComponentSelector=function(o){return{$$typeof:Fl,value:o}},t.createContainer=function(o,a,d,g,M,A,O){return qm(o,a,!1,null,d,g,M,A,O)},t.createHasPseudoClassSelector=function(o){return{$$typeof:zl,value:o}},t.createHydrationContainer=function(o,a,d,g,M,A,O,G,oe){return o=qm(d,g,!0,o,M,A,O,G,oe),o.context=Ym(null),d=o.current,g=Cn(),M=gr(d),A=Wi(g,M),A.callback=a??null,dr(d,A),o.current.lanes=M,Do(o,M,g),Fn(o,g),o},t.createPortal=function(o,a,d){var g=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:g==null?null:""+g,children:o,containerInfo:a,implementation:d}},t.createRoleSelector=function(o){return{$$typeof:Bl,value:o}},t.createTestNameSelector=function(o){return{$$typeof:kl,value:o}},t.createTextSelector=function(o){return{$$typeof:Hl,value:o}},t.deferredUpdates=function(o){var a=xt,d=Zt.transition;try{return Zt.transition=null,xt=16,o()}finally{xt=a,Zt.transition=d}},t.discreteUpdates=function(o,a,d,g,M){var A=xt,O=Zt.transition;try{return Zt.transition=null,xt=1,o(a,d,g,M)}finally{xt=A,Zt.transition=O,dt===0&&zs()}},t.findAllNodes=Th,t.findBoundingRects=function(o,a){if(!se)throw Error(l(363));a=Th(o,a),o=[];for(var d=0;d<a.length;d++)o.push(pe(a[d]));for(a=o.length-1;0<a;a--){d=o[a];for(var g=d.x,M=g+d.width,A=d.y,O=A+d.height,G=a-1;0<=G;G--)if(a!==G){var oe=o[G],we=oe.x,Oe=we+oe.width,ot=oe.y,Ke=ot+oe.height;if(g>=we&&A>=ot&&M<=Oe&&O<=Ke){o.splice(a,1);break}else if(g!==we||d.width!==oe.width||Ke<A||ot>O){if(!(A!==ot||d.height!==oe.height||Oe<g||we>M)){we>g&&(oe.width+=we-g,oe.x=g),Oe<M&&(oe.width=M-we),o.splice(a,1);break}}else{ot>A&&(oe.height+=ot-A,oe.y=A),Ke<O&&(oe.height=O-ot),o.splice(a,1);break}}}return o},t.findHostInstance=jm,t.findHostInstanceWithNoPortals=function(o){return o=F(o),o=o!==null?Z(o):null,o===null?null:o.stateNode},t.findHostInstanceWithWarning=function(o){return jm(o)},t.flushControlled=function(o){var a=dt;dt|=1;var d=Zt.transition,g=xt;try{Zt.transition=null,xt=1,o()}finally{xt=g,Zt.transition=d,dt=a,dt===0&&(zs(),Ii())}},t.flushPassiveEffects=Wr,t.flushSync=Fm,t.focusWithin=function(o,a){if(!se)throw Error(l(363));for(o=wh(o),a=Dm(o,a),a=Array.from(a),o=0;o<a.length;){var d=a[o++];if(!me(d)){if(d.tag===5&&Ze(d.stateNode))return!0;for(d=d.child;d!==null;)a.push(d),d=d.sibling}}return!1},t.getCurrentUpdatePriority=function(){return xt},t.getFindAllNodesFailureDescription=function(o,a){if(!se)throw Error(l(363));var d=0,g=[];o=[wh(o),0];for(var M=0;M<o.length;){var A=o[M++],O=o[M++],G=a[O];if((A.tag!==5||!me(A))&&(Eh(A,G)&&(g.push(Ah(G)),O++,O>d&&(d=O)),O<a.length))for(A=A.child;A!==null;)o.push(A,O),A=A.sibling}if(d<a.length){for(o=[];d<a.length;d++)o.push(Ah(a[d]));return`findAllNodes was able to match part of the selector:
  `+(g.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},t.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return ae(o.child.stateNode);default:return o.child.stateNode}},t.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:bx,findFiberByHostInstance:o.findFiberByHostInstance||Cx,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")o=!1;else{var a=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(a.isDisabled||!a.supportsFiber)o=!0;else{try{ul=a.inject(o),Ri=a}catch{}o=!!a.checkDCE}}return o},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(o,a,d,g){if(!se)throw Error(l(363));o=Th(o,a);var M=Se(o,d,g).disconnect;return{disconnect:function(){M()}}},t.registerMutableSourceForHydration=function(o,a){var d=a._getVersion;d=d(a._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[a,d]:o.mutableSourceEagerHydrationData.push(a,d)},t.runWithPriority=function(o,a){var d=xt;try{return xt=o,a()}finally{xt=d}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(o,a,d,g){var M=a.current,A=Cn(),O=gr(M);return d=Ym(d),a.context===null?a.context=d:a.pendingContext=d,a=Wi(A,O),a.payload={element:o},g=g===void 0?null:g,g!==null&&(a.callback=g),dr(M,a),o=li(M,O,A),o!==null&&ml(o,M,O),O},t};my.exports=Bb;var kb=my.exports;const Hb=j0(kb),Vb=r=>typeof r=="object"&&typeof r.then=="function",fs=[];function _y(r,e,t=(n,i)=>n===i){if(r===e)return!0;if(!r||!e)return!1;const n=r.length;if(e.length!==n)return!1;for(let i=0;i<n;i++)if(!t(r[i],e[i]))return!1;return!0}function yy(r,e=null,t=!1,n={}){e===null&&(e=[r]);for(const s of fs)if(_y(e,s.keys,s.equal)){if(t)return;if(Object.prototype.hasOwnProperty.call(s,"error"))throw s.error;if(Object.prototype.hasOwnProperty.call(s,"response"))return n.lifespan&&n.lifespan>0&&(s.timeout&&clearTimeout(s.timeout),s.timeout=setTimeout(s.remove,n.lifespan)),s.response;if(!t)throw s.promise}const i={keys:e,equal:n.equal,remove:()=>{const s=fs.indexOf(i);s!==-1&&fs.splice(s,1)},promise:(Vb(r)?r:r(...e)).then(s=>{i.response=s,n.lifespan&&n.lifespan>0&&(i.timeout=setTimeout(i.remove,n.lifespan))}).catch(s=>i.error=s)};if(fs.push(i),!t)throw i.promise}const Gb=(r,e,t)=>yy(r,e,!1,t),Wb=(r,e,t)=>void yy(r,e,!0,t),Xb=r=>{if(r===void 0||r.length===0)fs.splice(0,fs.length);else{const e=fs.find(t=>_y(r,t.keys,t.equal));e&&e.remove()}},gp={},qb=r=>void Object.assign(gp,r);function Yb(r,e){function t(f,{args:p=[],attach:m,...v},y){let S=`${f[0].toUpperCase()}${f.slice(1)}`,x;if(f==="primitive"){if(v.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const _=v.object;x=uo(_,{type:f,root:y,attach:m,primitive:!0})}else{const _=gp[S];if(!_)throw new Error(`R3F: ${S} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");x=uo(new _(...p),{type:f,root:y,attach:m,memoizedProps:{args:p}})}return x.__r3f.attach===void 0&&(x instanceof ht?x.__r3f.attach="geometry":x instanceof mn&&(x.__r3f.attach="material")),S!=="inject"&&Rf(x,v),x}function n(f,p){let m=!1;if(p){var v,y;(v=p.__r3f)!=null&&v.attach?Cf(f,p,p.__r3f.attach):p.isObject3D&&f.isObject3D&&(f.add(p),m=!0),m||(y=f.__r3f)==null||y.objects.push(p),p.__r3f||uo(p,{}),p.__r3f.parent=f,Ad(p),ho(p)}}function i(f,p,m){let v=!1;if(p){var y,S;if((y=p.__r3f)!=null&&y.attach)Cf(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){p.parent=f,p.dispatchEvent({type:"added"}),f.dispatchEvent({type:"childadded",child:p});const x=f.children.filter(E=>E!==p),_=x.indexOf(m);f.children=[...x.slice(0,_),p,...x.slice(_)],v=!0}v||(S=f.__r3f)==null||S.objects.push(p),p.__r3f||uo(p,{}),p.__r3f.parent=f,Ad(p),ho(p)}}function s(f,p,m=!1){f&&[...f].forEach(v=>l(p,v,m))}function l(f,p,m){if(p){var v,y,S;if(p.__r3f&&(p.__r3f.parent=null),(v=f.__r3f)!=null&&v.objects&&(f.__r3f.objects=f.__r3f.objects.filter(T=>T!==p)),(y=p.__r3f)!=null&&y.attach)U0(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){var x;f.remove(p),(x=p.__r3f)!=null&&x.root&&nC($c(p),p)}const E=(S=p.__r3f)==null?void 0:S.primitive,w=!E&&(m===void 0?p.dispose!==null:m);if(!E){var _;s((_=p.__r3f)==null?void 0:_.objects,p,w),s(p.children,p,w)}if(delete p.__r3f,w&&p.dispose&&p.type!=="Scene"){const T=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?wd.unstable_scheduleCallback(wd.unstable_IdlePriority,T):T()}ho(f)}}function c(f,p,m,v){var y;const S=(y=f.__r3f)==null?void 0:y.parent;if(!S)return;const x=t(p,m,f.__r3f.root);if(f.children){for(const _ of f.children)_.__r3f&&n(x,_);f.children=f.children.filter(_=>!_.__r3f)}f.__r3f.objects.forEach(_=>n(x,_)),f.__r3f.objects=[],f.__r3f.autoRemovedBeforeAppend||l(S,f),x.parent&&(x.__r3f.autoRemovedBeforeAppend=!0),n(S,x),x.raycast&&x.__r3f.eventCount&&$c(x).getState().internal.interaction.push(x),[v,v.alternate].forEach(_=>{_!==null&&(_.stateNode=x,_.ref&&(typeof _.ref=="function"?_.ref(x):_.ref.current=x))})}const u=()=>console.warn("Text is not allowed in the R3F tree! This could be stray whitespace or characters.");return{reconciler:Hb({createInstance:t,removeChild:l,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(f,p)=>{if(!p)return;const m=f.getState().scene;m.__r3f&&(m.__r3f.root=f,n(m,p))},removeChildFromContainer:(f,p)=>{p&&l(f.getState().scene,p)},insertInContainerBefore:(f,p,m)=>{if(!p||!m)return;const v=f.getState().scene;v.__r3f&&i(v,p,m)},getRootHostContext:()=>null,getChildHostContext:f=>f,finalizeInitialChildren(f){var p;return!!((p=f==null?void 0:f.__r3f)!=null?p:{}).handlers},prepareUpdate(f,p,m,v){var y;if(((y=f==null?void 0:f.__r3f)!=null?y:{}).primitive&&v.object&&v.object!==f)return[!0];{const{args:x=[],children:_,...E}=v,{args:w=[],children:T,...N}=m;if(!Array.isArray(x))throw new Error("R3F: the args prop must be an array!");if(x.some((I,z)=>I!==w[z]))return[!0];const P=Ty(f,E,N,!0);return P.changes.length?[!1,P]:null}},commitUpdate(f,[p,m],v,y,S,x){p?c(f,v,S,x):Rf(f,m)},commitMount(f,p,m,v){var y;const S=(y=f.__r3f)!=null?y:{};f.raycast&&S.handlers&&S.eventCount&&$c(f).getState().internal.interaction.push(f)},getPublicInstance:f=>f,prepareForCommit:()=>null,preparePortalMount:f=>uo(f.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(f){var p;const{attach:m,parent:v}=(p=f.__r3f)!=null?p:{};m&&v&&U0(v,f,m),f.isObject3D&&(f.visible=!1),ho(f)},unhideInstance(f,p){var m;const{attach:v,parent:y}=(m=f.__r3f)!=null?m:{};v&&y&&Cf(y,f,v),(f.isObject3D&&p.visible==null||p.visible)&&(f.visible=!0),ho(f)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():yo.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&zt.fun(performance.now)?performance.now:zt.fun(Date.now)?Date.now:()=>0,scheduleTimeout:zt.fun(setTimeout)?setTimeout:void 0,cancelTimeout:zt.fun(clearTimeout)?clearTimeout:void 0}),applyProps:Rf}}var I0,L0;const bf=r=>"colorSpace"in r||"outputColorSpace"in r,xy=()=>{var r;return(r=gp.ColorManagement)!=null?r:null},My=r=>r&&r.isOrthographicCamera,jb=r=>r&&r.hasOwnProperty("current"),Qa=typeof window<"u"&&((I0=window.document)!=null&&I0.createElement||((L0=window.navigator)==null?void 0:L0.product)==="ReactNative")?de.useLayoutEffect:de.useEffect;function Sy(r){const e=de.useRef(r);return Qa(()=>void(e.current=r),[r]),e}function Zb({set:r}){return Qa(()=>(r(new Promise(()=>null)),()=>r(!1)),[r]),null}class wy extends de.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}wy.getDerivedStateFromError=()=>({error:!0});const Ey="__default",N0=new Map,Jb=r=>r&&!!r.memoized&&!!r.changes;function Ay(r){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(r)?Math.min(Math.max(r[0],t),r[1]):r}const ca=r=>{var e;return(e=r.__r3f)==null?void 0:e.root.getState()};function $c(r){let e=r.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const zt={obj:r=>r===Object(r)&&!zt.arr(r)&&typeof r!="function",fun:r=>typeof r=="function",str:r=>typeof r=="string",num:r=>typeof r=="number",boo:r=>typeof r=="boolean",und:r=>r===void 0,arr:r=>Array.isArray(r),equ(r,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof r!=typeof e||!!r!=!!e)return!1;if(zt.str(r)||zt.num(r))return r===e;const s=zt.obj(r);if(s&&n==="reference")return r===e;const l=zt.arr(r);if(l&&t==="reference")return r===e;if((l||s)&&r===e)return!0;let c;for(c in r)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in i?e:r)if(!zt.equ(r[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:r)if(r[c]!==e[c])return!1;if(zt.und(c)){if(l&&r.length===0&&e.length===0||s&&Object.keys(r).length===0&&Object.keys(e).length===0)return!0;if(r!==e)return!1}return!0}};function Kb(r){const e={nodes:{},materials:{}};return r&&r.traverse(t=>{t.name&&(e.nodes[t.name]=t),t.material&&!e.materials[t.material.name]&&(e.materials[t.material.name]=t.material)}),e}function Qb(r){r.dispose&&r.type!=="Scene"&&r.dispose();for(const e in r)e.dispose==null||e.dispose(),delete r[e]}function uo(r,e){const t=r;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},r}function Ed(r,e){let t=r;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((s,l)=>s[l],r),{target:t,key:i}}else return{target:t,key:e}}const D0=/-\d+$/;function Cf(r,e,t){if(zt.str(t)){if(D0.test(t)){const s=t.replace(D0,""),{target:l,key:c}=Ed(r,s);Array.isArray(l[c])||(l[c]=[])}const{target:n,key:i}=Ed(r,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(r,e)}function U0(r,e,t){var n,i;if(zt.str(t)){const{target:s,key:l}=Ed(r,t),c=e.__r3f.previousAttach;c===void 0?delete s[l]:s[l]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(r,e);(i=e.__r3f)==null||delete i.previousAttach}function Ty(r,{children:e,key:t,ref:n,...i},{children:s,key:l,ref:c,...u}={},h=!1){var f;const p=(f=r==null?void 0:r.__r3f)!=null?f:{},m=Object.entries(i),v=[];if(h){const S=Object.keys(u);for(let x=0;x<S.length;x++)i.hasOwnProperty(S[x])||m.unshift([S[x],Ey+"remove"])}m.forEach(([S,x])=>{var _;if((_=r.__r3f)!=null&&_.primitive&&S==="object"||zt.equ(x,u[S]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(S))return v.push([S,x,!0,[]]);let E=[];S.includes("-")&&(E=S.split("-")),v.push([S,x,!1,E]);for(const w in i){const T=i[w];w.startsWith(`${S}-`)&&v.push([w,T,!1,w.split("-")])}});const y={...i};return p.memoizedProps&&p.memoizedProps.args&&(y.args=p.memoizedProps.args),p.memoizedProps&&p.memoizedProps.attach&&(y.attach=p.memoizedProps.attach),{memoized:y,changes:v}}const $b=typeof process<"u"&&!1;function Rf(r,e){var t,n,i;const s=(t=r.__r3f)!=null?t:{},l=s.root,c=(n=l==null||l.getState==null?void 0:l.getState())!=null?n:{},{memoized:u,changes:h}=Jb(e)?e:Ty(r,e),f=s.eventCount;r.__r3f&&(r.__r3f.memoizedProps=u);for(let m=0;m<h.length;m++){let[v,y,S,x]=h[m];if(bf(r)){const T="srgb",N="srgb-linear";v==="encoding"?(v="colorSpace",y=y===3001?T:N):v==="outputEncoding"&&(v="outputColorSpace",y=y===3001?T:N)}let _=r,E=_[v];if(x.length&&(E=x.reduce((w,T)=>w[T],r),!(E&&E.set))){const[w,...T]=x.reverse();_=T.reverse().reduce((N,P)=>N[P],r),v=w}if(y===Ey+"remove")if(_.constructor){let w=N0.get(_.constructor);w||(w=new _.constructor,N0.set(_.constructor,w)),y=w[v]}else y=0;if(S)y?s.handlers[v]=y:delete s.handlers[v],s.eventCount=Object.keys(s.handlers).length;else if(E&&E.set&&(E.copy||E instanceof gs)){if(Array.isArray(y))E.fromArray?E.fromArray(y):E.set(...y);else if(E.copy&&y&&y.constructor&&($b?E.constructor.name===y.constructor.name:E.constructor===y.constructor))E.copy(y);else if(y!==void 0){const w=E instanceof Le;!w&&E.setScalar?E.setScalar(y):E instanceof gs&&y instanceof gs?E.mask=y.mask:E.set(y),!xy()&&!c.linear&&w&&E.convertSRGBToLinear()}}else if(_[v]=y,_[v]instanceof Gt&&_[v].format===Hn&&_[v].type===Bi){const w=_[v];bf(w)&&bf(c.gl)?w.colorSpace=c.gl.outputColorSpace:w.encoding=c.gl.outputEncoding}ho(r)}if(s.parent&&r.raycast&&f!==s.eventCount){const m=$c(r).getState().internal,v=m.interaction.indexOf(r);v>-1&&m.interaction.splice(v,1),s.eventCount&&m.interaction.push(r)}return!(h.length===1&&h[0][0]==="onUpdate")&&h.length&&(i=r.__r3f)!=null&&i.parent&&Ad(r),r}function ho(r){var e,t;const n=(e=r.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function Ad(r){r.onUpdate==null||r.onUpdate(r)}function eC(r,e){r.manual||(My(r)?(r.left=e.width/-2,r.right=e.width/2,r.top=e.height/2,r.bottom=e.height/-2):r.aspect=e.width/e.height,r.updateProjectionMatrix(),r.updateMatrixWorld())}function Wc(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}function tC(){var r;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return yo.DefaultEventPriority;switch((r=e.event)==null?void 0:r.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return yo.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return yo.ContinuousEventPriority;default:return yo.DefaultEventPriority}}function by(r,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(r.delete(n),i.target.releasePointerCapture(n)))}function nC(r,e){const{internal:t}=r.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{by(t.capturedMap,e,n,i)})}function iC(r){function e(u){const{internal:h}=r.getState(),f=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(f*f+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(f=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+f]}))}function n(u,h){const f=r.getState(),p=new Set,m=[],v=h?h(f.internal.interaction):f.internal.interaction;for(let _=0;_<v.length;_++){const E=ca(v[_]);E&&(E.raycaster.camera=void 0)}f.previousRoot||f.events.compute==null||f.events.compute(u,f);function y(_){const E=ca(_);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var w;E.events.compute==null||E.events.compute(u,E,(w=E.previousRoot)==null?void 0:w.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(_,!0):[]}let S=v.flatMap(y).sort((_,E)=>{const w=ca(_.object),T=ca(E.object);return!w||!T?_.distance-E.distance:T.events.priority-w.events.priority||_.distance-E.distance}).filter(_=>{const E=Wc(_);return p.has(E)?!1:(p.add(E),!0)});f.events.filter&&(S=f.events.filter(S,f));for(const _ of S){let E=_.object;for(;E;){var x;(x=E.__r3f)!=null&&x.eventCount&&m.push({..._,eventObject:E}),E=E.parent}}if("pointerId"in u&&f.internal.capturedMap.has(u.pointerId))for(let _ of f.internal.capturedMap.get(u.pointerId).values())p.has(Wc(_.intersection))||m.push(_.intersection);return m}function i(u,h,f,p){const m=r.getState();if(u.length){const v={stopped:!1};for(const y of u){const S=ca(y.object)||m,{raycaster:x,pointer:_,camera:E,internal:w}=S,T=new U(_.x,_.y,0).unproject(E),N=b=>{var F,X;return(F=(X=w.capturedMap.get(b))==null?void 0:X.has(y.eventObject))!=null?F:!1},P=b=>{const F={intersection:y,target:h.target};w.capturedMap.has(b)?w.capturedMap.get(b).set(y.eventObject,F):w.capturedMap.set(b,new Map([[y.eventObject,F]])),h.target.setPointerCapture(b)},I=b=>{const F=w.capturedMap.get(b);F&&by(w.capturedMap,y.eventObject,F,b)};let z={};for(let b in h){let F=h[b];typeof F!="function"&&(z[b]=F)}let R={...y,...z,pointer:_,intersections:u,stopped:v.stopped,delta:f,unprojectedPoint:T,ray:x.ray,camera:E,stopPropagation(){const b="pointerId"in h&&w.capturedMap.get(h.pointerId);if((!b||b.has(y.eventObject))&&(R.stopped=v.stopped=!0,w.hovered.size&&Array.from(w.hovered.values()).find(F=>F.eventObject===y.eventObject))){const F=u.slice(0,u.indexOf(y));s([...F,y])}},target:{hasPointerCapture:N,setPointerCapture:P,releasePointerCapture:I},currentTarget:{hasPointerCapture:N,setPointerCapture:P,releasePointerCapture:I},nativeEvent:h};if(p(R),v.stopped===!0)break}}return u}function s(u){const{internal:h}=r.getState();for(const f of h.hovered.values())if(!u.length||!u.find(p=>p.object===f.object&&p.index===f.index&&p.instanceId===f.instanceId)){const m=f.eventObject.__r3f,v=m==null?void 0:m.handlers;if(h.hovered.delete(Wc(f)),m!=null&&m.eventCount){const y={...f,intersections:u};v.onPointerOut==null||v.onPointerOut(y),v.onPointerLeave==null||v.onPointerLeave(y)}}}function l(u,h){for(let f=0;f<h.length;f++){const p=h[f].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:f}=r.getState();"pointerId"in h&&f.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{f.capturedMap.has(h.pointerId)&&(f.capturedMap.delete(h.pointerId),s([]))})}}return function(f){const{onPointerMissed:p,internal:m}=r.getState();m.lastEvent.current=f;const v=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",x=n(f,v?t:void 0),_=y?e(f):0;u==="onPointerDown"&&(m.initialClick=[f.offsetX,f.offsetY],m.initialHits=x.map(w=>w.eventObject)),y&&!x.length&&_<=2&&(l(f,m.interaction),p&&p(f)),v&&s(x);function E(w){const T=w.eventObject,N=T.__r3f,P=N==null?void 0:N.handlers;if(N!=null&&N.eventCount)if(v){if(P.onPointerOver||P.onPointerEnter||P.onPointerOut||P.onPointerLeave){const I=Wc(w),z=m.hovered.get(I);z?z.stopped&&w.stopPropagation():(m.hovered.set(I,w),P.onPointerOver==null||P.onPointerOver(w),P.onPointerEnter==null||P.onPointerEnter(w))}P.onPointerMove==null||P.onPointerMove(w)}else{const I=P[u];I?(!y||m.initialHits.includes(T))&&(l(f,m.interaction.filter(z=>!m.initialHits.includes(z))),I(w)):y&&m.initialHits.includes(T)&&l(f,m.interaction.filter(z=>!m.initialHits.includes(z)))}}i(x,f,_,E)}}return{handlePointer:c}}const Cy=r=>!!(r!=null&&r.render),Ry=de.createContext(null),rC=(r,e)=>{const t=py((c,u)=>{const h=new U,f=new U,p=new U;function m(_=u().camera,E=f,w=u().size){const{width:T,height:N,top:P,left:I}=w,z=T/N;E instanceof U?p.copy(E):p.set(...E);const R=_.getWorldPosition(h).distanceTo(p);if(My(_))return{width:T/_.zoom,height:N/_.zoom,top:P,left:I,factor:1,distance:R,aspect:z};{const b=_.fov*Math.PI/180,F=2*Math.tan(b/2)*R,X=F*(T/N);return{width:X,height:F,top:P,left:I,factor:T/X,distance:R,aspect:z}}}let v;const y=_=>c(E=>({performance:{...E.performance,current:_}})),S=new he;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(_=1)=>r(u(),_),advance:(_,E)=>e(_,E,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new fp,pointer:S,mouse:S,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const _=u();v&&clearTimeout(v),_.performance.current!==_.performance.min&&y(_.performance.min),v=setTimeout(()=>y(u().performance.max),_.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:_=>c(E=>({...E,events:{...E.events,..._}})),setSize:(_,E,w,T,N)=>{const P=u().camera,I={width:_,height:E,top:T||0,left:N||0,updateStyle:w};c(z=>({size:I,viewport:{...z.viewport,...m(P,f,I)}}))},setDpr:_=>c(E=>{const w=Ay(_);return{viewport:{...E.viewport,dpr:w,initialDpr:E.viewport.initialDpr||w}}}),setFrameloop:(_="always")=>{const E=u().clock;E.stop(),E.elapsedTime=0,_!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:_}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:de.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(_,E,w)=>{const T=u().internal;return T.priority=T.priority+(E>0?1:0),T.subscribers.push({ref:_,priority:E,store:w}),T.subscribers=T.subscribers.sort((N,P)=>N.priority-P.priority),()=>{const N=u().internal;N!=null&&N.subscribers&&(N.priority=N.priority-(E>0?1:0),N.subscribers=N.subscribers.filter(P=>P.ref!==_))}}}}}),n=t.getState();let i=n.size,s=n.viewport.dpr,l=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:f,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||h.dpr!==s){var m;i=u,s=h.dpr,eC(c,u),f.setPixelRatio(h.dpr);const v=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&f.domElement instanceof HTMLCanvasElement;f.setSize(u.width,u.height,v)}c!==l&&(l=c,p(v=>({viewport:{...v.viewport,...v.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>r(c)),t};let Xc,sC=new Set,oC=new Set,aC=new Set;function Pf(r,e){if(r.size)for(const{callback:t}of r.values())t(e)}function ua(r,e){switch(r){case"before":return Pf(sC,e);case"after":return Pf(oC,e);case"tail":return Pf(aC,e)}}let If,Lf;function Nf(r,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof r=="number"&&(n=r-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=r),If=e.internal.subscribers,Xc=0;Xc<If.length;Xc++)Lf=If[Xc],Lf.ref.current(Lf.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function lC(r){let e=!1,t=!1,n,i,s;function l(h){i=requestAnimationFrame(l),e=!0,n=0,ua("before",h),t=!0;for(const p of r.values()){var f;s=p.store.getState(),s.internal.active&&(s.frameloop==="always"||s.internal.frames>0)&&!((f=s.gl.xr)!=null&&f.isPresenting)&&(n+=Nf(h,s))}if(t=!1,ua("after",h),n===0)return ua("tail",h),e=!1,cancelAnimationFrame(i)}function c(h,f=1){var p;if(!h)return r.forEach(m=>c(m.store.getState(),f));(p=h.gl.xr)!=null&&p.isPresenting||!h.internal.active||h.frameloop==="never"||(f>1?h.internal.frames=Math.min(60,h.internal.frames+f):t?h.internal.frames=2:h.internal.frames=1,e||(e=!0,requestAnimationFrame(l)))}function u(h,f=!0,p,m){if(f&&ua("before",h),p)Nf(h,p,m);else for(const v of r.values())Nf(h,v.store.getState());f&&ua("after",h)}return{loop:l,invalidate:c,advance:u}}function Py(){const r=de.useContext(Ry);if(!r)throw new Error("R3F: Hooks can only be used within the Canvas component!");return r}function cC(r=t=>t,e){return Py()(r,e)}function ru(r,e=0){const t=Py(),n=t.getState().internal.subscribe,i=Sy(r);return Qa(()=>n(i,e,t),[e,n,t]),null}const O0=new WeakMap;function Iy(r,e){return function(t,...n){let i=O0.get(t);return i||(i=new t,O0.set(t,i)),r&&r(i),Promise.all(n.map(s=>new Promise((l,c)=>i.load(s,u=>{u.scene&&Object.assign(u,Kb(u.scene)),l(u)},e,u=>c(new Error(`Could not load ${s}: ${u==null?void 0:u.message}`)))))).finally(()=>i.dispose==null?void 0:i.dispose())}}function Nu(r,e,t,n){const i=Array.isArray(e)?e:[e],s=Gb(Iy(t,n),[r,...i],{equal:zt.equ});return Array.isArray(e)?s:s[0]}Nu.preload=function(r,e,t){const n=Array.isArray(e)?e:[e];return Wb(Iy(t),[r,...n])};Nu.clear=function(r,e){const t=Array.isArray(e)?e:[e];return Xb([r,...t])};const Ao=new Map,{invalidate:F0,advance:z0}=lC(Ao),{reconciler:su,applyProps:ao}=Yb(Ao,tC),lo={objects:"shallow",strict:!1},uC=(r,e)=>{const t=typeof r=="function"?r(e):r;return Cy(t)?t:new y_({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...r})};function hC(r,e){const t=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement;if(e){const{width:n,height:i,top:s,left:l,updateStyle:c=t}=e;return{width:n,height:i,top:s,left:l,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement&&r.parentElement){const{width:n,height:i,top:s,left:l}=r.parentElement.getBoundingClientRect();return{width:n,height:i,top:s,left:l,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas)return{width:r.width,height:r.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function fC(r){const e=Ao.get(r),t=e==null?void 0:e.fiber,n=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,s=n||rC(F0,z0),l=t||su.createContainer(s,yo.ConcurrentRoot,null,!1,null,"",i,null);e||Ao.set(r,{fiber:l,store:s});let c,u=!1,h;return{configure(f={}){let{gl:p,size:m,scene:v,events:y,onCreated:S,shadows:x=!1,linear:_=!1,flat:E=!1,legacy:w=!1,orthographic:T=!1,frameloop:N="always",dpr:P=[1,2],performance:I,raycaster:z,camera:R,onPointerMissed:b}=f,F=s.getState(),X=F.gl;F.gl||F.set({gl:X=uC(p,r)});let H=F.raycaster;H||F.set({raycaster:H=new hy});const{params:Z,...$}=z||{};if(zt.equ($,H,lo)||ao(H,{...$}),zt.equ(Z,H.params,lo)||ao(H,{params:{...H.params,...Z}}),!F.camera||F.camera===h&&!zt.equ(h,R,lo)){h=R;const j=R instanceof Xa,ue=j?R:T?new Ss(0,0,0,0,.1,1e3):new en(75,0,.1,1e3);j||(ue.position.z=5,R&&ao(ue,R),!F.camera&&!(R!=null&&R.rotation)&&ue.lookAt(0,0,0)),F.set({camera:ue}),H.camera=ue}if(!F.scene){let j;v instanceof nu?j=v:(j=new nu,v&&ao(j,v)),F.set({scene:uo(j)})}if(!F.xr){var ae;const j=(Ne,te)=>{const ge=s.getState();ge.frameloop!=="never"&&z0(Ne,!0,ge,te)},ue=()=>{const Ne=s.getState();Ne.gl.xr.enabled=Ne.gl.xr.isPresenting,Ne.gl.xr.setAnimationLoop(Ne.gl.xr.isPresenting?j:null),Ne.gl.xr.isPresenting||F0(Ne)},Ae={connect(){const Ne=s.getState().gl;Ne.xr.addEventListener("sessionstart",ue),Ne.xr.addEventListener("sessionend",ue)},disconnect(){const Ne=s.getState().gl;Ne.xr.removeEventListener("sessionstart",ue),Ne.xr.removeEventListener("sessionend",ue)}};typeof((ae=X.xr)==null?void 0:ae.addEventListener)=="function"&&Ae.connect(),F.set({xr:Ae})}if(X.shadowMap){const j=X.shadowMap.enabled,ue=X.shadowMap.type;if(X.shadowMap.enabled=!!x,zt.boo(x))X.shadowMap.type=pa;else if(zt.str(x)){var ve;const Ae={basic:Q0,percentage:au,soft:pa,variance:xi};X.shadowMap.type=(ve=Ae[x])!=null?ve:pa}else zt.obj(x)&&Object.assign(X.shadowMap,x);(j!==X.shadowMap.enabled||ue!==X.shadowMap.type)&&(X.shadowMap.needsUpdate=!0)}const k=xy();k&&("enabled"in k?k.enabled=!w:"legacyMode"in k&&(k.legacyMode=w)),u||ao(X,{outputEncoding:_?3e3:3001,toneMapping:E?zi:Cd}),F.legacy!==w&&F.set(()=>({legacy:w})),F.linear!==_&&F.set(()=>({linear:_})),F.flat!==E&&F.set(()=>({flat:E})),p&&!zt.fun(p)&&!Cy(p)&&!zt.equ(p,X,lo)&&ao(X,p),y&&!F.events.handlers&&F.set({events:y(s)});const K=hC(r,m);return zt.equ(K,F.size,lo)||F.setSize(K.width,K.height,K.updateStyle,K.top,K.left),P&&F.viewport.dpr!==Ay(P)&&F.setDpr(P),F.frameloop!==N&&F.setFrameloop(N),F.onPointerMissed||F.set({onPointerMissed:b}),I&&!zt.equ(I,F.performance,lo)&&F.set(j=>({performance:{...j.performance,...I}})),c=S,u=!0,this},render(f){return u||this.configure(),su.updateContainer(de.createElement(dC,{store:s,children:f,onCreated:c,rootElement:r}),l,null,()=>{}),s},unmount(){Ly(r)}}}function dC({store:r,children:e,onCreated:t,rootElement:n}){return Qa(()=>{const i=r.getState();i.set(s=>({internal:{...s.internal,active:!0}})),t&&t(i),r.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),de.createElement(Ry.Provider,{value:r},e)}function Ly(r,e){const t=Ao.get(r),n=t==null?void 0:t.fiber;if(n){const i=t==null?void 0:t.store.getState();i&&(i.internal.active=!1),su.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var s,l,c,u;i.events.disconnect==null||i.events.disconnect(),(s=i.gl)==null||(l=s.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),Qb(i),Ao.delete(r),e&&e(r)}catch{}},500)})}}su.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:de.version});function Va(){return Va=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r},Va.apply(this,arguments)}function Td(r,e,t){var n,i,s,l,c;e==null&&(e=100);function u(){var f=Date.now()-l;f<e&&f>=0?n=setTimeout(u,e-f):(n=null,t||(c=r.apply(s,i),s=i=null))}var h=function(){s=this,i=arguments,l=Date.now();var f=t&&!n;return n||(n=setTimeout(u,e)),f&&(c=r.apply(s,i),s=i=null),c};return h.clear=function(){n&&(clearTimeout(n),n=null)},h.flush=function(){n&&(c=r.apply(s,i),s=i=null,clearTimeout(n),n=null)},h}Td.debounce=Td;var pC=Td;const B0=j0(pC);function mC(r){let{debounce:e,scroll:t,polyfill:n,offsetSize:i}=r===void 0?{debounce:0,scroll:!1,offsetSize:!1}:r;const s=n||(typeof window>"u"?class{}:window.ResizeObserver);if(!s)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[l,c]=de.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),u=de.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:l}),h=e?typeof e=="number"?e:e.scroll:null,f=e?typeof e=="number"?e:e.resize:null,p=de.useRef(!1);de.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[m,v,y]=de.useMemo(()=>{const E=()=>{if(!u.current.element)return;const{left:w,top:T,width:N,height:P,bottom:I,right:z,x:R,y:b}=u.current.element.getBoundingClientRect(),F={left:w,top:T,width:N,height:P,bottom:I,right:z,x:R,y:b};u.current.element instanceof HTMLElement&&i&&(F.height=u.current.element.offsetHeight,F.width=u.current.element.offsetWidth),Object.freeze(F),p.current&&!yC(u.current.lastBounds,F)&&c(u.current.lastBounds=F)};return[E,f?B0(E,f):E,h?B0(E,h):E]},[c,i,h,f]);function S(){u.current.scrollContainers&&(u.current.scrollContainers.forEach(E=>E.removeEventListener("scroll",y,!0)),u.current.scrollContainers=null),u.current.resizeObserver&&(u.current.resizeObserver.disconnect(),u.current.resizeObserver=null)}function x(){u.current.element&&(u.current.resizeObserver=new s(y),u.current.resizeObserver.observe(u.current.element),t&&u.current.scrollContainers&&u.current.scrollContainers.forEach(E=>E.addEventListener("scroll",y,{capture:!0,passive:!0})))}const _=E=>{!E||E===u.current.element||(S(),u.current.element=E,u.current.scrollContainers=Ny(E),x())};return vC(y,!!t),gC(v),de.useEffect(()=>{S(),x()},[t,y,v]),de.useEffect(()=>S,[]),[_,l,m]}function gC(r){de.useEffect(()=>{const e=r;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[r])}function vC(r,e){de.useEffect(()=>{if(e){const t=r;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[r,e])}function Ny(r){const e=[];if(!r||r===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(r);return[t,n,i].some(s=>s==="auto"||s==="scroll")&&e.push(r),[...e,...Ny(r.parentElement)]}const _C=["x","y","top","bottom","left","right","width","height"],yC=(r,e)=>_C.every(t=>r[t]===e[t]);var xC=Object.defineProperty,MC=Object.defineProperties,SC=Object.getOwnPropertyDescriptors,k0=Object.getOwnPropertySymbols,wC=Object.prototype.hasOwnProperty,EC=Object.prototype.propertyIsEnumerable,H0=(r,e,t)=>e in r?xC(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,V0=(r,e)=>{for(var t in e||(e={}))wC.call(e,t)&&H0(r,t,e[t]);if(k0)for(var t of k0(e))EC.call(e,t)&&H0(r,t,e[t]);return r},AC=(r,e)=>MC(r,SC(e));function Dy(r,e,t){if(!r)return;if(t(r)===!0)return r;let n=e?r.return:r.child;for(;n;){const i=Dy(n,e,t);if(i)return i;n=e?null:n.sibling}}function Uy(r){try{return Object.defineProperties(r,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return r}}const vp=Uy(de.createContext(null));class Oy extends de.Component{render(){return de.createElement(vp.Provider,{value:this._reactInternals},this.props.children)}}const{ReactCurrentOwner:G0,ReactCurrentDispatcher:W0}=de.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function TC(){const r=de.useContext(vp);if(r===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=de.useId();return de.useMemo(()=>{for(const n of[G0==null?void 0:G0.current,r,r==null?void 0:r.alternate]){if(!n)continue;const i=Dy(n,!1,s=>{let l=s.memoizedState;for(;l;){if(l.memoizedState===e)return!0;l=l.next}});if(i)return i}},[r,e])}function bC(){var r;const e=TC(),[t]=de.useState(()=>new Map);t.clear();let n=e;for(;n;){if(n.type&&typeof n.type=="object"){const s=n.type._context===void 0&&n.type.Provider===n.type?n.type:n.type._context;s&&s!==vp&&!t.has(s)&&t.set(s,(r=W0==null?void 0:W0.current)==null?void 0:r.readContext(Uy(s)))}n=n.return}return t}function CC(){const r=bC();return de.useMemo(()=>Array.from(r.keys()).reduce((e,t)=>n=>de.createElement(e,null,de.createElement(t.Provider,AC(V0({},n),{value:r.get(t)}))),e=>de.createElement(Oy,V0({},e))),[r])}const Df={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function RC(r){const{handlePointer:e}=iC(r);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Df).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=r.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:s}=r.getState();s.disconnect==null||s.disconnect(),i(l=>({events:{...l.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([l,c])=>{const[u,h]=Df[l];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=r.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([s,l])=>{if(n&&n.connected instanceof HTMLElement){const[c]=Df[s];n.connected.removeEventListener(c,l)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}const PC=de.forwardRef(function({children:e,fallback:t,resize:n,style:i,gl:s,events:l=RC,eventSource:c,eventPrefix:u,shadows:h,linear:f,flat:p,legacy:m,orthographic:v,frameloop:y,dpr:S,performance:x,raycaster:_,camera:E,scene:w,onPointerMissed:T,onCreated:N,...P},I){de.useMemo(()=>qb(Ob),[]);const z=CC(),[R,b]=mC({scroll:!0,debounce:{scroll:50,resize:0},...n}),F=de.useRef(null),X=de.useRef(null);de.useImperativeHandle(I,()=>F.current);const H=Sy(T),[Z,$]=de.useState(!1),[ae,ve]=de.useState(!1);if(Z)throw Z;if(ae)throw ae;const k=de.useRef(null);Qa(()=>{const j=F.current;b.width>0&&b.height>0&&j&&(k.current||(k.current=fC(j)),k.current.configure({gl:s,events:l,shadows:h,linear:f,flat:p,legacy:m,orthographic:v,frameloop:y,dpr:S,performance:x,raycaster:_,camera:E,scene:w,size:b,onPointerMissed:(...ue)=>H.current==null?void 0:H.current(...ue),onCreated:ue=>{ue.events.connect==null||ue.events.connect(c?jb(c)?c.current:c:X.current),u&&ue.setEvents({compute:(Ae,Ne)=>{const te=Ae[u+"X"],ge=Ae[u+"Y"];Ne.pointer.set(te/Ne.size.width*2-1,-(ge/Ne.size.height)*2+1),Ne.raycaster.setFromCamera(Ne.pointer,Ne.camera)}}),N==null||N(ue)}}),k.current.render(de.createElement(z,null,de.createElement(wy,{set:ve},de.createElement(de.Suspense,{fallback:de.createElement(Zb,{set:$})},e)))))}),de.useEffect(()=>{const j=F.current;if(j)return()=>Ly(j)},[]);const K=c?"none":"auto";return de.createElement("div",Va({ref:X,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:K,...i}},P),de.createElement("div",{ref:R,style:{width:"100%",height:"100%"}},de.createElement("canvas",{ref:F,style:{display:"block"}},t)))}),IC=de.forwardRef(function(e,t){return de.createElement(Oy,null,de.createElement(PC,Va({},e,{ref:t})))}),kn=[{name:"itech-research-pavilion",year:"2024",keywords:"Codesign Framework, Design for Material, Robotic Fabrication",filter_tags:["computational design","architecture","digital fabrication","robotics"]},{name:"conversational-floor-plans",year:"2024",keywords:"Generative AI Agent System, UX/UI Design, Architectural Representation",filter_tags:["computational design","artificial intelligence","software development"]},{name:"wax-flamingos",year:"2024",keywords:"Behavioral Robotics, Additive Manufacturing, Material Indeterminancy",filter_tags:["computational design","digital fabrication","robotics"]},{name:"droplets",year:"2024",keywords:"p5.js, Agent-Based Modeling, Phenomena Modeling",filter_tags:[]},{name:"honeycomb",year:"2023",keywords:"Symmetry Groups, Parametric Design, Grasshopper Development",filter_tags:["computational design","software development"]},{name:"water-qwop",year:"2023",keywords:"Reinforcement Learning, Unity Modeling, Game Agent Design",filter_tags:["artificial intelligence"]},{name:"horse-and-chariot",year:"2023",keywords:"Arduino Programming, Mobile Robotics, Data Transmission",filter_tags:["robotics"]},{name:"hyper-hydration",year:"2023",keywords:"Machine Learning, Optimization, Product Design",filter_tags:["artificial intelligence"]},{name:"cloud-sketch",year:"2022",keywords:"p5.js, Phenomena Modeling, Generative Art",filter_tags:[]},{name:"sprawl-and-resilience",year:"2022",keywords:"Landscape Ecology, Board Game Design, Urban Planning",filter_tags:["architecture"]},{name:"cybernetic-field",year:"2021",keywords:"Cybernetics, Agent-Based Modeling, Human-Computer Interaction",filter_tags:["computational design"]},{name:"bubble-gan",year:"2021",keywords:"Machine Learning, Generative Adversarial Network, Architectural AI",filter_tags:["artificial intelligence"]},{name:"elc-carrick",year:"2020",keywords:"Educational Architecture, Materials and Assembly, Pittsburgh",filter_tags:["architecture"]},{name:"placeholder",year:"2020",keywords:"Photogrammetry, Python Programming, Software Design",filter_tags:["software development"]},{name:"collaborative-winding",year:"2020",keywords:"Architectural Robotics, Dual-Robot, Digital Fabrication",filter_tags:["digital fabrication","robotics"]},{name:"flood-museum",year:"2019",keywords:"Cultural Architecture, Combined Sewer System, Pittsburgh",filter_tags:["architecture"]},{name:"design-fabrication",year:"2019",keywords:"Digital Fabrication, Computer-Aided-Design, Spatial Extrapolation",filter_tags:["computational design","digital fabrication"]},{name:"spring-garden-hostel",year:"2019",keywords:"Residential Architecture, Adaptive Reuse, Pittsburgh",filter_tags:["architecture"]},{name:"modular-garden",year:"2019",keywords:"Digital Fabrication, CNC Milling, Parametric Design",filter_tags:["computational design"]},{name:"bathhouse",year:"2019",keywords:"Recreational Archtiecture, Architectural Sequencing, White Mountains",filter_tags:["architecture"]},{name:"hoophouse",year:"2018",keywords:"Residential (for plants), Design & Build, Phipps Conservatory",filter_tags:["architecture"]},{name:"drawings",year:"2018",keywords:"Charcoal, Pastel",filter_tags:[]}],$a=new U,_p=new U,LC=new U,X0=new he;function NC(r,e,t){const n=$a.setFromMatrixPosition(r.matrixWorld);n.project(e);const i=t.width/2,s=t.height/2;return[n.x*i+i,-(n.y*s)+s]}function DC(r,e){const t=$a.setFromMatrixPosition(r.matrixWorld),n=_p.setFromMatrixPosition(e.matrixWorld),i=t.sub(n),s=e.getWorldDirection(LC);return i.angleTo(s)>Math.PI/2}function UC(r,e,t,n){const i=$a.setFromMatrixPosition(r.matrixWorld),s=i.clone();s.project(e),X0.set(s.x,s.y),t.setFromCamera(X0,e);const l=t.intersectObjects(n,!0);if(l.length){const c=l[0].distance;return i.distanceTo(t.ray.origin)<c}return!0}function OC(r,e){if(e instanceof Ss)return e.zoom;if(e instanceof en){const t=$a.setFromMatrixPosition(r.matrixWorld),n=_p.setFromMatrixPosition(e.matrixWorld),i=e.fov*Math.PI/180,s=t.distanceTo(n);return 1/(2*Math.tan(i/2)*s)}else return 1}function FC(r,e,t){if(e instanceof en||e instanceof Ss){const n=$a.setFromMatrixPosition(r.matrixWorld),i=_p.setFromMatrixPosition(e.matrixWorld),s=n.distanceTo(i),l=(t[1]-t[0])/(e.far-e.near),c=t[1]-l*e.far;return Math.round(l*s+c)}}const bd=r=>Math.abs(r)<1e-10?0:r;function Fy(r,e,t=""){let n="matrix3d(";for(let i=0;i!==16;i++)n+=bd(e[i]*r.elements[i])+(i!==15?",":")");return t+n}const zC=(r=>e=>Fy(e,r))([1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1]),BC=(r=>(e,t)=>Fy(e,r(t),"translate(-50%,-50%)"))(r=>[1/r,1/r,1/r,1,-1/r,-1/r,-1/r,-1,1/r,1/r,1/r,1,1,1,1,1]);function kC(r){return r&&typeof r=="object"&&"current"in r}const zy=de.forwardRef(({children:r,eps:e=.001,style:t,className:n,prepend:i,center:s,fullscreen:l,portal:c,distanceFactor:u,sprite:h=!1,transform:f=!1,occlude:p,onOcclude:m,castShadow:v,receiveShadow:y,material:S,geometry:x,zIndexRange:_=[16777271,0],calculatePosition:E=NC,as:w="div",wrapperClass:T,pointerEvents:N="auto",...P},I)=>{const{gl:z,camera:R,scene:b,size:F,raycaster:X,events:H,viewport:Z}=cC(),[$]=de.useState(()=>document.createElement(w)),ae=de.useRef(),ve=de.useRef(null),k=de.useRef(0),K=de.useRef([0,0]),j=de.useRef(null),ue=de.useRef(null),Ae=(c==null?void 0:c.current)||H.connected||z.domElement.parentNode,Ne=de.useRef(null),te=de.useRef(!1),ge=de.useMemo(()=>p&&p!=="blending"||Array.isArray(p)&&p.length&&kC(p[0]),[p]);de.useLayoutEffect(()=>{const Fe=z.domElement;p&&p==="blending"?(Fe.style.zIndex=`${Math.floor(_[0]/2)}`,Fe.style.position="absolute",Fe.style.pointerEvents="none"):(Fe.style.zIndex=null,Fe.style.position=null,Fe.style.pointerEvents=null)},[p]),de.useLayoutEffect(()=>{if(ve.current){const Fe=ae.current=Ox($);if(b.updateMatrixWorld(),f)$.style.cssText="position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;";else{const V=E(ve.current,R,F);$.style.cssText=`position:absolute;top:0;left:0;transform:translate3d(${V[0]}px,${V[1]}px,0);transform-origin:0 0;`}return Ae&&(i?Ae.prepend($):Ae.appendChild($)),()=>{Ae&&Ae.removeChild($),Fe.unmount()}}},[Ae,f]),de.useLayoutEffect(()=>{T&&($.className=T)},[T]);const be=de.useMemo(()=>f?{position:"absolute",top:0,left:0,width:F.width,height:F.height,transformStyle:"preserve-3d",pointerEvents:"none"}:{position:"absolute",transform:s?"translate3d(-50%,-50%,0)":"none",...l&&{top:-F.height/2,left:-F.width/2,width:F.width,height:F.height},...t},[t,s,l,F,f]),Me=de.useMemo(()=>({position:"absolute",pointerEvents:N}),[N]);de.useLayoutEffect(()=>{if(te.current=!1,f){var Fe;(Fe=ae.current)==null||Fe.render(de.createElement("div",{ref:j,style:be},de.createElement("div",{ref:ue,style:Me},de.createElement("div",{ref:I,className:n,style:t,children:r}))))}else{var V;(V=ae.current)==null||V.render(de.createElement("div",{ref:I,style:be,className:n,children:r}))}});const je=de.useRef(!0);ru(Fe=>{if(ve.current){R.updateMatrixWorld(),ve.current.updateWorldMatrix(!0,!1);const V=f?K.current:E(ve.current,R,F);if(f||Math.abs(k.current-R.zoom)>e||Math.abs(K.current[0]-V[0])>e||Math.abs(K.current[1]-V[1])>e){const le=DC(ve.current,R);let re=!1;ge&&(Array.isArray(p)?re=p.map(D=>D.current):p!=="blending"&&(re=[b]));const ye=je.current;if(re){const D=UC(ve.current,R,X,re);je.current=D&&!le}else je.current=!le;ye!==je.current&&(m?m(!je.current):$.style.display=je.current?"block":"none");const _e=Math.floor(_[0]/2),xe=p?ge?[_[0],_e]:[_e-1,0]:_;if($.style.zIndex=`${FC(ve.current,R,xe)}`,f){const[D,C]=[F.width/2,F.height/2],Y=R.projectionMatrix.elements[5]*C,{isOrthographicCamera:se,top:ce,left:pe,bottom:qe,right:me}=R,He=zC(R.matrixWorldInverse),Ze=se?`scale(${Y})translate(${bd(-(me+pe)/2)}px,${bd((ce+qe)/2)}px)`:`translateZ(${Y}px)`;let Se=ve.current.matrixWorld;h&&(Se=R.matrixWorldInverse.clone().transpose().copyPosition(Se).scale(ve.current.scale),Se.elements[3]=Se.elements[7]=Se.elements[11]=0,Se.elements[15]=1),$.style.width=F.width+"px",$.style.height=F.height+"px",$.style.perspective=se?"":`${Y}px`,j.current&&ue.current&&(j.current.style.transform=`${Ze}${He}translate(${D}px,${C}px)`,ue.current.style.transform=BC(Se,1/((u||10)/400)))}else{const D=u===void 0?1:OC(ve.current,R)*u;$.style.transform=`translate3d(${V[0]}px,${V[1]}px,0) scale(${D})`}K.current=V,k.current=R.zoom}}if(!ge&&Ne.current&&!te.current)if(f){if(j.current){const V=j.current.children[0];if(V!=null&&V.clientWidth&&V!=null&&V.clientHeight){const{isOrthographicCamera:le}=R;if(le||x)P.scale&&(Array.isArray(P.scale)?P.scale instanceof U?Ne.current.scale.copy(P.scale.clone().divideScalar(1)):Ne.current.scale.set(1/P.scale[0],1/P.scale[1],1/P.scale[2]):Ne.current.scale.setScalar(1/P.scale));else{const re=(u||10)/400,ye=V.clientWidth*re,_e=V.clientHeight*re;Ne.current.scale.set(ye,_e,1)}te.current=!0}}}else{const V=$.children[0];if(V!=null&&V.clientWidth&&V!=null&&V.clientHeight){const le=1/Z.factor,re=V.clientWidth*le,ye=V.clientHeight*le;Ne.current.scale.set(re,ye,1),te.current=!0}Ne.current.lookAt(Fe.camera.position)}});const tt=de.useMemo(()=>({vertexShader:f?void 0:`
          /*
            This shader is from the THREE's SpriteMaterial.
            We need to turn the backing plane into a Sprite
            (make it always face the camera) if "transfrom"
            is false.
          */
          #include <common>

          void main() {
            vec2 center = vec2(0., 1.);
            float rotation = 0.0;

            // This is somewhat arbitrary, but it seems to work well
            // Need to figure out how to derive this dynamically if it even matters
            float size = 0.03;

            vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
            vec2 scale;
            scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
            scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );

            bool isPerspective = isPerspectiveMatrix( projectionMatrix );
            if ( isPerspective ) scale *= - mvPosition.z;

            vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;
            vec2 rotatedPosition;
            rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
            rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
            mvPosition.xy += rotatedPosition;

            gl_Position = projectionMatrix * mvPosition;
          }
      `,fragmentShader:`
        void main() {
          gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
        }
      `}),[f]);return de.createElement("group",Va({},P,{ref:ve}),p&&!ge&&de.createElement("mesh",{castShadow:v,receiveShadow:y,ref:Ne},x||de.createElement("planeGeometry",null),S||de.createElement("shaderMaterial",{side:Si,vertexShader:tt.vertexShader,fragmentShader:tt.fragmentShader})))});let ha=0;const HC=py(r=>(_o.onStart=(e,t,n)=>{r({active:!0,item:e,loaded:t,total:n,progress:(t-ha)/(n-ha)*100})},_o.onLoad=()=>{r({active:!1})},_o.onError=e=>r(t=>({errors:[...t.errors,e]})),_o.onProgress=(e,t,n)=>{t===n&&(ha=n),r({active:!0,item:e,loaded:t,total:n,progress:(t-ha)/(n-ha)*100||100})},{errors:[],active:!1,progress:0,item:"",loaded:0,total:0}));let VC=.05,Uf=.5,GC=1.2;function Of(r,e){return(r%e+e)%e}function q0(r){return r>=0?(Math.cos(Math.PI*r)-1)/2:-(Math.cos(Math.PI*r)-1)/2}function Y0(r){return Math.sin(r*Math.PI/2)}function WC({cover:r,location:e,index:t,targetOffset:n,setTargetOffset:i,hovered:s,setHovered:l,op:c,filters:u,filter_tags:h}){const f=de.useRef(),p=Z0(),m=()=>{f.current&&(f.current.position.x>-.5&&f.current.position.x<.5?p("./projects/"+kn[t].name):i(Math.round(n-f.current.position.x)))};return ru(()=>{f.current&&(u.length==0||u.every(v=>h.includes(v))?(f.current.scale.x=ss.damp(f.current.scale.x,1,2.5,.1),f.current.scale.y=ss.damp(f.current.scale.y,1,2.5,.1)):(f.current.scale.x=ss.damp(f.current.scale.x,.2,2.5,.1),f.current.scale.y=ss.damp(f.current.scale.y,.2,2.5,.1)))}),de.useEffect(()=>{f.current&&(e>kn.length/2?f.current.position.x=e-kn.length:e<-kn.length/2?f.current.position.x=e+kn.length:f.current.position.x=e)},[e]),ru(()=>{f.current&&(f.current.position.x>=1?(f.current.rotation.y=-Uf,f.current.position.z=0):f.current.position.x<=-1?(f.current.rotation.y=Uf,f.current.position.z=0):(f.current.rotation.y=q0(f.current.position.x)*Uf,f.current.position.z=(q0(Math.abs(f.current.position.x))+1)*GC))}),fe.jsxs("mesh",{ref:f,onClick:v=>{m(),v.stopPropagation()},onPointerEnter:v=>{l(s+1)},onPointerOut:v=>{l(s-1)},children:[fe.jsx("planeGeometry",{args:[2,2]}),fe.jsx("meshStandardMaterial",{map:r,toneMapped:!1,transparent:!0,alphaMap:Nu(cp,"/mats/homepage/cover-alpha-map-sm.jpg"),opacity:c})]})}function XC({setCurCenter:r,filters:e}){const t=Z0(),[n,i]=de.useState(0),[s,l]=de.useState(0),[c,u]=de.useState(null),[h,f]=de.useState(null),[p,m]=de.useState(0);let v=de.useRef(0);const[y,S]=de.useState(!1);function x(T){window.location.href.includes("projects")||(T.key=="ArrowLeft"?i(N=>Math.round(N+1)):T.key=="ArrowRight"?i(N=>Math.round(N-1)):T.key=="Enter"&&t("./projects/"+kn[Of(-n,kn.length)].name))}function _(T){window.location.href.includes("projects")||(console.log(document.body.style.cursor),T.type=="mousedown"?u(T.screenX):u(T.touches[0].screenX))}function E(T){if(window.location.href.includes("projects")||c==null)return;let N=null;f(c),T.type=="mousemove"?u(T.screenX):u(T.touches[0].screenX),!(c==null||h==null)&&(N=h-c,N!=null&&(T.type=="mousemove"?N/=250:N/=60,i(P=>P-N)))}function w(T){window.location.href.includes("projects")||(u(null),f(null),i(N=>Math.round(N)))}return de.useEffect(()=>(document.addEventListener("keydown",x),document.addEventListener("mousedown",_),document.addEventListener("mousemove",E),document.addEventListener("mouseup",w),document.addEventListener("touchstart",_),document.addEventListener("touchmove",E),document.addEventListener("touchend",w),()=>{document.removeEventListener("keydown",x),document.removeEventListener("mousedown",_),document.removeEventListener("mousemove",E),document.removeEventListener("mouseup",w),document.removeEventListener("touchstart",_),document.removeEventListener("touchmove",E),document.removeEventListener("touchend",w)}),[n,c,h]),ru(()=>{let T=n-s,N=Y0(T*VC);l(s+N);let P=Of(Math.round(-s),kn.length);r(P);let I=1-v.current,z=Y0(I);v.current+=z*.04,v.current>1&&(v.current=1),S(R=>!R)}),fe.jsxs(fe.Fragment,{children:[fe.jsx("ambientLight",{intensity:3.1}),kn.map((T,N)=>fe.jsx(WC,{filters:e,filter_tags:T.filter_tags,cover:Nu(cp,"/mats/homepage/cover-"+T.name+".jpg"),location:Of(N+s,kn.length),index:N,targetOffset:n,setTargetOffset:i,hovered:p,setHovered:m,op:v.current},N))]})}function qC(){const{loaded:r}=HC();for(var e="",t=0;t<kn.length;t++)t<r?e+="▓":e+="░";return fe.jsx(zy,{center:!0,children:fe.jsx("p",{className:"font-mono",children:e})})}const co=({category:r,setFilter:e})=>{const[t,n]=de.useState(!1);return fe.jsxs("div",{className:"select-none",onClick:()=>{n(!t),e(i=>{if(t){const s=i.filter(l=>l!==r);return s.length===0?[]:s}else return[...i,r]})},children:[fe.jsxs("p",{className:`text-right cursor-pointer text-neutral-600 ${t?"hidden":"block"}`,children:[" ☐ ",r.charAt(0).toUpperCase()+r.slice(1)," "]}),fe.jsxs("p",{className:`text-right cursor-pointer text-black ${t?"block":"hidden"}`,children:[" ☒ ",r.charAt(0).toUpperCase()+r.slice(1)," "]})]})},YC=()=>{const[r,e]=de.useState(0),[t,n]=de.useState(!1),[i,s]=de.useState([]);return fe.jsxs("div",{className:`absolute w-screen h-[85vh] md:h-screen left-0 top-0 animate-fade ${t?"cursor-grabbing":"cursor-grab"}`,onMouseDown:()=>n(!0),onMouseUp:()=>n(!1),children:[fe.jsx(IC,{linear:!0,children:fe.jsxs(de.Suspense,{fallback:fe.jsx(qC,{}),children:[fe.jsx(XC,{setCurCenter:e,filters:i}),fe.jsxs(zy,{center:!0,zIndexRange:[0,0],children:[fe.jsx("h1",{className:"select-none absolute left-1/2 top-[21vh] md:top-[20vh] -translate-x-1/2 text-nowrap",children:kn[r].name.replace(/-/g," ")}),fe.jsx("h2",{className:"select-none absolute left-1/2 top-[24.5vh] md:top-[23vh] -translate-x-1/2",children:kn[r].year}),fe.jsxs("p",{className:"text-sm pointer-events-none md:text-base select-none	absolute left-1/2 top-[28.5vh] md:top-[26vh] -translate-x-1/2 w-80 text-center",children:[fe.jsx("i",{children:"Keywords: "}),kn[r].keywords]})]})]})}),fe.jsxs("div",{className:"p-4 w-2/3 absolute top-0 right-0 text-nowrap hidden md:flex flex-wrap justify-end text-neutral-600",children:[fe.jsx(co,{category:"computational design",setFilter:s}),"|",fe.jsx(co,{category:"digital fabrication",setFilter:s}),"|",fe.jsx(co,{category:"artificial intelligence",setFilter:s}),"|",fe.jsx(co,{category:"robotics",setFilter:s}),"|",fe.jsx(co,{category:"software development",setFilter:s}),"|",fe.jsx(co,{category:"architecture",setFilter:s})]})]})},jC=YC,ZC="/assets/tailwind-CboeuT3c.css",iR=()=>[{rel:"stylesheet",href:ZC}];function rR({children:r}){return fe.jsxs("html",{lang:"en",children:[fe.jsxs("head",{children:[fe.jsx("meta",{charSet:"utf-8"}),fe.jsx("meta",{name:"viewport",content:"width=device-width, initial-scale=1"}),fe.jsx("meta",{name:"description",content:"Samuel Losi is a student of Computational Design. He is attending the University of Stuttgart's ITECH Program to study intimate processes of digital making."}),fe.jsx("meta",{name:"keywords",content:"architect, computational design, student, architecture portfolio, carnegie mellon university, school of architecture, institue of compoutational design, university of stuttgart, design, architecture, ITECH, soa, sam losi, samuel losi, losi, undergraduate student, graduate student, computation, robotics, architectural robotics"}),fe.jsx("link",{rel:"apple-touch-icon",sizes:"180x180",href:"/apple-touch-icon.png"}),fe.jsx("link",{rel:"icon",type:"image/png",sizes:"32x32",href:"/favicon/favicon-32x32.png"}),fe.jsx("link",{rel:"icon",type:"image/png",sizes:"16x16",href:"/favicon//favicon-16x16.png"}),fe.jsx("link",{rel:"manifest",href:"/favicon//site.webmanifest"}),fe.jsx("link",{rel:"mask-icon",href:"/favicon//safari-pinned-tab.svg",color:"#5bbad5"}),fe.jsx("meta",{name:"msapplication-TileColor",content:"#da532c"}),fe.jsx("meta",{name:"theme-color",content:"#ffffff"}),fe.jsx(Nx,{}),fe.jsx(Dx,{})]}),fe.jsxs("body",{children:[r,fe.jsx(kx,{}),fe.jsx(Ux,{})]})]})}function sR(){return fe.jsxs("div",{className:"w-full h-screen",children:[fe.jsx(jC,{}),fe.jsx(Bx,{}),fe.jsx(Hx,{})]})}export{rR as Layout,sR as default,iR as links};
