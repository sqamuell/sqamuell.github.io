import{r as Ae,j as we,g as Q0}from"./jsx-runtime-BlSqMCxk.js";import{u as Ox,f as Fx,g as zx,h as Bx,j as kx,L as cn,k as $0,O as Hx,M as Vx,n as Gx,S as Wx}from"./components--iMuTRih.js";/**
 * @remix-run/react v2.8.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */let $m="positions";function Xx({getKey:r,...e}){let{isSpaMode:t}=Ox(),n=Fx(),i=zx();Bx({getKey:r,storageKey:$m});let s=Ae.useMemo(()=>{if(!r)return null;let c=r(n,i);return c!==n.key?c:null},[]);if(t)return null;let a=((c,u)=>{if(!window.history.state||!window.history.state.key){let h=Math.random().toString(32).slice(2);window.history.replaceState({key:h},"")}try{let f=JSON.parse(sessionStorage.getItem(c)||"{}")[u||window.history.state.key];typeof f=="number"&&window.scrollTo(0,f)}catch(h){console.error(h),sessionStorage.removeItem(c)}}).toString();return Ae.createElement("script",kx({},e,{suppressHydrationWarning:!0,dangerouslySetInnerHTML:{__html:`(${a})(${JSON.stringify($m)}, ${JSON.stringify(s)})`}}))}function qx(){const[r,e]=Ae.useState(!1),t=()=>e(!r);return we.jsxs("div",{className:"bg-opacity-80 bg-white",children:[we.jsx("div",{className:"fixed left-3 top-3 text-2xl w-2",children:we.jsx("p",{className:`hover:text-yellow-500 cursor-pointer ${r?"hidden":"show"}`,onClick:t,children:"☰"})}),we.jsxs("div",{className:`transform top-0 p-4 left-0 w-auto bg-white fixed h-[97vh] m-4 mt-[1.5vh] border-2 border-neutral-250 rounded-md ease-in-out transition-all duration-300 z-30 ${r?"translate-x-0":"-translate-x-[200%]"}`,onClick:t,children:[we.jsxs("ul",{className:"hover:*:*:text-yellow-500",children:[we.jsx("li",{className:"text-sm italic pt-3",children:"2024"}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/wax-flamingos",children:"Wax Flamingos**"})}),we.jsx("li",{className:"text-sm italic pt-3",children:"2023"}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/honeycomb",children:"Honeycomb**"})}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/water-qwop",children:"Water-QWOP"})}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/horse-and-chariot",children:"Horse & Chariot*"})}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/hyper-hydration",children:"Hyper-hydration"})}),we.jsx("li",{className:"text-sm italic pt-3",children:"2022"}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/sprawl-and-resilience",children:"Sprawl & Resilience*"})}),we.jsx("li",{className:"text-sm italic pt-3",children:"2021"}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/cybernetic-field",children:"Cybernetic Field"})}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/bubble-gan",children:"Bubble-GAN"})}),we.jsx("li",{className:"text-sm italic pt-3",children:"2020"}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/elc-carrick",children:"ELC: Carrick"})}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/placeholder",children:"15-112: placeHolder**"})}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/collaborative-winding",children:"Collaborative Winding"})}),we.jsx("li",{className:"text-sm italic pt-3",children:"2019"}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/flood-museum",children:"Flood Museum"})}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/design-fabrication",children:"Design Fabrication*"})}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/spring-garden-hostel",children:"Spring Garden Hostel*"})}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/modular-garden",children:"Modular Garden"})}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/bathhouse",children:"Bathhouse"})}),we.jsx("li",{className:"text-sm italic pt-3",children:"2018"}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/hoophouse",children:"Hoophouse"})}),we.jsx("li",{children:we.jsx(cn,{to:"./projects/misc",children:"Misc"})})]}),we.jsx("p",{className:"absolute top-4 -right-7 hover:text-yellow-500 cursor-pointer font-bold",onClick:t,children:"✕"})]})]})}/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ou="163",Yx={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},jx={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},ev=0,kf=1,tv=2,Zx=3,nv=0,au=1,fa=2,Mi=3,or=0,Nn=1,Oi=2,sr=0,ps=1,Hf=2,Vf=3,Gf=4,iv=5,Pr=100,rv=101,sv=102,ov=103,av=104,lv=200,cv=201,uv=202,hv=203,eu=204,tu=205,fv=206,dv=207,pv=208,mv=209,gv=210,vv=211,_v=212,yv=213,xv=214,Mv=0,Sv=1,wv=2,_a=3,Ev=4,Tv=5,Av=6,bv=7,Ha=0,Cv=1,Rv=2,Bi=0,Pv=1,Iv=2,Lv=3,Id=4,Nv=5,Dv=6,Uv=7,Wf="attached",Ov="detached",lu=300,ar=301,Nr=302,ya=303,xa=304,To=306,Ma=1e3,pi=1001,Sa=1002,fn=1003,Ld=1004,Jx=1004,fo=1005,Kx=1005,Qt=1006,da=1007,Qx=1007,Fi=1008,$x=1008,ki=1009,Fv=1010,zv=1011,Nd=1012,Dd=1013,ys=1014,mi=1015,wa=1016,Ud=1017,Od=1018,Ao=1020,Bv=35902,kv=1021,Hv=1022,Hn=1023,Vv=1024,Gv=1025,ms=1026,xo=1027,Fd=1028,zd=1029,Wv=1030,Bd=1031,kd=1033,Xc=33776,qc=33777,Yc=33778,jc=33779,Xf=35840,qf=35841,Yf=35842,jf=35843,Hd=36196,Zf=37492,Jf=37496,Kf=37808,Qf=37809,$f=37810,ed=37811,td=37812,nd=37813,id=37814,rd=37815,sd=37816,od=37817,ad=37818,ld=37819,cd=37820,ud=37821,Zc=36492,hd=36494,fd=36495,Xv=36283,dd=36284,pd=36285,md=36286,qv=2200,Yv=2201,jv=2202,Ea=2300,Ta=2301,Jc=2302,cs=2400,us=2401,Aa=2402,cu=2500,Vd=2501,eM=0,tM=1,nM=2,Zv=3200,Jv=3201,Ur=0,Kv=1,nr="",di="srgb",cr="srgb-linear",uu="display-p3",Va="display-p3-linear",ba="linear",Ot="srgb",Ca="rec709",Ra="p3",iM=0,os=7680,rM=7681,sM=7682,oM=7683,aM=34055,lM=34056,cM=5386,uM=512,hM=513,fM=514,dM=515,pM=516,mM=517,gM=518,gd=519,Qv=512,$v=513,e_=514,Gd=515,t_=516,n_=517,i_=518,r_=519,Pa=35044,vM=35048,_M=35040,yM=35045,xM=35049,MM=35041,SM=35046,wM=35050,EM=35042,TM="100",vd="300 es",zi=2e3,Ia=2001;let ur=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,a=i.length;s<a;s++)i[s].call(this,e);e.target=null}}};const Mn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let eg=1234567;const gs=Math.PI/180,Mo=180/Math.PI;function ni(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Mn[r&255]+Mn[r>>8&255]+Mn[r>>16&255]+Mn[r>>24&255]+"-"+Mn[e&255]+Mn[e>>8&255]+"-"+Mn[e>>16&15|64]+Mn[e>>24&255]+"-"+Mn[t&63|128]+Mn[t>>8&255]+"-"+Mn[t>>16&255]+Mn[t>>24&255]+Mn[n&255]+Mn[n>>8&255]+Mn[n>>16&255]+Mn[n>>24&255]).toLowerCase()}function qt(r,e,t){return Math.max(e,Math.min(t,r))}function Wd(r,e){return(r%e+e)%e}function AM(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function bM(r,e,t){return r!==e?(t-r)/(e-r):0}function pa(r,e,t){return(1-t)*r+t*e}function CM(r,e,t,n){return pa(r,e,1-Math.exp(-t*n))}function RM(r,e=1){return e-Math.abs(Wd(r,e*2)-e)}function PM(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function IM(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function LM(r,e){return r+Math.floor(Math.random()*(e-r+1))}function NM(r,e){return r+Math.random()*(e-r)}function DM(r){return r*(.5-Math.random())}function UM(r){r!==void 0&&(eg=r);let e=eg+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function OM(r){return r*gs}function FM(r){return r*Mo}function zM(r){return(r&r-1)===0&&r!==0}function BM(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function kM(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function HM(r,e,t,n,i){const s=Math.cos,a=Math.sin,c=s(t/2),u=a(t/2),h=s((e+n)/2),f=a((e+n)/2),p=s((e-n)/2),m=a((e-n)/2),v=s((n-e)/2),y=a((n-e)/2);switch(i){case"XYX":r.set(c*f,u*p,u*m,c*h);break;case"YZY":r.set(u*m,c*f,u*p,c*h);break;case"ZXZ":r.set(u*p,u*m,c*f,c*h);break;case"XZX":r.set(c*f,u*y,u*v,c*h);break;case"YXY":r.set(u*v,c*f,u*y,c*h);break;case"ZYZ":r.set(u*y,u*v,c*f,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Ln(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function lt(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const VM={DEG2RAD:gs,RAD2DEG:Mo,generateUUID:ni,clamp:qt,euclideanModulo:Wd,mapLinear:AM,inverseLerp:bM,lerp:pa,damp:CM,pingpong:RM,smoothstep:PM,smootherstep:IM,randInt:LM,randFloat:NM,randFloatSpread:DM,seededRandom:UM,degToRad:OM,radToDeg:FM,isPowerOfTwo:zM,ceilPowerOfTwo:BM,floorPowerOfTwo:kM,setQuaternionFromProperEuler:HM,normalize:lt,denormalize:Ln};let ue=class s_{constructor(e=0,t=0){s_.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(qt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*n-a*i+e.x,this.y=s*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},ft=class o_{constructor(e,t,n,i,s,a,c,u,h){o_.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,a,c,u,h)}set(e,t,n,i,s,a,c,u,h){const f=this.elements;return f[0]=e,f[1]=i,f[2]=c,f[3]=t,f[4]=s,f[5]=u,f[6]=n,f[7]=a,f[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],c=n[3],u=n[6],h=n[1],f=n[4],p=n[7],m=n[2],v=n[5],y=n[8],S=i[0],x=i[3],_=i[6],E=i[1],w=i[4],A=i[7],U=i[2],P=i[5],I=i[8];return s[0]=a*S+c*E+u*U,s[3]=a*x+c*w+u*P,s[6]=a*_+c*A+u*I,s[1]=h*S+f*E+p*U,s[4]=h*x+f*w+p*P,s[7]=h*_+f*A+p*I,s[2]=m*S+v*E+y*U,s[5]=m*x+v*w+y*P,s[8]=m*_+v*A+y*I,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],c=e[5],u=e[6],h=e[7],f=e[8];return t*a*f-t*c*h-n*s*f+n*c*u+i*s*h-i*a*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=f*a-c*h,m=c*u-f*s,v=h*s-a*u,y=t*p+n*m+i*v;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const S=1/y;return e[0]=p*S,e[1]=(i*h-f*n)*S,e[2]=(c*n-i*a)*S,e[3]=m*S,e[4]=(f*t-i*u)*S,e[5]=(i*s-c*t)*S,e[6]=v*S,e[7]=(n*u-h*t)*S,e[8]=(a*t-n*s)*S,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,a,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*a+h*c)+a+e,-i*h,i*u,-i*(-h*a+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(Hh.makeScale(e,t)),this}rotate(e){return this.premultiply(Hh.makeRotation(-e)),this}translate(e,t){return this.premultiply(Hh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}};const Hh=new ft;function a_(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const GM={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function po(r,e){return new GM[r](e)}function La(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function l_(){const r=La("canvas");return r.style.display="block",r}const tg={};function c_(r){r in tg||(tg[r]=!0,console.warn(r))}const ng=new ft().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),ig=new ft().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Kl={[cr]:{transfer:ba,primaries:Ca,toReference:r=>r,fromReference:r=>r},[di]:{transfer:Ot,primaries:Ca,toReference:r=>r.convertSRGBToLinear(),fromReference:r=>r.convertLinearToSRGB()},[Va]:{transfer:ba,primaries:Ra,toReference:r=>r.applyMatrix3(ig),fromReference:r=>r.applyMatrix3(ng)},[uu]:{transfer:Ot,primaries:Ra,toReference:r=>r.convertSRGBToLinear().applyMatrix3(ig),fromReference:r=>r.applyMatrix3(ng).convertLinearToSRGB()}},WM=new Set([cr,Va]),bt={enabled:!0,_workingColorSpace:cr,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(r){if(!WM.has(r))throw new Error(`Unsupported working color space, "${r}".`);this._workingColorSpace=r},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const n=Kl[e].toReference,i=Kl[t].fromReference;return i(n(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this._workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this._workingColorSpace)},getPrimaries:function(r){return Kl[r].primaries},getTransfer:function(r){return r===nr?ba:Kl[r].transfer}};function yo(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Vh(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Bs,u_=class{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Bs===void 0&&(Bs=La("canvas")),Bs.width=e.width,Bs.height=e.height;const n=Bs.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Bs}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=La("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let a=0;a<s.length;a++)s[a]=yo(s[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(yo(t[n]/255)*255):t[n]=yo(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}},XM=0,hs=class{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:XM++}),this.uuid=ni(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let a=0,c=i.length;a<c;a++)i[a].isDataTexture?s.push(Gh(i[a].image)):s.push(Gh(i[a]))}else s=Gh(i);n.url=s}return t||(e.images[this.uuid]=n),n}};function Gh(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?u_.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let qM=0,rn=class Kc extends ur{constructor(e=Kc.DEFAULT_IMAGE,t=Kc.DEFAULT_MAPPING,n=pi,i=pi,s=Qt,a=Fi,c=Hn,u=ki,h=Kc.DEFAULT_ANISOTROPY,f=nr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:qM++}),this.uuid=ni(),this.name="",this.source=new hs(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=a,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new ue(0,0),this.repeat=new ue(1,1),this.center=new ue(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ft,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=f,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==lu)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Ma:e.x=e.x-Math.floor(e.x);break;case pi:e.x=e.x<0?0:1;break;case Sa:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Ma:e.y=e.y-Math.floor(e.y);break;case pi:e.y=e.y<0?0:1;break;case Sa:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}};rn.DEFAULT_IMAGE=null;rn.DEFAULT_MAPPING=lu;rn.DEFAULT_ANISOTROPY=1;class Ct{constructor(e=0,t=0,n=0,i=1){Ct.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*s,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*s,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*s,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],f=u[4],p=u[8],m=u[1],v=u[5],y=u[9],S=u[2],x=u[6],_=u[10];if(Math.abs(f-m)<.01&&Math.abs(p-S)<.01&&Math.abs(y-x)<.01){if(Math.abs(f+m)<.1&&Math.abs(p+S)<.1&&Math.abs(y+x)<.1&&Math.abs(h+v+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const w=(h+1)/2,A=(v+1)/2,U=(_+1)/2,P=(f+m)/4,I=(p+S)/4,z=(y+x)/4;return w>A&&w>U?w<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(w),i=P/n,s=I/n):A>U?A<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(A),n=P/i,s=z/i):U<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(U),n=I/s,i=z/s),this.set(n,i,s,t),this}let E=Math.sqrt((x-y)*(x-y)+(p-S)*(p-S)+(m-f)*(m-f));return Math.abs(E)<.001&&(E=1),this.x=(x-y)/E,this.y=(p-S)/E,this.z=(m-f)/E,this.w=Math.acos((h+v+_-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class h_ extends ur{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ct(0,0,e,t),this.scissorTest=!1,this.viewport=new Ct(0,0,e,t);const i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Qt,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0,count:1},n);const s=new rn(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const a=n.count;for(let c=0;c<a;c++)this.textures[c]=s.clone(),this.textures[c].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new hs(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class wi extends h_{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class hu extends rn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=fn,this.minFilter=fn,this.wrapR=pi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class YM extends wi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new hu(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Xd extends rn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=fn,this.minFilter=fn,this.wrapR=pi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class jM extends wi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Xd(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Vn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,a,c){let u=n[i+0],h=n[i+1],f=n[i+2],p=n[i+3];const m=s[a+0],v=s[a+1],y=s[a+2],S=s[a+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=v,e[t+2]=y,e[t+3]=S;return}if(p!==S||u!==m||h!==v||f!==y){let x=1-c;const _=u*m+h*v+f*y+p*S,E=_>=0?1:-1,w=1-_*_;if(w>Number.EPSILON){const U=Math.sqrt(w),P=Math.atan2(U,_*E);x=Math.sin(x*P)/U,c=Math.sin(c*P)/U}const A=c*E;if(u=u*x+m*A,h=h*x+v*A,f=f*x+y*A,p=p*x+S*A,x===1-c){const U=1/Math.sqrt(u*u+h*h+f*f+p*p);u*=U,h*=U,f*=U,p*=U}}e[t]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,a){const c=n[i],u=n[i+1],h=n[i+2],f=n[i+3],p=s[a],m=s[a+1],v=s[a+2],y=s[a+3];return e[t]=c*y+f*p+u*v-h*m,e[t+1]=u*y+f*m+h*p-c*v,e[t+2]=h*y+f*v+c*m-u*p,e[t+3]=f*y-c*p-u*m-h*v,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,s=e._z,a=e._order,c=Math.cos,u=Math.sin,h=c(n/2),f=c(i/2),p=c(s/2),m=u(n/2),v=u(i/2),y=u(s/2);switch(a){case"XYZ":this._x=m*f*p+h*v*y,this._y=h*v*p-m*f*y,this._z=h*f*y+m*v*p,this._w=h*f*p-m*v*y;break;case"YXZ":this._x=m*f*p+h*v*y,this._y=h*v*p-m*f*y,this._z=h*f*y-m*v*p,this._w=h*f*p+m*v*y;break;case"ZXY":this._x=m*f*p-h*v*y,this._y=h*v*p+m*f*y,this._z=h*f*y+m*v*p,this._w=h*f*p-m*v*y;break;case"ZYX":this._x=m*f*p-h*v*y,this._y=h*v*p+m*f*y,this._z=h*f*y-m*v*p,this._w=h*f*p+m*v*y;break;case"YZX":this._x=m*f*p+h*v*y,this._y=h*v*p+m*f*y,this._z=h*f*y-m*v*p,this._w=h*f*p-m*v*y;break;case"XZY":this._x=m*f*p-h*v*y,this._y=h*v*p-m*f*y,this._z=h*f*y+m*v*p,this._w=h*f*p+m*v*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],a=t[1],c=t[5],u=t[9],h=t[2],f=t[6],p=t[10],m=n+c+p;if(m>0){const v=.5/Math.sqrt(m+1);this._w=.25/v,this._x=(f-u)*v,this._y=(s-h)*v,this._z=(a-i)*v}else if(n>c&&n>p){const v=2*Math.sqrt(1+n-c-p);this._w=(f-u)/v,this._x=.25*v,this._y=(i+a)/v,this._z=(s+h)/v}else if(c>p){const v=2*Math.sqrt(1+c-n-p);this._w=(s-h)/v,this._x=(i+a)/v,this._y=.25*v,this._z=(u+f)/v}else{const v=2*Math.sqrt(1+p-n-c);this._w=(a-i)/v,this._x=(s+h)/v,this._y=(u+f)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(qt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,a=e._w,c=t._x,u=t._y,h=t._z,f=t._w;return this._x=n*f+a*c+i*h-s*u,this._y=i*f+a*u+s*c-n*h,this._z=s*f+a*h+n*u-i*c,this._w=a*f-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,a=this._w;let c=a*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=a,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const v=1-t;return this._w=v*a+t*this._w,this._x=v*n+t*this._x,this._y=v*i+t*this._y,this._z=v*s+t*this._z,this.normalize(),this}const h=Math.sqrt(u),f=Math.atan2(h,c),p=Math.sin((1-t)*f)/h,m=Math.sin(t*f)/h;return this._w=a*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class D{constructor(e=0,t=0,n=0){D.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(rg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(rg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,a=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*a,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*a,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,a=e.y,c=e.z,u=e.w,h=2*(a*i-c*n),f=2*(c*t-s*i),p=2*(s*n-a*t);return this.x=t+u*h+a*p-c*f,this.y=n+u*f+c*h-s*p,this.z=i+u*p+s*f-a*h,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,a=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*a-n*u,this.z=n*c-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Wh.copy(this).projectOnVector(e),this.sub(Wh)}reflect(e){return this.sub(Wh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(qt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Wh=new D,rg=new Vn;class Dn{constructor(e=new D(1/0,1/0,1/0),t=new D(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(_i.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(_i.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=_i.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let a=0,c=s.count;a<c;a++)e.isMesh===!0?e.getVertexPosition(a,_i):_i.fromBufferAttribute(s,a),_i.applyMatrix4(e.matrixWorld),this.expandByPoint(_i);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Ql.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Ql.copy(n.boundingBox)),Ql.applyMatrix4(e.matrixWorld),this.union(Ql)}const i=e.children;for(let s=0,a=i.length;s<a;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,_i),_i.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Ko),$l.subVectors(this.max,Ko),ks.subVectors(e.a,Ko),Hs.subVectors(e.b,Ko),Vs.subVectors(e.c,Ko),Mr.subVectors(Hs,ks),Sr.subVectors(Vs,Hs),jr.subVectors(ks,Vs);let t=[0,-Mr.z,Mr.y,0,-Sr.z,Sr.y,0,-jr.z,jr.y,Mr.z,0,-Mr.x,Sr.z,0,-Sr.x,jr.z,0,-jr.x,-Mr.y,Mr.x,0,-Sr.y,Sr.x,0,-jr.y,jr.x,0];return!Xh(t,ks,Hs,Vs,$l)||(t=[1,0,0,0,1,0,0,0,1],!Xh(t,ks,Hs,Vs,$l))?!1:(ec.crossVectors(Mr,Sr),t=[ec.x,ec.y,ec.z],Xh(t,ks,Hs,Vs,$l))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,_i).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(_i).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Ji[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ji[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ji[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ji[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ji[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ji[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ji[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ji[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ji),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Ji=[new D,new D,new D,new D,new D,new D,new D,new D],_i=new D,Ql=new Dn,ks=new D,Hs=new D,Vs=new D,Mr=new D,Sr=new D,jr=new D,Ko=new D,$l=new D,ec=new D,Zr=new D;function Xh(r,e,t,n,i){for(let s=0,a=r.length-3;s<=a;s+=3){Zr.fromArray(r,s);const c=i.x*Math.abs(Zr.x)+i.y*Math.abs(Zr.y)+i.z*Math.abs(Zr.z),u=e.dot(Zr),h=t.dot(Zr),f=n.dot(Zr);if(Math.max(-Math.max(u,h,f),Math.min(u,h,f))>c)return!1}return!0}const ZM=new Dn,Qo=new D,qh=new D;class Tn{constructor(e=new D,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):ZM.setFromPoints(e).getCenter(n);let i=0;for(let s=0,a=e.length;s<a;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Qo.subVectors(e,this.center);const t=Qo.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Qo,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(qh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Qo.copy(e.center).add(qh)),this.expandByPoint(Qo.copy(e.center).sub(qh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ki=new D,Yh=new D,tc=new D,wr=new D,jh=new D,nc=new D,Zh=new D;class bo{constructor(e=new D,t=new D(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ki)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ki.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ki.copy(this.origin).addScaledVector(this.direction,t),Ki.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Yh.copy(e).add(t).multiplyScalar(.5),tc.copy(t).sub(e).normalize(),wr.copy(this.origin).sub(Yh);const s=e.distanceTo(t)*.5,a=-this.direction.dot(tc),c=wr.dot(this.direction),u=-wr.dot(tc),h=wr.lengthSq(),f=Math.abs(1-a*a);let p,m,v,y;if(f>0)if(p=a*u-c,m=a*c-u,y=s*f,p>=0)if(m>=-y)if(m<=y){const S=1/f;p*=S,m*=S,v=p*(p+a*m+2*c)+m*(a*p+m+2*u)+h}else m=s,p=Math.max(0,-(a*m+c)),v=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(a*m+c)),v=-p*p+m*(m+2*u)+h;else m<=-y?(p=Math.max(0,-(-a*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),v=-p*p+m*(m+2*u)+h):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),v=m*(m+2*u)+h):(p=Math.max(0,-(a*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),v=-p*p+m*(m+2*u)+h);else m=a>0?-s:s,p=Math.max(0,-(a*m+c)),v=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(Yh).addScaledVector(tc,m),v}intersectSphere(e,t){Ki.subVectors(e.center,this.origin);const n=Ki.dot(this.direction),i=Ki.dot(Ki)-n*n,s=e.radius*e.radius;if(i>s)return null;const a=Math.sqrt(s-i),c=n-a,u=n+a;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,a,c,u;const h=1/this.direction.x,f=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),f>=0?(s=(e.min.y-m.y)*f,a=(e.max.y-m.y)*f):(s=(e.max.y-m.y)*f,a=(e.min.y-m.y)*f),n>a||s>i||((s>n||isNaN(n))&&(n=s),(a<i||isNaN(i))&&(i=a),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Ki)!==null}intersectTriangle(e,t,n,i,s){jh.subVectors(t,e),nc.subVectors(n,e),Zh.crossVectors(jh,nc);let a=this.direction.dot(Zh),c;if(a>0){if(i)return null;c=1}else if(a<0)c=-1,a=-a;else return null;wr.subVectors(this.origin,e);const u=c*this.direction.dot(nc.crossVectors(wr,nc));if(u<0)return null;const h=c*this.direction.dot(jh.cross(wr));if(h<0||u+h>a)return null;const f=-c*wr.dot(Zh);return f<0?null:this.at(f/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Ke{constructor(e,t,n,i,s,a,c,u,h,f,p,m,v,y,S,x){Ke.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,a,c,u,h,f,p,m,v,y,S,x)}set(e,t,n,i,s,a,c,u,h,f,p,m,v,y,S,x){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=s,_[5]=a,_[9]=c,_[13]=u,_[2]=h,_[6]=f,_[10]=p,_[14]=m,_[3]=v,_[7]=y,_[11]=S,_[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ke().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Gs.setFromMatrixColumn(e,0).length(),s=1/Gs.setFromMatrixColumn(e,1).length(),a=1/Gs.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,a=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),f=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=a*f,v=a*p,y=c*f,S=c*p;t[0]=u*f,t[4]=-u*p,t[8]=h,t[1]=v+y*h,t[5]=m-S*h,t[9]=-c*u,t[2]=S-m*h,t[6]=y+v*h,t[10]=a*u}else if(e.order==="YXZ"){const m=u*f,v=u*p,y=h*f,S=h*p;t[0]=m+S*c,t[4]=y*c-v,t[8]=a*h,t[1]=a*p,t[5]=a*f,t[9]=-c,t[2]=v*c-y,t[6]=S+m*c,t[10]=a*u}else if(e.order==="ZXY"){const m=u*f,v=u*p,y=h*f,S=h*p;t[0]=m-S*c,t[4]=-a*p,t[8]=y+v*c,t[1]=v+y*c,t[5]=a*f,t[9]=S-m*c,t[2]=-a*h,t[6]=c,t[10]=a*u}else if(e.order==="ZYX"){const m=a*f,v=a*p,y=c*f,S=c*p;t[0]=u*f,t[4]=y*h-v,t[8]=m*h+S,t[1]=u*p,t[5]=S*h+m,t[9]=v*h-y,t[2]=-h,t[6]=c*u,t[10]=a*u}else if(e.order==="YZX"){const m=a*u,v=a*h,y=c*u,S=c*h;t[0]=u*f,t[4]=S-m*p,t[8]=y*p+v,t[1]=p,t[5]=a*f,t[9]=-c*f,t[2]=-h*f,t[6]=v*p+y,t[10]=m-S*p}else if(e.order==="XZY"){const m=a*u,v=a*h,y=c*u,S=c*h;t[0]=u*f,t[4]=-p,t[8]=h*f,t[1]=m*p+S,t[5]=a*f,t[9]=v*p-y,t[2]=y*p-v,t[6]=c*f,t[10]=S*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(JM,e,KM)}lookAt(e,t,n){const i=this.elements;return Qn.subVectors(e,t),Qn.lengthSq()===0&&(Qn.z=1),Qn.normalize(),Er.crossVectors(n,Qn),Er.lengthSq()===0&&(Math.abs(n.z)===1?Qn.x+=1e-4:Qn.z+=1e-4,Qn.normalize(),Er.crossVectors(n,Qn)),Er.normalize(),ic.crossVectors(Qn,Er),i[0]=Er.x,i[4]=ic.x,i[8]=Qn.x,i[1]=Er.y,i[5]=ic.y,i[9]=Qn.y,i[2]=Er.z,i[6]=ic.z,i[10]=Qn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],c=n[4],u=n[8],h=n[12],f=n[1],p=n[5],m=n[9],v=n[13],y=n[2],S=n[6],x=n[10],_=n[14],E=n[3],w=n[7],A=n[11],U=n[15],P=i[0],I=i[4],z=i[8],R=i[12],b=i[1],F=i[5],q=i[9],k=i[13],Z=i[2],se=i[6],ae=i[10],ve=i[14],H=i[3],$=i[7],J=i[11],he=i[15];return s[0]=a*P+c*b+u*Z+h*H,s[4]=a*I+c*F+u*se+h*$,s[8]=a*z+c*q+u*ae+h*J,s[12]=a*R+c*k+u*ve+h*he,s[1]=f*P+p*b+m*Z+v*H,s[5]=f*I+p*F+m*se+v*$,s[9]=f*z+p*q+m*ae+v*J,s[13]=f*R+p*k+m*ve+v*he,s[2]=y*P+S*b+x*Z+_*H,s[6]=y*I+S*F+x*se+_*$,s[10]=y*z+S*q+x*ae+_*J,s[14]=y*R+S*k+x*ve+_*he,s[3]=E*P+w*b+A*Z+U*H,s[7]=E*I+w*F+A*se+U*$,s[11]=E*z+w*q+A*ae+U*J,s[15]=E*R+w*k+A*ve+U*he,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],a=e[1],c=e[5],u=e[9],h=e[13],f=e[2],p=e[6],m=e[10],v=e[14],y=e[3],S=e[7],x=e[11],_=e[15];return y*(+s*u*p-i*h*p-s*c*m+n*h*m+i*c*v-n*u*v)+S*(+t*u*v-t*h*m+s*a*m-i*a*v+i*h*f-s*u*f)+x*(+t*h*p-t*c*v-s*a*p+n*a*v+s*c*f-n*h*f)+_*(-i*c*f-t*u*p+t*c*m+i*a*p-n*a*m+n*u*f)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=e[9],m=e[10],v=e[11],y=e[12],S=e[13],x=e[14],_=e[15],E=p*x*h-S*m*h+S*u*v-c*x*v-p*u*_+c*m*_,w=y*m*h-f*x*h-y*u*v+a*x*v+f*u*_-a*m*_,A=f*S*h-y*p*h+y*c*v-a*S*v-f*c*_+a*p*_,U=y*p*u-f*S*u-y*c*m+a*S*m+f*c*x-a*p*x,P=t*E+n*w+i*A+s*U;if(P===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const I=1/P;return e[0]=E*I,e[1]=(S*m*s-p*x*s-S*i*v+n*x*v+p*i*_-n*m*_)*I,e[2]=(c*x*s-S*u*s+S*i*h-n*x*h-c*i*_+n*u*_)*I,e[3]=(p*u*s-c*m*s-p*i*h+n*m*h+c*i*v-n*u*v)*I,e[4]=w*I,e[5]=(f*x*s-y*m*s+y*i*v-t*x*v-f*i*_+t*m*_)*I,e[6]=(y*u*s-a*x*s-y*i*h+t*x*h+a*i*_-t*u*_)*I,e[7]=(a*m*s-f*u*s+f*i*h-t*m*h-a*i*v+t*u*v)*I,e[8]=A*I,e[9]=(y*p*s-f*S*s-y*n*v+t*S*v+f*n*_-t*p*_)*I,e[10]=(a*S*s-y*c*s+y*n*h-t*S*h-a*n*_+t*c*_)*I,e[11]=(f*c*s-a*p*s-f*n*h+t*p*h+a*n*v-t*c*v)*I,e[12]=U*I,e[13]=(f*S*i-y*p*i+y*n*m-t*S*m-f*n*x+t*p*x)*I,e[14]=(y*c*i-a*S*i-y*n*u+t*S*u+a*n*x-t*c*x)*I,e[15]=(a*p*i-f*c*i+f*n*u-t*p*u-a*n*m+t*c*m)*I,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,a=e.x,c=e.y,u=e.z,h=s*a,f=s*c;return this.set(h*a+n,h*c-i*u,h*u+i*c,0,h*c+i*u,f*c+n,f*u-i*a,0,h*u-i*c,f*u+i*a,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,a){return this.set(1,n,s,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,a=t._y,c=t._z,u=t._w,h=s+s,f=a+a,p=c+c,m=s*h,v=s*f,y=s*p,S=a*f,x=a*p,_=c*p,E=u*h,w=u*f,A=u*p,U=n.x,P=n.y,I=n.z;return i[0]=(1-(S+_))*U,i[1]=(v+A)*U,i[2]=(y-w)*U,i[3]=0,i[4]=(v-A)*P,i[5]=(1-(m+_))*P,i[6]=(x+E)*P,i[7]=0,i[8]=(y+w)*I,i[9]=(x-E)*I,i[10]=(1-(m+S))*I,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Gs.set(i[0],i[1],i[2]).length();const a=Gs.set(i[4],i[5],i[6]).length(),c=Gs.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],yi.copy(this);const h=1/s,f=1/a,p=1/c;return yi.elements[0]*=h,yi.elements[1]*=h,yi.elements[2]*=h,yi.elements[4]*=f,yi.elements[5]*=f,yi.elements[6]*=f,yi.elements[8]*=p,yi.elements[9]*=p,yi.elements[10]*=p,t.setFromRotationMatrix(yi),n.x=s,n.y=a,n.z=c,this}makePerspective(e,t,n,i,s,a,c=zi){const u=this.elements,h=2*s/(t-e),f=2*s/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let v,y;if(c===zi)v=-(a+s)/(a-s),y=-2*a*s/(a-s);else if(c===Ia)v=-a/(a-s),y=-a*s/(a-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=f,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=v,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,a,c=zi){const u=this.elements,h=1/(t-e),f=1/(n-i),p=1/(a-s),m=(t+e)*h,v=(n+i)*f;let y,S;if(c===zi)y=(a+s)*p,S=-2*p;else if(c===Ia)y=s*p,S=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*f,u[9]=0,u[13]=-v,u[2]=0,u[6]=0,u[10]=S,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Gs=new D,yi=new Ke,JM=new D(0,0,0),KM=new D(1,1,1),Er=new D,ic=new D,Qn=new D,sg=new Ke,og=new Vn;class ii{constructor(e=0,t=0,n=0,i=ii.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],a=i[4],c=i[8],u=i[1],h=i[5],f=i[9],p=i[2],m=i[6],v=i[10];switch(t){case"XYZ":this._y=Math.asin(qt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-f,v),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-qt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(qt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,v),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-qt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,v),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-a,h));break;case"YZX":this._z=Math.asin(qt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-f,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-qt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-f,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return sg.makeRotationFromQuaternion(e),this.setFromRotationMatrix(sg,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return og.setFromEuler(this),this.setFromQuaternion(og,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ii.DEFAULT_ORDER="XYZ";class vs{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let QM=0;const ag=new D,Ws=new Vn,Qi=new Ke,rc=new D,$o=new D,$M=new D,eS=new Vn,lg=new D(1,0,0),cg=new D(0,1,0),ug=new D(0,0,1),hg={type:"added"},tS={type:"removed"},Xs={type:"childadded",child:null},Jh={type:"childremoved",child:null};class wt extends ur{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:QM++}),this.uuid=ni(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=wt.DEFAULT_UP.clone();const e=new D,t=new ii,n=new Vn,i=new D(1,1,1);function s(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Ke},normalMatrix:{value:new ft}}),this.matrix=new Ke,this.matrixWorld=new Ke,this.matrixAutoUpdate=wt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=wt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new vs,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ws.setFromAxisAngle(e,t),this.quaternion.multiply(Ws),this}rotateOnWorldAxis(e,t){return Ws.setFromAxisAngle(e,t),this.quaternion.premultiply(Ws),this}rotateX(e){return this.rotateOnAxis(lg,e)}rotateY(e){return this.rotateOnAxis(cg,e)}rotateZ(e){return this.rotateOnAxis(ug,e)}translateOnAxis(e,t){return ag.copy(e).applyQuaternion(this.quaternion),this.position.add(ag.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(lg,e)}translateY(e){return this.translateOnAxis(cg,e)}translateZ(e){return this.translateOnAxis(ug,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Qi.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?rc.copy(e):rc.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),$o.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Qi.lookAt($o,rc,this.up):Qi.lookAt(rc,$o,this.up),this.quaternion.setFromRotationMatrix(Qi),i&&(Qi.extractRotation(i.matrixWorld),Ws.setFromRotationMatrix(Qi),this.quaternion.premultiply(Ws.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(hg),Xs.child=e,this.dispatchEvent(Xs),Xs.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(tS),Jh.child=e,this.dispatchEvent(Jh),Jh.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Qi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Qi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Qi),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(hg),Xs.child=e,this.dispatchEvent(Xs),Xs.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let s=0,a=i.length;s<a;s++)i[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose($o,e,$M),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose($o,eS,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,a=i.length;s<a;s++){const c=i[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),i.maxGeometryCount=this._maxGeometryCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,f=u.length;h<f;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=a(e.geometries),u=a(e.materials),h=a(e.textures),f=a(e.images),p=a(e.shapes),m=a(e.skeletons),v=a(e.animations),y=a(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),f.length>0&&(n.images=f),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),v.length>0&&(n.animations=v),y.length>0&&(n.nodes=y)}return n.object=i,n;function a(c){const u=[];for(const h in c){const f=c[h];delete f.metadata,u.push(f)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}wt.DEFAULT_UP=new D(0,1,0);wt.DEFAULT_MATRIX_AUTO_UPDATE=!0;wt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const xi=new D,$i=new D,Kh=new D,er=new D,qs=new D,Ys=new D,fg=new D,Qh=new D,$h=new D,ef=new D;class ei{constructor(e=new D,t=new D,n=new D){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),xi.subVectors(e,t),i.cross(xi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){xi.subVectors(i,t),$i.subVectors(n,t),Kh.subVectors(e,t);const a=xi.dot(xi),c=xi.dot($i),u=xi.dot(Kh),h=$i.dot($i),f=$i.dot(Kh),p=a*h-c*c;if(p===0)return s.set(0,0,0),null;const m=1/p,v=(h*u-c*f)*m,y=(a*f-c*u)*m;return s.set(1-v-y,y,v)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,er)===null?!1:er.x>=0&&er.y>=0&&er.x+er.y<=1}static getInterpolation(e,t,n,i,s,a,c,u){return this.getBarycoord(e,t,n,i,er)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(s,er.x),u.addScaledVector(a,er.y),u.addScaledVector(c,er.z),u)}static isFrontFacing(e,t,n,i){return xi.subVectors(n,t),$i.subVectors(e,t),xi.cross($i).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return xi.subVectors(this.c,this.b),$i.subVectors(this.a,this.b),xi.cross($i).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ei.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ei.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,s){return ei.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return ei.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ei.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let a,c;qs.subVectors(i,n),Ys.subVectors(s,n),Qh.subVectors(e,n);const u=qs.dot(Qh),h=Ys.dot(Qh);if(u<=0&&h<=0)return t.copy(n);$h.subVectors(e,i);const f=qs.dot($h),p=Ys.dot($h);if(f>=0&&p<=f)return t.copy(i);const m=u*p-f*h;if(m<=0&&u>=0&&f<=0)return a=u/(u-f),t.copy(n).addScaledVector(qs,a);ef.subVectors(e,s);const v=qs.dot(ef),y=Ys.dot(ef);if(y>=0&&v<=y)return t.copy(s);const S=v*h-u*y;if(S<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(n).addScaledVector(Ys,c);const x=f*y-v*p;if(x<=0&&p-f>=0&&v-y>=0)return fg.subVectors(s,i),c=(p-f)/(p-f+(v-y)),t.copy(i).addScaledVector(fg,c);const _=1/(x+S+m);return a=S*_,c=m*_,t.copy(n).addScaledVector(qs,a).addScaledVector(Ys,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const f_={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Tr={h:0,s:0,l:0},sc={h:0,s:0,l:0};function tf(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class Le{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=di){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,bt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=bt.workingColorSpace){return this.r=e,this.g=t,this.b=n,bt.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=bt.workingColorSpace){if(e=Wd(e,1),t=qt(t,0,1),n=qt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,a=2*n-s;this.r=tf(a,s,e+1/3),this.g=tf(a,s,e),this.b=tf(a,s,e-1/3)}return bt.toWorkingColorSpace(this,i),this}setStyle(e,t=di){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const a=i[1],c=i[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],a=s.length;if(a===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=di){const n=f_[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=yo(e.r),this.g=yo(e.g),this.b=yo(e.b),this}copyLinearToSRGB(e){return this.r=Vh(e.r),this.g=Vh(e.g),this.b=Vh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=di){return bt.fromWorkingColorSpace(Sn.copy(this),e),Math.round(qt(Sn.r*255,0,255))*65536+Math.round(qt(Sn.g*255,0,255))*256+Math.round(qt(Sn.b*255,0,255))}getHexString(e=di){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=bt.workingColorSpace){bt.fromWorkingColorSpace(Sn.copy(this),t);const n=Sn.r,i=Sn.g,s=Sn.b,a=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const f=(c+a)/2;if(c===a)u=0,h=0;else{const p=a-c;switch(h=f<=.5?p/(a+c):p/(2-a-c),a){case n:u=(i-s)/p+(i<s?6:0);break;case i:u=(s-n)/p+2;break;case s:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=f,e}getRGB(e,t=bt.workingColorSpace){return bt.fromWorkingColorSpace(Sn.copy(this),t),e.r=Sn.r,e.g=Sn.g,e.b=Sn.b,e}getStyle(e=di){bt.fromWorkingColorSpace(Sn.copy(this),e);const t=Sn.r,n=Sn.g,i=Sn.b;return e!==di?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Tr),this.setHSL(Tr.h+e,Tr.s+t,Tr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Tr),e.getHSL(sc);const n=pa(Tr.h,sc.h,t),i=pa(Tr.s,sc.s,t),s=pa(Tr.l,sc.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Sn=new Le;Le.NAMES=f_;let nS=0;class mn extends ur{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:nS++}),this.uuid=ni(),this.name="",this.type="Material",this.blending=ps,this.side=or,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=eu,this.blendDst=tu,this.blendEquation=Pr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Le(0,0,0),this.blendAlpha=0,this.depthFunc=_a,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=gd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=os,this.stencilZFail=os,this.stencilZPass=os,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ps&&(n.blending=this.blending),this.side!==or&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==eu&&(n.blendSrc=this.blendSrc),this.blendDst!==tu&&(n.blendDst=this.blendDst),this.blendEquation!==Pr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==_a&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==gd&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==os&&(n.stencilFail=this.stencilFail),this.stencilZFail!==os&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==os&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const a=[];for(const c in s){const u=s[c];delete u.metadata,a.push(u)}return a}if(t){const s=i(e.textures),a=i(e.images);s.length>0&&(n.textures=s),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Or extends mn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ii,this.combine=Ha,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const ir=iS();function iS(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,f=0;for(;!(h&8388608);)h<<=1,f-=8388608;h&=-8388609,f+=947912704,s[u]=h|f}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)a[u]=u<<23;a[31]=1199570944,a[32]=2147483648;for(let u=33;u<63;++u)a[u]=2147483648+(u-32<<23);a[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:a,offsetTable:c}}function kn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=qt(r,-65504,65504),ir.floatView[0]=r;const e=ir.uint32View[0],t=e>>23&511;return ir.baseTable[t]+((e&8388607)>>ir.shiftTable[t])}function ua(r){const e=r>>10;return ir.uint32View[0]=ir.mantissaTable[ir.offsetTable[e]+(r&1023)]+ir.exponentTable[e],ir.floatView[0]}const rS={toHalfFloat:kn,fromHalfFloat:ua},Kt=new D,oc=new ue;class Rt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Pa,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=mi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return c_("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)oc.fromBufferAttribute(this,t),oc.applyMatrix3(e),this.setXY(t,oc.x,oc.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Kt.fromBufferAttribute(this,t),Kt.applyMatrix3(e),this.setXYZ(t,Kt.x,Kt.y,Kt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Kt.fromBufferAttribute(this,t),Kt.applyMatrix4(e),this.setXYZ(t,Kt.x,Kt.y,Kt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Kt.fromBufferAttribute(this,t),Kt.applyNormalMatrix(e),this.setXYZ(t,Kt.x,Kt.y,Kt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Kt.fromBufferAttribute(this,t),Kt.transformDirection(e),this.setXYZ(t,Kt.x,Kt.y,Kt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Ln(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=lt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Ln(t,this.array)),t}setX(e,t){return this.normalized&&(t=lt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Ln(t,this.array)),t}setY(e,t){return this.normalized&&(t=lt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Ln(t,this.array)),t}setZ(e,t){return this.normalized&&(t=lt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Ln(t,this.array)),t}setW(e,t){return this.normalized&&(t=lt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=lt(t,this.array),n=lt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=lt(t,this.array),n=lt(n,this.array),i=lt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=lt(t,this.array),n=lt(n,this.array),i=lt(i,this.array),s=lt(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Pa&&(e.usage=this.usage),e}}class sS extends Rt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class oS extends Rt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class aS extends Rt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class lS extends Rt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class qd extends Rt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class cS extends Rt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Yd extends Rt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class uS extends Rt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=ua(this.array[e*this.itemSize]);return this.normalized&&(t=Ln(t,this.array)),t}setX(e,t){return this.normalized&&(t=lt(t,this.array)),this.array[e*this.itemSize]=kn(t),this}getY(e){let t=ua(this.array[e*this.itemSize+1]);return this.normalized&&(t=Ln(t,this.array)),t}setY(e,t){return this.normalized&&(t=lt(t,this.array)),this.array[e*this.itemSize+1]=kn(t),this}getZ(e){let t=ua(this.array[e*this.itemSize+2]);return this.normalized&&(t=Ln(t,this.array)),t}setZ(e,t){return this.normalized&&(t=lt(t,this.array)),this.array[e*this.itemSize+2]=kn(t),this}getW(e){let t=ua(this.array[e*this.itemSize+3]);return this.normalized&&(t=Ln(t,this.array)),t}setW(e,t){return this.normalized&&(t=lt(t,this.array)),this.array[e*this.itemSize+3]=kn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=lt(t,this.array),n=lt(n,this.array)),this.array[e+0]=kn(t),this.array[e+1]=kn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=lt(t,this.array),n=lt(n,this.array),i=lt(i,this.array)),this.array[e+0]=kn(t),this.array[e+1]=kn(n),this.array[e+2]=kn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=lt(t,this.array),n=lt(n,this.array),i=lt(i,this.array),s=lt(s,this.array)),this.array[e+0]=kn(t),this.array[e+1]=kn(n),this.array[e+2]=kn(i),this.array[e+3]=kn(s),this}}class ze extends Rt{constructor(e,t,n){super(new Float32Array(e),t,n)}}let hS=0;const fi=new Ke,nf=new wt,js=new D,$n=new Dn,ea=new Dn,un=new D;class ut extends ur{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:hS++}),this.uuid=ni(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(a_(e)?Yd:qd)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new ft().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return fi.makeRotationFromQuaternion(e),this.applyMatrix4(fi),this}rotateX(e){return fi.makeRotationX(e),this.applyMatrix4(fi),this}rotateY(e){return fi.makeRotationY(e),this.applyMatrix4(fi),this}rotateZ(e){return fi.makeRotationZ(e),this.applyMatrix4(fi),this}translate(e,t,n){return fi.makeTranslation(e,t,n),this.applyMatrix4(fi),this}scale(e,t,n){return fi.makeScale(e,t,n),this.applyMatrix4(fi),this}lookAt(e){return nf.lookAt(e),nf.updateMatrix(),this.applyMatrix4(nf.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(js).negate(),this.translate(js.x,js.y,js.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new ze(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Dn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new D(-1/0,-1/0,-1/0),new D(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];$n.setFromBufferAttribute(s),this.morphTargetsRelative?(un.addVectors(this.boundingBox.min,$n.min),this.boundingBox.expandByPoint(un),un.addVectors(this.boundingBox.max,$n.max),this.boundingBox.expandByPoint(un)):(this.boundingBox.expandByPoint($n.min),this.boundingBox.expandByPoint($n.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Tn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new D,1/0);return}if(e){const n=this.boundingSphere.center;if($n.setFromBufferAttribute(e),t)for(let s=0,a=t.length;s<a;s++){const c=t[s];ea.setFromBufferAttribute(c),this.morphTargetsRelative?(un.addVectors($n.min,ea.min),$n.expandByPoint(un),un.addVectors($n.max,ea.max),$n.expandByPoint(un)):($n.expandByPoint(ea.min),$n.expandByPoint(ea.max))}$n.getCenter(n);let i=0;for(let s=0,a=e.count;s<a;s++)un.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(un));if(t)for(let s=0,a=t.length;s<a;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,f=c.count;h<f;h++)un.fromBufferAttribute(c,h),u&&(js.fromBufferAttribute(e,h),un.add(js)),i=Math.max(i,n.distanceToSquared(un))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Rt(new Float32Array(4*n.count),4));const a=this.getAttribute("tangent"),c=[],u=[];for(let z=0;z<n.count;z++)c[z]=new D,u[z]=new D;const h=new D,f=new D,p=new D,m=new ue,v=new ue,y=new ue,S=new D,x=new D;function _(z,R,b){h.fromBufferAttribute(n,z),f.fromBufferAttribute(n,R),p.fromBufferAttribute(n,b),m.fromBufferAttribute(s,z),v.fromBufferAttribute(s,R),y.fromBufferAttribute(s,b),f.sub(h),p.sub(h),v.sub(m),y.sub(m);const F=1/(v.x*y.y-y.x*v.y);isFinite(F)&&(S.copy(f).multiplyScalar(y.y).addScaledVector(p,-v.y).multiplyScalar(F),x.copy(p).multiplyScalar(v.x).addScaledVector(f,-y.x).multiplyScalar(F),c[z].add(S),c[R].add(S),c[b].add(S),u[z].add(x),u[R].add(x),u[b].add(x))}let E=this.groups;E.length===0&&(E=[{start:0,count:e.count}]);for(let z=0,R=E.length;z<R;++z){const b=E[z],F=b.start,q=b.count;for(let k=F,Z=F+q;k<Z;k+=3)_(e.getX(k+0),e.getX(k+1),e.getX(k+2))}const w=new D,A=new D,U=new D,P=new D;function I(z){U.fromBufferAttribute(i,z),P.copy(U);const R=c[z];w.copy(R),w.sub(U.multiplyScalar(U.dot(R))).normalize(),A.crossVectors(P,R);const F=A.dot(u[z])<0?-1:1;a.setXYZW(z,w.x,w.y,w.z,F)}for(let z=0,R=E.length;z<R;++z){const b=E[z],F=b.start,q=b.count;for(let k=F,Z=F+q;k<Z;k+=3)I(e.getX(k+0)),I(e.getX(k+1)),I(e.getX(k+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Rt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,v=n.count;m<v;m++)n.setXYZ(m,0,0,0);const i=new D,s=new D,a=new D,c=new D,u=new D,h=new D,f=new D,p=new D;if(e)for(let m=0,v=e.count;m<v;m+=3){const y=e.getX(m+0),S=e.getX(m+1),x=e.getX(m+2);i.fromBufferAttribute(t,y),s.fromBufferAttribute(t,S),a.fromBufferAttribute(t,x),f.subVectors(a,s),p.subVectors(i,s),f.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,S),h.fromBufferAttribute(n,x),c.add(f),u.add(f),h.add(f),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(S,u.x,u.y,u.z),n.setXYZ(x,h.x,h.y,h.z)}else for(let m=0,v=t.count;m<v;m+=3)i.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),a.fromBufferAttribute(t,m+2),f.subVectors(a,s),p.subVectors(i,s),f.cross(p),n.setXYZ(m+0,f.x,f.y,f.z),n.setXYZ(m+1,f.x,f.y,f.z),n.setXYZ(m+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)un.fromBufferAttribute(e,t),un.normalize(),e.setXYZ(t,un.x,un.y,un.z)}toNonIndexed(){function e(c,u){const h=c.array,f=c.itemSize,p=c.normalized,m=new h.constructor(u.length*f);let v=0,y=0;for(let S=0,x=u.length;S<x;S++){c.isInterleavedBufferAttribute?v=u[S]*c.data.stride+c.offset:v=u[S]*f;for(let _=0;_<f;_++)m[y++]=h[v++]}return new Rt(m,f,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ut,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,p=h.length;f<p;f++){const m=h[f],v=e(m,n);u.push(v)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let c=0,u=a.length;c<u;c++){const h=a[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],f=[];for(let p=0,m=h.length;p<m;p++){const v=h[p];f.push(v.toJSON(e.data))}f.length>0&&(i[u]=f,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const f=i[h];this.setAttribute(h,f.clone(t))}const s=e.morphAttributes;for(const h in s){const f=[],p=s[h];for(let m=0,v=p.length;m<v;m++)f.push(p[m].clone(t));this.morphAttributes[h]=f}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let h=0,f=a.length;h<f;h++){const p=a[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const dg=new Ke,Jr=new bo,ac=new Tn,pg=new D,Zs=new D,Js=new D,Ks=new D,rf=new D,lc=new D,cc=new ue,uc=new ue,hc=new ue,mg=new D,gg=new D,vg=new D,fc=new D,dc=new D;class $t extends wt{constructor(e=new ut,t=new Or){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){lc.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const f=c[u],p=s[u];f!==0&&(rf.fromBufferAttribute(p,e),a?lc.addScaledVector(rf,f):lc.addScaledVector(rf.sub(t),f))}t.add(lc)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),ac.copy(n.boundingSphere),ac.applyMatrix4(s),Jr.copy(e.ray).recast(e.near),!(ac.containsPoint(Jr.origin)===!1&&(Jr.intersectSphere(ac,pg)===null||Jr.origin.distanceToSquared(pg)>(e.far-e.near)**2))&&(dg.copy(s).invert(),Jr.copy(e.ray).applyMatrix4(dg),!(n.boundingBox!==null&&Jr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Jr)))}_computeIntersections(e,t,n){let i;const s=this.geometry,a=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,f=s.attributes.uv1,p=s.attributes.normal,m=s.groups,v=s.drawRange;if(c!==null)if(Array.isArray(a))for(let y=0,S=m.length;y<S;y++){const x=m[y],_=a[x.materialIndex],E=Math.max(x.start,v.start),w=Math.min(c.count,Math.min(x.start+x.count,v.start+v.count));for(let A=E,U=w;A<U;A+=3){const P=c.getX(A),I=c.getX(A+1),z=c.getX(A+2);i=pc(this,_,e,n,h,f,p,P,I,z),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,v.start),S=Math.min(c.count,v.start+v.count);for(let x=y,_=S;x<_;x+=3){const E=c.getX(x),w=c.getX(x+1),A=c.getX(x+2);i=pc(this,a,e,n,h,f,p,E,w,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(a))for(let y=0,S=m.length;y<S;y++){const x=m[y],_=a[x.materialIndex],E=Math.max(x.start,v.start),w=Math.min(u.count,Math.min(x.start+x.count,v.start+v.count));for(let A=E,U=w;A<U;A+=3){const P=A,I=A+1,z=A+2;i=pc(this,_,e,n,h,f,p,P,I,z),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,v.start),S=Math.min(u.count,v.start+v.count);for(let x=y,_=S;x<_;x+=3){const E=x,w=x+1,A=x+2;i=pc(this,a,e,n,h,f,p,E,w,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}}}function fS(r,e,t,n,i,s,a,c){let u;if(e.side===Nn?u=n.intersectTriangle(a,s,i,!0,c):u=n.intersectTriangle(i,s,a,e.side===or,c),u===null)return null;dc.copy(c),dc.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(dc);return h<t.near||h>t.far?null:{distance:h,point:dc.clone(),object:r}}function pc(r,e,t,n,i,s,a,c,u,h){r.getVertexPosition(c,Zs),r.getVertexPosition(u,Js),r.getVertexPosition(h,Ks);const f=fS(r,e,t,n,Zs,Js,Ks,fc);if(f){i&&(cc.fromBufferAttribute(i,c),uc.fromBufferAttribute(i,u),hc.fromBufferAttribute(i,h),f.uv=ei.getInterpolation(fc,Zs,Js,Ks,cc,uc,hc,new ue)),s&&(cc.fromBufferAttribute(s,c),uc.fromBufferAttribute(s,u),hc.fromBufferAttribute(s,h),f.uv1=ei.getInterpolation(fc,Zs,Js,Ks,cc,uc,hc,new ue)),a&&(mg.fromBufferAttribute(a,c),gg.fromBufferAttribute(a,u),vg.fromBufferAttribute(a,h),f.normal=ei.getInterpolation(fc,Zs,Js,Ks,mg,gg,vg,new D),f.normal.dot(n.direction)>0&&f.normal.multiplyScalar(-1));const p={a:c,b:u,c:h,normal:new D,materialIndex:0};ei.getNormal(Zs,Js,Ks,p.normal),f.face=p}return f}class Ss extends ut{constructor(e=1,t=1,n=1,i=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:a};const c=this;i=Math.floor(i),s=Math.floor(s),a=Math.floor(a);const u=[],h=[],f=[],p=[];let m=0,v=0;y("z","y","x",-1,-1,n,t,e,a,s,0),y("z","y","x",1,-1,n,t,-e,a,s,1),y("x","z","y",1,1,e,n,t,i,a,2),y("x","z","y",1,-1,e,n,-t,i,a,3),y("x","y","z",1,-1,e,t,n,i,s,4),y("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new ze(h,3)),this.setAttribute("normal",new ze(f,3)),this.setAttribute("uv",new ze(p,2));function y(S,x,_,E,w,A,U,P,I,z,R){const b=A/I,F=U/z,q=A/2,k=U/2,Z=P/2,se=I+1,ae=z+1;let ve=0,H=0;const $=new D;for(let J=0;J<ae;J++){const he=J*F-k;for(let Ie=0;Ie<se;Ie++){const Be=Ie*b-q;$[S]=Be*E,$[x]=he*w,$[_]=Z,h.push($.x,$.y,$.z),$[S]=0,$[x]=0,$[_]=P>0?1:-1,f.push($.x,$.y,$.z),p.push(Ie/I),p.push(1-J/z),ve+=1}}for(let J=0;J<z;J++)for(let he=0;he<I;he++){const Ie=m+he+se*J,Be=m+he+se*(J+1),ne=m+(he+1)+se*(J+1),pe=m+(he+1)+se*J;u.push(Ie,Be,pe),u.push(Be,ne,pe),H+=6}c.addGroup(v,H,R),v+=H,m+=ve}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ss(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function So(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function In(r){const e={};for(let t=0;t<r.length;t++){const n=So(r[t]);for(const i in n)e[i]=n[i]}return e}function dS(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function d_(r){const e=r.getRenderTarget();return e===null?r.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:bt.workingColorSpace}const p_={clone:So,merge:In};var pS=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,mS=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ei extends mn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=pS,this.fragmentShader=mS,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=So(e.uniforms),this.uniformsGroups=dS(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Ga extends wt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ke,this.projectionMatrix=new Ke,this.projectionMatrixInverse=new Ke,this.coordinateSystem=zi}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Ar=new D,_g=new ue,yg=new ue;class hn extends Ga{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Mo*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(gs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Mo*2*Math.atan(Math.tan(gs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){Ar.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Ar.x,Ar.y).multiplyScalar(-e/Ar.z),Ar.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Ar.x,Ar.y).multiplyScalar(-e/Ar.z)}getViewSize(e,t){return this.getViewBounds(e,_g,yg),t.subVectors(yg,_g)}setViewOffset(e,t,n,i,s,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(gs*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const u=a.fullWidth,h=a.fullHeight;s+=a.offsetX*i/u,t-=a.offsetY*n/h,i*=a.width/u,n*=a.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Qs=-90,$s=1;class m_ extends wt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new hn(Qs,$s,e,t);i.layers=this.layers,this.add(i);const s=new hn(Qs,$s,e,t);s.layers=this.layers,this.add(s);const a=new hn(Qs,$s,e,t);a.layers=this.layers,this.add(a);const c=new hn(Qs,$s,e,t);c.layers=this.layers,this.add(c);const u=new hn(Qs,$s,e,t);u.layers=this.layers,this.add(u);const h=new hn(Qs,$s,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,a,c,u]=t;for(const h of t)this.remove(h);if(e===zi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===Ia)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,a,c,u,h,f]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),v=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const S=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,a),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,u),e.setRenderTarget(n,4,i),e.render(t,h),n.texture.generateMipmaps=S,e.setRenderTarget(n,5,i),e.render(t,f),e.setRenderTarget(p,m,v),e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}}class Wa extends rn{constructor(e,t,n,i,s,a,c,u,h,f){e=e!==void 0?e:[],t=t!==void 0?t:ar,super(e,t,n,i,s,a,c,u,h,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class g_ extends wi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Wa(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Qt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Ss(5,5,5),s=new Ei({name:"CubemapFromEquirect",uniforms:So(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Nn,blending:sr});s.uniforms.tEquirect.value=t;const a=new $t(i,s),c=t.minFilter;return t.minFilter===Fi&&(t.minFilter=Qt),new m_(1,10,this).update(e,a),t.minFilter=c,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(s)}}const sf=new D,gS=new D,vS=new ft;class Rr{constructor(e=new D(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=sf.subVectors(n,t).cross(gS.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(sf),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||vS.getNormalMatrix(e),i=this.coplanarPoint(sf).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Kr=new Tn,mc=new D;class Xa{constructor(e=new Rr,t=new Rr,n=new Rr,i=new Rr,s=new Rr,a=new Rr){this.planes=[e,t,n,i,s,a]}set(e,t,n,i,s,a){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=zi){const n=this.planes,i=e.elements,s=i[0],a=i[1],c=i[2],u=i[3],h=i[4],f=i[5],p=i[6],m=i[7],v=i[8],y=i[9],S=i[10],x=i[11],_=i[12],E=i[13],w=i[14],A=i[15];if(n[0].setComponents(u-s,m-h,x-v,A-_).normalize(),n[1].setComponents(u+s,m+h,x+v,A+_).normalize(),n[2].setComponents(u+a,m+f,x+y,A+E).normalize(),n[3].setComponents(u-a,m-f,x-y,A-E).normalize(),n[4].setComponents(u-c,m-p,x-S,A-w).normalize(),t===zi)n[5].setComponents(u+c,m+p,x+S,A+w).normalize();else if(t===Ia)n[5].setComponents(c,p,S,w).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Kr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Kr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Kr)}intersectsSprite(e){return Kr.center.set(0,0,0),Kr.radius=.7071067811865476,Kr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Kr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(mc.x=i.normal.x>0?e.max.x:e.min.x,mc.y=i.normal.y>0?e.max.y:e.min.y,mc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(mc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function v_(){let r=null,e=!1,t=null,n=null;function i(s,a){t(s,a),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function _S(r){const e=new WeakMap;function t(c,u){const h=c.array,f=c.usage,p=h.byteLength,m=r.createBuffer();r.bindBuffer(u,m),r.bufferData(u,h,f),c.onUploadCallback();let v;if(h instanceof Float32Array)v=r.FLOAT;else if(h instanceof Uint16Array)c.isFloat16BufferAttribute?v=r.HALF_FLOAT:v=r.UNSIGNED_SHORT;else if(h instanceof Int16Array)v=r.SHORT;else if(h instanceof Uint32Array)v=r.UNSIGNED_INT;else if(h instanceof Int32Array)v=r.INT;else if(h instanceof Int8Array)v=r.BYTE;else if(h instanceof Uint8Array)v=r.UNSIGNED_BYTE;else if(h instanceof Uint8ClampedArray)v=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:m,type:v,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version,size:p}}function n(c,u,h){const f=u.array,p=u._updateRange,m=u.updateRanges;if(r.bindBuffer(h,c),p.count===-1&&m.length===0&&r.bufferSubData(h,0,f),m.length!==0){for(let v=0,y=m.length;v<y;v++){const S=m[v];r.bufferSubData(h,S.start*f.BYTES_PER_ELEMENT,f,S.start,S.count)}u.clearUpdateRanges()}p.count!==-1&&(r.bufferSubData(h,p.offset*f.BYTES_PER_ELEMENT,f,p.offset,p.count),p.count=-1),u.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),e.get(c)}function s(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=e.get(c);u&&(r.deleteBuffer(u.buffer),e.delete(c))}function a(c,u){if(c.isGLBufferAttribute){const f=e.get(c);(!f||f.version<c.version)&&e.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=e.get(c);if(h===void 0)e.set(c,t(c,u));else if(h.version<c.version){if(h.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(h.buffer,c,u),h.version=c.version}}return{get:i,remove:s,update:a}}class Co extends ut{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,a=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,f=u+1,p=e/c,m=t/u,v=[],y=[],S=[],x=[];for(let _=0;_<f;_++){const E=_*m-a;for(let w=0;w<h;w++){const A=w*p-s;y.push(A,-E,0),S.push(0,0,1),x.push(w/c),x.push(1-_/u)}}for(let _=0;_<u;_++)for(let E=0;E<c;E++){const w=E+h*_,A=E+h*(_+1),U=E+1+h*(_+1),P=E+1+h*_;v.push(w,A,P),v.push(A,U,P)}this.setIndex(v),this.setAttribute("position",new ze(y,3)),this.setAttribute("normal",new ze(S,3)),this.setAttribute("uv",new ze(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Co(e.width,e.height,e.widthSegments,e.heightSegments)}}var yS=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,xS=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,MS=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,SS=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,wS=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,ES=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,TS=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,AS=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,bS=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,CS=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,RS=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,PS=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,IS=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,LS=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,NS=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,DS=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,US=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,OS=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,FS=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,zS=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,BS=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,kS=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,HS=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,VS=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,GS=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,WS=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,XS=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,qS=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,YS=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,jS=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,ZS="gl_FragColor = linearToOutputTexel( gl_FragColor );",JS=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,KS=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,QS=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,$S=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,e1=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,t1=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,n1=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,i1=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,r1=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,s1=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,o1=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,a1=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,l1=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,c1=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,u1=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,h1=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,f1=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,d1=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,p1=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,m1=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,g1=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,v1=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,_1=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,y1=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,x1=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,M1=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,S1=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,w1=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,E1=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,T1=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,A1=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,b1=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,C1=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,R1=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,P1=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,I1=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,L1=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[MORPHTARGETS_COUNT];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,N1=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,D1=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,U1=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
	#endif
	#ifdef MORPHTARGETS_TEXTURE
		#ifndef USE_INSTANCING_MORPH
			uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		#endif
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,O1=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,F1=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,z1=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,B1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,k1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,H1=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,V1=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,G1=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,W1=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,X1=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,q1=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Y1=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,j1=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Z1=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,J1=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,K1=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Q1=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,$1=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,ew=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,tw=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return shadow;
	}
#endif`,nw=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,iw=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,rw=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,sw=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,ow=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,aw=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,lw=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,cw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,uw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,hw=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,fw=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	float startCompression = 0.8 - 0.04;
	float desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min(color.r, min(color.g, color.b));
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max(color.r, max(color.g, color.b));
	if (peak < startCompression) return color;
	float d = 1. - startCompression;
	float newPeak = 1. - d * d / (peak + d - startCompression);
	color *= newPeak / peak;
	float g = 1. - 1. / (desaturation * (peak - newPeak) + 1.);
	return mix(color, newPeak * vec3(1, 1, 1), g);
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,dw=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,pw=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,mw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,gw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,vw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,_w=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const yw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,xw=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Mw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Sw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,ww=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Ew=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Tw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Aw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,bw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Cw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Rw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Pw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Iw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Lw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Nw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Dw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Uw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ow=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Fw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,zw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Bw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,kw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Hw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Vw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Gw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Ww=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Xw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,qw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Yw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,jw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Zw=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Jw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Kw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Qw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ct={alphahash_fragment:yS,alphahash_pars_fragment:xS,alphamap_fragment:MS,alphamap_pars_fragment:SS,alphatest_fragment:wS,alphatest_pars_fragment:ES,aomap_fragment:TS,aomap_pars_fragment:AS,batching_pars_vertex:bS,batching_vertex:CS,begin_vertex:RS,beginnormal_vertex:PS,bsdfs:IS,iridescence_fragment:LS,bumpmap_pars_fragment:NS,clipping_planes_fragment:DS,clipping_planes_pars_fragment:US,clipping_planes_pars_vertex:OS,clipping_planes_vertex:FS,color_fragment:zS,color_pars_fragment:BS,color_pars_vertex:kS,color_vertex:HS,common:VS,cube_uv_reflection_fragment:GS,defaultnormal_vertex:WS,displacementmap_pars_vertex:XS,displacementmap_vertex:qS,emissivemap_fragment:YS,emissivemap_pars_fragment:jS,colorspace_fragment:ZS,colorspace_pars_fragment:JS,envmap_fragment:KS,envmap_common_pars_fragment:QS,envmap_pars_fragment:$S,envmap_pars_vertex:e1,envmap_physical_pars_fragment:f1,envmap_vertex:t1,fog_vertex:n1,fog_pars_vertex:i1,fog_fragment:r1,fog_pars_fragment:s1,gradientmap_pars_fragment:o1,lightmap_fragment:a1,lightmap_pars_fragment:l1,lights_lambert_fragment:c1,lights_lambert_pars_fragment:u1,lights_pars_begin:h1,lights_toon_fragment:d1,lights_toon_pars_fragment:p1,lights_phong_fragment:m1,lights_phong_pars_fragment:g1,lights_physical_fragment:v1,lights_physical_pars_fragment:_1,lights_fragment_begin:y1,lights_fragment_maps:x1,lights_fragment_end:M1,logdepthbuf_fragment:S1,logdepthbuf_pars_fragment:w1,logdepthbuf_pars_vertex:E1,logdepthbuf_vertex:T1,map_fragment:A1,map_pars_fragment:b1,map_particle_fragment:C1,map_particle_pars_fragment:R1,metalnessmap_fragment:P1,metalnessmap_pars_fragment:I1,morphinstance_vertex:L1,morphcolor_vertex:N1,morphnormal_vertex:D1,morphtarget_pars_vertex:U1,morphtarget_vertex:O1,normal_fragment_begin:F1,normal_fragment_maps:z1,normal_pars_fragment:B1,normal_pars_vertex:k1,normal_vertex:H1,normalmap_pars_fragment:V1,clearcoat_normal_fragment_begin:G1,clearcoat_normal_fragment_maps:W1,clearcoat_pars_fragment:X1,iridescence_pars_fragment:q1,opaque_fragment:Y1,packing:j1,premultiplied_alpha_fragment:Z1,project_vertex:J1,dithering_fragment:K1,dithering_pars_fragment:Q1,roughnessmap_fragment:$1,roughnessmap_pars_fragment:ew,shadowmap_pars_fragment:tw,shadowmap_pars_vertex:nw,shadowmap_vertex:iw,shadowmask_pars_fragment:rw,skinbase_vertex:sw,skinning_pars_vertex:ow,skinning_vertex:aw,skinnormal_vertex:lw,specularmap_fragment:cw,specularmap_pars_fragment:uw,tonemapping_fragment:hw,tonemapping_pars_fragment:fw,transmission_fragment:dw,transmission_pars_fragment:pw,uv_pars_fragment:mw,uv_pars_vertex:gw,uv_vertex:vw,worldpos_vertex:_w,background_vert:yw,background_frag:xw,backgroundCube_vert:Mw,backgroundCube_frag:Sw,cube_vert:ww,cube_frag:Ew,depth_vert:Tw,depth_frag:Aw,distanceRGBA_vert:bw,distanceRGBA_frag:Cw,equirect_vert:Rw,equirect_frag:Pw,linedashed_vert:Iw,linedashed_frag:Lw,meshbasic_vert:Nw,meshbasic_frag:Dw,meshlambert_vert:Uw,meshlambert_frag:Ow,meshmatcap_vert:Fw,meshmatcap_frag:zw,meshnormal_vert:Bw,meshnormal_frag:kw,meshphong_vert:Hw,meshphong_frag:Vw,meshphysical_vert:Gw,meshphysical_frag:Ww,meshtoon_vert:Xw,meshtoon_frag:qw,points_vert:Yw,points_frag:jw,shadow_vert:Zw,shadow_frag:Jw,sprite_vert:Kw,sprite_frag:Qw},Te={common:{diffuse:{value:new Le(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ft},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ft}},envmap:{envMap:{value:null},envMapRotation:{value:new ft},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ft}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ft}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ft},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ft},normalScale:{value:new ue(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ft},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ft}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ft}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ft}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Le(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Le(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0},uvTransform:{value:new ft}},sprite:{diffuse:{value:new Le(16777215)},opacity:{value:1},center:{value:new ue(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ft},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0}}},Si={basic:{uniforms:In([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.fog]),vertexShader:ct.meshbasic_vert,fragmentShader:ct.meshbasic_frag},lambert:{uniforms:In([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,Te.lights,{emissive:{value:new Le(0)}}]),vertexShader:ct.meshlambert_vert,fragmentShader:ct.meshlambert_frag},phong:{uniforms:In([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,Te.lights,{emissive:{value:new Le(0)},specular:{value:new Le(1118481)},shininess:{value:30}}]),vertexShader:ct.meshphong_vert,fragmentShader:ct.meshphong_frag},standard:{uniforms:In([Te.common,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.roughnessmap,Te.metalnessmap,Te.fog,Te.lights,{emissive:{value:new Le(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ct.meshphysical_vert,fragmentShader:ct.meshphysical_frag},toon:{uniforms:In([Te.common,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.gradientmap,Te.fog,Te.lights,{emissive:{value:new Le(0)}}]),vertexShader:ct.meshtoon_vert,fragmentShader:ct.meshtoon_frag},matcap:{uniforms:In([Te.common,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,{matcap:{value:null}}]),vertexShader:ct.meshmatcap_vert,fragmentShader:ct.meshmatcap_frag},points:{uniforms:In([Te.points,Te.fog]),vertexShader:ct.points_vert,fragmentShader:ct.points_frag},dashed:{uniforms:In([Te.common,Te.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ct.linedashed_vert,fragmentShader:ct.linedashed_frag},depth:{uniforms:In([Te.common,Te.displacementmap]),vertexShader:ct.depth_vert,fragmentShader:ct.depth_frag},normal:{uniforms:In([Te.common,Te.bumpmap,Te.normalmap,Te.displacementmap,{opacity:{value:1}}]),vertexShader:ct.meshnormal_vert,fragmentShader:ct.meshnormal_frag},sprite:{uniforms:In([Te.sprite,Te.fog]),vertexShader:ct.sprite_vert,fragmentShader:ct.sprite_frag},background:{uniforms:{uvTransform:{value:new ft},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ct.background_vert,fragmentShader:ct.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new ft}},vertexShader:ct.backgroundCube_vert,fragmentShader:ct.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ct.cube_vert,fragmentShader:ct.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ct.equirect_vert,fragmentShader:ct.equirect_frag},distanceRGBA:{uniforms:In([Te.common,Te.displacementmap,{referencePosition:{value:new D},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ct.distanceRGBA_vert,fragmentShader:ct.distanceRGBA_frag},shadow:{uniforms:In([Te.lights,Te.fog,{color:{value:new Le(0)},opacity:{value:1}}]),vertexShader:ct.shadow_vert,fragmentShader:ct.shadow_frag}};Si.physical={uniforms:In([Si.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ft},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ft},clearcoatNormalScale:{value:new ue(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ft},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ft},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ft},sheen:{value:0},sheenColor:{value:new Le(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ft},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ft},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ft},transmissionSamplerSize:{value:new ue},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ft},attenuationDistance:{value:0},attenuationColor:{value:new Le(0)},specularColor:{value:new Le(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ft},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ft},anisotropyVector:{value:new ue},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ft}}]),vertexShader:ct.meshphysical_vert,fragmentShader:ct.meshphysical_frag};const gc={r:0,b:0,g:0},Qr=new ii,$w=new Ke;function eE(r,e,t,n,i,s,a){const c=new Le(0);let u=s===!0?0:1,h,f,p=null,m=0,v=null;function y(x,_){let E=!1,w=_.isScene===!0?_.background:null;w&&w.isTexture&&(w=(_.backgroundBlurriness>0?t:e).get(w)),w===null?S(c,u):w&&w.isColor&&(S(w,1),E=!0);const A=r.xr.getEnvironmentBlendMode();A==="additive"?n.buffers.color.setClear(0,0,0,1,a):A==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,a),(r.autoClear||E)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),w&&(w.isCubeTexture||w.mapping===To)?(f===void 0&&(f=new $t(new Ss(1,1,1),new Ei({name:"BackgroundCubeMaterial",uniforms:So(Si.backgroundCube.uniforms),vertexShader:Si.backgroundCube.vertexShader,fragmentShader:Si.backgroundCube.fragmentShader,side:Nn,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(U,P,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(f)),Qr.copy(_.backgroundRotation),Qr.x*=-1,Qr.y*=-1,Qr.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(Qr.y*=-1,Qr.z*=-1),f.material.uniforms.envMap.value=w,f.material.uniforms.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,f.material.uniforms.backgroundRotation.value.setFromMatrix4($w.makeRotationFromEuler(Qr)),f.material.toneMapped=bt.getTransfer(w.colorSpace)!==Ot,(p!==w||m!==w.version||v!==r.toneMapping)&&(f.material.needsUpdate=!0,p=w,m=w.version,v=r.toneMapping),f.layers.enableAll(),x.unshift(f,f.geometry,f.material,0,0,null)):w&&w.isTexture&&(h===void 0&&(h=new $t(new Co(2,2),new Ei({name:"BackgroundMaterial",uniforms:So(Si.background.uniforms),vertexShader:Si.background.vertexShader,fragmentShader:Si.background.fragmentShader,side:or,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=w,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.toneMapped=bt.getTransfer(w.colorSpace)!==Ot,w.matrixAutoUpdate===!0&&w.updateMatrix(),h.material.uniforms.uvTransform.value.copy(w.matrix),(p!==w||m!==w.version||v!==r.toneMapping)&&(h.material.needsUpdate=!0,p=w,m=w.version,v=r.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null))}function S(x,_){x.getRGB(gc,d_(r)),n.buffers.color.setClear(gc.r,gc.g,gc.b,_,a)}return{getClearColor:function(){return c},setClearColor:function(x,_=1){c.set(x),u=_,S(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(x){u=x,S(c,u)},render:y}}function tE(r,e){const t=r.getParameter(r.MAX_VERTEX_ATTRIBS),n={},i=m(null);let s=i,a=!1;function c(b,F,q,k,Z){let se=!1;const ae=p(k,q,F);s!==ae&&(s=ae,h(s.object)),se=v(b,k,q,Z),se&&y(b,k,q,Z),Z!==null&&e.update(Z,r.ELEMENT_ARRAY_BUFFER),(se||a)&&(a=!1,A(b,F,q,k),Z!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e.get(Z).buffer))}function u(){return r.createVertexArray()}function h(b){return r.bindVertexArray(b)}function f(b){return r.deleteVertexArray(b)}function p(b,F,q){const k=q.wireframe===!0;let Z=n[b.id];Z===void 0&&(Z={},n[b.id]=Z);let se=Z[F.id];se===void 0&&(se={},Z[F.id]=se);let ae=se[k];return ae===void 0&&(ae=m(u()),se[k]=ae),ae}function m(b){const F=[],q=[],k=[];for(let Z=0;Z<t;Z++)F[Z]=0,q[Z]=0,k[Z]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:F,enabledAttributes:q,attributeDivisors:k,object:b,attributes:{},index:null}}function v(b,F,q,k){const Z=s.attributes,se=F.attributes;let ae=0;const ve=q.getAttributes();for(const H in ve)if(ve[H].location>=0){const J=Z[H];let he=se[H];if(he===void 0&&(H==="instanceMatrix"&&b.instanceMatrix&&(he=b.instanceMatrix),H==="instanceColor"&&b.instanceColor&&(he=b.instanceColor)),J===void 0||J.attribute!==he||he&&J.data!==he.data)return!0;ae++}return s.attributesNum!==ae||s.index!==k}function y(b,F,q,k){const Z={},se=F.attributes;let ae=0;const ve=q.getAttributes();for(const H in ve)if(ve[H].location>=0){let J=se[H];J===void 0&&(H==="instanceMatrix"&&b.instanceMatrix&&(J=b.instanceMatrix),H==="instanceColor"&&b.instanceColor&&(J=b.instanceColor));const he={};he.attribute=J,J&&J.data&&(he.data=J.data),Z[H]=he,ae++}s.attributes=Z,s.attributesNum=ae,s.index=k}function S(){const b=s.newAttributes;for(let F=0,q=b.length;F<q;F++)b[F]=0}function x(b){_(b,0)}function _(b,F){const q=s.newAttributes,k=s.enabledAttributes,Z=s.attributeDivisors;q[b]=1,k[b]===0&&(r.enableVertexAttribArray(b),k[b]=1),Z[b]!==F&&(r.vertexAttribDivisor(b,F),Z[b]=F)}function E(){const b=s.newAttributes,F=s.enabledAttributes;for(let q=0,k=F.length;q<k;q++)F[q]!==b[q]&&(r.disableVertexAttribArray(q),F[q]=0)}function w(b,F,q,k,Z,se,ae){ae===!0?r.vertexAttribIPointer(b,F,q,Z,se):r.vertexAttribPointer(b,F,q,k,Z,se)}function A(b,F,q,k){S();const Z=k.attributes,se=q.getAttributes(),ae=F.defaultAttributeValues;for(const ve in se){const H=se[ve];if(H.location>=0){let $=Z[ve];if($===void 0&&(ve==="instanceMatrix"&&b.instanceMatrix&&($=b.instanceMatrix),ve==="instanceColor"&&b.instanceColor&&($=b.instanceColor)),$!==void 0){const J=$.normalized,he=$.itemSize,Ie=e.get($);if(Ie===void 0)continue;const Be=Ie.buffer,ne=Ie.type,pe=Ie.bytesPerElement,Ce=ne===r.INT||ne===r.UNSIGNED_INT||$.gpuType===Dd;if($.isInterleavedBufferAttribute){const ye=$.data,et=ye.stride,st=$.offset;if(ye.isInstancedInterleavedBuffer){for(let Qe=0;Qe<H.locationSize;Qe++)_(H.location+Qe,ye.meshPerAttribute);b.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=ye.meshPerAttribute*ye.count)}else for(let Qe=0;Qe<H.locationSize;Qe++)x(H.location+Qe);r.bindBuffer(r.ARRAY_BUFFER,Be);for(let Qe=0;Qe<H.locationSize;Qe++)w(H.location+Qe,he/H.locationSize,ne,J,et*pe,(st+he/H.locationSize*Qe)*pe,Ce)}else{if($.isInstancedBufferAttribute){for(let ye=0;ye<H.locationSize;ye++)_(H.location+ye,$.meshPerAttribute);b.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=$.meshPerAttribute*$.count)}else for(let ye=0;ye<H.locationSize;ye++)x(H.location+ye);r.bindBuffer(r.ARRAY_BUFFER,Be);for(let ye=0;ye<H.locationSize;ye++)w(H.location+ye,he/H.locationSize,ne,J,he*pe,he/H.locationSize*ye*pe,Ce)}}else if(ae!==void 0){const J=ae[ve];if(J!==void 0)switch(J.length){case 2:r.vertexAttrib2fv(H.location,J);break;case 3:r.vertexAttrib3fv(H.location,J);break;case 4:r.vertexAttrib4fv(H.location,J);break;default:r.vertexAttrib1fv(H.location,J)}}}}E()}function U(){z();for(const b in n){const F=n[b];for(const q in F){const k=F[q];for(const Z in k)f(k[Z].object),delete k[Z];delete F[q]}delete n[b]}}function P(b){if(n[b.id]===void 0)return;const F=n[b.id];for(const q in F){const k=F[q];for(const Z in k)f(k[Z].object),delete k[Z];delete F[q]}delete n[b.id]}function I(b){for(const F in n){const q=n[F];if(q[b.id]===void 0)continue;const k=q[b.id];for(const Z in k)f(k[Z].object),delete k[Z];delete q[b.id]}}function z(){R(),a=!0,s!==i&&(s=i,h(s.object))}function R(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:z,resetDefaultState:R,dispose:U,releaseStatesOfGeometry:P,releaseStatesOfProgram:I,initAttributes:S,enableAttribute:x,disableUnusedAttributes:E}}function nE(r,e,t){let n;function i(u){n=u}function s(u,h){r.drawArrays(n,u,h),t.update(h,n,1)}function a(u,h,f){f!==0&&(r.drawArraysInstanced(n,u,h,f),t.update(h,n,f))}function c(u,h,f){if(f===0)return;const p=e.get("WEBGL_multi_draw");if(p===null)for(let m=0;m<f;m++)this.render(u[m],h[m]);else{p.multiDrawArraysWEBGL(n,u,0,h,0,f);let m=0;for(let v=0;v<f;v++)m+=h[v];t.update(m,n,1)}}this.setMode=i,this.render=s,this.renderInstances=a,this.renderMultiDraw=c}function iE(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const w=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(w.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(w){if(w==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";w="mediump"}return w==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let a=t.precision!==void 0?t.precision:"highp";const c=s(a);c!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",c,"instead."),a=c);const u=t.logarithmicDepthBuffer===!0,h=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),f=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),p=r.getParameter(r.MAX_TEXTURE_SIZE),m=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),v=r.getParameter(r.MAX_VERTEX_ATTRIBS),y=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),S=r.getParameter(r.MAX_VARYING_VECTORS),x=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),_=f>0,E=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:i,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:f,maxTextureSize:p,maxCubemapSize:m,maxAttributes:v,maxVertexUniforms:y,maxVaryings:S,maxFragmentUniforms:x,vertexTextures:_,maxSamples:E}}function rE(r){const e=this;let t=null,n=0,i=!1,s=!1;const a=new Rr,c=new ft,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const v=p.length!==0||m||n!==0||i;return i=m,n=p.length,v},this.beginShadows=function(){s=!0,f(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=f(p,m,0)},this.setState=function(p,m,v){const y=p.clippingPlanes,S=p.clipIntersection,x=p.clipShadows,_=r.get(p);if(!i||y===null||y.length===0||s&&!x)s?f(null):h();else{const E=s?0:n,w=E*4;let A=_.clippingState||null;u.value=A,A=f(y,m,w,v);for(let U=0;U!==w;++U)A[U]=t[U];_.clippingState=A,this.numIntersection=S?this.numPlanes:0,this.numPlanes+=E}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function f(p,m,v,y){const S=p!==null?p.length:0;let x=null;if(S!==0){if(x=u.value,y!==!0||x===null){const _=v+S*4,E=m.matrixWorldInverse;c.getNormalMatrix(E),(x===null||x.length<_)&&(x=new Float32Array(_));for(let w=0,A=v;w!==S;++w,A+=4)a.copy(p[w]).applyMatrix4(E,c),a.normal.toArray(x,A),x[A+3]=a.constant}u.value=x,u.needsUpdate=!0}return e.numPlanes=S,e.numIntersection=0,x}}function sE(r){let e=new WeakMap;function t(a,c){return c===ya?a.mapping=ar:c===xa&&(a.mapping=Nr),a}function n(a){if(a&&a.isTexture){const c=a.mapping;if(c===ya||c===xa)if(e.has(a)){const u=e.get(a).texture;return t(u,a.mapping)}else{const u=a.image;if(u&&u.height>0){const h=new g_(u.height);return h.fromEquirectangularTexture(r,a),e.set(a,h),a.addEventListener("dispose",i),t(h.texture,a.mapping)}else return null}}return a}function i(a){const c=a.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class qa extends Ga{constructor(e=-1,t=1,n=1,i=-1,s=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,a=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,a=s+h*this.view.width,c-=f*this.view.offsetY,u=c-f*this.view.height}this.projectionMatrix.makeOrthographic(s,a,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const mo=4,xg=[.125,.215,.35,.446,.526,.582],ls=20,of=new qa,Mg=new Le;let af=null,lf=0,cf=0,uf=!1;const as=(1+Math.sqrt(5))/2,eo=1/as,Sg=[new D(1,1,1),new D(-1,1,1),new D(1,1,-1),new D(-1,1,-1),new D(0,as,eo),new D(0,as,-eo),new D(eo,0,as),new D(-eo,0,as),new D(as,eo,0),new D(-as,eo,0)];class _d{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){af=this._renderer.getRenderTarget(),lf=this._renderer.getActiveCubeFace(),cf=this._renderer.getActiveMipmapLevel(),uf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Tg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Eg(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(af,lf,cf),this._renderer.xr.enabled=uf,e.scissorTest=!1,vc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===ar||e.mapping===Nr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),af=this._renderer.getRenderTarget(),lf=this._renderer.getActiveCubeFace(),cf=this._renderer.getActiveMipmapLevel(),uf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Qt,minFilter:Qt,generateMipmaps:!1,type:wa,format:Hn,colorSpace:cr,depthBuffer:!1},i=wg(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=wg(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=oE(s)),this._blurMaterial=aE(s,e,t)}return i}_compileMaterial(e){const t=new $t(this._lodPlanes[0],e);this._renderer.compile(t,of)}_sceneToCubeUV(e,t,n,i){const c=new hn(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],f=this._renderer,p=f.autoClear,m=f.toneMapping;f.getClearColor(Mg),f.toneMapping=Bi,f.autoClear=!1;const v=new Or({name:"PMREM.Background",side:Nn,depthWrite:!1,depthTest:!1}),y=new $t(new Ss,v);let S=!1;const x=e.background;x?x.isColor&&(v.color.copy(x),e.background=null,S=!0):(v.color.copy(Mg),S=!0);for(let _=0;_<6;_++){const E=_%3;E===0?(c.up.set(0,u[_],0),c.lookAt(h[_],0,0)):E===1?(c.up.set(0,0,u[_]),c.lookAt(0,h[_],0)):(c.up.set(0,u[_],0),c.lookAt(0,0,h[_]));const w=this._cubeSize;vc(i,E*w,_>2?w:0,w,w),f.setRenderTarget(i),S&&f.render(y,c),f.render(e,c)}y.geometry.dispose(),y.material.dispose(),f.toneMapping=m,f.autoClear=p,e.background=x}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===ar||e.mapping===Nr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Tg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Eg());const s=i?this._cubemapMaterial:this._equirectMaterial,a=new $t(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;vc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(a,of)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),a=Sg[(i-1)%Sg.length];this._blur(e,i-1,i,s,a)}t.autoClear=n}_blur(e,t,n,i,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",s),this._halfBlur(a,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,a,c){const u=this._renderer,h=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,p=new $t(this._lodPlanes[i],h),m=h.uniforms,v=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*v):2*Math.PI/(2*ls-1),S=s/y,x=isFinite(s)?1+Math.floor(f*S):ls;x>ls&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${ls}`);const _=[];let E=0;for(let I=0;I<ls;++I){const z=I/S,R=Math.exp(-z*z/2);_.push(R),I===0?E+=R:I<x&&(E+=2*R)}for(let I=0;I<_.length;I++)_[I]=_[I]/E;m.envMap.value=e.texture,m.samples.value=x,m.weights.value=_,m.latitudinal.value=a==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:w}=this;m.dTheta.value=y,m.mipInt.value=w-n;const A=this._sizeLods[i],U=3*A*(i>w-mo?i-w+mo:0),P=4*(this._cubeSize-A);vc(t,U,P,3*A,2*A),u.setRenderTarget(t),u.render(p,of)}}function oE(r){const e=[],t=[],n=[];let i=r;const s=r-mo+1+xg.length;for(let a=0;a<s;a++){const c=Math.pow(2,i);t.push(c);let u=1/c;a>r-mo?u=xg[a-r+mo-1]:a===0&&(u=0),n.push(u);const h=1/(c-2),f=-h,p=1+h,m=[f,f,p,f,p,p,f,f,p,p,f,p],v=6,y=6,S=3,x=2,_=1,E=new Float32Array(S*y*v),w=new Float32Array(x*y*v),A=new Float32Array(_*y*v);for(let P=0;P<v;P++){const I=P%3*2/3-1,z=P>2?0:-1,R=[I,z,0,I+2/3,z,0,I+2/3,z+1,0,I,z,0,I+2/3,z+1,0,I,z+1,0];E.set(R,S*y*P),w.set(m,x*y*P);const b=[P,P,P,P,P,P];A.set(b,_*y*P)}const U=new ut;U.setAttribute("position",new Rt(E,S)),U.setAttribute("uv",new Rt(w,x)),U.setAttribute("faceIndex",new Rt(A,_)),e.push(U),i>mo&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function wg(r,e,t){const n=new wi(r,e,t);return n.texture.mapping=To,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function vc(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function aE(r,e,t){const n=new Float32Array(ls),i=new D(0,1,0);return new Ei({name:"SphericalGaussianBlur",defines:{n:ls,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:jd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:sr,depthTest:!1,depthWrite:!1})}function Eg(){return new Ei({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:jd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:sr,depthTest:!1,depthWrite:!1})}function Tg(){return new Ei({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:jd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:sr,depthTest:!1,depthWrite:!1})}function jd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function lE(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===ya||u===xa,f=u===ar||u===Nr;if(h||f){let p=e.get(c);const m=p!==void 0?p.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==m)return t===null&&(t=new _d(r)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),p.texture;if(p!==void 0)return p.texture;{const v=c.image;return h&&v&&v.height>0||f&&v&&i(v)?(t===null&&(t=new _d(r)),p=h?t.fromEquirectangular(c):t.fromCubemap(c),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),c.addEventListener("dispose",s),p.texture):null}}}return c}function i(c){let u=0;const h=6;for(let f=0;f<h;f++)c[f]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function cE(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function uE(r,e,t,n){const i={},s=new WeakMap;function a(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);for(const y in m.morphAttributes){const S=m.morphAttributes[y];for(let x=0,_=S.length;x<_;x++)e.remove(S[x])}m.removeEventListener("dispose",a),delete i[m.id];const v=s.get(m);v&&(e.remove(v),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",a),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const y in m)e.update(m[y],r.ARRAY_BUFFER);const v=p.morphAttributes;for(const y in v){const S=v[y];for(let x=0,_=S.length;x<_;x++)e.update(S[x],r.ARRAY_BUFFER)}}function h(p){const m=[],v=p.index,y=p.attributes.position;let S=0;if(v!==null){const E=v.array;S=v.version;for(let w=0,A=E.length;w<A;w+=3){const U=E[w+0],P=E[w+1],I=E[w+2];m.push(U,P,P,I,I,U)}}else if(y!==void 0){const E=y.array;S=y.version;for(let w=0,A=E.length/3-1;w<A;w+=3){const U=w+0,P=w+1,I=w+2;m.push(U,P,P,I,I,U)}}else return;const x=new(a_(m)?Yd:qd)(m,1);x.version=S;const _=s.get(p);_&&e.remove(_),s.set(p,x)}function f(p){const m=s.get(p);if(m){const v=p.index;v!==null&&m.version<v.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:f}}function hE(r,e,t){let n;function i(p){n=p}let s,a;function c(p){s=p.type,a=p.bytesPerElement}function u(p,m){r.drawElements(n,m,s,p*a),t.update(m,n,1)}function h(p,m,v){v!==0&&(r.drawElementsInstanced(n,m,s,p*a,v),t.update(m,n,v))}function f(p,m,v){if(v===0)return;const y=e.get("WEBGL_multi_draw");if(y===null)for(let S=0;S<v;S++)this.render(p[S]/a,m[S]);else{y.multiDrawElementsWEBGL(n,m,0,s,p,0,v);let S=0;for(let x=0;x<v;x++)S+=m[x];t.update(S,n,1)}}this.setMode=i,this.setIndex=c,this.render=u,this.renderInstances=h,this.renderMultiDraw=f}function fE(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,a,c){switch(t.calls++,a){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function dE(r,e,t){const n=new WeakMap,i=new Ct;function s(a,c,u){const h=a.morphTargetInfluences,f=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,p=f!==void 0?f.length:0;let m=n.get(c);if(m===void 0||m.count!==p){let R=function(){I.dispose(),n.delete(c),c.removeEventListener("dispose",R)};m!==void 0&&m.texture.dispose();const v=c.morphAttributes.position!==void 0,y=c.morphAttributes.normal!==void 0,S=c.morphAttributes.color!==void 0,x=c.morphAttributes.position||[],_=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let w=0;v===!0&&(w=1),y===!0&&(w=2),S===!0&&(w=3);let A=c.attributes.position.count*w,U=1;A>e.maxTextureSize&&(U=Math.ceil(A/e.maxTextureSize),A=e.maxTextureSize);const P=new Float32Array(A*U*4*p),I=new hu(P,A,U,p);I.type=mi,I.needsUpdate=!0;const z=w*4;for(let b=0;b<p;b++){const F=x[b],q=_[b],k=E[b],Z=A*U*4*b;for(let se=0;se<F.count;se++){const ae=se*z;v===!0&&(i.fromBufferAttribute(F,se),P[Z+ae+0]=i.x,P[Z+ae+1]=i.y,P[Z+ae+2]=i.z,P[Z+ae+3]=0),y===!0&&(i.fromBufferAttribute(q,se),P[Z+ae+4]=i.x,P[Z+ae+5]=i.y,P[Z+ae+6]=i.z,P[Z+ae+7]=0),S===!0&&(i.fromBufferAttribute(k,se),P[Z+ae+8]=i.x,P[Z+ae+9]=i.y,P[Z+ae+10]=i.z,P[Z+ae+11]=k.itemSize===4?i.w:1)}}m={count:p,texture:I,size:new ue(A,U)},n.set(c,m),c.addEventListener("dispose",R)}if(a.isInstancedMesh===!0&&a.morphTexture!==null)u.getUniforms().setValue(r,"morphTexture",a.morphTexture,t);else{let v=0;for(let S=0;S<h.length;S++)v+=h[S];const y=c.morphTargetsRelative?1:1-v;u.getUniforms().setValue(r,"morphTargetBaseInfluence",y),u.getUniforms().setValue(r,"morphTargetInfluences",h)}u.getUniforms().setValue(r,"morphTargetsTexture",m.texture,t),u.getUniforms().setValue(r,"morphTargetsTextureSize",m.size)}return{update:s}}function pE(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,f=u.geometry,p=e.get(u,f);if(i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),i.get(u)!==h&&(t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER),i.set(u,h))),u.isSkinnedMesh){const m=u.skeleton;i.get(m)!==h&&(m.update(),i.set(m,h))}return p}function a(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:a}}class Zd extends rn{constructor(e,t,n,i,s,a,c,u,h,f){if(f=f!==void 0?f:ms,f!==ms&&f!==xo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&f===ms&&(n=ys),n===void 0&&f===xo&&(n=Ao),super(null,i,s,a,c,u,f,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:fn,this.minFilter=u!==void 0?u:fn,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const __=new rn,y_=new Zd(1,1);y_.compareFunction=Gd;const x_=new hu,M_=new Xd,S_=new Wa,Ag=[],bg=[],Cg=new Float32Array(16),Rg=new Float32Array(9),Pg=new Float32Array(4);function Ro(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=Ag[i];if(s===void 0&&(s=new Float32Array(i),Ag[i]=s),e!==0){n.toArray(s,0);for(let a=1,c=0;a!==e;++a)c+=t,r[a].toArray(s,c)}return s}function tn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function nn(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function fu(r,e){let t=bg[e];t===void 0&&(t=new Int32Array(e),bg[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function mE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function gE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(tn(t,e))return;r.uniform2fv(this.addr,e),nn(t,e)}}function vE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(tn(t,e))return;r.uniform3fv(this.addr,e),nn(t,e)}}function _E(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(tn(t,e))return;r.uniform4fv(this.addr,e),nn(t,e)}}function yE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(tn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),nn(t,e)}else{if(tn(t,n))return;Pg.set(n),r.uniformMatrix2fv(this.addr,!1,Pg),nn(t,n)}}function xE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(tn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),nn(t,e)}else{if(tn(t,n))return;Rg.set(n),r.uniformMatrix3fv(this.addr,!1,Rg),nn(t,n)}}function ME(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(tn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),nn(t,e)}else{if(tn(t,n))return;Cg.set(n),r.uniformMatrix4fv(this.addr,!1,Cg),nn(t,n)}}function SE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function wE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(tn(t,e))return;r.uniform2iv(this.addr,e),nn(t,e)}}function EE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(tn(t,e))return;r.uniform3iv(this.addr,e),nn(t,e)}}function TE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(tn(t,e))return;r.uniform4iv(this.addr,e),nn(t,e)}}function AE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function bE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(tn(t,e))return;r.uniform2uiv(this.addr,e),nn(t,e)}}function CE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(tn(t,e))return;r.uniform3uiv(this.addr,e),nn(t,e)}}function RE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(tn(t,e))return;r.uniform4uiv(this.addr,e),nn(t,e)}}function PE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i);const s=this.type===r.SAMPLER_2D_SHADOW?y_:__;t.setTexture2D(e||s,i)}function IE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||M_,i)}function LE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||S_,i)}function NE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||x_,i)}function DE(r){switch(r){case 5126:return mE;case 35664:return gE;case 35665:return vE;case 35666:return _E;case 35674:return yE;case 35675:return xE;case 35676:return ME;case 5124:case 35670:return SE;case 35667:case 35671:return wE;case 35668:case 35672:return EE;case 35669:case 35673:return TE;case 5125:return AE;case 36294:return bE;case 36295:return CE;case 36296:return RE;case 35678:case 36198:case 36298:case 36306:case 35682:return PE;case 35679:case 36299:case 36307:return IE;case 35680:case 36300:case 36308:case 36293:return LE;case 36289:case 36303:case 36311:case 36292:return NE}}function UE(r,e){r.uniform1fv(this.addr,e)}function OE(r,e){const t=Ro(e,this.size,2);r.uniform2fv(this.addr,t)}function FE(r,e){const t=Ro(e,this.size,3);r.uniform3fv(this.addr,t)}function zE(r,e){const t=Ro(e,this.size,4);r.uniform4fv(this.addr,t)}function BE(r,e){const t=Ro(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function kE(r,e){const t=Ro(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function HE(r,e){const t=Ro(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function VE(r,e){r.uniform1iv(this.addr,e)}function GE(r,e){r.uniform2iv(this.addr,e)}function WE(r,e){r.uniform3iv(this.addr,e)}function XE(r,e){r.uniform4iv(this.addr,e)}function qE(r,e){r.uniform1uiv(this.addr,e)}function YE(r,e){r.uniform2uiv(this.addr,e)}function jE(r,e){r.uniform3uiv(this.addr,e)}function ZE(r,e){r.uniform4uiv(this.addr,e)}function JE(r,e,t){const n=this.cache,i=e.length,s=fu(t,i);tn(n,s)||(r.uniform1iv(this.addr,s),nn(n,s));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||__,s[a])}function KE(r,e,t){const n=this.cache,i=e.length,s=fu(t,i);tn(n,s)||(r.uniform1iv(this.addr,s),nn(n,s));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||M_,s[a])}function QE(r,e,t){const n=this.cache,i=e.length,s=fu(t,i);tn(n,s)||(r.uniform1iv(this.addr,s),nn(n,s));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||S_,s[a])}function $E(r,e,t){const n=this.cache,i=e.length,s=fu(t,i);tn(n,s)||(r.uniform1iv(this.addr,s),nn(n,s));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||x_,s[a])}function eT(r){switch(r){case 5126:return UE;case 35664:return OE;case 35665:return FE;case 35666:return zE;case 35674:return BE;case 35675:return kE;case 35676:return HE;case 5124:case 35670:return VE;case 35667:case 35671:return GE;case 35668:case 35672:return WE;case 35669:case 35673:return XE;case 5125:return qE;case 36294:return YE;case 36295:return jE;case 36296:return ZE;case 35678:case 36198:case 36298:case 36306:case 35682:return JE;case 35679:case 36299:case 36307:return KE;case 35680:case 36300:case 36308:case 36293:return QE;case 36289:case 36303:case 36311:case 36292:return $E}}class tT{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=DE(t.type)}}class nT{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=eT(t.type)}}class iT{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,a=i.length;s!==a;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const hf=/(\w+)(\])?(\[|\.)?/g;function Ig(r,e){r.seq.push(e),r.map[e.id]=e}function rT(r,e,t){const n=r.name,i=n.length;for(hf.lastIndex=0;;){const s=hf.exec(n),a=hf.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&a+2===i){Ig(t,h===void 0?new tT(c,r,e):new nT(c,r,e));break}else{let p=t.map[c];p===void 0&&(p=new iT(c),Ig(t,p)),t=p}}}class Qc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),a=e.getUniformLocation(t,s.name);rT(s,a,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,a=t.length;s!==a;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const a=e[i];a.id in t&&n.push(a)}return n}}function Lg(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}const sT=37297;let oT=0;function aT(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let a=i;a<s;a++){const c=a+1;n.push(`${c===e?">":" "} ${c}: ${t[a]}`)}return n.join(`
`)}function lT(r){const e=bt.getPrimaries(bt.workingColorSpace),t=bt.getPrimaries(r);let n;switch(e===t?n="":e===Ra&&t===Ca?n="LinearDisplayP3ToLinearSRGB":e===Ca&&t===Ra&&(n="LinearSRGBToLinearDisplayP3"),r){case cr:case Va:return[n,"LinearTransferOETF"];case di:case uu:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),[n,"LinearTransferOETF"]}}function Ng(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const a=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+aT(r.getShaderSource(e),a)}else return i}function cT(r,e){const t=lT(e);return`vec4 ${r}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function uT(r,e){let t;switch(e){case Pv:t="Linear";break;case Iv:t="Reinhard";break;case Lv:t="OptimizedCineon";break;case Id:t="ACESFilmic";break;case Dv:t="AgX";break;case Uv:t="Neutral";break;case Nv:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function hT(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(ha).join(`
`)}function fT(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function dT(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),a=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[a]={type:s.type,location:r.getAttribLocation(e,a),locationSize:c}}return t}function ha(r){return r!==""}function Dg(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Ug(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const pT=/^[ \t]*#include +<([\w\d./]+)>/gm;function yd(r){return r.replace(pT,gT)}const mT=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function gT(r,e){let t=ct[e];if(t===void 0){const n=mT.get(e);if(n!==void 0)t=ct[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return yd(t)}const vT=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Og(r){return r.replace(vT,_T)}function _T(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Fg(r){let e=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function yT(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===au?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===fa?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Mi&&(e="SHADOWMAP_TYPE_VSM"),e}function xT(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case ar:case Nr:e="ENVMAP_TYPE_CUBE";break;case To:e="ENVMAP_TYPE_CUBE_UV";break}return e}function MT(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Nr:e="ENVMAP_MODE_REFRACTION";break}return e}function ST(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Ha:e="ENVMAP_BLENDING_MULTIPLY";break;case Cv:e="ENVMAP_BLENDING_MIX";break;case Rv:e="ENVMAP_BLENDING_ADD";break}return e}function wT(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function ET(r,e,t,n){const i=r.getContext(),s=t.defines;let a=t.vertexShader,c=t.fragmentShader;const u=yT(t),h=xT(t),f=MT(t),p=ST(t),m=wT(t),v=hT(t),y=fT(s),S=i.createProgram();let x,_,E=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(x=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(ha).join(`
`),x.length>0&&(x+=`
`),_=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(ha).join(`
`),_.length>0&&(_+=`
`)):(x=[Fg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ha).join(`
`),_=[Fg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Bi?"#define TONE_MAPPING":"",t.toneMapping!==Bi?ct.tonemapping_pars_fragment:"",t.toneMapping!==Bi?uT("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ct.colorspace_pars_fragment,cT("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(ha).join(`
`)),a=yd(a),a=Dg(a,t),a=Ug(a,t),c=yd(c),c=Dg(c,t),c=Ug(c,t),a=Og(a),c=Og(c),t.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,x=[v,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,_=["#define varying in",t.glslVersion===vd?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===vd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const w=E+x+a,A=E+_+c,U=Lg(i,i.VERTEX_SHADER,w),P=Lg(i,i.FRAGMENT_SHADER,A);i.attachShader(S,U),i.attachShader(S,P),t.index0AttributeName!==void 0?i.bindAttribLocation(S,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(S,0,"position"),i.linkProgram(S);function I(F){if(r.debug.checkShaderErrors){const q=i.getProgramInfoLog(S).trim(),k=i.getShaderInfoLog(U).trim(),Z=i.getShaderInfoLog(P).trim();let se=!0,ae=!0;if(i.getProgramParameter(S,i.LINK_STATUS)===!1)if(se=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,S,U,P);else{const ve=Ng(i,U,"vertex"),H=Ng(i,P,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(S,i.VALIDATE_STATUS)+`

Material Name: `+F.name+`
Material Type: `+F.type+`

Program Info Log: `+q+`
`+ve+`
`+H)}else q!==""?console.warn("THREE.WebGLProgram: Program Info Log:",q):(k===""||Z==="")&&(ae=!1);ae&&(F.diagnostics={runnable:se,programLog:q,vertexShader:{log:k,prefix:x},fragmentShader:{log:Z,prefix:_}})}i.deleteShader(U),i.deleteShader(P),z=new Qc(i,S),R=dT(i,S)}let z;this.getUniforms=function(){return z===void 0&&I(this),z};let R;this.getAttributes=function(){return R===void 0&&I(this),R};let b=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return b===!1&&(b=i.getProgramParameter(S,sT)),b},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(S),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=oT++,this.cacheKey=e,this.usedTimes=1,this.program=S,this.vertexShader=U,this.fragmentShader=P,this}let TT=0;class AT{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new bT(e),t.set(e,n)),n}}class bT{constructor(e){this.id=TT++,this.code=e,this.usedTimes=0}}function CT(r,e,t,n,i,s,a){const c=new vs,u=new AT,h=new Set,f=[],p=i.logarithmicDepthBuffer,m=i.vertexTextures;let v=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function S(R){return h.add(R),R===0?"uv":`uv${R}`}function x(R,b,F,q,k){const Z=q.fog,se=k.geometry,ae=R.isMeshStandardMaterial?q.environment:null,ve=(R.isMeshStandardMaterial?t:e).get(R.envMap||ae),H=ve&&ve.mapping===To?ve.image.height:null,$=y[R.type];R.precision!==null&&(v=i.getMaxPrecision(R.precision),v!==R.precision&&console.warn("THREE.WebGLProgram.getParameters:",R.precision,"not supported, using",v,"instead."));const J=se.morphAttributes.position||se.morphAttributes.normal||se.morphAttributes.color,he=J!==void 0?J.length:0;let Ie=0;se.morphAttributes.position!==void 0&&(Ie=1),se.morphAttributes.normal!==void 0&&(Ie=2),se.morphAttributes.color!==void 0&&(Ie=3);let Be,ne,pe,Ce;if($){const sn=Si[$];Be=sn.vertexShader,ne=sn.fragmentShader}else Be=R.vertexShader,ne=R.fragmentShader,u.update(R),pe=u.getVertexShaderID(R),Ce=u.getFragmentShaderID(R);const ye=r.getRenderTarget(),et=k.isInstancedMesh===!0,st=k.isBatchedMesh===!0,Qe=!!R.map,W=!!R.matcap,ce=!!ve,oe=!!R.aoMap,xe=!!R.lightMap,me=!!R.bumpMap,_e=!!R.normalMap,N=!!R.displacementMap,C=!!R.emissiveMap,Y=!!R.metalnessMap,re=!!R.roughnessMap,le=R.anisotropy>0,fe=R.clearcoat>0,qe=R.iridescence>0,de=R.sheen>0,He=R.transmission>0,Ze=le&&!!R.anisotropyMap,Me=fe&&!!R.clearcoatMap,Ne=fe&&!!R.clearcoatNormalMap,nt=fe&&!!R.clearcoatRoughnessMap,Oe=qe&&!!R.iridescenceMap,Fe=qe&&!!R.iridescenceThicknessMap,pt=de&&!!R.sheenColorMap,mt=de&&!!R.sheenRoughnessMap,Et=!!R.specularMap,_t=!!R.specularColorMap,Dt=!!R.specularIntensityMap,Ve=He&&!!R.transmissionMap,B=He&&!!R.thicknessMap,Ee=!!R.gradientMap,Se=!!R.alphaMap,Xe=R.alphaTest>0,Ye=!!R.alphaHash,Pt=!!R.extensions;let Lt=Bi;R.toneMapped&&(ye===null||ye.isXRRenderTarget===!0)&&(Lt=r.toneMapping);const Ut={shaderID:$,shaderType:R.type,shaderName:R.name,vertexShader:Be,fragmentShader:ne,defines:R.defines,customVertexShaderID:pe,customFragmentShaderID:Ce,isRawShaderMaterial:R.isRawShaderMaterial===!0,glslVersion:R.glslVersion,precision:v,batching:st,instancing:et,instancingColor:et&&k.instanceColor!==null,instancingMorph:et&&k.morphTexture!==null,supportsVertexTextures:m,outputColorSpace:ye===null?r.outputColorSpace:ye.isXRRenderTarget===!0?ye.texture.colorSpace:cr,alphaToCoverage:!!R.alphaToCoverage,map:Qe,matcap:W,envMap:ce,envMapMode:ce&&ve.mapping,envMapCubeUVHeight:H,aoMap:oe,lightMap:xe,bumpMap:me,normalMap:_e,displacementMap:m&&N,emissiveMap:C,normalMapObjectSpace:_e&&R.normalMapType===Kv,normalMapTangentSpace:_e&&R.normalMapType===Ur,metalnessMap:Y,roughnessMap:re,anisotropy:le,anisotropyMap:Ze,clearcoat:fe,clearcoatMap:Me,clearcoatNormalMap:Ne,clearcoatRoughnessMap:nt,iridescence:qe,iridescenceMap:Oe,iridescenceThicknessMap:Fe,sheen:de,sheenColorMap:pt,sheenRoughnessMap:mt,specularMap:Et,specularColorMap:_t,specularIntensityMap:Dt,transmission:He,transmissionMap:Ve,thicknessMap:B,gradientMap:Ee,opaque:R.transparent===!1&&R.blending===ps&&R.alphaToCoverage===!1,alphaMap:Se,alphaTest:Xe,alphaHash:Ye,combine:R.combine,mapUv:Qe&&S(R.map.channel),aoMapUv:oe&&S(R.aoMap.channel),lightMapUv:xe&&S(R.lightMap.channel),bumpMapUv:me&&S(R.bumpMap.channel),normalMapUv:_e&&S(R.normalMap.channel),displacementMapUv:N&&S(R.displacementMap.channel),emissiveMapUv:C&&S(R.emissiveMap.channel),metalnessMapUv:Y&&S(R.metalnessMap.channel),roughnessMapUv:re&&S(R.roughnessMap.channel),anisotropyMapUv:Ze&&S(R.anisotropyMap.channel),clearcoatMapUv:Me&&S(R.clearcoatMap.channel),clearcoatNormalMapUv:Ne&&S(R.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:nt&&S(R.clearcoatRoughnessMap.channel),iridescenceMapUv:Oe&&S(R.iridescenceMap.channel),iridescenceThicknessMapUv:Fe&&S(R.iridescenceThicknessMap.channel),sheenColorMapUv:pt&&S(R.sheenColorMap.channel),sheenRoughnessMapUv:mt&&S(R.sheenRoughnessMap.channel),specularMapUv:Et&&S(R.specularMap.channel),specularColorMapUv:_t&&S(R.specularColorMap.channel),specularIntensityMapUv:Dt&&S(R.specularIntensityMap.channel),transmissionMapUv:Ve&&S(R.transmissionMap.channel),thicknessMapUv:B&&S(R.thicknessMap.channel),alphaMapUv:Se&&S(R.alphaMap.channel),vertexTangents:!!se.attributes.tangent&&(_e||le),vertexColors:R.vertexColors,vertexAlphas:R.vertexColors===!0&&!!se.attributes.color&&se.attributes.color.itemSize===4,pointsUvs:k.isPoints===!0&&!!se.attributes.uv&&(Qe||Se),fog:!!Z,useFog:R.fog===!0,fogExp2:!!Z&&Z.isFogExp2,flatShading:R.flatShading===!0,sizeAttenuation:R.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:k.isSkinnedMesh===!0,morphTargets:se.morphAttributes.position!==void 0,morphNormals:se.morphAttributes.normal!==void 0,morphColors:se.morphAttributes.color!==void 0,morphTargetsCount:he,morphTextureStride:Ie,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numLightProbes:b.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:R.dithering,shadowMapEnabled:r.shadowMap.enabled&&F.length>0,shadowMapType:r.shadowMap.type,toneMapping:Lt,useLegacyLights:r._useLegacyLights,decodeVideoTexture:Qe&&R.map.isVideoTexture===!0&&bt.getTransfer(R.map.colorSpace)===Ot,premultipliedAlpha:R.premultipliedAlpha,doubleSided:R.side===Oi,flipSided:R.side===Nn,useDepthPacking:R.depthPacking>=0,depthPacking:R.depthPacking||0,index0AttributeName:R.index0AttributeName,extensionClipCullDistance:Pt&&R.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:Pt&&R.extensions.multiDraw===!0&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:R.customProgramCacheKey()};return Ut.vertexUv1s=h.has(1),Ut.vertexUv2s=h.has(2),Ut.vertexUv3s=h.has(3),h.clear(),Ut}function _(R){const b=[];if(R.shaderID?b.push(R.shaderID):(b.push(R.customVertexShaderID),b.push(R.customFragmentShaderID)),R.defines!==void 0)for(const F in R.defines)b.push(F),b.push(R.defines[F]);return R.isRawShaderMaterial===!1&&(E(b,R),w(b,R),b.push(r.outputColorSpace)),b.push(R.customProgramCacheKey),b.join()}function E(R,b){R.push(b.precision),R.push(b.outputColorSpace),R.push(b.envMapMode),R.push(b.envMapCubeUVHeight),R.push(b.mapUv),R.push(b.alphaMapUv),R.push(b.lightMapUv),R.push(b.aoMapUv),R.push(b.bumpMapUv),R.push(b.normalMapUv),R.push(b.displacementMapUv),R.push(b.emissiveMapUv),R.push(b.metalnessMapUv),R.push(b.roughnessMapUv),R.push(b.anisotropyMapUv),R.push(b.clearcoatMapUv),R.push(b.clearcoatNormalMapUv),R.push(b.clearcoatRoughnessMapUv),R.push(b.iridescenceMapUv),R.push(b.iridescenceThicknessMapUv),R.push(b.sheenColorMapUv),R.push(b.sheenRoughnessMapUv),R.push(b.specularMapUv),R.push(b.specularColorMapUv),R.push(b.specularIntensityMapUv),R.push(b.transmissionMapUv),R.push(b.thicknessMapUv),R.push(b.combine),R.push(b.fogExp2),R.push(b.sizeAttenuation),R.push(b.morphTargetsCount),R.push(b.morphAttributeCount),R.push(b.numDirLights),R.push(b.numPointLights),R.push(b.numSpotLights),R.push(b.numSpotLightMaps),R.push(b.numHemiLights),R.push(b.numRectAreaLights),R.push(b.numDirLightShadows),R.push(b.numPointLightShadows),R.push(b.numSpotLightShadows),R.push(b.numSpotLightShadowsWithMaps),R.push(b.numLightProbes),R.push(b.shadowMapType),R.push(b.toneMapping),R.push(b.numClippingPlanes),R.push(b.numClipIntersection),R.push(b.depthPacking)}function w(R,b){c.disableAll(),b.supportsVertexTextures&&c.enable(0),b.instancing&&c.enable(1),b.instancingColor&&c.enable(2),b.instancingMorph&&c.enable(3),b.matcap&&c.enable(4),b.envMap&&c.enable(5),b.normalMapObjectSpace&&c.enable(6),b.normalMapTangentSpace&&c.enable(7),b.clearcoat&&c.enable(8),b.iridescence&&c.enable(9),b.alphaTest&&c.enable(10),b.vertexColors&&c.enable(11),b.vertexAlphas&&c.enable(12),b.vertexUv1s&&c.enable(13),b.vertexUv2s&&c.enable(14),b.vertexUv3s&&c.enable(15),b.vertexTangents&&c.enable(16),b.anisotropy&&c.enable(17),b.alphaHash&&c.enable(18),b.batching&&c.enable(19),R.push(c.mask),c.disableAll(),b.fog&&c.enable(0),b.useFog&&c.enable(1),b.flatShading&&c.enable(2),b.logarithmicDepthBuffer&&c.enable(3),b.skinning&&c.enable(4),b.morphTargets&&c.enable(5),b.morphNormals&&c.enable(6),b.morphColors&&c.enable(7),b.premultipliedAlpha&&c.enable(8),b.shadowMapEnabled&&c.enable(9),b.useLegacyLights&&c.enable(10),b.doubleSided&&c.enable(11),b.flipSided&&c.enable(12),b.useDepthPacking&&c.enable(13),b.dithering&&c.enable(14),b.transmission&&c.enable(15),b.sheen&&c.enable(16),b.opaque&&c.enable(17),b.pointsUvs&&c.enable(18),b.decodeVideoTexture&&c.enable(19),b.alphaToCoverage&&c.enable(20),R.push(c.mask)}function A(R){const b=y[R.type];let F;if(b){const q=Si[b];F=p_.clone(q.uniforms)}else F=R.uniforms;return F}function U(R,b){let F;for(let q=0,k=f.length;q<k;q++){const Z=f[q];if(Z.cacheKey===b){F=Z,++F.usedTimes;break}}return F===void 0&&(F=new ET(r,b,R,s),f.push(F)),F}function P(R){if(--R.usedTimes===0){const b=f.indexOf(R);f[b]=f[f.length-1],f.pop(),R.destroy()}}function I(R){u.remove(R)}function z(){u.dispose()}return{getParameters:x,getProgramCacheKey:_,getUniforms:A,acquireProgram:U,releaseProgram:P,releaseShaderCache:I,programs:f,dispose:z}}function RT(){let r=new WeakMap;function e(s){let a=r.get(s);return a===void 0&&(a={},r.set(s,a)),a}function t(s){r.delete(s)}function n(s,a,c){r.get(s)[a]=c}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function PT(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function zg(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Bg(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function a(p,m,v,y,S,x){let _=r[e];return _===void 0?(_={id:p.id,object:p,geometry:m,material:v,groupOrder:y,renderOrder:p.renderOrder,z:S,group:x},r[e]=_):(_.id=p.id,_.object=p,_.geometry=m,_.material=v,_.groupOrder=y,_.renderOrder=p.renderOrder,_.z=S,_.group=x),e++,_}function c(p,m,v,y,S,x){const _=a(p,m,v,y,S,x);v.transmission>0?n.push(_):v.transparent===!0?i.push(_):t.push(_)}function u(p,m,v,y,S,x){const _=a(p,m,v,y,S,x);v.transmission>0?n.unshift(_):v.transparent===!0?i.unshift(_):t.unshift(_)}function h(p,m){t.length>1&&t.sort(p||PT),n.length>1&&n.sort(m||zg),i.length>1&&i.sort(m||zg)}function f(){for(let p=e,m=r.length;p<m;p++){const v=r[p];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:f,sort:h}}function IT(){let r=new WeakMap;function e(n,i){const s=r.get(n);let a;return s===void 0?(a=new Bg,r.set(n,[a])):i>=s.length?(a=new Bg,s.push(a)):a=s[i],a}function t(){r=new WeakMap}return{get:e,dispose:t}}function LT(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new D,color:new Le};break;case"SpotLight":t={position:new D,direction:new D,color:new Le,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new D,color:new Le,distance:0,decay:0};break;case"HemisphereLight":t={direction:new D,skyColor:new Le,groundColor:new Le};break;case"RectAreaLight":t={color:new Le,position:new D,halfWidth:new D,halfHeight:new D};break}return r[e.id]=t,t}}}function NT(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let DT=0;function UT(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function OT(r){const e=new LT,t=NT(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let h=0;h<9;h++)n.probe.push(new D);const i=new D,s=new Ke,a=new Ke;function c(h,f){let p=0,m=0,v=0;for(let F=0;F<9;F++)n.probe[F].set(0,0,0);let y=0,S=0,x=0,_=0,E=0,w=0,A=0,U=0,P=0,I=0,z=0;h.sort(UT);const R=f===!0?Math.PI:1;for(let F=0,q=h.length;F<q;F++){const k=h[F],Z=k.color,se=k.intensity,ae=k.distance,ve=k.shadow&&k.shadow.map?k.shadow.map.texture:null;if(k.isAmbientLight)p+=Z.r*se*R,m+=Z.g*se*R,v+=Z.b*se*R;else if(k.isLightProbe){for(let H=0;H<9;H++)n.probe[H].addScaledVector(k.sh.coefficients[H],se);z++}else if(k.isDirectionalLight){const H=e.get(k);if(H.color.copy(k.color).multiplyScalar(k.intensity*R),k.castShadow){const $=k.shadow,J=t.get(k);J.shadowBias=$.bias,J.shadowNormalBias=$.normalBias,J.shadowRadius=$.radius,J.shadowMapSize=$.mapSize,n.directionalShadow[y]=J,n.directionalShadowMap[y]=ve,n.directionalShadowMatrix[y]=k.shadow.matrix,w++}n.directional[y]=H,y++}else if(k.isSpotLight){const H=e.get(k);H.position.setFromMatrixPosition(k.matrixWorld),H.color.copy(Z).multiplyScalar(se*R),H.distance=ae,H.coneCos=Math.cos(k.angle),H.penumbraCos=Math.cos(k.angle*(1-k.penumbra)),H.decay=k.decay,n.spot[x]=H;const $=k.shadow;if(k.map&&(n.spotLightMap[P]=k.map,P++,$.updateMatrices(k),k.castShadow&&I++),n.spotLightMatrix[x]=$.matrix,k.castShadow){const J=t.get(k);J.shadowBias=$.bias,J.shadowNormalBias=$.normalBias,J.shadowRadius=$.radius,J.shadowMapSize=$.mapSize,n.spotShadow[x]=J,n.spotShadowMap[x]=ve,U++}x++}else if(k.isRectAreaLight){const H=e.get(k);H.color.copy(Z).multiplyScalar(se),H.halfWidth.set(k.width*.5,0,0),H.halfHeight.set(0,k.height*.5,0),n.rectArea[_]=H,_++}else if(k.isPointLight){const H=e.get(k);if(H.color.copy(k.color).multiplyScalar(k.intensity*R),H.distance=k.distance,H.decay=k.decay,k.castShadow){const $=k.shadow,J=t.get(k);J.shadowBias=$.bias,J.shadowNormalBias=$.normalBias,J.shadowRadius=$.radius,J.shadowMapSize=$.mapSize,J.shadowCameraNear=$.camera.near,J.shadowCameraFar=$.camera.far,n.pointShadow[S]=J,n.pointShadowMap[S]=ve,n.pointShadowMatrix[S]=k.shadow.matrix,A++}n.point[S]=H,S++}else if(k.isHemisphereLight){const H=e.get(k);H.skyColor.copy(k.color).multiplyScalar(se*R),H.groundColor.copy(k.groundColor).multiplyScalar(se*R),n.hemi[E]=H,E++}}_>0&&(r.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Te.LTC_FLOAT_1,n.rectAreaLTC2=Te.LTC_FLOAT_2):(n.rectAreaLTC1=Te.LTC_HALF_1,n.rectAreaLTC2=Te.LTC_HALF_2)),n.ambient[0]=p,n.ambient[1]=m,n.ambient[2]=v;const b=n.hash;(b.directionalLength!==y||b.pointLength!==S||b.spotLength!==x||b.rectAreaLength!==_||b.hemiLength!==E||b.numDirectionalShadows!==w||b.numPointShadows!==A||b.numSpotShadows!==U||b.numSpotMaps!==P||b.numLightProbes!==z)&&(n.directional.length=y,n.spot.length=x,n.rectArea.length=_,n.point.length=S,n.hemi.length=E,n.directionalShadow.length=w,n.directionalShadowMap.length=w,n.pointShadow.length=A,n.pointShadowMap.length=A,n.spotShadow.length=U,n.spotShadowMap.length=U,n.directionalShadowMatrix.length=w,n.pointShadowMatrix.length=A,n.spotLightMatrix.length=U+P-I,n.spotLightMap.length=P,n.numSpotLightShadowsWithMaps=I,n.numLightProbes=z,b.directionalLength=y,b.pointLength=S,b.spotLength=x,b.rectAreaLength=_,b.hemiLength=E,b.numDirectionalShadows=w,b.numPointShadows=A,b.numSpotShadows=U,b.numSpotMaps=P,b.numLightProbes=z,n.version=DT++)}function u(h,f){let p=0,m=0,v=0,y=0,S=0;const x=f.matrixWorldInverse;for(let _=0,E=h.length;_<E;_++){const w=h[_];if(w.isDirectionalLight){const A=n.directional[p];A.direction.setFromMatrixPosition(w.matrixWorld),i.setFromMatrixPosition(w.target.matrixWorld),A.direction.sub(i),A.direction.transformDirection(x),p++}else if(w.isSpotLight){const A=n.spot[v];A.position.setFromMatrixPosition(w.matrixWorld),A.position.applyMatrix4(x),A.direction.setFromMatrixPosition(w.matrixWorld),i.setFromMatrixPosition(w.target.matrixWorld),A.direction.sub(i),A.direction.transformDirection(x),v++}else if(w.isRectAreaLight){const A=n.rectArea[y];A.position.setFromMatrixPosition(w.matrixWorld),A.position.applyMatrix4(x),a.identity(),s.copy(w.matrixWorld),s.premultiply(x),a.extractRotation(s),A.halfWidth.set(w.width*.5,0,0),A.halfHeight.set(0,w.height*.5,0),A.halfWidth.applyMatrix4(a),A.halfHeight.applyMatrix4(a),y++}else if(w.isPointLight){const A=n.point[m];A.position.setFromMatrixPosition(w.matrixWorld),A.position.applyMatrix4(x),m++}else if(w.isHemisphereLight){const A=n.hemi[S];A.direction.setFromMatrixPosition(w.matrixWorld),A.direction.transformDirection(x),S++}}}return{setup:c,setupView:u,state:n}}function kg(r){const e=new OT(r),t=[],n=[];function i(){t.length=0,n.length=0}function s(f){t.push(f)}function a(f){n.push(f)}function c(f){e.setup(t,f)}function u(f){e.setupView(t,f)}return{init:i,state:{lightsArray:t,shadowsArray:n,lights:e,transmissionRenderTarget:null},setupLights:c,setupLightsView:u,pushLight:s,pushShadow:a}}function FT(r){let e=new WeakMap;function t(i,s=0){const a=e.get(i);let c;return a===void 0?(c=new kg(r),e.set(i,[c])):s>=a.length?(c=new kg(r),a.push(c)):c=a[s],c}function n(){e=new WeakMap}return{get:t,dispose:n}}class Jd extends mn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Zv,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Kd extends mn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const zT=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,BT=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function kT(r,e,t){let n=new Xa;const i=new ue,s=new ue,a=new Ct,c=new Jd({depthPacking:Jv}),u=new Kd,h={},f=t.maxTextureSize,p={[or]:Nn,[Nn]:or,[Oi]:Oi},m=new Ei({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ue},radius:{value:4}},vertexShader:zT,fragmentShader:BT}),v=m.clone();v.defines.HORIZONTAL_PASS=1;const y=new ut;y.setAttribute("position",new Rt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const S=new $t(y,m),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=au;let _=this.type;this.render=function(P,I,z){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||P.length===0)return;const R=r.getRenderTarget(),b=r.getActiveCubeFace(),F=r.getActiveMipmapLevel(),q=r.state;q.setBlending(sr),q.buffers.color.setClear(1,1,1,1),q.buffers.depth.setTest(!0),q.setScissorTest(!1);const k=_!==Mi&&this.type===Mi,Z=_===Mi&&this.type!==Mi;for(let se=0,ae=P.length;se<ae;se++){const ve=P[se],H=ve.shadow;if(H===void 0){console.warn("THREE.WebGLShadowMap:",ve,"has no shadow.");continue}if(H.autoUpdate===!1&&H.needsUpdate===!1)continue;i.copy(H.mapSize);const $=H.getFrameExtents();if(i.multiply($),s.copy(H.mapSize),(i.x>f||i.y>f)&&(i.x>f&&(s.x=Math.floor(f/$.x),i.x=s.x*$.x,H.mapSize.x=s.x),i.y>f&&(s.y=Math.floor(f/$.y),i.y=s.y*$.y,H.mapSize.y=s.y)),H.map===null||k===!0||Z===!0){const he=this.type!==Mi?{minFilter:fn,magFilter:fn}:{};H.map!==null&&H.map.dispose(),H.map=new wi(i.x,i.y,he),H.map.texture.name=ve.name+".shadowMap",H.camera.updateProjectionMatrix()}r.setRenderTarget(H.map),r.clear();const J=H.getViewportCount();for(let he=0;he<J;he++){const Ie=H.getViewport(he);a.set(s.x*Ie.x,s.y*Ie.y,s.x*Ie.z,s.y*Ie.w),q.viewport(a),H.updateMatrices(ve,he),n=H.getFrustum(),A(I,z,H.camera,ve,this.type)}H.isPointLightShadow!==!0&&this.type===Mi&&E(H,z),H.needsUpdate=!1}_=this.type,x.needsUpdate=!1,r.setRenderTarget(R,b,F)};function E(P,I){const z=e.update(S);m.defines.VSM_SAMPLES!==P.blurSamples&&(m.defines.VSM_SAMPLES=P.blurSamples,v.defines.VSM_SAMPLES=P.blurSamples,m.needsUpdate=!0,v.needsUpdate=!0),P.mapPass===null&&(P.mapPass=new wi(i.x,i.y)),m.uniforms.shadow_pass.value=P.map.texture,m.uniforms.resolution.value=P.mapSize,m.uniforms.radius.value=P.radius,r.setRenderTarget(P.mapPass),r.clear(),r.renderBufferDirect(I,null,z,m,S,null),v.uniforms.shadow_pass.value=P.mapPass.texture,v.uniforms.resolution.value=P.mapSize,v.uniforms.radius.value=P.radius,r.setRenderTarget(P.map),r.clear(),r.renderBufferDirect(I,null,z,v,S,null)}function w(P,I,z,R){let b=null;const F=z.isPointLight===!0?P.customDistanceMaterial:P.customDepthMaterial;if(F!==void 0)b=F;else if(b=z.isPointLight===!0?u:c,r.localClippingEnabled&&I.clipShadows===!0&&Array.isArray(I.clippingPlanes)&&I.clippingPlanes.length!==0||I.displacementMap&&I.displacementScale!==0||I.alphaMap&&I.alphaTest>0||I.map&&I.alphaTest>0){const q=b.uuid,k=I.uuid;let Z=h[q];Z===void 0&&(Z={},h[q]=Z);let se=Z[k];se===void 0&&(se=b.clone(),Z[k]=se,I.addEventListener("dispose",U)),b=se}if(b.visible=I.visible,b.wireframe=I.wireframe,R===Mi?b.side=I.shadowSide!==null?I.shadowSide:I.side:b.side=I.shadowSide!==null?I.shadowSide:p[I.side],b.alphaMap=I.alphaMap,b.alphaTest=I.alphaTest,b.map=I.map,b.clipShadows=I.clipShadows,b.clippingPlanes=I.clippingPlanes,b.clipIntersection=I.clipIntersection,b.displacementMap=I.displacementMap,b.displacementScale=I.displacementScale,b.displacementBias=I.displacementBias,b.wireframeLinewidth=I.wireframeLinewidth,b.linewidth=I.linewidth,z.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const q=r.properties.get(b);q.light=z}return b}function A(P,I,z,R,b){if(P.visible===!1)return;if(P.layers.test(I.layers)&&(P.isMesh||P.isLine||P.isPoints)&&(P.castShadow||P.receiveShadow&&b===Mi)&&(!P.frustumCulled||n.intersectsObject(P))){P.modelViewMatrix.multiplyMatrices(z.matrixWorldInverse,P.matrixWorld);const k=e.update(P),Z=P.material;if(Array.isArray(Z)){const se=k.groups;for(let ae=0,ve=se.length;ae<ve;ae++){const H=se[ae],$=Z[H.materialIndex];if($&&$.visible){const J=w(P,$,R,b);P.onBeforeShadow(r,P,I,z,k,J,H),r.renderBufferDirect(z,null,k,J,P,H),P.onAfterShadow(r,P,I,z,k,J,H)}}}else if(Z.visible){const se=w(P,Z,R,b);P.onBeforeShadow(r,P,I,z,k,se,null),r.renderBufferDirect(z,null,k,se,P,null),P.onAfterShadow(r,P,I,z,k,se,null)}}const q=P.children;for(let k=0,Z=q.length;k<Z;k++)A(q[k],I,z,R,b)}function U(P){P.target.removeEventListener("dispose",U);for(const z in h){const R=h[z],b=P.target.uuid;b in R&&(R[b].dispose(),delete R[b])}}}function HT(r){function e(){let B=!1;const Ee=new Ct;let Se=null;const Xe=new Ct(0,0,0,0);return{setMask:function(Ye){Se!==Ye&&!B&&(r.colorMask(Ye,Ye,Ye,Ye),Se=Ye)},setLocked:function(Ye){B=Ye},setClear:function(Ye,Pt,Lt,Ut,sn){sn===!0&&(Ye*=Ut,Pt*=Ut,Lt*=Ut),Ee.set(Ye,Pt,Lt,Ut),Xe.equals(Ee)===!1&&(r.clearColor(Ye,Pt,Lt,Ut),Xe.copy(Ee))},reset:function(){B=!1,Se=null,Xe.set(-1,0,0,0)}}}function t(){let B=!1,Ee=null,Se=null,Xe=null;return{setTest:function(Ye){Ye?Ce(r.DEPTH_TEST):ye(r.DEPTH_TEST)},setMask:function(Ye){Ee!==Ye&&!B&&(r.depthMask(Ye),Ee=Ye)},setFunc:function(Ye){if(Se!==Ye){switch(Ye){case Mv:r.depthFunc(r.NEVER);break;case Sv:r.depthFunc(r.ALWAYS);break;case wv:r.depthFunc(r.LESS);break;case _a:r.depthFunc(r.LEQUAL);break;case Ev:r.depthFunc(r.EQUAL);break;case Tv:r.depthFunc(r.GEQUAL);break;case Av:r.depthFunc(r.GREATER);break;case bv:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}Se=Ye}},setLocked:function(Ye){B=Ye},setClear:function(Ye){Xe!==Ye&&(r.clearDepth(Ye),Xe=Ye)},reset:function(){B=!1,Ee=null,Se=null,Xe=null}}}function n(){let B=!1,Ee=null,Se=null,Xe=null,Ye=null,Pt=null,Lt=null,Ut=null,sn=null;return{setTest:function(It){B||(It?Ce(r.STENCIL_TEST):ye(r.STENCIL_TEST))},setMask:function(It){Ee!==It&&!B&&(r.stencilMask(It),Ee=It)},setFunc:function(It,Wn,Xn){(Se!==It||Xe!==Wn||Ye!==Xn)&&(r.stencilFunc(It,Wn,Xn),Se=It,Xe=Wn,Ye=Xn)},setOp:function(It,Wn,Xn){(Pt!==It||Lt!==Wn||Ut!==Xn)&&(r.stencilOp(It,Wn,Xn),Pt=It,Lt=Wn,Ut=Xn)},setLocked:function(It){B=It},setClear:function(It){sn!==It&&(r.clearStencil(It),sn=It)},reset:function(){B=!1,Ee=null,Se=null,Xe=null,Ye=null,Pt=null,Lt=null,Ut=null,sn=null}}}const i=new e,s=new t,a=new n,c=new WeakMap,u=new WeakMap;let h={},f={},p=new WeakMap,m=[],v=null,y=!1,S=null,x=null,_=null,E=null,w=null,A=null,U=null,P=new Le(0,0,0),I=0,z=!1,R=null,b=null,F=null,q=null,k=null;const Z=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let se=!1,ae=0;const ve=r.getParameter(r.VERSION);ve.indexOf("WebGL")!==-1?(ae=parseFloat(/^WebGL (\d)/.exec(ve)[1]),se=ae>=1):ve.indexOf("OpenGL ES")!==-1&&(ae=parseFloat(/^OpenGL ES (\d)/.exec(ve)[1]),se=ae>=2);let H=null,$={};const J=r.getParameter(r.SCISSOR_BOX),he=r.getParameter(r.VIEWPORT),Ie=new Ct().fromArray(J),Be=new Ct().fromArray(he);function ne(B,Ee,Se,Xe){const Ye=new Uint8Array(4),Pt=r.createTexture();r.bindTexture(B,Pt),r.texParameteri(B,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(B,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Lt=0;Lt<Se;Lt++)B===r.TEXTURE_3D||B===r.TEXTURE_2D_ARRAY?r.texImage3D(Ee,0,r.RGBA,1,1,Xe,0,r.RGBA,r.UNSIGNED_BYTE,Ye):r.texImage2D(Ee+Lt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Ye);return Pt}const pe={};pe[r.TEXTURE_2D]=ne(r.TEXTURE_2D,r.TEXTURE_2D,1),pe[r.TEXTURE_CUBE_MAP]=ne(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),pe[r.TEXTURE_2D_ARRAY]=ne(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),pe[r.TEXTURE_3D]=ne(r.TEXTURE_3D,r.TEXTURE_3D,1,1),i.setClear(0,0,0,1),s.setClear(1),a.setClear(0),Ce(r.DEPTH_TEST),s.setFunc(_a),me(!1),_e(kf),Ce(r.CULL_FACE),oe(sr);function Ce(B){h[B]!==!0&&(r.enable(B),h[B]=!0)}function ye(B){h[B]!==!1&&(r.disable(B),h[B]=!1)}function et(B,Ee){return f[B]!==Ee?(r.bindFramebuffer(B,Ee),f[B]=Ee,B===r.DRAW_FRAMEBUFFER&&(f[r.FRAMEBUFFER]=Ee),B===r.FRAMEBUFFER&&(f[r.DRAW_FRAMEBUFFER]=Ee),!0):!1}function st(B,Ee){let Se=m,Xe=!1;if(B){Se=p.get(Ee),Se===void 0&&(Se=[],p.set(Ee,Se));const Ye=B.textures;if(Se.length!==Ye.length||Se[0]!==r.COLOR_ATTACHMENT0){for(let Pt=0,Lt=Ye.length;Pt<Lt;Pt++)Se[Pt]=r.COLOR_ATTACHMENT0+Pt;Se.length=Ye.length,Xe=!0}}else Se[0]!==r.BACK&&(Se[0]=r.BACK,Xe=!0);Xe&&r.drawBuffers(Se)}function Qe(B){return v!==B?(r.useProgram(B),v=B,!0):!1}const W={[Pr]:r.FUNC_ADD,[rv]:r.FUNC_SUBTRACT,[sv]:r.FUNC_REVERSE_SUBTRACT};W[ov]=r.MIN,W[av]=r.MAX;const ce={[lv]:r.ZERO,[cv]:r.ONE,[uv]:r.SRC_COLOR,[eu]:r.SRC_ALPHA,[gv]:r.SRC_ALPHA_SATURATE,[pv]:r.DST_COLOR,[fv]:r.DST_ALPHA,[hv]:r.ONE_MINUS_SRC_COLOR,[tu]:r.ONE_MINUS_SRC_ALPHA,[mv]:r.ONE_MINUS_DST_COLOR,[dv]:r.ONE_MINUS_DST_ALPHA,[vv]:r.CONSTANT_COLOR,[_v]:r.ONE_MINUS_CONSTANT_COLOR,[yv]:r.CONSTANT_ALPHA,[xv]:r.ONE_MINUS_CONSTANT_ALPHA};function oe(B,Ee,Se,Xe,Ye,Pt,Lt,Ut,sn,It){if(B===sr){y===!0&&(ye(r.BLEND),y=!1);return}if(y===!1&&(Ce(r.BLEND),y=!0),B!==iv){if(B!==S||It!==z){if((x!==Pr||w!==Pr)&&(r.blendEquation(r.FUNC_ADD),x=Pr,w=Pr),It)switch(B){case ps:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Hf:r.blendFunc(r.ONE,r.ONE);break;case Vf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Gf:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}else switch(B){case ps:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Hf:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case Vf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Gf:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}_=null,E=null,A=null,U=null,P.set(0,0,0),I=0,S=B,z=It}return}Ye=Ye||Ee,Pt=Pt||Se,Lt=Lt||Xe,(Ee!==x||Ye!==w)&&(r.blendEquationSeparate(W[Ee],W[Ye]),x=Ee,w=Ye),(Se!==_||Xe!==E||Pt!==A||Lt!==U)&&(r.blendFuncSeparate(ce[Se],ce[Xe],ce[Pt],ce[Lt]),_=Se,E=Xe,A=Pt,U=Lt),(Ut.equals(P)===!1||sn!==I)&&(r.blendColor(Ut.r,Ut.g,Ut.b,sn),P.copy(Ut),I=sn),S=B,z=!1}function xe(B,Ee){B.side===Oi?ye(r.CULL_FACE):Ce(r.CULL_FACE);let Se=B.side===Nn;Ee&&(Se=!Se),me(Se),B.blending===ps&&B.transparent===!1?oe(sr):oe(B.blending,B.blendEquation,B.blendSrc,B.blendDst,B.blendEquationAlpha,B.blendSrcAlpha,B.blendDstAlpha,B.blendColor,B.blendAlpha,B.premultipliedAlpha),s.setFunc(B.depthFunc),s.setTest(B.depthTest),s.setMask(B.depthWrite),i.setMask(B.colorWrite);const Xe=B.stencilWrite;a.setTest(Xe),Xe&&(a.setMask(B.stencilWriteMask),a.setFunc(B.stencilFunc,B.stencilRef,B.stencilFuncMask),a.setOp(B.stencilFail,B.stencilZFail,B.stencilZPass)),C(B.polygonOffset,B.polygonOffsetFactor,B.polygonOffsetUnits),B.alphaToCoverage===!0?Ce(r.SAMPLE_ALPHA_TO_COVERAGE):ye(r.SAMPLE_ALPHA_TO_COVERAGE)}function me(B){R!==B&&(B?r.frontFace(r.CW):r.frontFace(r.CCW),R=B)}function _e(B){B!==ev?(Ce(r.CULL_FACE),B!==b&&(B===kf?r.cullFace(r.BACK):B===tv?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):ye(r.CULL_FACE),b=B}function N(B){B!==F&&(se&&r.lineWidth(B),F=B)}function C(B,Ee,Se){B?(Ce(r.POLYGON_OFFSET_FILL),(q!==Ee||k!==Se)&&(r.polygonOffset(Ee,Se),q=Ee,k=Se)):ye(r.POLYGON_OFFSET_FILL)}function Y(B){B?Ce(r.SCISSOR_TEST):ye(r.SCISSOR_TEST)}function re(B){B===void 0&&(B=r.TEXTURE0+Z-1),H!==B&&(r.activeTexture(B),H=B)}function le(B,Ee,Se){Se===void 0&&(H===null?Se=r.TEXTURE0+Z-1:Se=H);let Xe=$[Se];Xe===void 0&&(Xe={type:void 0,texture:void 0},$[Se]=Xe),(Xe.type!==B||Xe.texture!==Ee)&&(H!==Se&&(r.activeTexture(Se),H=Se),r.bindTexture(B,Ee||pe[B]),Xe.type=B,Xe.texture=Ee)}function fe(){const B=$[H];B!==void 0&&B.type!==void 0&&(r.bindTexture(B.type,null),B.type=void 0,B.texture=void 0)}function qe(){try{r.compressedTexImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function de(){try{r.compressedTexImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function He(){try{r.texSubImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Ze(){try{r.texSubImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Me(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Ne(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function nt(){try{r.texStorage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Oe(){try{r.texStorage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Fe(){try{r.texImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function pt(){try{r.texImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function mt(B){Ie.equals(B)===!1&&(r.scissor(B.x,B.y,B.z,B.w),Ie.copy(B))}function Et(B){Be.equals(B)===!1&&(r.viewport(B.x,B.y,B.z,B.w),Be.copy(B))}function _t(B,Ee){let Se=u.get(Ee);Se===void 0&&(Se=new WeakMap,u.set(Ee,Se));let Xe=Se.get(B);Xe===void 0&&(Xe=r.getUniformBlockIndex(Ee,B.name),Se.set(B,Xe))}function Dt(B,Ee){const Xe=u.get(Ee).get(B);c.get(Ee)!==Xe&&(r.uniformBlockBinding(Ee,Xe,B.__bindingPointIndex),c.set(Ee,Xe))}function Ve(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),h={},H=null,$={},f={},p=new WeakMap,m=[],v=null,y=!1,S=null,x=null,_=null,E=null,w=null,A=null,U=null,P=new Le(0,0,0),I=0,z=!1,R=null,b=null,F=null,q=null,k=null,Ie.set(0,0,r.canvas.width,r.canvas.height),Be.set(0,0,r.canvas.width,r.canvas.height),i.reset(),s.reset(),a.reset()}return{buffers:{color:i,depth:s,stencil:a},enable:Ce,disable:ye,bindFramebuffer:et,drawBuffers:st,useProgram:Qe,setBlending:oe,setMaterial:xe,setFlipSided:me,setCullFace:_e,setLineWidth:N,setPolygonOffset:C,setScissorTest:Y,activeTexture:re,bindTexture:le,unbindTexture:fe,compressedTexImage2D:qe,compressedTexImage3D:de,texImage2D:Fe,texImage3D:pt,updateUBOMapping:_t,uniformBlockBinding:Dt,texStorage2D:nt,texStorage3D:Oe,texSubImage2D:He,texSubImage3D:Ze,compressedTexSubImage2D:Me,compressedTexSubImage3D:Ne,scissor:mt,viewport:Et,reset:Ve}}function VT(r,e,t,n,i,s,a){const c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,u=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new ue,f=new WeakMap;let p;const m=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(N,C){return v?new OffscreenCanvas(N,C):La("canvas")}function S(N,C,Y){let re=1;const le=_e(N);if((le.width>Y||le.height>Y)&&(re=Y/Math.max(le.width,le.height)),re<1)if(typeof HTMLImageElement<"u"&&N instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&N instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&N instanceof ImageBitmap||typeof VideoFrame<"u"&&N instanceof VideoFrame){const fe=Math.floor(re*le.width),qe=Math.floor(re*le.height);p===void 0&&(p=y(fe,qe));const de=C?y(fe,qe):p;return de.width=fe,de.height=qe,de.getContext("2d").drawImage(N,0,0,fe,qe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+le.width+"x"+le.height+") to ("+fe+"x"+qe+")."),de}else return"data"in N&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+le.width+"x"+le.height+")."),N;return N}function x(N){return N.generateMipmaps&&N.minFilter!==fn&&N.minFilter!==Qt}function _(N){r.generateMipmap(N)}function E(N,C,Y,re,le=!1){if(N!==null){if(r[N]!==void 0)return r[N];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+N+"'")}let fe=C;if(C===r.RED&&(Y===r.FLOAT&&(fe=r.R32F),Y===r.HALF_FLOAT&&(fe=r.R16F),Y===r.UNSIGNED_BYTE&&(fe=r.R8)),C===r.RED_INTEGER&&(Y===r.UNSIGNED_BYTE&&(fe=r.R8UI),Y===r.UNSIGNED_SHORT&&(fe=r.R16UI),Y===r.UNSIGNED_INT&&(fe=r.R32UI),Y===r.BYTE&&(fe=r.R8I),Y===r.SHORT&&(fe=r.R16I),Y===r.INT&&(fe=r.R32I)),C===r.RG&&(Y===r.FLOAT&&(fe=r.RG32F),Y===r.HALF_FLOAT&&(fe=r.RG16F),Y===r.UNSIGNED_BYTE&&(fe=r.RG8)),C===r.RG_INTEGER&&(Y===r.UNSIGNED_BYTE&&(fe=r.RG8UI),Y===r.UNSIGNED_SHORT&&(fe=r.RG16UI),Y===r.UNSIGNED_INT&&(fe=r.RG32UI),Y===r.BYTE&&(fe=r.RG8I),Y===r.SHORT&&(fe=r.RG16I),Y===r.INT&&(fe=r.RG32I)),C===r.RGB&&Y===r.UNSIGNED_INT_5_9_9_9_REV&&(fe=r.RGB9_E5),C===r.RGBA){const qe=le?ba:bt.getTransfer(re);Y===r.FLOAT&&(fe=r.RGBA32F),Y===r.HALF_FLOAT&&(fe=r.RGBA16F),Y===r.UNSIGNED_BYTE&&(fe=qe===Ot?r.SRGB8_ALPHA8:r.RGBA8),Y===r.UNSIGNED_SHORT_4_4_4_4&&(fe=r.RGBA4),Y===r.UNSIGNED_SHORT_5_5_5_1&&(fe=r.RGB5_A1)}return(fe===r.R16F||fe===r.R32F||fe===r.RG16F||fe===r.RG32F||fe===r.RGBA16F||fe===r.RGBA32F)&&e.get("EXT_color_buffer_float"),fe}function w(N,C){return x(N)===!0||N.isFramebufferTexture&&N.minFilter!==fn&&N.minFilter!==Qt?Math.log2(Math.max(C.width,C.height))+1:N.mipmaps!==void 0&&N.mipmaps.length>0?N.mipmaps.length:N.isCompressedTexture&&Array.isArray(N.image)?C.mipmaps.length:1}function A(N){const C=N.target;C.removeEventListener("dispose",A),P(C),C.isVideoTexture&&f.delete(C)}function U(N){const C=N.target;C.removeEventListener("dispose",U),z(C)}function P(N){const C=n.get(N);if(C.__webglInit===void 0)return;const Y=N.source,re=m.get(Y);if(re){const le=re[C.__cacheKey];le.usedTimes--,le.usedTimes===0&&I(N),Object.keys(re).length===0&&m.delete(Y)}n.remove(N)}function I(N){const C=n.get(N);r.deleteTexture(C.__webglTexture);const Y=N.source,re=m.get(Y);delete re[C.__cacheKey],a.memory.textures--}function z(N){const C=n.get(N);if(N.depthTexture&&N.depthTexture.dispose(),N.isWebGLCubeRenderTarget)for(let re=0;re<6;re++){if(Array.isArray(C.__webglFramebuffer[re]))for(let le=0;le<C.__webglFramebuffer[re].length;le++)r.deleteFramebuffer(C.__webglFramebuffer[re][le]);else r.deleteFramebuffer(C.__webglFramebuffer[re]);C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer[re])}else{if(Array.isArray(C.__webglFramebuffer))for(let re=0;re<C.__webglFramebuffer.length;re++)r.deleteFramebuffer(C.__webglFramebuffer[re]);else r.deleteFramebuffer(C.__webglFramebuffer);if(C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer),C.__webglMultisampledFramebuffer&&r.deleteFramebuffer(C.__webglMultisampledFramebuffer),C.__webglColorRenderbuffer)for(let re=0;re<C.__webglColorRenderbuffer.length;re++)C.__webglColorRenderbuffer[re]&&r.deleteRenderbuffer(C.__webglColorRenderbuffer[re]);C.__webglDepthRenderbuffer&&r.deleteRenderbuffer(C.__webglDepthRenderbuffer)}const Y=N.textures;for(let re=0,le=Y.length;re<le;re++){const fe=n.get(Y[re]);fe.__webglTexture&&(r.deleteTexture(fe.__webglTexture),a.memory.textures--),n.remove(Y[re])}n.remove(N)}let R=0;function b(){R=0}function F(){const N=R;return N>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+N+" texture units while this GPU supports only "+i.maxTextures),R+=1,N}function q(N){const C=[];return C.push(N.wrapS),C.push(N.wrapT),C.push(N.wrapR||0),C.push(N.magFilter),C.push(N.minFilter),C.push(N.anisotropy),C.push(N.internalFormat),C.push(N.format),C.push(N.type),C.push(N.generateMipmaps),C.push(N.premultiplyAlpha),C.push(N.flipY),C.push(N.unpackAlignment),C.push(N.colorSpace),C.join()}function k(N,C){const Y=n.get(N);if(N.isVideoTexture&&xe(N),N.isRenderTargetTexture===!1&&N.version>0&&Y.__version!==N.version){const re=N.image;if(re===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(re.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ie(Y,N,C);return}}t.bindTexture(r.TEXTURE_2D,Y.__webglTexture,r.TEXTURE0+C)}function Z(N,C){const Y=n.get(N);if(N.version>0&&Y.__version!==N.version){Ie(Y,N,C);return}t.bindTexture(r.TEXTURE_2D_ARRAY,Y.__webglTexture,r.TEXTURE0+C)}function se(N,C){const Y=n.get(N);if(N.version>0&&Y.__version!==N.version){Ie(Y,N,C);return}t.bindTexture(r.TEXTURE_3D,Y.__webglTexture,r.TEXTURE0+C)}function ae(N,C){const Y=n.get(N);if(N.version>0&&Y.__version!==N.version){Be(Y,N,C);return}t.bindTexture(r.TEXTURE_CUBE_MAP,Y.__webglTexture,r.TEXTURE0+C)}const ve={[Ma]:r.REPEAT,[pi]:r.CLAMP_TO_EDGE,[Sa]:r.MIRRORED_REPEAT},H={[fn]:r.NEAREST,[Ld]:r.NEAREST_MIPMAP_NEAREST,[fo]:r.NEAREST_MIPMAP_LINEAR,[Qt]:r.LINEAR,[da]:r.LINEAR_MIPMAP_NEAREST,[Fi]:r.LINEAR_MIPMAP_LINEAR},$={[Qv]:r.NEVER,[r_]:r.ALWAYS,[$v]:r.LESS,[Gd]:r.LEQUAL,[e_]:r.EQUAL,[i_]:r.GEQUAL,[t_]:r.GREATER,[n_]:r.NOTEQUAL};function J(N,C){if(C.type===mi&&e.has("OES_texture_float_linear")===!1&&(C.magFilter===Qt||C.magFilter===da||C.magFilter===fo||C.magFilter===Fi||C.minFilter===Qt||C.minFilter===da||C.minFilter===fo||C.minFilter===Fi)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),r.texParameteri(N,r.TEXTURE_WRAP_S,ve[C.wrapS]),r.texParameteri(N,r.TEXTURE_WRAP_T,ve[C.wrapT]),(N===r.TEXTURE_3D||N===r.TEXTURE_2D_ARRAY)&&r.texParameteri(N,r.TEXTURE_WRAP_R,ve[C.wrapR]),r.texParameteri(N,r.TEXTURE_MAG_FILTER,H[C.magFilter]),r.texParameteri(N,r.TEXTURE_MIN_FILTER,H[C.minFilter]),C.compareFunction&&(r.texParameteri(N,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(N,r.TEXTURE_COMPARE_FUNC,$[C.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(C.magFilter===fn||C.minFilter!==fo&&C.minFilter!==Fi||C.type===mi&&e.has("OES_texture_float_linear")===!1)return;if(C.anisotropy>1||n.get(C).__currentAnisotropy){const Y=e.get("EXT_texture_filter_anisotropic");r.texParameterf(N,Y.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(C.anisotropy,i.getMaxAnisotropy())),n.get(C).__currentAnisotropy=C.anisotropy}}}function he(N,C){let Y=!1;N.__webglInit===void 0&&(N.__webglInit=!0,C.addEventListener("dispose",A));const re=C.source;let le=m.get(re);le===void 0&&(le={},m.set(re,le));const fe=q(C);if(fe!==N.__cacheKey){le[fe]===void 0&&(le[fe]={texture:r.createTexture(),usedTimes:0},a.memory.textures++,Y=!0),le[fe].usedTimes++;const qe=le[N.__cacheKey];qe!==void 0&&(le[N.__cacheKey].usedTimes--,qe.usedTimes===0&&I(C)),N.__cacheKey=fe,N.__webglTexture=le[fe].texture}return Y}function Ie(N,C,Y){let re=r.TEXTURE_2D;(C.isDataArrayTexture||C.isCompressedArrayTexture)&&(re=r.TEXTURE_2D_ARRAY),C.isData3DTexture&&(re=r.TEXTURE_3D);const le=he(N,C),fe=C.source;t.bindTexture(re,N.__webglTexture,r.TEXTURE0+Y);const qe=n.get(fe);if(fe.version!==qe.__version||le===!0){t.activeTexture(r.TEXTURE0+Y);const de=bt.getPrimaries(bt.workingColorSpace),He=C.colorSpace===nr?null:bt.getPrimaries(C.colorSpace),Ze=C.colorSpace===nr||de===He?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ze);let Me=S(C.image,!1,i.maxTextureSize);Me=me(C,Me);const Ne=s.convert(C.format,C.colorSpace),nt=s.convert(C.type);let Oe=E(C.internalFormat,Ne,nt,C.colorSpace,C.isVideoTexture);J(re,C);let Fe;const pt=C.mipmaps,mt=C.isVideoTexture!==!0&&Oe!==Hd,Et=qe.__version===void 0||le===!0,_t=fe.dataReady,Dt=w(C,Me);if(C.isDepthTexture)Oe=r.DEPTH_COMPONENT16,C.type===mi?Oe=r.DEPTH_COMPONENT32F:C.type===ys?Oe=r.DEPTH_COMPONENT24:C.type===Ao&&(Oe=r.DEPTH24_STENCIL8),Et&&(mt?t.texStorage2D(r.TEXTURE_2D,1,Oe,Me.width,Me.height):t.texImage2D(r.TEXTURE_2D,0,Oe,Me.width,Me.height,0,Ne,nt,null));else if(C.isDataTexture)if(pt.length>0){mt&&Et&&t.texStorage2D(r.TEXTURE_2D,Dt,Oe,pt[0].width,pt[0].height);for(let Ve=0,B=pt.length;Ve<B;Ve++)Fe=pt[Ve],mt?_t&&t.texSubImage2D(r.TEXTURE_2D,Ve,0,0,Fe.width,Fe.height,Ne,nt,Fe.data):t.texImage2D(r.TEXTURE_2D,Ve,Oe,Fe.width,Fe.height,0,Ne,nt,Fe.data);C.generateMipmaps=!1}else mt?(Et&&t.texStorage2D(r.TEXTURE_2D,Dt,Oe,Me.width,Me.height),_t&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,Me.width,Me.height,Ne,nt,Me.data)):t.texImage2D(r.TEXTURE_2D,0,Oe,Me.width,Me.height,0,Ne,nt,Me.data);else if(C.isCompressedTexture)if(C.isCompressedArrayTexture){mt&&Et&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Dt,Oe,pt[0].width,pt[0].height,Me.depth);for(let Ve=0,B=pt.length;Ve<B;Ve++)Fe=pt[Ve],C.format!==Hn?Ne!==null?mt?_t&&t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,Ve,0,0,0,Fe.width,Fe.height,Me.depth,Ne,Fe.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,Ve,Oe,Fe.width,Fe.height,Me.depth,0,Fe.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):mt?_t&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,Ve,0,0,0,Fe.width,Fe.height,Me.depth,Ne,nt,Fe.data):t.texImage3D(r.TEXTURE_2D_ARRAY,Ve,Oe,Fe.width,Fe.height,Me.depth,0,Ne,nt,Fe.data)}else{mt&&Et&&t.texStorage2D(r.TEXTURE_2D,Dt,Oe,pt[0].width,pt[0].height);for(let Ve=0,B=pt.length;Ve<B;Ve++)Fe=pt[Ve],C.format!==Hn?Ne!==null?mt?_t&&t.compressedTexSubImage2D(r.TEXTURE_2D,Ve,0,0,Fe.width,Fe.height,Ne,Fe.data):t.compressedTexImage2D(r.TEXTURE_2D,Ve,Oe,Fe.width,Fe.height,0,Fe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):mt?_t&&t.texSubImage2D(r.TEXTURE_2D,Ve,0,0,Fe.width,Fe.height,Ne,nt,Fe.data):t.texImage2D(r.TEXTURE_2D,Ve,Oe,Fe.width,Fe.height,0,Ne,nt,Fe.data)}else if(C.isDataArrayTexture)mt?(Et&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Dt,Oe,Me.width,Me.height,Me.depth),_t&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,Me.width,Me.height,Me.depth,Ne,nt,Me.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,Oe,Me.width,Me.height,Me.depth,0,Ne,nt,Me.data);else if(C.isData3DTexture)mt?(Et&&t.texStorage3D(r.TEXTURE_3D,Dt,Oe,Me.width,Me.height,Me.depth),_t&&t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,Me.width,Me.height,Me.depth,Ne,nt,Me.data)):t.texImage3D(r.TEXTURE_3D,0,Oe,Me.width,Me.height,Me.depth,0,Ne,nt,Me.data);else if(C.isFramebufferTexture){if(Et)if(mt)t.texStorage2D(r.TEXTURE_2D,Dt,Oe,Me.width,Me.height);else{let Ve=Me.width,B=Me.height;for(let Ee=0;Ee<Dt;Ee++)t.texImage2D(r.TEXTURE_2D,Ee,Oe,Ve,B,0,Ne,nt,null),Ve>>=1,B>>=1}}else if(pt.length>0){if(mt&&Et){const Ve=_e(pt[0]);t.texStorage2D(r.TEXTURE_2D,Dt,Oe,Ve.width,Ve.height)}for(let Ve=0,B=pt.length;Ve<B;Ve++)Fe=pt[Ve],mt?_t&&t.texSubImage2D(r.TEXTURE_2D,Ve,0,0,Ne,nt,Fe):t.texImage2D(r.TEXTURE_2D,Ve,Oe,Ne,nt,Fe);C.generateMipmaps=!1}else if(mt){if(Et){const Ve=_e(Me);t.texStorage2D(r.TEXTURE_2D,Dt,Oe,Ve.width,Ve.height)}_t&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,Ne,nt,Me)}else t.texImage2D(r.TEXTURE_2D,0,Oe,Ne,nt,Me);x(C)&&_(re),qe.__version=fe.version,C.onUpdate&&C.onUpdate(C)}N.__version=C.version}function Be(N,C,Y){if(C.image.length!==6)return;const re=he(N,C),le=C.source;t.bindTexture(r.TEXTURE_CUBE_MAP,N.__webglTexture,r.TEXTURE0+Y);const fe=n.get(le);if(le.version!==fe.__version||re===!0){t.activeTexture(r.TEXTURE0+Y);const qe=bt.getPrimaries(bt.workingColorSpace),de=C.colorSpace===nr?null:bt.getPrimaries(C.colorSpace),He=C.colorSpace===nr||qe===de?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,He);const Ze=C.isCompressedTexture||C.image[0].isCompressedTexture,Me=C.image[0]&&C.image[0].isDataTexture,Ne=[];for(let B=0;B<6;B++)!Ze&&!Me?Ne[B]=S(C.image[B],!0,i.maxCubemapSize):Ne[B]=Me?C.image[B].image:C.image[B],Ne[B]=me(C,Ne[B]);const nt=Ne[0],Oe=s.convert(C.format,C.colorSpace),Fe=s.convert(C.type),pt=E(C.internalFormat,Oe,Fe,C.colorSpace),mt=C.isVideoTexture!==!0,Et=fe.__version===void 0||re===!0,_t=le.dataReady;let Dt=w(C,nt);J(r.TEXTURE_CUBE_MAP,C);let Ve;if(Ze){mt&&Et&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Dt,pt,nt.width,nt.height);for(let B=0;B<6;B++){Ve=Ne[B].mipmaps;for(let Ee=0;Ee<Ve.length;Ee++){const Se=Ve[Ee];C.format!==Hn?Oe!==null?mt?_t&&t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ee,0,0,Se.width,Se.height,Oe,Se.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ee,pt,Se.width,Se.height,0,Se.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):mt?_t&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ee,0,0,Se.width,Se.height,Oe,Fe,Se.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ee,pt,Se.width,Se.height,0,Oe,Fe,Se.data)}}}else{if(Ve=C.mipmaps,mt&&Et){Ve.length>0&&Dt++;const B=_e(Ne[0]);t.texStorage2D(r.TEXTURE_CUBE_MAP,Dt,pt,B.width,B.height)}for(let B=0;B<6;B++)if(Me){mt?_t&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,0,0,Ne[B].width,Ne[B].height,Oe,Fe,Ne[B].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,pt,Ne[B].width,Ne[B].height,0,Oe,Fe,Ne[B].data);for(let Ee=0;Ee<Ve.length;Ee++){const Xe=Ve[Ee].image[B].image;mt?_t&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ee+1,0,0,Xe.width,Xe.height,Oe,Fe,Xe.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ee+1,pt,Xe.width,Xe.height,0,Oe,Fe,Xe.data)}}else{mt?_t&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,0,0,Oe,Fe,Ne[B]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,pt,Oe,Fe,Ne[B]);for(let Ee=0;Ee<Ve.length;Ee++){const Se=Ve[Ee];mt?_t&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ee+1,0,0,Oe,Fe,Se.image[B]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ee+1,pt,Oe,Fe,Se.image[B])}}}x(C)&&_(r.TEXTURE_CUBE_MAP),fe.__version=le.version,C.onUpdate&&C.onUpdate(C)}N.__version=C.version}function ne(N,C,Y,re,le,fe){const qe=s.convert(Y.format,Y.colorSpace),de=s.convert(Y.type),He=E(Y.internalFormat,qe,de,Y.colorSpace);if(!n.get(C).__hasExternalTextures){const Me=Math.max(1,C.width>>fe),Ne=Math.max(1,C.height>>fe);le===r.TEXTURE_3D||le===r.TEXTURE_2D_ARRAY?t.texImage3D(le,fe,He,Me,Ne,C.depth,0,qe,de,null):t.texImage2D(le,fe,He,Me,Ne,0,qe,de,null)}t.bindFramebuffer(r.FRAMEBUFFER,N),oe(C)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,re,le,n.get(Y).__webglTexture,0,ce(C)):(le===r.TEXTURE_2D||le>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&le<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,re,le,n.get(Y).__webglTexture,fe),t.bindFramebuffer(r.FRAMEBUFFER,null)}function pe(N,C,Y){if(r.bindRenderbuffer(r.RENDERBUFFER,N),C.depthBuffer&&!C.stencilBuffer){let re=r.DEPTH_COMPONENT24;if(Y||oe(C)){const le=C.depthTexture;le&&le.isDepthTexture&&(le.type===mi?re=r.DEPTH_COMPONENT32F:le.type===ys&&(re=r.DEPTH_COMPONENT24));const fe=ce(C);oe(C)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,fe,re,C.width,C.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,fe,re,C.width,C.height)}else r.renderbufferStorage(r.RENDERBUFFER,re,C.width,C.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,N)}else if(C.depthBuffer&&C.stencilBuffer){const re=ce(C);Y&&oe(C)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,re,r.DEPTH24_STENCIL8,C.width,C.height):oe(C)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,re,r.DEPTH24_STENCIL8,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,C.width,C.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,N)}else{const re=C.textures;for(let le=0;le<re.length;le++){const fe=re[le],qe=s.convert(fe.format,fe.colorSpace),de=s.convert(fe.type),He=E(fe.internalFormat,qe,de,fe.colorSpace),Ze=ce(C);Y&&oe(C)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Ze,He,C.width,C.height):oe(C)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Ze,He,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,He,C.width,C.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function Ce(N,C){if(C&&C.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,N),!(C.depthTexture&&C.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(C.depthTexture).__webglTexture||C.depthTexture.image.width!==C.width||C.depthTexture.image.height!==C.height)&&(C.depthTexture.image.width=C.width,C.depthTexture.image.height=C.height,C.depthTexture.needsUpdate=!0),k(C.depthTexture,0);const re=n.get(C.depthTexture).__webglTexture,le=ce(C);if(C.depthTexture.format===ms)oe(C)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,re,0,le):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,re,0);else if(C.depthTexture.format===xo)oe(C)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,re,0,le):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,re,0);else throw new Error("Unknown depthTexture format")}function ye(N){const C=n.get(N),Y=N.isWebGLCubeRenderTarget===!0;if(N.depthTexture&&!C.__autoAllocateDepthBuffer){if(Y)throw new Error("target.depthTexture not supported in Cube render targets");Ce(C.__webglFramebuffer,N)}else if(Y){C.__webglDepthbuffer=[];for(let re=0;re<6;re++)t.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer[re]),C.__webglDepthbuffer[re]=r.createRenderbuffer(),pe(C.__webglDepthbuffer[re],N,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer),C.__webglDepthbuffer=r.createRenderbuffer(),pe(C.__webglDepthbuffer,N,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function et(N,C,Y){const re=n.get(N);C!==void 0&&ne(re.__webglFramebuffer,N,N.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),Y!==void 0&&ye(N)}function st(N){const C=N.texture,Y=n.get(N),re=n.get(C);N.addEventListener("dispose",U);const le=N.textures,fe=N.isWebGLCubeRenderTarget===!0,qe=le.length>1;if(qe||(re.__webglTexture===void 0&&(re.__webglTexture=r.createTexture()),re.__version=C.version,a.memory.textures++),fe){Y.__webglFramebuffer=[];for(let de=0;de<6;de++)if(C.mipmaps&&C.mipmaps.length>0){Y.__webglFramebuffer[de]=[];for(let He=0;He<C.mipmaps.length;He++)Y.__webglFramebuffer[de][He]=r.createFramebuffer()}else Y.__webglFramebuffer[de]=r.createFramebuffer()}else{if(C.mipmaps&&C.mipmaps.length>0){Y.__webglFramebuffer=[];for(let de=0;de<C.mipmaps.length;de++)Y.__webglFramebuffer[de]=r.createFramebuffer()}else Y.__webglFramebuffer=r.createFramebuffer();if(qe)for(let de=0,He=le.length;de<He;de++){const Ze=n.get(le[de]);Ze.__webglTexture===void 0&&(Ze.__webglTexture=r.createTexture(),a.memory.textures++)}if(N.samples>0&&oe(N)===!1){Y.__webglMultisampledFramebuffer=r.createFramebuffer(),Y.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,Y.__webglMultisampledFramebuffer);for(let de=0;de<le.length;de++){const He=le[de];Y.__webglColorRenderbuffer[de]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,Y.__webglColorRenderbuffer[de]);const Ze=s.convert(He.format,He.colorSpace),Me=s.convert(He.type),Ne=E(He.internalFormat,Ze,Me,He.colorSpace,N.isXRRenderTarget===!0),nt=ce(N);r.renderbufferStorageMultisample(r.RENDERBUFFER,nt,Ne,N.width,N.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+de,r.RENDERBUFFER,Y.__webglColorRenderbuffer[de])}r.bindRenderbuffer(r.RENDERBUFFER,null),N.depthBuffer&&(Y.__webglDepthRenderbuffer=r.createRenderbuffer(),pe(Y.__webglDepthRenderbuffer,N,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(fe){t.bindTexture(r.TEXTURE_CUBE_MAP,re.__webglTexture),J(r.TEXTURE_CUBE_MAP,C);for(let de=0;de<6;de++)if(C.mipmaps&&C.mipmaps.length>0)for(let He=0;He<C.mipmaps.length;He++)ne(Y.__webglFramebuffer[de][He],N,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+de,He);else ne(Y.__webglFramebuffer[de],N,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+de,0);x(C)&&_(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(qe){for(let de=0,He=le.length;de<He;de++){const Ze=le[de],Me=n.get(Ze);t.bindTexture(r.TEXTURE_2D,Me.__webglTexture),J(r.TEXTURE_2D,Ze),ne(Y.__webglFramebuffer,N,Ze,r.COLOR_ATTACHMENT0+de,r.TEXTURE_2D,0),x(Ze)&&_(r.TEXTURE_2D)}t.unbindTexture()}else{let de=r.TEXTURE_2D;if((N.isWebGL3DRenderTarget||N.isWebGLArrayRenderTarget)&&(de=N.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),t.bindTexture(de,re.__webglTexture),J(de,C),C.mipmaps&&C.mipmaps.length>0)for(let He=0;He<C.mipmaps.length;He++)ne(Y.__webglFramebuffer[He],N,C,r.COLOR_ATTACHMENT0,de,He);else ne(Y.__webglFramebuffer,N,C,r.COLOR_ATTACHMENT0,de,0);x(C)&&_(de),t.unbindTexture()}N.depthBuffer&&ye(N)}function Qe(N){const C=N.textures;for(let Y=0,re=C.length;Y<re;Y++){const le=C[Y];if(x(le)){const fe=N.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,qe=n.get(le).__webglTexture;t.bindTexture(fe,qe),_(fe),t.unbindTexture()}}}function W(N){if(N.samples>0&&oe(N)===!1){const C=N.textures,Y=N.width,re=N.height;let le=r.COLOR_BUFFER_BIT;const fe=[],qe=N.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,de=n.get(N),He=C.length>1;if(He)for(let Ze=0;Ze<C.length;Ze++)t.bindFramebuffer(r.FRAMEBUFFER,de.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ze,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,de.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ze,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,de.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,de.__webglFramebuffer);for(let Ze=0;Ze<C.length;Ze++){fe.push(r.COLOR_ATTACHMENT0+Ze),N.depthBuffer&&fe.push(qe);const Me=de.__ignoreDepthValues!==void 0?de.__ignoreDepthValues:!1;if(Me===!1&&(N.depthBuffer&&(le|=r.DEPTH_BUFFER_BIT),N.stencilBuffer&&de.__isTransmissionRenderTarget!==!0&&(le|=r.STENCIL_BUFFER_BIT)),He&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,de.__webglColorRenderbuffer[Ze]),Me===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[qe]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[qe])),He){const Ne=n.get(C[Ze]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,Ne,0)}r.blitFramebuffer(0,0,Y,re,0,0,Y,re,le,r.NEAREST),u&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,fe)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),He)for(let Ze=0;Ze<C.length;Ze++){t.bindFramebuffer(r.FRAMEBUFFER,de.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ze,r.RENDERBUFFER,de.__webglColorRenderbuffer[Ze]);const Me=n.get(C[Ze]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,de.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ze,r.TEXTURE_2D,Me,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,de.__webglMultisampledFramebuffer)}}function ce(N){return Math.min(i.maxSamples,N.samples)}function oe(N){const C=n.get(N);return N.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&C.__useRenderToTexture!==!1}function xe(N){const C=a.render.frame;f.get(N)!==C&&(f.set(N,C),N.update())}function me(N,C){const Y=N.colorSpace,re=N.format,le=N.type;return N.isCompressedTexture===!0||N.isVideoTexture===!0||Y!==cr&&Y!==nr&&(bt.getTransfer(Y)===Ot?(re!==Hn||le!==ki)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Y)),C}function _e(N){return typeof HTMLImageElement<"u"&&N instanceof HTMLImageElement?(h.width=N.naturalWidth||N.width,h.height=N.naturalHeight||N.height):typeof VideoFrame<"u"&&N instanceof VideoFrame?(h.width=N.displayWidth,h.height=N.displayHeight):(h.width=N.width,h.height=N.height),h}this.allocateTextureUnit=F,this.resetTextureUnits=b,this.setTexture2D=k,this.setTexture2DArray=Z,this.setTexture3D=se,this.setTextureCube=ae,this.rebindTextures=et,this.setupRenderTarget=st,this.updateRenderTargetMipmap=Qe,this.updateMultisampleRenderTarget=W,this.setupDepthRenderbuffer=ye,this.setupFrameBufferTexture=ne,this.useMultisampledRTT=oe}function w_(r,e){function t(n,i=nr){let s;const a=bt.getTransfer(i);if(n===ki)return r.UNSIGNED_BYTE;if(n===Ud)return r.UNSIGNED_SHORT_4_4_4_4;if(n===Od)return r.UNSIGNED_SHORT_5_5_5_1;if(n===Bv)return r.UNSIGNED_INT_5_9_9_9_REV;if(n===Fv)return r.BYTE;if(n===zv)return r.SHORT;if(n===Nd)return r.UNSIGNED_SHORT;if(n===Dd)return r.INT;if(n===ys)return r.UNSIGNED_INT;if(n===mi)return r.FLOAT;if(n===wa)return r.HALF_FLOAT;if(n===kv)return r.ALPHA;if(n===Hv)return r.RGB;if(n===Hn)return r.RGBA;if(n===Vv)return r.LUMINANCE;if(n===Gv)return r.LUMINANCE_ALPHA;if(n===ms)return r.DEPTH_COMPONENT;if(n===xo)return r.DEPTH_STENCIL;if(n===Fd)return r.RED;if(n===zd)return r.RED_INTEGER;if(n===Wv)return r.RG;if(n===Bd)return r.RG_INTEGER;if(n===kd)return r.RGBA_INTEGER;if(n===Xc||n===qc||n===Yc||n===jc)if(a===Ot)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===Xc)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===qc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Yc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===jc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===Xc)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===qc)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Yc)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===jc)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Xf||n===qf||n===Yf||n===jf)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===Xf)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===qf)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Yf)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===jf)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Hd)return s=e.get("WEBGL_compressed_texture_etc1"),s!==null?s.COMPRESSED_RGB_ETC1_WEBGL:null;if(n===Zf||n===Jf)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(n===Zf)return a===Ot?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===Jf)return a===Ot?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===Kf||n===Qf||n===$f||n===ed||n===td||n===nd||n===id||n===rd||n===sd||n===od||n===ad||n===ld||n===cd||n===ud)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(n===Kf)return a===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Qf)return a===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===$f)return a===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===ed)return a===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===td)return a===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===nd)return a===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===id)return a===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===rd)return a===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===sd)return a===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===od)return a===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===ad)return a===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===ld)return a===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===cd)return a===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===ud)return a===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Zc||n===hd||n===fd)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(n===Zc)return a===Ot?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===hd)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===fd)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Xv||n===dd||n===pd||n===md)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(n===Zc)return s.COMPRESSED_RED_RGTC1_EXT;if(n===dd)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===pd)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===md)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Ao?r.UNSIGNED_INT_24_8:r[n]!==void 0?r[n]:null}return{convert:t}}class E_ extends hn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class go extends wt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const GT={type:"move"};class ff{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new go,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new go,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new D,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new D),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new go,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new D,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new D),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,a=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){a=!0;for(const S of e.hand.values()){const x=t.getJointPose(S,n),_=this._getHandJoint(h,S);x!==null&&(_.matrix.fromArray(x.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=x.radius),_.visible=x!==null}const f=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=f.position.distanceTo(p.position),v=.02,y=.005;h.inputState.pinching&&m>v+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=v-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(GT)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new go;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}const WT=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,XT=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class qT{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new rn,s=e.properties.get(i);s.__webglTexture=t.texture,(t.depthNear!=n.depthNear||t.depthFar!=n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}render(e,t){if(this.texture!==null){if(this.mesh===null){const n=t.cameras[0].viewport,i=new Ei({vertexShader:WT,fragmentShader:XT,uniforms:{depthColor:{value:this.texture},depthWidth:{value:n.z},depthHeight:{value:n.w}}});this.mesh=new $t(new Co(20,20),i)}e.render(this.mesh,t)}}reset(){this.texture=null,this.mesh=null}}class YT extends ur{constructor(e,t){super();const n=this;let i=null,s=1,a=null,c="local-floor",u=1,h=null,f=null,p=null,m=null,v=null,y=null;const S=new qT,x=t.getContextAttributes();let _=null,E=null;const w=[],A=[],U=new ue;let P=null;const I=new hn;I.layers.enable(1),I.viewport=new Ct;const z=new hn;z.layers.enable(2),z.viewport=new Ct;const R=[I,z],b=new E_;b.layers.enable(1),b.layers.enable(2);let F=null,q=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ne){let pe=w[ne];return pe===void 0&&(pe=new ff,w[ne]=pe),pe.getTargetRaySpace()},this.getControllerGrip=function(ne){let pe=w[ne];return pe===void 0&&(pe=new ff,w[ne]=pe),pe.getGripSpace()},this.getHand=function(ne){let pe=w[ne];return pe===void 0&&(pe=new ff,w[ne]=pe),pe.getHandSpace()};function k(ne){const pe=A.indexOf(ne.inputSource);if(pe===-1)return;const Ce=w[pe];Ce!==void 0&&(Ce.update(ne.inputSource,ne.frame,h||a),Ce.dispatchEvent({type:ne.type,data:ne.inputSource}))}function Z(){i.removeEventListener("select",k),i.removeEventListener("selectstart",k),i.removeEventListener("selectend",k),i.removeEventListener("squeeze",k),i.removeEventListener("squeezestart",k),i.removeEventListener("squeezeend",k),i.removeEventListener("end",Z),i.removeEventListener("inputsourceschange",se);for(let ne=0;ne<w.length;ne++){const pe=A[ne];pe!==null&&(A[ne]=null,w[ne].disconnect(pe))}F=null,q=null,S.reset(),e.setRenderTarget(_),v=null,m=null,p=null,i=null,E=null,Be.stop(),n.isPresenting=!1,e.setPixelRatio(P),e.setSize(U.width,U.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(ne){s=ne,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(ne){c=ne,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||a},this.setReferenceSpace=function(ne){h=ne},this.getBaseLayer=function(){return m!==null?m:v},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return i},this.setSession=async function(ne){if(i=ne,i!==null){if(_=e.getRenderTarget(),i.addEventListener("select",k),i.addEventListener("selectstart",k),i.addEventListener("selectend",k),i.addEventListener("squeeze",k),i.addEventListener("squeezestart",k),i.addEventListener("squeezeend",k),i.addEventListener("end",Z),i.addEventListener("inputsourceschange",se),x.xrCompatible!==!0&&await t.makeXRCompatible(),P=e.getPixelRatio(),e.getSize(U),i.renderState.layers===void 0){const pe={antialias:x.antialias,alpha:!0,depth:x.depth,stencil:x.stencil,framebufferScaleFactor:s};v=new XRWebGLLayer(i,t,pe),i.updateRenderState({baseLayer:v}),e.setPixelRatio(1),e.setSize(v.framebufferWidth,v.framebufferHeight,!1),E=new wi(v.framebufferWidth,v.framebufferHeight,{format:Hn,type:ki,colorSpace:e.outputColorSpace,stencilBuffer:x.stencil})}else{let pe=null,Ce=null,ye=null;x.depth&&(ye=x.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,pe=x.stencil?xo:ms,Ce=x.stencil?Ao:ys);const et={colorFormat:t.RGBA8,depthFormat:ye,scaleFactor:s};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(et),i.updateRenderState({layers:[m]}),e.setPixelRatio(1),e.setSize(m.textureWidth,m.textureHeight,!1),E=new wi(m.textureWidth,m.textureHeight,{format:Hn,type:ki,depthTexture:new Zd(m.textureWidth,m.textureHeight,Ce,void 0,void 0,void 0,void 0,void 0,void 0,pe),stencilBuffer:x.stencil,colorSpace:e.outputColorSpace,samples:x.antialias?4:0});const st=e.properties.get(E);st.__ignoreDepthValues=m.ignoreDepthValues}E.isXRRenderTarget=!0,this.setFoveation(u),h=null,a=await i.requestReferenceSpace(c),Be.setContext(i),Be.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function se(ne){for(let pe=0;pe<ne.removed.length;pe++){const Ce=ne.removed[pe],ye=A.indexOf(Ce);ye>=0&&(A[ye]=null,w[ye].disconnect(Ce))}for(let pe=0;pe<ne.added.length;pe++){const Ce=ne.added[pe];let ye=A.indexOf(Ce);if(ye===-1){for(let st=0;st<w.length;st++)if(st>=A.length){A.push(Ce),ye=st;break}else if(A[st]===null){A[st]=Ce,ye=st;break}if(ye===-1)break}const et=w[ye];et&&et.connect(Ce)}}const ae=new D,ve=new D;function H(ne,pe,Ce){ae.setFromMatrixPosition(pe.matrixWorld),ve.setFromMatrixPosition(Ce.matrixWorld);const ye=ae.distanceTo(ve),et=pe.projectionMatrix.elements,st=Ce.projectionMatrix.elements,Qe=et[14]/(et[10]-1),W=et[14]/(et[10]+1),ce=(et[9]+1)/et[5],oe=(et[9]-1)/et[5],xe=(et[8]-1)/et[0],me=(st[8]+1)/st[0],_e=Qe*xe,N=Qe*me,C=ye/(-xe+me),Y=C*-xe;pe.matrixWorld.decompose(ne.position,ne.quaternion,ne.scale),ne.translateX(Y),ne.translateZ(C),ne.matrixWorld.compose(ne.position,ne.quaternion,ne.scale),ne.matrixWorldInverse.copy(ne.matrixWorld).invert();const re=Qe+C,le=W+C,fe=_e-Y,qe=N+(ye-Y),de=ce*W/le*re,He=oe*W/le*re;ne.projectionMatrix.makePerspective(fe,qe,de,He,re,le),ne.projectionMatrixInverse.copy(ne.projectionMatrix).invert()}function $(ne,pe){pe===null?ne.matrixWorld.copy(ne.matrix):ne.matrixWorld.multiplyMatrices(pe.matrixWorld,ne.matrix),ne.matrixWorldInverse.copy(ne.matrixWorld).invert()}this.updateCamera=function(ne){if(i===null)return;S.texture!==null&&(ne.near=S.depthNear,ne.far=S.depthFar),b.near=z.near=I.near=ne.near,b.far=z.far=I.far=ne.far,(F!==b.near||q!==b.far)&&(i.updateRenderState({depthNear:b.near,depthFar:b.far}),F=b.near,q=b.far,I.near=F,I.far=q,z.near=F,z.far=q,I.updateProjectionMatrix(),z.updateProjectionMatrix(),ne.updateProjectionMatrix());const pe=ne.parent,Ce=b.cameras;$(b,pe);for(let ye=0;ye<Ce.length;ye++)$(Ce[ye],pe);Ce.length===2?H(b,I,z):b.projectionMatrix.copy(I.projectionMatrix),J(ne,b,pe)};function J(ne,pe,Ce){Ce===null?ne.matrix.copy(pe.matrixWorld):(ne.matrix.copy(Ce.matrixWorld),ne.matrix.invert(),ne.matrix.multiply(pe.matrixWorld)),ne.matrix.decompose(ne.position,ne.quaternion,ne.scale),ne.updateMatrixWorld(!0),ne.projectionMatrix.copy(pe.projectionMatrix),ne.projectionMatrixInverse.copy(pe.projectionMatrixInverse),ne.isPerspectiveCamera&&(ne.fov=Mo*2*Math.atan(1/ne.projectionMatrix.elements[5]),ne.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(m===null&&v===null))return u},this.setFoveation=function(ne){u=ne,m!==null&&(m.fixedFoveation=ne),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=ne)},this.hasDepthSensing=function(){return S.texture!==null};let he=null;function Ie(ne,pe){if(f=pe.getViewerPose(h||a),y=pe,f!==null){const Ce=f.views;v!==null&&(e.setRenderTargetFramebuffer(E,v.framebuffer),e.setRenderTarget(E));let ye=!1;Ce.length!==b.cameras.length&&(b.cameras.length=0,ye=!0);for(let st=0;st<Ce.length;st++){const Qe=Ce[st];let W=null;if(v!==null)W=v.getViewport(Qe);else{const oe=p.getViewSubImage(m,Qe);W=oe.viewport,st===0&&(e.setRenderTargetTextures(E,oe.colorTexture,m.ignoreDepthValues?void 0:oe.depthStencilTexture),e.setRenderTarget(E))}let ce=R[st];ce===void 0&&(ce=new hn,ce.layers.enable(st),ce.viewport=new Ct,R[st]=ce),ce.matrix.fromArray(Qe.transform.matrix),ce.matrix.decompose(ce.position,ce.quaternion,ce.scale),ce.projectionMatrix.fromArray(Qe.projectionMatrix),ce.projectionMatrixInverse.copy(ce.projectionMatrix).invert(),ce.viewport.set(W.x,W.y,W.width,W.height),st===0&&(b.matrix.copy(ce.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),ye===!0&&b.cameras.push(ce)}const et=i.enabledFeatures;if(et&&et.includes("depth-sensing")){const st=p.getDepthInformation(Ce[0]);st&&st.isValid&&st.texture&&S.init(e,st,i.renderState)}}for(let Ce=0;Ce<w.length;Ce++){const ye=A[Ce],et=w[Ce];ye!==null&&et!==void 0&&et.update(ye,pe,h||a)}S.render(e,b),he&&he(ne,pe),pe.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:pe}),y=null}const Be=new v_;Be.setAnimationLoop(Ie),this.setAnimationLoop=function(ne){he=ne},this.dispose=function(){}}}const $r=new ii,jT=new Ke;function ZT(r,e){function t(x,_){x.matrixAutoUpdate===!0&&x.updateMatrix(),_.value.copy(x.matrix)}function n(x,_){_.color.getRGB(x.fogColor.value,d_(r)),_.isFog?(x.fogNear.value=_.near,x.fogFar.value=_.far):_.isFogExp2&&(x.fogDensity.value=_.density)}function i(x,_,E,w,A){_.isMeshBasicMaterial||_.isMeshLambertMaterial?s(x,_):_.isMeshToonMaterial?(s(x,_),p(x,_)):_.isMeshPhongMaterial?(s(x,_),f(x,_)):_.isMeshStandardMaterial?(s(x,_),m(x,_),_.isMeshPhysicalMaterial&&v(x,_,A)):_.isMeshMatcapMaterial?(s(x,_),y(x,_)):_.isMeshDepthMaterial?s(x,_):_.isMeshDistanceMaterial?(s(x,_),S(x,_)):_.isMeshNormalMaterial?s(x,_):_.isLineBasicMaterial?(a(x,_),_.isLineDashedMaterial&&c(x,_)):_.isPointsMaterial?u(x,_,E,w):_.isSpriteMaterial?h(x,_):_.isShadowMaterial?(x.color.value.copy(_.color),x.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function s(x,_){x.opacity.value=_.opacity,_.color&&x.diffuse.value.copy(_.color),_.emissive&&x.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(x.map.value=_.map,t(_.map,x.mapTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.bumpMap&&(x.bumpMap.value=_.bumpMap,t(_.bumpMap,x.bumpMapTransform),x.bumpScale.value=_.bumpScale,_.side===Nn&&(x.bumpScale.value*=-1)),_.normalMap&&(x.normalMap.value=_.normalMap,t(_.normalMap,x.normalMapTransform),x.normalScale.value.copy(_.normalScale),_.side===Nn&&x.normalScale.value.negate()),_.displacementMap&&(x.displacementMap.value=_.displacementMap,t(_.displacementMap,x.displacementMapTransform),x.displacementScale.value=_.displacementScale,x.displacementBias.value=_.displacementBias),_.emissiveMap&&(x.emissiveMap.value=_.emissiveMap,t(_.emissiveMap,x.emissiveMapTransform)),_.specularMap&&(x.specularMap.value=_.specularMap,t(_.specularMap,x.specularMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest);const E=e.get(_),w=E.envMap,A=E.envMapRotation;if(w&&(x.envMap.value=w,$r.copy(A),$r.x*=-1,$r.y*=-1,$r.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&($r.y*=-1,$r.z*=-1),x.envMapRotation.value.setFromMatrix4(jT.makeRotationFromEuler($r)),x.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=_.reflectivity,x.ior.value=_.ior,x.refractionRatio.value=_.refractionRatio),_.lightMap){x.lightMap.value=_.lightMap;const U=r._useLegacyLights===!0?Math.PI:1;x.lightMapIntensity.value=_.lightMapIntensity*U,t(_.lightMap,x.lightMapTransform)}_.aoMap&&(x.aoMap.value=_.aoMap,x.aoMapIntensity.value=_.aoMapIntensity,t(_.aoMap,x.aoMapTransform))}function a(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,_.map&&(x.map.value=_.map,t(_.map,x.mapTransform))}function c(x,_){x.dashSize.value=_.dashSize,x.totalSize.value=_.dashSize+_.gapSize,x.scale.value=_.scale}function u(x,_,E,w){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.size.value=_.size*E,x.scale.value=w*.5,_.map&&(x.map.value=_.map,t(_.map,x.uvTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest)}function h(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.rotation.value=_.rotation,_.map&&(x.map.value=_.map,t(_.map,x.mapTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest)}function f(x,_){x.specular.value.copy(_.specular),x.shininess.value=Math.max(_.shininess,1e-4)}function p(x,_){_.gradientMap&&(x.gradientMap.value=_.gradientMap)}function m(x,_){x.metalness.value=_.metalness,_.metalnessMap&&(x.metalnessMap.value=_.metalnessMap,t(_.metalnessMap,x.metalnessMapTransform)),x.roughness.value=_.roughness,_.roughnessMap&&(x.roughnessMap.value=_.roughnessMap,t(_.roughnessMap,x.roughnessMapTransform)),_.envMap&&(x.envMapIntensity.value=_.envMapIntensity)}function v(x,_,E){x.ior.value=_.ior,_.sheen>0&&(x.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),x.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(x.sheenColorMap.value=_.sheenColorMap,t(_.sheenColorMap,x.sheenColorMapTransform)),_.sheenRoughnessMap&&(x.sheenRoughnessMap.value=_.sheenRoughnessMap,t(_.sheenRoughnessMap,x.sheenRoughnessMapTransform))),_.clearcoat>0&&(x.clearcoat.value=_.clearcoat,x.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(x.clearcoatMap.value=_.clearcoatMap,t(_.clearcoatMap,x.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,t(_.clearcoatRoughnessMap,x.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(x.clearcoatNormalMap.value=_.clearcoatNormalMap,t(_.clearcoatNormalMap,x.clearcoatNormalMapTransform),x.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===Nn&&x.clearcoatNormalScale.value.negate())),_.iridescence>0&&(x.iridescence.value=_.iridescence,x.iridescenceIOR.value=_.iridescenceIOR,x.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(x.iridescenceMap.value=_.iridescenceMap,t(_.iridescenceMap,x.iridescenceMapTransform)),_.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=_.iridescenceThicknessMap,t(_.iridescenceThicknessMap,x.iridescenceThicknessMapTransform))),_.transmission>0&&(x.transmission.value=_.transmission,x.transmissionSamplerMap.value=E.texture,x.transmissionSamplerSize.value.set(E.width,E.height),_.transmissionMap&&(x.transmissionMap.value=_.transmissionMap,t(_.transmissionMap,x.transmissionMapTransform)),x.thickness.value=_.thickness,_.thicknessMap&&(x.thicknessMap.value=_.thicknessMap,t(_.thicknessMap,x.thicknessMapTransform)),x.attenuationDistance.value=_.attenuationDistance,x.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(x.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(x.anisotropyMap.value=_.anisotropyMap,t(_.anisotropyMap,x.anisotropyMapTransform))),x.specularIntensity.value=_.specularIntensity,x.specularColor.value.copy(_.specularColor),_.specularColorMap&&(x.specularColorMap.value=_.specularColorMap,t(_.specularColorMap,x.specularColorMapTransform)),_.specularIntensityMap&&(x.specularIntensityMap.value=_.specularIntensityMap,t(_.specularIntensityMap,x.specularIntensityMapTransform))}function y(x,_){_.matcap&&(x.matcap.value=_.matcap)}function S(x,_){const E=e.get(_).light;x.referencePosition.value.setFromMatrixPosition(E.matrixWorld),x.nearDistance.value=E.shadow.camera.near,x.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function JT(r,e,t,n){let i={},s={},a=[];const c=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function u(E,w){const A=w.program;n.uniformBlockBinding(E,A)}function h(E,w){let A=i[E.id];A===void 0&&(y(E),A=f(E),i[E.id]=A,E.addEventListener("dispose",x));const U=w.program;n.updateUBOMapping(E,U);const P=e.render.frame;s[E.id]!==P&&(m(E),s[E.id]=P)}function f(E){const w=p();E.__bindingPointIndex=w;const A=r.createBuffer(),U=E.__size,P=E.usage;return r.bindBuffer(r.UNIFORM_BUFFER,A),r.bufferData(r.UNIFORM_BUFFER,U,P),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,w,A),A}function p(){for(let E=0;E<c;E++)if(a.indexOf(E)===-1)return a.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(E){const w=i[E.id],A=E.uniforms,U=E.__cache;r.bindBuffer(r.UNIFORM_BUFFER,w);for(let P=0,I=A.length;P<I;P++){const z=Array.isArray(A[P])?A[P]:[A[P]];for(let R=0,b=z.length;R<b;R++){const F=z[R];if(v(F,P,R,U)===!0){const q=F.__offset,k=Array.isArray(F.value)?F.value:[F.value];let Z=0;for(let se=0;se<k.length;se++){const ae=k[se],ve=S(ae);typeof ae=="number"||typeof ae=="boolean"?(F.__data[0]=ae,r.bufferSubData(r.UNIFORM_BUFFER,q+Z,F.__data)):ae.isMatrix3?(F.__data[0]=ae.elements[0],F.__data[1]=ae.elements[1],F.__data[2]=ae.elements[2],F.__data[3]=0,F.__data[4]=ae.elements[3],F.__data[5]=ae.elements[4],F.__data[6]=ae.elements[5],F.__data[7]=0,F.__data[8]=ae.elements[6],F.__data[9]=ae.elements[7],F.__data[10]=ae.elements[8],F.__data[11]=0):(ae.toArray(F.__data,Z),Z+=ve.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,q,F.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function v(E,w,A,U){const P=E.value,I=w+"_"+A;if(U[I]===void 0)return typeof P=="number"||typeof P=="boolean"?U[I]=P:U[I]=P.clone(),!0;{const z=U[I];if(typeof P=="number"||typeof P=="boolean"){if(z!==P)return U[I]=P,!0}else if(z.equals(P)===!1)return z.copy(P),!0}return!1}function y(E){const w=E.uniforms;let A=0;const U=16;for(let I=0,z=w.length;I<z;I++){const R=Array.isArray(w[I])?w[I]:[w[I]];for(let b=0,F=R.length;b<F;b++){const q=R[b],k=Array.isArray(q.value)?q.value:[q.value];for(let Z=0,se=k.length;Z<se;Z++){const ae=k[Z],ve=S(ae),H=A%U;H!==0&&U-H<ve.boundary&&(A+=U-H),q.__data=new Float32Array(ve.storage/Float32Array.BYTES_PER_ELEMENT),q.__offset=A,A+=ve.storage}}}const P=A%U;return P>0&&(A+=U-P),E.__size=A,E.__cache={},this}function S(E){const w={boundary:0,storage:0};return typeof E=="number"||typeof E=="boolean"?(w.boundary=4,w.storage=4):E.isVector2?(w.boundary=8,w.storage=8):E.isVector3||E.isColor?(w.boundary=16,w.storage=12):E.isVector4?(w.boundary=16,w.storage=16):E.isMatrix3?(w.boundary=48,w.storage=48):E.isMatrix4?(w.boundary=64,w.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),w}function x(E){const w=E.target;w.removeEventListener("dispose",x);const A=a.indexOf(w.__bindingPointIndex);a.splice(A,1),r.deleteBuffer(i[w.id]),delete i[w.id],delete s[w.id]}function _(){for(const E in i)r.deleteBuffer(i[E]);a=[],i={},s={}}return{bind:u,update:h,dispose:_}}class T_{constructor(e={}){const{canvas:t=l_(),context:n=null,depth:i=!0,stencil:s=!1,alpha:a=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:f="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");m=n.getContextAttributes().alpha}else m=a;const v=new Uint32Array(4),y=new Int32Array(4);let S=null,x=null;const _=[],E=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=di,this._useLegacyLights=!1,this.toneMapping=Bi,this.toneMappingExposure=1;const w=this;let A=!1,U=0,P=0,I=null,z=-1,R=null;const b=new Ct,F=new Ct;let q=null;const k=new Le(0);let Z=0,se=t.width,ae=t.height,ve=1,H=null,$=null;const J=new Ct(0,0,se,ae),he=new Ct(0,0,se,ae);let Ie=!1;const Be=new Xa;let ne=!1,pe=!1;const Ce=new Ke,ye=new ue,et=new D,st={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Qe(){return I===null?ve:1}let W=n;function ce(L,X){const Q=t.getContext(L,X);return Q!==null?Q:null}try{const L={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:f,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${ou}`),t.addEventListener("webglcontextlost",Ee,!1),t.addEventListener("webglcontextrestored",Se,!1),t.addEventListener("webglcontextcreationerror",Xe,!1),W===null){const X="webgl2";if(W=ce(X,L),W===null)throw ce(X)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(L){throw console.error("THREE.WebGLRenderer: "+L.message),L}let oe,xe,me,_e,N,C,Y,re,le,fe,qe,de,He,Ze,Me,Ne,nt,Oe,Fe,pt,mt,Et,_t,Dt;function Ve(){oe=new cE(W),oe.init(),xe=new iE(W,oe,e),Et=new w_(W,oe),me=new HT(W),_e=new fE(W),N=new RT,C=new VT(W,oe,me,N,xe,Et,_e),Y=new sE(w),re=new lE(w),le=new _S(W),_t=new tE(W,le),fe=new uE(W,le,_e,_t),qe=new pE(W,fe,le,_e),Fe=new dE(W,xe,C),Ne=new rE(N),de=new CT(w,Y,re,oe,xe,_t,Ne),He=new ZT(w,N),Ze=new IT,Me=new FT(oe),Oe=new eE(w,Y,re,me,qe,m,u),nt=new kT(w,qe,xe),Dt=new JT(W,_e,xe,me),pt=new nE(W,oe,_e),mt=new hE(W,oe,_e),_e.programs=de.programs,w.capabilities=xe,w.extensions=oe,w.properties=N,w.renderLists=Ze,w.shadowMap=nt,w.state=me,w.info=_e}Ve();const B=new YT(w,W);this.xr=B,this.getContext=function(){return W},this.getContextAttributes=function(){return W.getContextAttributes()},this.forceContextLoss=function(){const L=oe.get("WEBGL_lose_context");L&&L.loseContext()},this.forceContextRestore=function(){const L=oe.get("WEBGL_lose_context");L&&L.restoreContext()},this.getPixelRatio=function(){return ve},this.setPixelRatio=function(L){L!==void 0&&(ve=L,this.setSize(se,ae,!1))},this.getSize=function(L){return L.set(se,ae)},this.setSize=function(L,X,Q=!0){if(B.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}se=L,ae=X,t.width=Math.floor(L*ve),t.height=Math.floor(X*ve),Q===!0&&(t.style.width=L+"px",t.style.height=X+"px"),this.setViewport(0,0,L,X)},this.getDrawingBufferSize=function(L){return L.set(se*ve,ae*ve).floor()},this.setDrawingBufferSize=function(L,X,Q){se=L,ae=X,ve=Q,t.width=Math.floor(L*Q),t.height=Math.floor(X*Q),this.setViewport(0,0,L,X)},this.getCurrentViewport=function(L){return L.copy(b)},this.getViewport=function(L){return L.copy(J)},this.setViewport=function(L,X,Q,ee){L.isVector4?J.set(L.x,L.y,L.z,L.w):J.set(L,X,Q,ee),me.viewport(b.copy(J).multiplyScalar(ve).round())},this.getScissor=function(L){return L.copy(he)},this.setScissor=function(L,X,Q,ee){L.isVector4?he.set(L.x,L.y,L.z,L.w):he.set(L,X,Q,ee),me.scissor(F.copy(he).multiplyScalar(ve).round())},this.getScissorTest=function(){return Ie},this.setScissorTest=function(L){me.setScissorTest(Ie=L)},this.setOpaqueSort=function(L){H=L},this.setTransparentSort=function(L){$=L},this.getClearColor=function(L){return L.copy(Oe.getClearColor())},this.setClearColor=function(){Oe.setClearColor.apply(Oe,arguments)},this.getClearAlpha=function(){return Oe.getClearAlpha()},this.setClearAlpha=function(){Oe.setClearAlpha.apply(Oe,arguments)},this.clear=function(L=!0,X=!0,Q=!0){let ee=0;if(L){let K=!1;if(I!==null){const Re=I.texture.format;K=Re===kd||Re===Bd||Re===zd}if(K){const Re=I.texture.type,Ge=Re===ki||Re===ys||Re===Nd||Re===Ao||Re===Ud||Re===Od,Je=Oe.getClearColor(),tt=Oe.getClearAlpha(),it=Je.r,$e=Je.g,rt=Je.b;Ge?(v[0]=it,v[1]=$e,v[2]=rt,v[3]=tt,W.clearBufferuiv(W.COLOR,0,v)):(y[0]=it,y[1]=$e,y[2]=rt,y[3]=tt,W.clearBufferiv(W.COLOR,0,y))}else ee|=W.COLOR_BUFFER_BIT}X&&(ee|=W.DEPTH_BUFFER_BIT),Q&&(ee|=W.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),W.clear(ee)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ee,!1),t.removeEventListener("webglcontextrestored",Se,!1),t.removeEventListener("webglcontextcreationerror",Xe,!1),Ze.dispose(),Me.dispose(),N.dispose(),Y.dispose(),re.dispose(),qe.dispose(),_t.dispose(),Dt.dispose(),de.dispose(),B.dispose(),B.removeEventListener("sessionstart",Wn),B.removeEventListener("sessionend",Xn),Gi.stop()};function Ee(L){L.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),A=!0}function Se(){console.log("THREE.WebGLRenderer: Context Restored."),A=!1;const L=_e.autoReset,X=nt.enabled,Q=nt.autoUpdate,ee=nt.needsUpdate,K=nt.type;Ve(),_e.autoReset=L,nt.enabled=X,nt.autoUpdate=Q,nt.needsUpdate=ee,nt.type=K}function Xe(L){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",L.statusMessage)}function Ye(L){const X=L.target;X.removeEventListener("dispose",Ye),Pt(X)}function Pt(L){Lt(L),N.remove(L)}function Lt(L){const X=N.get(L).programs;X!==void 0&&(X.forEach(function(Q){de.releaseProgram(Q)}),L.isShaderMaterial&&de.releaseShaderCache(L))}this.renderBufferDirect=function(L,X,Q,ee,K,Re){X===null&&(X=st);const Ge=K.isMesh&&K.matrixWorld.determinant()<0,Je=Du(L,X,Q,ee,K);me.setMaterial(ee,Ge);let tt=Q.index,it=1;if(ee.wireframe===!0){if(tt=fe.getWireframeAttribute(Q),tt===void 0)return;it=2}const $e=Q.drawRange,rt=Q.attributes.position;let Ft=$e.start*it,An=($e.start+$e.count)*it;Re!==null&&(Ft=Math.max(Ft,Re.start*it),An=Math.min(An,(Re.start+Re.count)*it)),tt!==null?(Ft=Math.max(Ft,0),An=Math.min(An,tt.count)):rt!=null&&(Ft=Math.max(Ft,0),An=Math.min(An,rt.count));const Gt=An-Ft;if(Gt<0||Gt===1/0)return;_t.setup(K,ee,Je,Q,tt);let gn,yt=pt;if(tt!==null&&(gn=le.get(tt),yt=mt,yt.setIndex(gn)),K.isMesh)ee.wireframe===!0?(me.setLineWidth(ee.wireframeLinewidth*Qe()),yt.setMode(W.LINES)):yt.setMode(W.TRIANGLES);else if(K.isLine){let De=ee.linewidth;De===void 0&&(De=1),me.setLineWidth(De*Qe()),K.isLineSegments?yt.setMode(W.LINES):K.isLineLoop?yt.setMode(W.LINE_LOOP):yt.setMode(W.LINE_STRIP)}else K.isPoints?yt.setMode(W.POINTS):K.isSprite&&yt.setMode(W.TRIANGLES);if(K.isBatchedMesh)yt.renderMultiDraw(K._multiDrawStarts,K._multiDrawCounts,K._multiDrawCount);else if(K.isInstancedMesh)yt.renderInstances(Ft,Gt,K.count);else if(Q.isInstancedBufferGeometry){const De=Q._maxInstanceCount!==void 0?Q._maxInstanceCount:1/0,At=Math.min(Q.instanceCount,De);yt.renderInstances(Ft,Gt,At)}else yt.render(Ft,Gt)};function Ut(L,X,Q){L.transparent===!0&&L.side===Oi&&L.forceSinglePass===!1?(L.side=Nn,L.needsUpdate=!0,bi(L,X,Q),L.side=or,L.needsUpdate=!0,bi(L,X,Q),L.side=Oi):bi(L,X,Q)}this.compile=function(L,X,Q=null){Q===null&&(Q=L),x=Me.get(Q),x.init(),E.push(x),Q.traverseVisible(function(K){K.isLight&&K.layers.test(X.layers)&&(x.pushLight(K),K.castShadow&&x.pushShadow(K))}),L!==Q&&L.traverseVisible(function(K){K.isLight&&K.layers.test(X.layers)&&(x.pushLight(K),K.castShadow&&x.pushShadow(K))}),x.setupLights(w._useLegacyLights);const ee=new Set;return L.traverse(function(K){const Re=K.material;if(Re)if(Array.isArray(Re))for(let Ge=0;Ge<Re.length;Ge++){const Je=Re[Ge];Ut(Je,Q,K),ee.add(Je)}else Ut(Re,Q,K),ee.add(Re)}),E.pop(),x=null,ee},this.compileAsync=function(L,X,Q=null){const ee=this.compile(L,X,Q);return new Promise(K=>{function Re(){if(ee.forEach(function(Ge){N.get(Ge).currentProgram.isReady()&&ee.delete(Ge)}),ee.size===0){K(L);return}setTimeout(Re,10)}oe.get("KHR_parallel_shader_compile")!==null?Re():setTimeout(Re,10)})};let sn=null;function It(L){sn&&sn(L)}function Wn(){Gi.stop()}function Xn(){Gi.start()}const Gi=new v_;Gi.setAnimationLoop(It),typeof self<"u"&&Gi.setContext(self),this.setAnimationLoop=function(L){sn=L,B.setAnimationLoop(L),L===null?Gi.stop():Gi.start()},B.addEventListener("sessionstart",Wn),B.addEventListener("sessionend",Xn),this.render=function(L,X){if(X!==void 0&&X.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(A===!0)return;L.matrixWorldAutoUpdate===!0&&L.updateMatrixWorld(),X.parent===null&&X.matrixWorldAutoUpdate===!0&&X.updateMatrixWorld(),B.enabled===!0&&B.isPresenting===!0&&(B.cameraAutoUpdate===!0&&B.updateCamera(X),X=B.getCamera()),L.isScene===!0&&L.onBeforeRender(w,L,X,I),x=Me.get(L,E.length),x.init(),E.push(x),Ce.multiplyMatrices(X.projectionMatrix,X.matrixWorldInverse),Be.setFromProjectionMatrix(Ce),pe=this.localClippingEnabled,ne=Ne.init(this.clippingPlanes,pe),S=Ze.get(L,_.length),S.init(),_.push(S),Qa(L,X,0,w.sortObjects),S.finish(),w.sortObjects===!0&&S.sort(H,$),this.info.render.frame++,ne===!0&&Ne.beginShadows();const Q=x.state.shadowsArray;if(nt.render(Q,L,X),ne===!0&&Ne.endShadows(),this.info.autoReset===!0&&this.info.reset(),(B.enabled===!1||B.isPresenting===!1||B.hasDepthSensing()===!1)&&Oe.render(S,L),x.setupLights(w._useLegacyLights),X.isArrayCamera){const ee=X.cameras;for(let K=0,Re=ee.length;K<Re;K++){const Ge=ee[K];$a(S,L,Ge,Ge.viewport)}}else $a(S,L,X);I!==null&&(C.updateMultisampleRenderTarget(I),C.updateRenderTargetMipmap(I)),L.isScene===!0&&L.onAfterRender(w,L,X),_t.resetDefaultState(),z=-1,R=null,E.pop(),E.length>0?x=E[E.length-1]:x=null,_.pop(),_.length>0?S=_[_.length-1]:S=null};function Qa(L,X,Q,ee){if(L.visible===!1)return;if(L.layers.test(X.layers)){if(L.isGroup)Q=L.renderOrder;else if(L.isLOD)L.autoUpdate===!0&&L.update(X);else if(L.isLight)x.pushLight(L),L.castShadow&&x.pushShadow(L);else if(L.isSprite){if(!L.frustumCulled||Be.intersectsSprite(L)){ee&&et.setFromMatrixPosition(L.matrixWorld).applyMatrix4(Ce);const Ge=qe.update(L),Je=L.material;Je.visible&&S.push(L,Ge,Je,Q,et.z,null)}}else if((L.isMesh||L.isLine||L.isPoints)&&(!L.frustumCulled||Be.intersectsObject(L))){const Ge=qe.update(L),Je=L.material;if(ee&&(L.boundingSphere!==void 0?(L.boundingSphere===null&&L.computeBoundingSphere(),et.copy(L.boundingSphere.center)):(Ge.boundingSphere===null&&Ge.computeBoundingSphere(),et.copy(Ge.boundingSphere.center)),et.applyMatrix4(L.matrixWorld).applyMatrix4(Ce)),Array.isArray(Je)){const tt=Ge.groups;for(let it=0,$e=tt.length;it<$e;it++){const rt=tt[it],Ft=Je[rt.materialIndex];Ft&&Ft.visible&&S.push(L,Ge,Ft,Q,et.z,rt)}}else Je.visible&&S.push(L,Ge,Je,Q,et.z,null)}}const Re=L.children;for(let Ge=0,Je=Re.length;Ge<Je;Ge++)Qa(Re[Ge],X,Q,ee)}function $a(L,X,Q,ee){const K=L.opaque,Re=L.transmissive,Ge=L.transparent;x.setupLightsView(Q),ne===!0&&Ne.setGlobalState(w.clippingPlanes,Q),Re.length>0&&el(K,Re,X,Q),ee&&me.viewport(b.copy(ee)),K.length>0&&hr(K,X,Q),Re.length>0&&hr(Re,X,Q),Ge.length>0&&hr(Ge,X,Q),me.buffers.depth.setTest(!0),me.buffers.depth.setMask(!0),me.buffers.color.setMask(!0),me.setPolygonOffset(!1)}function el(L,X,Q,ee){if((Q.isScene===!0?Q.overrideMaterial:null)!==null)return;if(x.state.transmissionRenderTarget===null){x.state.transmissionRenderTarget=new wi(1,1,{generateMipmaps:!0,type:oe.has("EXT_color_buffer_half_float")||oe.has("EXT_color_buffer_float")?wa:ki,minFilter:Fi,samples:4,stencilBuffer:s});const it=N.get(x.state.transmissionRenderTarget);it.__isTransmissionRenderTarget=!0}const Re=x.state.transmissionRenderTarget;w.getDrawingBufferSize(ye),Re.setSize(ye.x,ye.y);const Ge=w.getRenderTarget();w.setRenderTarget(Re),w.getClearColor(k),Z=w.getClearAlpha(),Z<1&&w.setClearColor(16777215,.5),w.clear();const Je=w.toneMapping;w.toneMapping=Bi,hr(L,Q,ee),C.updateMultisampleRenderTarget(Re),C.updateRenderTargetMipmap(Re);let tt=!1;for(let it=0,$e=X.length;it<$e;it++){const rt=X[it],Ft=rt.object,An=rt.geometry,Gt=rt.material,gn=rt.group;if(Gt.side===Oi&&Ft.layers.test(ee.layers)){const yt=Gt.side;Gt.side=Nn,Gt.needsUpdate=!0,tl(Ft,Q,ee,An,Gt,gn),Gt.side=yt,Gt.needsUpdate=!0,tt=!0}}tt===!0&&(C.updateMultisampleRenderTarget(Re),C.updateRenderTargetMipmap(Re)),w.setRenderTarget(Ge),w.setClearColor(k,Z),w.toneMapping=Je}function hr(L,X,Q){const ee=X.isScene===!0?X.overrideMaterial:null;for(let K=0,Re=L.length;K<Re;K++){const Ge=L[K],Je=Ge.object,tt=Ge.geometry,it=ee===null?Ge.material:ee,$e=Ge.group;Je.layers.test(Q.layers)&&tl(Je,X,Q,tt,it,$e)}}function tl(L,X,Q,ee,K,Re){L.onBeforeRender(w,X,Q,ee,K,Re),L.modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,L.matrixWorld),L.normalMatrix.getNormalMatrix(L.modelViewMatrix),K.onBeforeRender(w,X,Q,ee,L,Re),K.transparent===!0&&K.side===Oi&&K.forceSinglePass===!1?(K.side=Nn,K.needsUpdate=!0,w.renderBufferDirect(Q,X,ee,K,L,Re),K.side=or,K.needsUpdate=!0,w.renderBufferDirect(Q,X,ee,K,L,Re),K.side=Oi):w.renderBufferDirect(Q,X,ee,K,L,Re),L.onAfterRender(w,X,Q,ee,K,Re)}function bi(L,X,Q){X.isScene!==!0&&(X=st);const ee=N.get(L),K=x.state.lights,Re=x.state.shadowsArray,Ge=K.state.version,Je=de.getParameters(L,K.state,Re,X,Q),tt=de.getProgramCacheKey(Je);let it=ee.programs;ee.environment=L.isMeshStandardMaterial?X.environment:null,ee.fog=X.fog,ee.envMap=(L.isMeshStandardMaterial?re:Y).get(L.envMap||ee.environment),ee.envMapRotation=ee.environment!==null&&L.envMap===null?X.environmentRotation:L.envMapRotation,it===void 0&&(L.addEventListener("dispose",Ye),it=new Map,ee.programs=it);let $e=it.get(tt);if($e!==void 0){if(ee.currentProgram===$e&&ee.lightsStateVersion===Ge)return il(L,Je),$e}else Je.uniforms=de.getUniforms(L),L.onBuild(Q,Je,w),L.onBeforeCompile(Je,w),$e=de.acquireProgram(Je,tt),it.set(tt,$e),ee.uniforms=Je.uniforms;const rt=ee.uniforms;return(!L.isShaderMaterial&&!L.isRawShaderMaterial||L.clipping===!0)&&(rt.clippingPlanes=Ne.uniform),il(L,Je),ee.needsLights=Ou(L),ee.lightsStateVersion=Ge,ee.needsLights&&(rt.ambientLightColor.value=K.state.ambient,rt.lightProbe.value=K.state.probe,rt.directionalLights.value=K.state.directional,rt.directionalLightShadows.value=K.state.directionalShadow,rt.spotLights.value=K.state.spot,rt.spotLightShadows.value=K.state.spotShadow,rt.rectAreaLights.value=K.state.rectArea,rt.ltc_1.value=K.state.rectAreaLTC1,rt.ltc_2.value=K.state.rectAreaLTC2,rt.pointLights.value=K.state.point,rt.pointLightShadows.value=K.state.pointShadow,rt.hemisphereLights.value=K.state.hemi,rt.directionalShadowMap.value=K.state.directionalShadowMap,rt.directionalShadowMatrix.value=K.state.directionalShadowMatrix,rt.spotShadowMap.value=K.state.spotShadowMap,rt.spotLightMatrix.value=K.state.spotLightMatrix,rt.spotLightMap.value=K.state.spotLightMap,rt.pointShadowMap.value=K.state.pointShadowMap,rt.pointShadowMatrix.value=K.state.pointShadowMatrix),ee.currentProgram=$e,ee.uniformsList=null,$e}function nl(L){if(L.uniformsList===null){const X=L.currentProgram.getUniforms();L.uniformsList=Qc.seqWithValue(X.seq,L.uniforms)}return L.uniformsList}function il(L,X){const Q=N.get(L);Q.outputColorSpace=X.outputColorSpace,Q.batching=X.batching,Q.instancing=X.instancing,Q.instancingColor=X.instancingColor,Q.instancingMorph=X.instancingMorph,Q.skinning=X.skinning,Q.morphTargets=X.morphTargets,Q.morphNormals=X.morphNormals,Q.morphColors=X.morphColors,Q.morphTargetsCount=X.morphTargetsCount,Q.numClippingPlanes=X.numClippingPlanes,Q.numIntersection=X.numClipIntersection,Q.vertexAlphas=X.vertexAlphas,Q.vertexTangents=X.vertexTangents,Q.toneMapping=X.toneMapping}function Du(L,X,Q,ee,K){X.isScene!==!0&&(X=st),C.resetTextureUnits();const Re=X.fog,Ge=ee.isMeshStandardMaterial?X.environment:null,Je=I===null?w.outputColorSpace:I.isXRRenderTarget===!0?I.texture.colorSpace:cr,tt=(ee.isMeshStandardMaterial?re:Y).get(ee.envMap||Ge),it=ee.vertexColors===!0&&!!Q.attributes.color&&Q.attributes.color.itemSize===4,$e=!!Q.attributes.tangent&&(!!ee.normalMap||ee.anisotropy>0),rt=!!Q.morphAttributes.position,Ft=!!Q.morphAttributes.normal,An=!!Q.morphAttributes.color;let Gt=Bi;ee.toneMapped&&(I===null||I.isXRRenderTarget===!0)&&(Gt=w.toneMapping);const gn=Q.morphAttributes.position||Q.morphAttributes.normal||Q.morphAttributes.color,yt=gn!==void 0?gn.length:0,De=N.get(ee),At=x.state.lights;if(ne===!0&&(pe===!0||L!==R)){const bn=L===R&&ee.id===z;Ne.setState(ee,L,bn)}let gt=!1;ee.version===De.__version?(De.needsLights&&De.lightsStateVersion!==At.state.version||De.outputColorSpace!==Je||K.isBatchedMesh&&De.batching===!1||!K.isBatchedMesh&&De.batching===!0||K.isInstancedMesh&&De.instancing===!1||!K.isInstancedMesh&&De.instancing===!0||K.isSkinnedMesh&&De.skinning===!1||!K.isSkinnedMesh&&De.skinning===!0||K.isInstancedMesh&&De.instancingColor===!0&&K.instanceColor===null||K.isInstancedMesh&&De.instancingColor===!1&&K.instanceColor!==null||K.isInstancedMesh&&De.instancingMorph===!0&&K.morphTexture===null||K.isInstancedMesh&&De.instancingMorph===!1&&K.morphTexture!==null||De.envMap!==tt||ee.fog===!0&&De.fog!==Re||De.numClippingPlanes!==void 0&&(De.numClippingPlanes!==Ne.numPlanes||De.numIntersection!==Ne.numIntersection)||De.vertexAlphas!==it||De.vertexTangents!==$e||De.morphTargets!==rt||De.morphNormals!==Ft||De.morphColors!==An||De.toneMapping!==Gt||De.morphTargetsCount!==yt)&&(gt=!0):(gt=!0,De.__version=ee.version);let Bt=De.currentProgram;gt===!0&&(Bt=bi(ee,X,K));let dn=!1,qn=!1,Ci=!1;const Tt=Bt.getUniforms(),Yn=De.uniforms;if(me.useProgram(Bt.program)&&(dn=!0,qn=!0,Ci=!0),ee.id!==z&&(z=ee.id,qn=!0),dn||R!==L){Tt.setValue(W,"projectionMatrix",L.projectionMatrix),Tt.setValue(W,"viewMatrix",L.matrixWorldInverse);const bn=Tt.map.cameraPosition;bn!==void 0&&bn.setValue(W,et.setFromMatrixPosition(L.matrixWorld)),xe.logarithmicDepthBuffer&&Tt.setValue(W,"logDepthBufFC",2/(Math.log(L.far+1)/Math.LN2)),(ee.isMeshPhongMaterial||ee.isMeshToonMaterial||ee.isMeshLambertMaterial||ee.isMeshBasicMaterial||ee.isMeshStandardMaterial||ee.isShaderMaterial)&&Tt.setValue(W,"isOrthographic",L.isOrthographicCamera===!0),R!==L&&(R=L,qn=!0,Ci=!0)}if(K.isSkinnedMesh){Tt.setOptional(W,K,"bindMatrix"),Tt.setOptional(W,K,"bindMatrixInverse");const bn=K.skeleton;bn&&(bn.boneTexture===null&&bn.computeBoneTexture(),Tt.setValue(W,"boneTexture",bn.boneTexture,C))}K.isBatchedMesh&&(Tt.setOptional(W,K,"batchingTexture"),Tt.setValue(W,"batchingTexture",K._matricesTexture,C));const As=Q.morphAttributes;if((As.position!==void 0||As.normal!==void 0||As.color!==void 0)&&Fe.update(K,Q,Bt),(qn||De.receiveShadow!==K.receiveShadow)&&(De.receiveShadow=K.receiveShadow,Tt.setValue(W,"receiveShadow",K.receiveShadow)),ee.isMeshGouraudMaterial&&ee.envMap!==null&&(Yn.envMap.value=tt,Yn.flipEnvMap.value=tt.isCubeTexture&&tt.isRenderTargetTexture===!1?-1:1),ee.isMeshStandardMaterial&&ee.envMap===null&&X.environment!==null&&(Yn.envMapIntensity.value=X.environmentIntensity),qn&&(Tt.setValue(W,"toneMappingExposure",w.toneMappingExposure),De.needsLights&&Uu(Yn,Ci),Re&&ee.fog===!0&&He.refreshFogUniforms(Yn,Re),He.refreshMaterialUniforms(Yn,ee,ve,ae,x.state.transmissionRenderTarget),Qc.upload(W,nl(De),Yn,C)),ee.isShaderMaterial&&ee.uniformsNeedUpdate===!0&&(Qc.upload(W,nl(De),Yn,C),ee.uniformsNeedUpdate=!1),ee.isSpriteMaterial&&Tt.setValue(W,"center",K.center),Tt.setValue(W,"modelViewMatrix",K.modelViewMatrix),Tt.setValue(W,"normalMatrix",K.normalMatrix),Tt.setValue(W,"modelMatrix",K.matrixWorld),ee.isShaderMaterial||ee.isRawShaderMaterial){const bn=ee.uniformsGroups;for(let fr=0,rl=bn.length;fr<rl;fr++){const On=bn[fr];Dt.update(On,Bt),Dt.bind(On,Bt)}}return Bt}function Uu(L,X){L.ambientLightColor.needsUpdate=X,L.lightProbe.needsUpdate=X,L.directionalLights.needsUpdate=X,L.directionalLightShadows.needsUpdate=X,L.pointLights.needsUpdate=X,L.pointLightShadows.needsUpdate=X,L.spotLights.needsUpdate=X,L.spotLightShadows.needsUpdate=X,L.rectAreaLights.needsUpdate=X,L.hemisphereLights.needsUpdate=X}function Ou(L){return L.isMeshLambertMaterial||L.isMeshToonMaterial||L.isMeshPhongMaterial||L.isMeshStandardMaterial||L.isShadowMaterial||L.isShaderMaterial&&L.lights===!0}this.getActiveCubeFace=function(){return U},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(L,X,Q){N.get(L.texture).__webglTexture=X,N.get(L.depthTexture).__webglTexture=Q;const ee=N.get(L);ee.__hasExternalTextures=!0,ee.__autoAllocateDepthBuffer=Q===void 0,ee.__autoAllocateDepthBuffer||oe.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ee.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(L,X){const Q=N.get(L);Q.__webglFramebuffer=X,Q.__useDefaultFramebuffer=X===void 0},this.setRenderTarget=function(L,X=0,Q=0){I=L,U=X,P=Q;let ee=!0,K=null,Re=!1,Ge=!1;if(L){const tt=N.get(L);tt.__useDefaultFramebuffer!==void 0?(me.bindFramebuffer(W.FRAMEBUFFER,null),ee=!1):tt.__webglFramebuffer===void 0?C.setupRenderTarget(L):tt.__hasExternalTextures&&C.rebindTextures(L,N.get(L.texture).__webglTexture,N.get(L.depthTexture).__webglTexture);const it=L.texture;(it.isData3DTexture||it.isDataArrayTexture||it.isCompressedArrayTexture)&&(Ge=!0);const $e=N.get(L).__webglFramebuffer;L.isWebGLCubeRenderTarget?(Array.isArray($e[X])?K=$e[X][Q]:K=$e[X],Re=!0):L.samples>0&&C.useMultisampledRTT(L)===!1?K=N.get(L).__webglMultisampledFramebuffer:Array.isArray($e)?K=$e[Q]:K=$e,b.copy(L.viewport),F.copy(L.scissor),q=L.scissorTest}else b.copy(J).multiplyScalar(ve).floor(),F.copy(he).multiplyScalar(ve).floor(),q=Ie;if(me.bindFramebuffer(W.FRAMEBUFFER,K)&&ee&&me.drawBuffers(L,K),me.viewport(b),me.scissor(F),me.setScissorTest(q),Re){const tt=N.get(L.texture);W.framebufferTexture2D(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,W.TEXTURE_CUBE_MAP_POSITIVE_X+X,tt.__webglTexture,Q)}else if(Ge){const tt=N.get(L.texture),it=X||0;W.framebufferTextureLayer(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,tt.__webglTexture,Q||0,it)}z=-1},this.readRenderTargetPixels=function(L,X,Q,ee,K,Re,Ge){if(!(L&&L.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Je=N.get(L).__webglFramebuffer;if(L.isWebGLCubeRenderTarget&&Ge!==void 0&&(Je=Je[Ge]),Je){me.bindFramebuffer(W.FRAMEBUFFER,Je);try{const tt=L.texture,it=tt.format,$e=tt.type;if(it!==Hn&&Et.convert(it)!==W.getParameter(W.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const rt=$e===wa&&(oe.has("EXT_color_buffer_half_float")||oe.has("EXT_color_buffer_float"));if($e!==ki&&Et.convert($e)!==W.getParameter(W.IMPLEMENTATION_COLOR_READ_TYPE)&&$e!==mi&&!rt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}X>=0&&X<=L.width-ee&&Q>=0&&Q<=L.height-K&&W.readPixels(X,Q,ee,K,Et.convert(it),Et.convert($e),Re)}finally{const tt=I!==null?N.get(I).__webglFramebuffer:null;me.bindFramebuffer(W.FRAMEBUFFER,tt)}}},this.copyFramebufferToTexture=function(L,X,Q=0){const ee=Math.pow(2,-Q),K=Math.floor(X.image.width*ee),Re=Math.floor(X.image.height*ee);C.setTexture2D(X,0),W.copyTexSubImage2D(W.TEXTURE_2D,Q,0,0,L.x,L.y,K,Re),me.unbindTexture()},this.copyTextureToTexture=function(L,X,Q,ee=0){const K=X.image.width,Re=X.image.height,Ge=Et.convert(Q.format),Je=Et.convert(Q.type);C.setTexture2D(Q,0),W.pixelStorei(W.UNPACK_FLIP_Y_WEBGL,Q.flipY),W.pixelStorei(W.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Q.premultiplyAlpha),W.pixelStorei(W.UNPACK_ALIGNMENT,Q.unpackAlignment),X.isDataTexture?W.texSubImage2D(W.TEXTURE_2D,ee,L.x,L.y,K,Re,Ge,Je,X.image.data):X.isCompressedTexture?W.compressedTexSubImage2D(W.TEXTURE_2D,ee,L.x,L.y,X.mipmaps[0].width,X.mipmaps[0].height,Ge,X.mipmaps[0].data):W.texSubImage2D(W.TEXTURE_2D,ee,L.x,L.y,Ge,Je,X.image),ee===0&&Q.generateMipmaps&&W.generateMipmap(W.TEXTURE_2D),me.unbindTexture()},this.copyTextureToTexture3D=function(L,X,Q,ee,K=0){const Re=Math.round(L.max.x-L.min.x),Ge=Math.round(L.max.y-L.min.y),Je=L.max.z-L.min.z+1,tt=Et.convert(ee.format),it=Et.convert(ee.type);let $e;if(ee.isData3DTexture)C.setTexture3D(ee,0),$e=W.TEXTURE_3D;else if(ee.isDataArrayTexture||ee.isCompressedArrayTexture)C.setTexture2DArray(ee,0),$e=W.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}W.pixelStorei(W.UNPACK_FLIP_Y_WEBGL,ee.flipY),W.pixelStorei(W.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ee.premultiplyAlpha),W.pixelStorei(W.UNPACK_ALIGNMENT,ee.unpackAlignment);const rt=W.getParameter(W.UNPACK_ROW_LENGTH),Ft=W.getParameter(W.UNPACK_IMAGE_HEIGHT),An=W.getParameter(W.UNPACK_SKIP_PIXELS),Gt=W.getParameter(W.UNPACK_SKIP_ROWS),gn=W.getParameter(W.UNPACK_SKIP_IMAGES),yt=Q.isCompressedTexture?Q.mipmaps[K]:Q.image;W.pixelStorei(W.UNPACK_ROW_LENGTH,yt.width),W.pixelStorei(W.UNPACK_IMAGE_HEIGHT,yt.height),W.pixelStorei(W.UNPACK_SKIP_PIXELS,L.min.x),W.pixelStorei(W.UNPACK_SKIP_ROWS,L.min.y),W.pixelStorei(W.UNPACK_SKIP_IMAGES,L.min.z),Q.isDataTexture||Q.isData3DTexture?W.texSubImage3D($e,K,X.x,X.y,X.z,Re,Ge,Je,tt,it,yt.data):ee.isCompressedArrayTexture?W.compressedTexSubImage3D($e,K,X.x,X.y,X.z,Re,Ge,Je,tt,yt.data):W.texSubImage3D($e,K,X.x,X.y,X.z,Re,Ge,Je,tt,it,yt),W.pixelStorei(W.UNPACK_ROW_LENGTH,rt),W.pixelStorei(W.UNPACK_IMAGE_HEIGHT,Ft),W.pixelStorei(W.UNPACK_SKIP_PIXELS,An),W.pixelStorei(W.UNPACK_SKIP_ROWS,Gt),W.pixelStorei(W.UNPACK_SKIP_IMAGES,gn),K===0&&ee.generateMipmaps&&W.generateMipmap($e),me.unbindTexture()},this.initTexture=function(L){L.isCubeTexture?C.setTextureCube(L,0):L.isData3DTexture?C.setTexture3D(L,0):L.isDataArrayTexture||L.isCompressedArrayTexture?C.setTexture2DArray(L,0):C.setTexture2D(L,0),me.unbindTexture()},this.resetState=function(){U=0,P=0,I=null,me.reset(),_t.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return zi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===uu?"display-p3":"srgb",t.unpackColorSpace=bt.workingColorSpace===Va?"display-p3":"srgb"}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class du{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Le(e),this.density=t}clone(){return new du(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class pu{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Le(e),this.near=t,this.far=n}clone(){return new pu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}let nu=class extends wt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new ii,this.environmentIntensity=1,this.environmentRotation=new ii,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}};class mu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Pa,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=ni()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return c_("THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ni()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ni()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Pn=new D;class xs{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Pn.fromBufferAttribute(this,t),Pn.applyMatrix4(e),this.setXYZ(t,Pn.x,Pn.y,Pn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Pn.fromBufferAttribute(this,t),Pn.applyNormalMatrix(e),this.setXYZ(t,Pn.x,Pn.y,Pn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Pn.fromBufferAttribute(this,t),Pn.transformDirection(e),this.setXYZ(t,Pn.x,Pn.y,Pn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Ln(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=lt(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=lt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=lt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=lt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=lt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Ln(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Ln(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Ln(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Ln(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=lt(t,this.array),n=lt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=lt(t,this.array),n=lt(n,this.array),i=lt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=lt(t,this.array),n=lt(n,this.array),i=lt(i,this.array),s=lt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Rt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new xs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Qd extends mn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let to;const ta=new D,no=new D,io=new D,ro=new ue,na=new ue,A_=new Ke,_c=new D,ia=new D,yc=new D,Hg=new ue,df=new ue,Vg=new ue;class b_ extends wt{constructor(e=new Qd){if(super(),this.isSprite=!0,this.type="Sprite",to===void 0){to=new ut;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new mu(t,5);to.setIndex([0,1,2,0,2,3]),to.setAttribute("position",new xs(n,3,0,!1)),to.setAttribute("uv",new xs(n,2,3,!1))}this.geometry=to,this.material=e,this.center=new ue(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),no.setFromMatrixScale(this.matrixWorld),A_.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),io.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&no.multiplyScalar(-io.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const a=this.center;xc(_c.set(-.5,-.5,0),io,a,no,i,s),xc(ia.set(.5,-.5,0),io,a,no,i,s),xc(yc.set(.5,.5,0),io,a,no,i,s),Hg.set(0,0),df.set(1,0),Vg.set(1,1);let c=e.ray.intersectTriangle(_c,ia,yc,!1,ta);if(c===null&&(xc(ia.set(-.5,.5,0),io,a,no,i,s),df.set(0,1),c=e.ray.intersectTriangle(_c,yc,ia,!1,ta),c===null))return;const u=e.ray.origin.distanceTo(ta);u<e.near||u>e.far||t.push({distance:u,point:ta.clone(),uv:ei.getInterpolation(ta,_c,ia,yc,Hg,df,Vg,new ue),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function xc(r,e,t,n,i,s){ro.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(na.x=s*ro.x-i*ro.y,na.y=i*ro.x+s*ro.y):na.copy(ro),r.copy(e),r.x+=na.x,r.y+=na.y,r.applyMatrix4(A_)}const Mc=new D,Gg=new D;class C_ extends wt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Mc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Mc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Mc.setFromMatrixPosition(e.matrixWorld),Gg.setFromMatrixPosition(this.matrixWorld);const n=Mc.distanceTo(Gg)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let a=t[i].distance;if(t[i].object.visible&&(a-=a*t[i].hysteresis),n>=a)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return t}}const Wg=new D,Xg=new Ct,qg=new Ct,KT=new D,Yg=new Ke,Sc=new D,pf=new Tn,jg=new Ke,mf=new bo;class R_ extends $t{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Wf,this.bindMatrix=new Ke,this.bindMatrixInverse=new Ke,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Dn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Sc),this.boundingBox.expandByPoint(Sc)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Tn),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Sc),this.boundingSphere.expandByPoint(Sc)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),pf.copy(this.boundingSphere),pf.applyMatrix4(i),e.ray.intersectsSphere(pf)!==!1&&(jg.copy(i).invert(),mf.copy(e.ray).applyMatrix4(jg),!(this.boundingBox!==null&&mf.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,mf)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Ct,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Wf?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Ov?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;Xg.fromBufferAttribute(i.attributes.skinIndex,e),qg.fromBufferAttribute(i.attributes.skinWeight,e),Wg.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const a=qg.getComponent(s);if(a!==0){const c=Xg.getComponent(s);Yg.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(KT.copy(Wg).applyMatrix4(Yg),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}class $d extends wt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Ir extends rn{constructor(e=null,t=1,n=1,i,s,a,c,u,h=fn,f=fn,p,m){super(null,a,c,u,h,f,i,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Zg=new Ke,QT=new Ke;class gu{constructor(e=[],t=[]){this.uuid=ni(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Ke)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new Ke;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,a=e.length;s<a;s++){const c=e[s]?e[s].matrixWorld:QT;Zg.multiplyMatrices(c,t[s]),Zg.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new gu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Ir(t,e,e,Hn,mi);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let a=t[s];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),a=new $d),this.bones.push(a),this.boneInverses.push(new Ke().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const a=t[i];e.bones.push(a.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class wo extends Rt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const so=new Ke,Jg=new Ke,wc=[],Kg=new Dn,$T=new Ke,ra=new $t,sa=new Tn;class P_ extends $t{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new wo(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,$T)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Dn),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,so),Kg.copy(e.boundingBox).applyMatrix4(so),this.boundingBox.union(Kg)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Tn),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,so),sa.copy(e.boundingSphere).applyMatrix4(so),this.boundingSphere.union(sa)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,s=n.length+1,a=e*s+1;for(let c=0;c<n.length;c++)n[c]=i[a+c]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(ra.geometry=this.geometry,ra.material=this.material,ra.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),sa.copy(this.boundingSphere),sa.applyMatrix4(n),e.ray.intersectsSphere(sa)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,so),Jg.multiplyMatrices(n,so),ra.matrixWorld=Jg,ra.raycast(e,wc);for(let a=0,c=wc.length;a<c;a++){const u=wc[a];u.instanceId=s,u.object=this,t.push(u)}wc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new wo(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new Ir(new Float32Array(i*this.count),i,this.count,Fd,mi));const s=this.morphTexture.source.data.data;let a=0;for(let h=0;h<n.length;h++)a+=n[h];const c=this.geometry.morphTargetsRelative?1:1-a,u=i*e;s[u]=c,s.set(n,u+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}}function eA(r,e){return r.z-e.z}function tA(r,e){return e.z-r.z}class nA{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t){const n=this.pool,i=this.list;this.index>=n.length&&n.push({start:-1,count:-1,z:-1});const s=n[this.index];i.push(s),this.index++,s.start=e.start,s.count=e.count,s.z=t}reset(){this.list.length=0,this.index=0}}const oo="batchId",br=new Ke,Qg=new Ke,iA=new Ke,$g=new Ke,gf=new Xa,Ec=new Dn,es=new Tn,oa=new D,vf=new nA,wn=new $t,Tc=[];function rA(r,e,t=0){const n=e.itemSize;if(r.isInterleavedBufferAttribute||r.array.constructor!==e.array.constructor){const i=r.count;for(let s=0;s<i;s++)for(let a=0;a<n;a++)e.setComponent(s+t,a,r.getComponent(s,a))}else e.array.set(r.array,t*n);e.needsUpdate=!0}class I_ extends $t{get maxGeometryCount(){return this._maxGeometryCount}constructor(e,t,n=t*2,i){super(new ut,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawRanges=[],this._reservedRanges=[],this._visibility=[],this._active=[],this._bounds=[],this._maxGeometryCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._visibilityChanged=!0,this._matricesTexture=null,this._initMatricesTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxGeometryCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new Ir(t,e,e,Hn,mi);this._matricesTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxGeometryCount,s=this._maxIndexCount;if(this._geometryInitialized===!1){for(const c in e.attributes){const u=e.getAttribute(c),{array:h,itemSize:f,normalized:p}=u,m=new h.constructor(n*f),v=new Rt(m,f,p);t.setAttribute(c,v)}if(e.getIndex()!==null){const c=n>65536?new Uint32Array(s):new Uint16Array(s);t.setIndex(new Rt(c,1))}const a=i>65536?new Uint32Array(n):new Uint16Array(n);t.setAttribute(oo,new Rt(a,1)),this._geometryInitialized=!0}}_validateGeometry(e){if(e.getAttribute(oo))throw new Error(`BatchedMesh: Geometry cannot use attribute "${oo}"`);const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(n===oo)continue;if(!e.hasAttribute(n))throw new Error(`BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),s=t.getAttribute(n);if(i.itemSize!==s.itemSize||i.normalized!==s.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Dn);const e=this._geometryCount,t=this.boundingBox,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,br),this.getBoundingBoxAt(i,Ec).applyMatrix4(br),t.union(Ec))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Tn);const e=this._geometryCount,t=this.boundingSphere,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,br),this.getBoundingSphereAt(i,es).applyMatrix4(br),t.union(es))}addGeometry(e,t=-1,n=-1){if(this._initializeGeometry(e),this._validateGeometry(e),this._geometryCount>=this._maxGeometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");const i={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let s=null;const a=this._reservedRanges,c=this._drawRanges,u=this._bounds;this._geometryCount!==0&&(s=a[a.length-1]),t===-1?i.vertexCount=e.getAttribute("position").count:i.vertexCount=t,s===null?i.vertexStart=0:i.vertexStart=s.vertexStart+s.vertexCount;const h=e.getIndex(),f=h!==null;if(f&&(n===-1?i.indexCount=h.count:i.indexCount=n,s===null?i.indexStart=0:i.indexStart=s.indexStart+s.indexCount),i.indexStart!==-1&&i.indexStart+i.indexCount>this._maxIndexCount||i.vertexStart+i.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const p=this._visibility,m=this._active,v=this._matricesTexture,y=this._matricesTexture.image.data;p.push(!0),m.push(!0);const S=this._geometryCount;this._geometryCount++,iA.toArray(y,S*16),v.needsUpdate=!0,a.push(i),c.push({start:f?i.indexStart:i.vertexStart,count:-1}),u.push({boxInitialized:!1,box:new Dn,sphereInitialized:!1,sphere:new Tn});const x=this.geometry.getAttribute(oo);for(let _=0;_<i.vertexCount;_++)x.setX(i.vertexStart+_,S);return x.needsUpdate=!0,this.setGeometryAt(S,e),S}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,s=n.getIndex(),a=t.getIndex(),c=this._reservedRanges[e];if(i&&a.count>c.indexCount||t.attributes.position.count>c.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const u=c.vertexStart,h=c.vertexCount;for(const v in n.attributes){if(v===oo)continue;const y=t.getAttribute(v),S=n.getAttribute(v);rA(y,S,u);const x=y.itemSize;for(let _=y.count,E=h;_<E;_++){const w=u+_;for(let A=0;A<x;A++)S.setComponent(w,A,0)}S.needsUpdate=!0,S.addUpdateRange(u*x,h*x)}if(i){const v=c.indexStart;for(let y=0;y<a.count;y++)s.setX(v+y,u+a.getX(y));for(let y=a.count,S=c.indexCount;y<S;y++)s.setX(v+y,u);s.needsUpdate=!0,s.addUpdateRange(v,c.indexCount)}const f=this._bounds[e];t.boundingBox!==null?(f.box.copy(t.boundingBox),f.boxInitialized=!0):f.boxInitialized=!1,t.boundingSphere!==null?(f.sphere.copy(t.boundingSphere),f.sphereInitialized=!0):f.sphereInitialized=!1;const p=this._drawRanges[e],m=t.getAttribute("position");return p.count=i?a.count:m.count,this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._active;return e>=t.length||t[e]===!1?this:(t[e]=!1,this._visibilityChanged=!0,this)}getBoundingBoxAt(e,t){if(this._active[e]===!1)return null;const i=this._bounds[e],s=i.box,a=this.geometry;if(i.boxInitialized===!1){s.makeEmpty();const c=a.index,u=a.attributes.position,h=this._drawRanges[e];for(let f=h.start,p=h.start+h.count;f<p;f++){let m=f;c&&(m=c.getX(m)),s.expandByPoint(oa.fromBufferAttribute(u,m))}i.boxInitialized=!0}return t.copy(s),t}getBoundingSphereAt(e,t){if(this._active[e]===!1)return null;const i=this._bounds[e],s=i.sphere,a=this.geometry;if(i.sphereInitialized===!1){s.makeEmpty(),this.getBoundingBoxAt(e,Ec),Ec.getCenter(s.center);const c=a.index,u=a.attributes.position,h=this._drawRanges[e];let f=0;for(let p=h.start,m=h.start+h.count;p<m;p++){let v=p;c&&(v=c.getX(v)),oa.fromBufferAttribute(u,v),f=Math.max(f,s.center.distanceToSquared(oa))}s.radius=Math.sqrt(f),i.sphereInitialized=!0}return t.copy(s),t}setMatrixAt(e,t){const n=this._active,i=this._matricesTexture,s=this._matricesTexture.image.data,a=this._geometryCount;return e>=a||n[e]===!1?this:(t.toArray(s,e*16),i.needsUpdate=!0,this)}getMatrixAt(e,t){const n=this._active,i=this._matricesTexture.image.data,s=this._geometryCount;return e>=s||n[e]===!1?null:t.fromArray(i,e*16)}setVisibleAt(e,t){const n=this._visibility,i=this._active,s=this._geometryCount;return e>=s||i[e]===!1||n[e]===t?this:(n[e]=t,this._visibilityChanged=!0,this)}getVisibleAt(e){const t=this._visibility,n=this._active,i=this._geometryCount;return e>=i||n[e]===!1?!1:t[e]}raycast(e,t){const n=this._visibility,i=this._active,s=this._drawRanges,a=this._geometryCount,c=this.matrixWorld,u=this.geometry;wn.material=this.material,wn.geometry.index=u.index,wn.geometry.attributes=u.attributes,wn.geometry.boundingBox===null&&(wn.geometry.boundingBox=new Dn),wn.geometry.boundingSphere===null&&(wn.geometry.boundingSphere=new Tn);for(let h=0;h<a;h++){if(!n[h]||!i[h])continue;const f=s[h];wn.geometry.setDrawRange(f.start,f.count),this.getMatrixAt(h,wn.matrixWorld).premultiply(c),this.getBoundingBoxAt(h,wn.geometry.boundingBox),this.getBoundingSphereAt(h,wn.geometry.boundingSphere),wn.raycast(e,Tc);for(let p=0,m=Tc.length;p<m;p++){const v=Tc[p];v.object=this,v.batchId=h,t.push(v)}Tc.length=0}wn.material=null,wn.geometry.index=null,wn.geometry.attributes={},wn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._drawRanges=e._drawRanges.map(t=>({...t})),this._reservedRanges=e._reservedRanges.map(t=>({...t})),this._visibility=e._visibility.slice(),this._active=e._active.slice(),this._bounds=e._bounds.map(t=>({boxInitialized:t.boxInitialized,box:t.box.clone(),sphereInitialized:t.sphereInitialized,sphere:t.sphere.clone()})),this._maxGeometryCount=e._maxGeometryCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.slice(),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this}onBeforeRender(e,t,n,i,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const a=i.getIndex(),c=a===null?1:a.array.BYTES_PER_ELEMENT,u=this._active,h=this._visibility,f=this._multiDrawStarts,p=this._multiDrawCounts,m=this._drawRanges,v=this.perObjectFrustumCulled;v&&($g.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),gf.setFromProjectionMatrix($g,e.coordinateSystem));let y=0;if(this.sortObjects){Qg.copy(this.matrixWorld).invert(),oa.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Qg);for(let _=0,E=h.length;_<E;_++)if(h[_]&&u[_]){this.getMatrixAt(_,br),this.getBoundingSphereAt(_,es).applyMatrix4(br);let w=!1;if(v&&(w=!gf.intersectsSphere(es)),!w){const A=oa.distanceTo(es.center);vf.push(m[_],A)}}const S=vf.list,x=this.customSort;x===null?S.sort(s.transparent?tA:eA):x.call(this,S,n);for(let _=0,E=S.length;_<E;_++){const w=S[_];f[y]=w.start*c,p[y]=w.count,y++}vf.reset()}else for(let S=0,x=h.length;S<x;S++)if(h[S]&&u[S]){let _=!1;if(v&&(this.getMatrixAt(S,br),this.getBoundingSphereAt(S,es).applyMatrix4(br),_=!gf.intersectsSphere(es)),!_){const E=m[S];f[y]=E.start*c,p[y]=E.count,y++}}this._multiDrawCount=y,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,s,a){this.onBeforeRender(e,null,i,s,a)}}class Un extends mn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Le(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const e0=new D,t0=new D,n0=new Ke,_f=new bo,Ac=new Tn;class Dr extends wt{constructor(e=new ut,t=new Un){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)e0.fromBufferAttribute(t,i-1),t0.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=e0.distanceTo(t0);e.setAttribute("lineDistance",new ze(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Ac.copy(n.boundingSphere),Ac.applyMatrix4(i),Ac.radius+=s,e.ray.intersectsSphere(Ac)===!1)return;n0.copy(i).invert(),_f.copy(e.ray).applyMatrix4(n0);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new D,f=new D,p=new D,m=new D,v=this.isLineSegments?2:1,y=n.index,x=n.attributes.position;if(y!==null){const _=Math.max(0,a.start),E=Math.min(y.count,a.start+a.count);for(let w=_,A=E-1;w<A;w+=v){const U=y.getX(w),P=y.getX(w+1);if(h.fromBufferAttribute(x,U),f.fromBufferAttribute(x,P),_f.distanceSqToSegment(h,f,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const z=e.ray.origin.distanceTo(m);z<e.near||z>e.far||t.push({distance:z,point:p.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,a.start),E=Math.min(x.count,a.start+a.count);for(let w=_,A=E-1;w<A;w+=v){if(h.fromBufferAttribute(x,w),f.fromBufferAttribute(x,w+1),_f.distanceSqToSegment(h,f,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const P=e.ray.origin.distanceTo(m);P<e.near||P>e.far||t.push({distance:P,point:p.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}const i0=new D,r0=new D;class Vi extends Dr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)i0.fromBufferAttribute(t,i),r0.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+i0.distanceTo(r0);e.setAttribute("lineDistance",new ze(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class L_ extends Dr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class ep extends mn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const s0=new Ke,xd=new bo,bc=new Tn,Cc=new D;class N_ extends wt{constructor(e=new ut,t=new ep){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),bc.copy(n.boundingSphere),bc.applyMatrix4(i),bc.radius+=s,e.ray.intersectsSphere(bc)===!1)return;s0.copy(i).invert(),xd.copy(e.ray).applyMatrix4(s0);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,a.start),v=Math.min(h.count,a.start+a.count);for(let y=m,S=v;y<S;y++){const x=h.getX(y);Cc.fromBufferAttribute(p,x),o0(Cc,x,u,i,e,t,this)}}else{const m=Math.max(0,a.start),v=Math.min(p.count,a.start+a.count);for(let y=m,S=v;y<S;y++)Cc.fromBufferAttribute(p,y),o0(Cc,y,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function o0(r,e,t,n,i,s,a){const c=xd.distanceSqToPoint(r);if(c<t){const u=new D;xd.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:a})}}class sA extends rn{constructor(e,t,n,i,s,a,c,u,h){super(e,t,n,i,s,a,c,u,h),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:Qt,this.magFilter=s!==void 0?s:Qt,this.generateMipmaps=!1;const f=this;function p(){f.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class oA extends rn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=fn,this.minFilter=fn,this.generateMipmaps=!1,this.needsUpdate=!0}}class vu extends rn{constructor(e,t,n,i,s,a,c,u,h,f,p,m){super(null,a,c,u,h,f,i,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class aA extends vu{constructor(e,t,n,i,s,a){super(e,t,n,s,a),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=pi}}class lA extends vu{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,ar),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class cA extends rn{constructor(e,t,n,i,s,a,c,u,h){super(e,t,n,i,s,a,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Ti{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let a;t?a=t:a=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-a,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===a)return i/(s-1);const f=n[i],m=n[i+1]-f,v=(a-f)/m;return(i+v)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const a=this.getPoint(i),c=this.getPoint(s),u=t||(a.isVector2?new ue:new D);return u.copy(c).sub(a).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new D,i=[],s=[],a=[],c=new D,u=new Ke;for(let v=0;v<=e;v++){const y=v/e;i[v]=this.getTangentAt(y,new D)}s[0]=new D,a[0]=new D;let h=Number.MAX_VALUE;const f=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);f<=h&&(h=f,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),a[0].crossVectors(i[0],s[0]);for(let v=1;v<=e;v++){if(s[v]=s[v-1].clone(),a[v]=a[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(qt(i[v-1].dot(i[v]),-1,1));s[v].applyMatrix4(u.makeRotationAxis(c,y))}a[v].crossVectors(i[v],s[v])}if(t===!0){let v=Math.acos(qt(s[0].dot(s[e]),-1,1));v/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(v=-v);for(let y=1;y<=e;y++)s[y].applyMatrix4(u.makeRotationAxis(i[y],v*y)),a[y].crossVectors(i[y],s[y])}return{tangents:i,normals:s,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class _u extends Ti{constructor(e=0,t=0,n=1,i=1,s=0,a=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=a,this.aClockwise=c,this.aRotation=u}getPoint(e,t=new ue){const n=t,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const a=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(a?s=0:s=i),this.aClockwise===!0&&!a&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const f=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,v=h-this.aY;u=m*f-v*p+this.aX,h=m*p+v*f+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class D_ extends _u{constructor(e,t,n,i,s,a){super(e,t,n,n,i,s,a),this.isArcCurve=!0,this.type="ArcCurve"}}function tp(){let r=0,e=0,t=0,n=0;function i(s,a,c,u){r=s,e=c,t=-3*s+3*a-2*c-u,n=2*s-2*a+c+u}return{initCatmullRom:function(s,a,c,u,h){i(a,c,h*(c-s),h*(u-a))},initNonuniformCatmullRom:function(s,a,c,u,h,f,p){let m=(a-s)/h-(c-s)/(h+f)+(c-a)/f,v=(c-a)/f-(u-a)/(f+p)+(u-c)/p;m*=f,v*=f,i(a,c,m,v)},calc:function(s){const a=s*s,c=a*s;return r+e*s+t*a+n*c}}}const Rc=new D,yf=new tp,xf=new tp,Mf=new tp;class U_ extends Ti{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new D){const n=t,i=this.points,s=i.length,a=(s-(this.closed?0:1))*e;let c=Math.floor(a),u=a-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,f;this.closed||c>0?h=i[(c-1)%s]:(Rc.subVectors(i[0],i[1]).add(i[0]),h=Rc);const p=i[c%s],m=i[(c+1)%s];if(this.closed||c+2<s?f=i[(c+2)%s]:(Rc.subVectors(i[s-1],i[s-2]).add(i[s-1]),f=Rc),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),v),S=Math.pow(p.distanceToSquared(m),v),x=Math.pow(m.distanceToSquared(f),v);S<1e-4&&(S=1),y<1e-4&&(y=S),x<1e-4&&(x=S),yf.initNonuniformCatmullRom(h.x,p.x,m.x,f.x,y,S,x),xf.initNonuniformCatmullRom(h.y,p.y,m.y,f.y,y,S,x),Mf.initNonuniformCatmullRom(h.z,p.z,m.z,f.z,y,S,x)}else this.curveType==="catmullrom"&&(yf.initCatmullRom(h.x,p.x,m.x,f.x,this.tension),xf.initCatmullRom(h.y,p.y,m.y,f.y,this.tension),Mf.initCatmullRom(h.z,p.z,m.z,f.z,this.tension));return n.set(yf.calc(u),xf.calc(u),Mf.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new D().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function a0(r,e,t,n,i){const s=(n-e)*.5,a=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+a)*u+(-3*t+3*n-2*s-a)*c+s*r+t}function uA(r,e){const t=1-r;return t*t*e}function hA(r,e){return 2*(1-r)*r*e}function fA(r,e){return r*r*e}function ma(r,e,t,n){return uA(r,e)+hA(r,t)+fA(r,n)}function dA(r,e){const t=1-r;return t*t*t*e}function pA(r,e){const t=1-r;return 3*t*t*r*e}function mA(r,e){return 3*(1-r)*r*r*e}function gA(r,e){return r*r*r*e}function ga(r,e,t,n,i){return dA(r,e)+pA(r,t)+mA(r,n)+gA(r,i)}class np extends Ti{constructor(e=new ue,t=new ue,n=new ue,i=new ue){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ue){const n=t,i=this.v0,s=this.v1,a=this.v2,c=this.v3;return n.set(ga(e,i.x,s.x,a.x,c.x),ga(e,i.y,s.y,a.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class O_ extends Ti{constructor(e=new D,t=new D,n=new D,i=new D){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,a=this.v2,c=this.v3;return n.set(ga(e,i.x,s.x,a.x,c.x),ga(e,i.y,s.y,a.y,c.y),ga(e,i.z,s.z,a.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ip extends Ti{constructor(e=new ue,t=new ue){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ue){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ue){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class F_ extends Ti{constructor(e=new D,t=new D){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new D){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new D){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class rp extends Ti{constructor(e=new ue,t=new ue,n=new ue){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ue){const n=t,i=this.v0,s=this.v1,a=this.v2;return n.set(ma(e,i.x,s.x,a.x),ma(e,i.y,s.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class sp extends Ti{constructor(e=new D,t=new D,n=new D){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,a=this.v2;return n.set(ma(e,i.x,s.x,a.x),ma(e,i.y,s.y,a.y),ma(e,i.z,s.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class op extends Ti{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ue){const n=t,i=this.points,s=(i.length-1)*e,a=Math.floor(s),c=s-a,u=i[a===0?a:a-1],h=i[a],f=i[a>i.length-2?i.length-1:a+1],p=i[a>i.length-3?i.length-1:a+2];return n.set(a0(c,u.x,h.x,f.x,p.x),a0(c,u.y,h.y,f.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ue().fromArray(i))}return this}}var iu=Object.freeze({__proto__:null,ArcCurve:D_,CatmullRomCurve3:U_,CubicBezierCurve:np,CubicBezierCurve3:O_,EllipseCurve:_u,LineCurve:ip,LineCurve3:F_,QuadraticBezierCurve:rp,QuadraticBezierCurve3:sp,SplineCurve:op});class z_ extends Ti{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new iu[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const a=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-a/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const a=s[i],c=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,u=a.getPoints(c);for(let h=0;h<u.length;h++){const f=u[h];n&&n.equals(f)||(t.push(f),n=f)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new iu[i.type]().fromJSON(i))}return this}}class Na extends z_{constructor(e){super(),this.type="Path",this.currentPoint=new ue,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new ip(this.currentPoint.clone(),new ue(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new rp(this.currentPoint.clone(),new ue(e,t),new ue(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,a){const c=new np(this.currentPoint.clone(),new ue(e,t),new ue(n,i),new ue(s,a));return this.curves.push(c),this.currentPoint.set(s,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new op(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,a){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,a),this}absarc(e,t,n,i,s,a){return this.absellipse(e,t,n,n,i,s,a),this}ellipse(e,t,n,i,s,a,c,u){const h=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(e+h,t+f,n,i,s,a,c,u),this}absellipse(e,t,n,i,s,a,c,u){const h=new _u(e,t,n,i,s,a,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const f=h.getPoint(1);return this.currentPoint.copy(f),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Ya extends ut{constructor(e=[new ue(0,-.5),new ue(.5,0),new ue(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=qt(i,0,Math.PI*2);const s=[],a=[],c=[],u=[],h=[],f=1/t,p=new D,m=new ue,v=new D,y=new D,S=new D;let x=0,_=0;for(let E=0;E<=e.length-1;E++)switch(E){case 0:x=e[E+1].x-e[E].x,_=e[E+1].y-e[E].y,v.x=_*1,v.y=-x,v.z=_*0,S.copy(v),v.normalize(),u.push(v.x,v.y,v.z);break;case e.length-1:u.push(S.x,S.y,S.z);break;default:x=e[E+1].x-e[E].x,_=e[E+1].y-e[E].y,v.x=_*1,v.y=-x,v.z=_*0,y.copy(v),v.x+=S.x,v.y+=S.y,v.z+=S.z,v.normalize(),u.push(v.x,v.y,v.z),S.copy(y)}for(let E=0;E<=t;E++){const w=n+E*f*i,A=Math.sin(w),U=Math.cos(w);for(let P=0;P<=e.length-1;P++){p.x=e[P].x*A,p.y=e[P].y,p.z=e[P].x*U,a.push(p.x,p.y,p.z),m.x=E/t,m.y=P/(e.length-1),c.push(m.x,m.y);const I=u[3*P+0]*A,z=u[3*P+1],R=u[3*P+0]*U;h.push(I,z,R)}}for(let E=0;E<t;E++)for(let w=0;w<e.length-1;w++){const A=w+E*e.length,U=A,P=A+e.length,I=A+e.length+1,z=A+1;s.push(U,P,z),s.push(I,z,P)}this.setIndex(s),this.setAttribute("position",new ze(a,3)),this.setAttribute("uv",new ze(c,2)),this.setAttribute("normal",new ze(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ya(e.points,e.segments,e.phiStart,e.phiLength)}}class yu extends Ya{constructor(e=1,t=1,n=4,i=8){const s=new Na;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new yu(e.radius,e.length,e.capSegments,e.radialSegments)}}class xu extends ut{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],a=[],c=[],u=[],h=new D,f=new ue;a.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const v=n+p/t*i;h.x=e*Math.cos(v),h.y=e*Math.sin(v),a.push(h.x,h.y,h.z),c.push(0,0,1),f.x=(a[m]/e+1)/2,f.y=(a[m+1]/e+1)/2,u.push(f.x,f.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new ze(a,3)),this.setAttribute("normal",new ze(c,3)),this.setAttribute("uv",new ze(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xu(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Po extends ut{constructor(e=1,t=1,n=1,i=32,s=1,a=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:a,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const f=[],p=[],m=[],v=[];let y=0;const S=[],x=n/2;let _=0;E(),a===!1&&(e>0&&w(!0),t>0&&w(!1)),this.setIndex(f),this.setAttribute("position",new ze(p,3)),this.setAttribute("normal",new ze(m,3)),this.setAttribute("uv",new ze(v,2));function E(){const A=new D,U=new D;let P=0;const I=(t-e)/n;for(let z=0;z<=s;z++){const R=[],b=z/s,F=b*(t-e)+e;for(let q=0;q<=i;q++){const k=q/i,Z=k*u+c,se=Math.sin(Z),ae=Math.cos(Z);U.x=F*se,U.y=-b*n+x,U.z=F*ae,p.push(U.x,U.y,U.z),A.set(se,I,ae).normalize(),m.push(A.x,A.y,A.z),v.push(k,1-b),R.push(y++)}S.push(R)}for(let z=0;z<i;z++)for(let R=0;R<s;R++){const b=S[R][z],F=S[R+1][z],q=S[R+1][z+1],k=S[R][z+1];f.push(b,F,k),f.push(F,q,k),P+=6}h.addGroup(_,P,0),_+=P}function w(A){const U=y,P=new ue,I=new D;let z=0;const R=A===!0?e:t,b=A===!0?1:-1;for(let q=1;q<=i;q++)p.push(0,x*b,0),m.push(0,b,0),v.push(.5,.5),y++;const F=y;for(let q=0;q<=i;q++){const Z=q/i*u+c,se=Math.cos(Z),ae=Math.sin(Z);I.x=R*ae,I.y=x*b,I.z=R*se,p.push(I.x,I.y,I.z),m.push(0,b,0),P.x=se*.5+.5,P.y=ae*.5*b+.5,v.push(P.x,P.y),y++}for(let q=0;q<i;q++){const k=U+q,Z=F+q;A===!0?f.push(Z,Z+1,k):f.push(Z+1,Z,k),z+=3}h.addGroup(_,z,A===!0?1:2),_+=z}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Po(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Mu extends Po{constructor(e=1,t=1,n=32,i=1,s=!1,a=0,c=Math.PI*2){super(0,e,t,n,i,s,a,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:a,thetaLength:c}}static fromJSON(e){return new Mu(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Fr extends ut{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],a=[];c(i),h(n),f(),this.setAttribute("position",new ze(s,3)),this.setAttribute("normal",new ze(s.slice(),3)),this.setAttribute("uv",new ze(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const w=new D,A=new D,U=new D;for(let P=0;P<t.length;P+=3)v(t[P+0],w),v(t[P+1],A),v(t[P+2],U),u(w,A,U,E)}function u(E,w,A,U){const P=U+1,I=[];for(let z=0;z<=P;z++){I[z]=[];const R=E.clone().lerp(A,z/P),b=w.clone().lerp(A,z/P),F=P-z;for(let q=0;q<=F;q++)q===0&&z===P?I[z][q]=R:I[z][q]=R.clone().lerp(b,q/F)}for(let z=0;z<P;z++)for(let R=0;R<2*(P-z)-1;R++){const b=Math.floor(R/2);R%2===0?(m(I[z][b+1]),m(I[z+1][b]),m(I[z][b])):(m(I[z][b+1]),m(I[z+1][b+1]),m(I[z+1][b]))}}function h(E){const w=new D;for(let A=0;A<s.length;A+=3)w.x=s[A+0],w.y=s[A+1],w.z=s[A+2],w.normalize().multiplyScalar(E),s[A+0]=w.x,s[A+1]=w.y,s[A+2]=w.z}function f(){const E=new D;for(let w=0;w<s.length;w+=3){E.x=s[w+0],E.y=s[w+1],E.z=s[w+2];const A=x(E)/2/Math.PI+.5,U=_(E)/Math.PI+.5;a.push(A,1-U)}y(),p()}function p(){for(let E=0;E<a.length;E+=6){const w=a[E+0],A=a[E+2],U=a[E+4],P=Math.max(w,A,U),I=Math.min(w,A,U);P>.9&&I<.1&&(w<.2&&(a[E+0]+=1),A<.2&&(a[E+2]+=1),U<.2&&(a[E+4]+=1))}}function m(E){s.push(E.x,E.y,E.z)}function v(E,w){const A=E*3;w.x=e[A+0],w.y=e[A+1],w.z=e[A+2]}function y(){const E=new D,w=new D,A=new D,U=new D,P=new ue,I=new ue,z=new ue;for(let R=0,b=0;R<s.length;R+=9,b+=6){E.set(s[R+0],s[R+1],s[R+2]),w.set(s[R+3],s[R+4],s[R+5]),A.set(s[R+6],s[R+7],s[R+8]),P.set(a[b+0],a[b+1]),I.set(a[b+2],a[b+3]),z.set(a[b+4],a[b+5]),U.copy(E).add(w).add(A).divideScalar(3);const F=x(U);S(P,b+0,E,F),S(I,b+2,w,F),S(z,b+4,A,F)}}function S(E,w,A,U){U<0&&E.x===1&&(a[w]=E.x-1),A.x===0&&A.z===0&&(a[w]=U/2/Math.PI+.5)}function x(E){return Math.atan2(E.z,-E.x)}function _(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Fr(e.vertices,e.indices,e.radius,e.details)}}class Su extends Fr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Su(e.radius,e.detail)}}const Pc=new D,Ic=new D,Sf=new D,Lc=new ei;class B_ extends ut{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(gs*t),a=e.getIndex(),c=e.getAttribute("position"),u=a?a.count:c.count,h=[0,0,0],f=["a","b","c"],p=new Array(3),m={},v=[];for(let y=0;y<u;y+=3){a?(h[0]=a.getX(y),h[1]=a.getX(y+1),h[2]=a.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:S,b:x,c:_}=Lc;if(S.fromBufferAttribute(c,h[0]),x.fromBufferAttribute(c,h[1]),_.fromBufferAttribute(c,h[2]),Lc.getNormal(Sf),p[0]=`${Math.round(S.x*i)},${Math.round(S.y*i)},${Math.round(S.z*i)}`,p[1]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,p[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let E=0;E<3;E++){const w=(E+1)%3,A=p[E],U=p[w],P=Lc[f[E]],I=Lc[f[w]],z=`${A}_${U}`,R=`${U}_${A}`;R in m&&m[R]?(Sf.dot(m[R].normal)<=s&&(v.push(P.x,P.y,P.z),v.push(I.x,I.y,I.z)),m[R]=null):z in m||(m[z]={index0:h[E],index1:h[w],normal:Sf.clone()})}}for(const y in m)if(m[y]){const{index0:S,index1:x}=m[y];Pc.fromBufferAttribute(c,S),Ic.fromBufferAttribute(c,x),v.push(Pc.x,Pc.y,Pc.z),v.push(Ic.x,Ic.y,Ic.z)}this.setAttribute("position",new ze(v,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class _s extends Na{constructor(e){super(e),this.uuid=ni(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Na().fromJSON(i))}return this}}const vA={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=k_(r,0,i,t,!0);const a=[];if(!s||s.next===s.prev)return a;let c,u,h,f,p,m,v;if(n&&(s=SA(r,e,s,t)),r.length>80*t){c=h=r[0],u=f=r[1];for(let y=t;y<i;y+=t)p=r[y],m=r[y+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>f&&(f=m);v=Math.max(h-c,f-u),v=v!==0?32767/v:0}return Da(s,a,t,c,u,v,0),a}};function k_(r,e,t,n,i){let s,a;if(i===NA(r,e,t,n)>0)for(s=e;s<t;s+=n)a=l0(s,r[s],r[s+1],a);else for(s=t-n;s>=e;s-=n)a=l0(s,r[s],r[s+1],a);return a&&wu(a,a.next)&&(Oa(a),a=a.next),a}function Ms(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(wu(t,t.next)||Vt(t.prev,t,t.next)===0)){if(Oa(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Da(r,e,t,n,i,s,a){if(!r)return;!a&&s&&bA(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?yA(r,n,i,s):_A(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),Oa(r),r=h.next,c=h.next;continue}if(r=h,r===c){a?a===1?(r=xA(Ms(r),e,t),Da(r,e,t,n,i,s,2)):a===2&&MA(r,e,t,n,i,s):Da(Ms(r),e,t,n,i,s,1);break}}}function _A(r){const e=r.prev,t=r,n=r.next;if(Vt(e,t,n)>=0)return!1;const i=e.x,s=t.x,a=n.x,c=e.y,u=t.y,h=n.y,f=i<s?i<a?i:a:s<a?s:a,p=c<u?c<h?c:h:u<h?u:h,m=i>s?i>a?i:a:s>a?s:a,v=c>u?c>h?c:h:u>h?u:h;let y=n.next;for(;y!==e;){if(y.x>=f&&y.x<=m&&y.y>=p&&y.y<=v&&vo(i,c,s,u,a,h,y.x,y.y)&&Vt(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function yA(r,e,t,n){const i=r.prev,s=r,a=r.next;if(Vt(i,s,a)>=0)return!1;const c=i.x,u=s.x,h=a.x,f=i.y,p=s.y,m=a.y,v=c<u?c<h?c:h:u<h?u:h,y=f<p?f<m?f:m:p<m?p:m,S=c>u?c>h?c:h:u>h?u:h,x=f>p?f>m?f:m:p>m?p:m,_=Md(v,y,e,t,n),E=Md(S,x,e,t,n);let w=r.prevZ,A=r.nextZ;for(;w&&w.z>=_&&A&&A.z<=E;){if(w.x>=v&&w.x<=S&&w.y>=y&&w.y<=x&&w!==i&&w!==a&&vo(c,f,u,p,h,m,w.x,w.y)&&Vt(w.prev,w,w.next)>=0||(w=w.prevZ,A.x>=v&&A.x<=S&&A.y>=y&&A.y<=x&&A!==i&&A!==a&&vo(c,f,u,p,h,m,A.x,A.y)&&Vt(A.prev,A,A.next)>=0))return!1;A=A.nextZ}for(;w&&w.z>=_;){if(w.x>=v&&w.x<=S&&w.y>=y&&w.y<=x&&w!==i&&w!==a&&vo(c,f,u,p,h,m,w.x,w.y)&&Vt(w.prev,w,w.next)>=0)return!1;w=w.prevZ}for(;A&&A.z<=E;){if(A.x>=v&&A.x<=S&&A.y>=y&&A.y<=x&&A!==i&&A!==a&&vo(c,f,u,p,h,m,A.x,A.y)&&Vt(A.prev,A,A.next)>=0)return!1;A=A.nextZ}return!0}function xA(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!wu(i,s)&&H_(i,n,n.next,s)&&Ua(i,s)&&Ua(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),Oa(n),Oa(n.next),n=r=s),n=n.next}while(n!==r);return Ms(n)}function MA(r,e,t,n,i,s){let a=r;do{let c=a.next.next;for(;c!==a.prev;){if(a.i!==c.i&&PA(a,c)){let u=V_(a,c);a=Ms(a,a.next),u=Ms(u,u.next),Da(a,e,t,n,i,s,0),Da(u,e,t,n,i,s,0);return}c=c.next}a=a.next}while(a!==r)}function SA(r,e,t,n){const i=[];let s,a,c,u,h;for(s=0,a=e.length;s<a;s++)c=e[s]*n,u=s<a-1?e[s+1]*n:r.length,h=k_(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(RA(h));for(i.sort(wA),s=0;s<i.length;s++)t=EA(i[s],t);return t}function wA(r,e){return r.x-e.x}function EA(r,e){const t=TA(r,e);if(!t)return e;const n=V_(t,r);return Ms(n,n.next),Ms(t,t.next)}function TA(r,e){let t=e,n=-1/0,i;const s=r.x,a=r.y;do{if(a<=t.y&&a>=t.next.y&&t.next.y!==t.y){const m=t.x+(a-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=s&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let f=1/0,p;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&vo(a<h?s:n,a,u,h,a<h?n:s,a,t.x,t.y)&&(p=Math.abs(a-t.y)/(s-t.x),Ua(t,r)&&(p<f||p===f&&(t.x>i.x||t.x===i.x&&AA(i,t)))&&(i=t,f=p)),t=t.next;while(t!==c);return i}function AA(r,e){return Vt(r.prev,r,e.prev)<0&&Vt(e.next,r,r.next)<0}function bA(r,e,t,n){let i=r;do i.z===0&&(i.z=Md(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,CA(i)}function CA(r){let e,t,n,i,s,a,c,u,h=1;do{for(t=r,r=null,s=null,a=0;t;){for(a++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(a>1);return r}function Md(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function RA(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function vo(r,e,t,n,i,s,a,c){return(i-a)*(e-c)>=(r-a)*(s-c)&&(r-a)*(n-c)>=(t-a)*(e-c)&&(t-a)*(s-c)>=(i-a)*(n-c)}function PA(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!IA(r,e)&&(Ua(r,e)&&Ua(e,r)&&LA(r,e)&&(Vt(r.prev,r,e.prev)||Vt(r,e.prev,e))||wu(r,e)&&Vt(r.prev,r,r.next)>0&&Vt(e.prev,e,e.next)>0)}function Vt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function wu(r,e){return r.x===e.x&&r.y===e.y}function H_(r,e,t,n){const i=Dc(Vt(r,e,t)),s=Dc(Vt(r,e,n)),a=Dc(Vt(t,n,r)),c=Dc(Vt(t,n,e));return!!(i!==s&&a!==c||i===0&&Nc(r,t,e)||s===0&&Nc(r,n,e)||a===0&&Nc(t,r,n)||c===0&&Nc(t,e,n))}function Nc(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Dc(r){return r>0?1:r<0?-1:0}function IA(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&H_(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Ua(r,e){return Vt(r.prev,r,r.next)<0?Vt(r,e,r.next)>=0&&Vt(r,r.prev,e)>=0:Vt(r,e,r.prev)<0||Vt(r,r.next,e)<0}function LA(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function V_(r,e){const t=new Sd(r.i,r.x,r.y),n=new Sd(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function l0(r,e,t,n){const i=new Sd(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Oa(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Sd(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function NA(r,e,t,n){let i=0;for(let s=e,a=t-n;s<t;s+=n)i+=(r[a]-r[s])*(r[s+1]+r[a+1]),a=s;return i}class Hi{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Hi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];c0(e),u0(n,e);let a=e.length;t.forEach(c0);for(let u=0;u<t.length;u++)i.push(a),a+=t[u].length,u0(n,t[u]);const c=vA.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function c0(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function u0(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Eu extends ut{constructor(e=new _s([new ue(.5,.5),new ue(-.5,.5),new ue(-.5,-.5),new ue(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];a(h)}this.setAttribute("position",new ze(i,3)),this.setAttribute("uv",new ze(s,2)),this.computeVertexNormals();function a(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,f=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,v=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:v-.1,S=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,E=t.UVGenerator!==void 0?t.UVGenerator:DA;let w,A=!1,U,P,I,z;_&&(w=_.getSpacedPoints(f),A=!0,m=!1,U=_.computeFrenetFrames(f,!1),P=new D,I=new D,z=new D),m||(x=0,v=0,y=0,S=0);const R=c.extractPoints(h);let b=R.shape;const F=R.holes;if(!Hi.isClockWise(b)){b=b.reverse();for(let ce=0,oe=F.length;ce<oe;ce++){const xe=F[ce];Hi.isClockWise(xe)&&(F[ce]=xe.reverse())}}const k=Hi.triangulateShape(b,F),Z=b;for(let ce=0,oe=F.length;ce<oe;ce++){const xe=F[ce];b=b.concat(xe)}function se(ce,oe,xe){return oe||console.error("THREE.ExtrudeGeometry: vec does not exist"),ce.clone().addScaledVector(oe,xe)}const ae=b.length,ve=k.length;function H(ce,oe,xe){let me,_e,N;const C=ce.x-oe.x,Y=ce.y-oe.y,re=xe.x-ce.x,le=xe.y-ce.y,fe=C*C+Y*Y,qe=C*le-Y*re;if(Math.abs(qe)>Number.EPSILON){const de=Math.sqrt(fe),He=Math.sqrt(re*re+le*le),Ze=oe.x-Y/de,Me=oe.y+C/de,Ne=xe.x-le/He,nt=xe.y+re/He,Oe=((Ne-Ze)*le-(nt-Me)*re)/(C*le-Y*re);me=Ze+C*Oe-ce.x,_e=Me+Y*Oe-ce.y;const Fe=me*me+_e*_e;if(Fe<=2)return new ue(me,_e);N=Math.sqrt(Fe/2)}else{let de=!1;C>Number.EPSILON?re>Number.EPSILON&&(de=!0):C<-Number.EPSILON?re<-Number.EPSILON&&(de=!0):Math.sign(Y)===Math.sign(le)&&(de=!0),de?(me=-Y,_e=C,N=Math.sqrt(fe)):(me=C,_e=Y,N=Math.sqrt(fe/2))}return new ue(me/N,_e/N)}const $=[];for(let ce=0,oe=Z.length,xe=oe-1,me=ce+1;ce<oe;ce++,xe++,me++)xe===oe&&(xe=0),me===oe&&(me=0),$[ce]=H(Z[ce],Z[xe],Z[me]);const J=[];let he,Ie=$.concat();for(let ce=0,oe=F.length;ce<oe;ce++){const xe=F[ce];he=[];for(let me=0,_e=xe.length,N=_e-1,C=me+1;me<_e;me++,N++,C++)N===_e&&(N=0),C===_e&&(C=0),he[me]=H(xe[me],xe[N],xe[C]);J.push(he),Ie=Ie.concat(he)}for(let ce=0;ce<x;ce++){const oe=ce/x,xe=v*Math.cos(oe*Math.PI/2),me=y*Math.sin(oe*Math.PI/2)+S;for(let _e=0,N=Z.length;_e<N;_e++){const C=se(Z[_e],$[_e],me);ye(C.x,C.y,-xe)}for(let _e=0,N=F.length;_e<N;_e++){const C=F[_e];he=J[_e];for(let Y=0,re=C.length;Y<re;Y++){const le=se(C[Y],he[Y],me);ye(le.x,le.y,-xe)}}}const Be=y+S;for(let ce=0;ce<ae;ce++){const oe=m?se(b[ce],Ie[ce],Be):b[ce];A?(I.copy(U.normals[0]).multiplyScalar(oe.x),P.copy(U.binormals[0]).multiplyScalar(oe.y),z.copy(w[0]).add(I).add(P),ye(z.x,z.y,z.z)):ye(oe.x,oe.y,0)}for(let ce=1;ce<=f;ce++)for(let oe=0;oe<ae;oe++){const xe=m?se(b[oe],Ie[oe],Be):b[oe];A?(I.copy(U.normals[ce]).multiplyScalar(xe.x),P.copy(U.binormals[ce]).multiplyScalar(xe.y),z.copy(w[ce]).add(I).add(P),ye(z.x,z.y,z.z)):ye(xe.x,xe.y,p/f*ce)}for(let ce=x-1;ce>=0;ce--){const oe=ce/x,xe=v*Math.cos(oe*Math.PI/2),me=y*Math.sin(oe*Math.PI/2)+S;for(let _e=0,N=Z.length;_e<N;_e++){const C=se(Z[_e],$[_e],me);ye(C.x,C.y,p+xe)}for(let _e=0,N=F.length;_e<N;_e++){const C=F[_e];he=J[_e];for(let Y=0,re=C.length;Y<re;Y++){const le=se(C[Y],he[Y],me);A?ye(le.x,le.y+w[f-1].y,w[f-1].x+xe):ye(le.x,le.y,p+xe)}}}ne(),pe();function ne(){const ce=i.length/3;if(m){let oe=0,xe=ae*oe;for(let me=0;me<ve;me++){const _e=k[me];et(_e[2]+xe,_e[1]+xe,_e[0]+xe)}oe=f+x*2,xe=ae*oe;for(let me=0;me<ve;me++){const _e=k[me];et(_e[0]+xe,_e[1]+xe,_e[2]+xe)}}else{for(let oe=0;oe<ve;oe++){const xe=k[oe];et(xe[2],xe[1],xe[0])}for(let oe=0;oe<ve;oe++){const xe=k[oe];et(xe[0]+ae*f,xe[1]+ae*f,xe[2]+ae*f)}}n.addGroup(ce,i.length/3-ce,0)}function pe(){const ce=i.length/3;let oe=0;Ce(Z,oe),oe+=Z.length;for(let xe=0,me=F.length;xe<me;xe++){const _e=F[xe];Ce(_e,oe),oe+=_e.length}n.addGroup(ce,i.length/3-ce,1)}function Ce(ce,oe){let xe=ce.length;for(;--xe>=0;){const me=xe;let _e=xe-1;_e<0&&(_e=ce.length-1);for(let N=0,C=f+x*2;N<C;N++){const Y=ae*N,re=ae*(N+1),le=oe+me+Y,fe=oe+_e+Y,qe=oe+_e+re,de=oe+me+re;st(le,fe,qe,de)}}}function ye(ce,oe,xe){u.push(ce),u.push(oe),u.push(xe)}function et(ce,oe,xe){Qe(ce),Qe(oe),Qe(xe);const me=i.length/3,_e=E.generateTopUV(n,i,me-3,me-2,me-1);W(_e[0]),W(_e[1]),W(_e[2])}function st(ce,oe,xe,me){Qe(ce),Qe(oe),Qe(me),Qe(oe),Qe(xe),Qe(me);const _e=i.length/3,N=E.generateSideWallUV(n,i,_e-6,_e-3,_e-2,_e-1);W(N[0]),W(N[1]),W(N[3]),W(N[1]),W(N[2]),W(N[3])}function Qe(ce){i.push(u[ce*3+0]),i.push(u[ce*3+1]),i.push(u[ce*3+2])}function W(ce){s.push(ce.x),s.push(ce.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return UA(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,a=e.shapes.length;s<a;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new iu[i.type]().fromJSON(i)),new Eu(n,e.options)}}const DA={generateTopUV:function(r,e,t,n,i){const s=e[t*3],a=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],f=e[i*3+1];return[new ue(s,a),new ue(c,u),new ue(h,f)]},generateSideWallUV:function(r,e,t,n,i,s){const a=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],f=e[n*3+1],p=e[n*3+2],m=e[i*3],v=e[i*3+1],y=e[i*3+2],S=e[s*3],x=e[s*3+1],_=e[s*3+2];return Math.abs(c-f)<Math.abs(a-h)?[new ue(a,1-u),new ue(h,1-p),new ue(m,1-y),new ue(S,1-_)]:[new ue(c,1-u),new ue(f,1-p),new ue(v,1-y),new ue(x,1-_)]}};function UA(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Tu extends Fr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Tu(e.radius,e.detail)}}class ja extends Fr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ja(e.radius,e.detail)}}class Au extends ut{constructor(e=.5,t=1,n=32,i=1,s=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],f=[];let p=e;const m=(t-e)/i,v=new D,y=new ue;for(let S=0;S<=i;S++){for(let x=0;x<=n;x++){const _=s+x/n*a;v.x=p*Math.cos(_),v.y=p*Math.sin(_),u.push(v.x,v.y,v.z),h.push(0,0,1),y.x=(v.x/t+1)/2,y.y=(v.y/t+1)/2,f.push(y.x,y.y)}p+=m}for(let S=0;S<i;S++){const x=S*(n+1);for(let _=0;_<n;_++){const E=_+x,w=E,A=E+n+1,U=E+n+2,P=E+1;c.push(w,A,P),c.push(A,U,P)}}this.setIndex(c),this.setAttribute("position",new ze(u,3)),this.setAttribute("normal",new ze(h,3)),this.setAttribute("uv",new ze(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Au(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class bu extends ut{constructor(e=new _s([new ue(0,.5),new ue(-.5,-.5),new ue(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],a=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let f=0;f<e.length;f++)h(e[f]),this.addGroup(c,u,f),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new ze(i,3)),this.setAttribute("normal",new ze(s,3)),this.setAttribute("uv",new ze(a,2));function h(f){const p=i.length/3,m=f.extractPoints(t);let v=m.shape;const y=m.holes;Hi.isClockWise(v)===!1&&(v=v.reverse());for(let x=0,_=y.length;x<_;x++){const E=y[x];Hi.isClockWise(E)===!0&&(y[x]=E.reverse())}const S=Hi.triangulateShape(v,y);for(let x=0,_=y.length;x<_;x++){const E=y[x];v=v.concat(E)}for(let x=0,_=v.length;x<_;x++){const E=v[x];i.push(E.x,E.y,0),s.push(0,0,1),a.push(E.x,E.y)}for(let x=0,_=S.length;x<_;x++){const E=S[x],w=E[0]+p,A=E[1]+p,U=E[2]+p;n.push(w,A,U),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return OA(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const a=t[e.shapes[i]];n.push(a)}return new bu(n,e.curveSegments)}}function OA(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class Za extends ut{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,a=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:a,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(a+c,Math.PI);let h=0;const f=[],p=new D,m=new D,v=[],y=[],S=[],x=[];for(let _=0;_<=n;_++){const E=[],w=_/n;let A=0;_===0&&a===0?A=.5/t:_===n&&u===Math.PI&&(A=-.5/t);for(let U=0;U<=t;U++){const P=U/t;p.x=-e*Math.cos(i+P*s)*Math.sin(a+w*c),p.y=e*Math.cos(a+w*c),p.z=e*Math.sin(i+P*s)*Math.sin(a+w*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),S.push(m.x,m.y,m.z),x.push(P+A,1-w),E.push(h++)}f.push(E)}for(let _=0;_<n;_++)for(let E=0;E<t;E++){const w=f[_][E+1],A=f[_][E],U=f[_+1][E],P=f[_+1][E+1];(_!==0||a>0)&&v.push(w,A,P),(_!==n-1||u<Math.PI)&&v.push(A,U,P)}this.setIndex(v),this.setAttribute("position",new ze(y,3)),this.setAttribute("normal",new ze(S,3)),this.setAttribute("uv",new ze(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Za(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Cu extends Fr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Cu(e.radius,e.detail)}}class Ru extends ut{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const a=[],c=[],u=[],h=[],f=new D,p=new D,m=new D;for(let v=0;v<=n;v++)for(let y=0;y<=i;y++){const S=y/i*s,x=v/n*Math.PI*2;p.x=(e+t*Math.cos(x))*Math.cos(S),p.y=(e+t*Math.cos(x))*Math.sin(S),p.z=t*Math.sin(x),c.push(p.x,p.y,p.z),f.x=e*Math.cos(S),f.y=e*Math.sin(S),m.subVectors(p,f).normalize(),u.push(m.x,m.y,m.z),h.push(y/i),h.push(v/n)}for(let v=1;v<=n;v++)for(let y=1;y<=i;y++){const S=(i+1)*v+y-1,x=(i+1)*(v-1)+y-1,_=(i+1)*(v-1)+y,E=(i+1)*v+y;a.push(S,x,E),a.push(x,_,E)}this.setIndex(a),this.setAttribute("position",new ze(c,3)),this.setAttribute("normal",new ze(u,3)),this.setAttribute("uv",new ze(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ru(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Pu extends ut{constructor(e=1,t=.4,n=64,i=8,s=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:a},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],f=[],p=new D,m=new D,v=new D,y=new D,S=new D,x=new D,_=new D;for(let w=0;w<=n;++w){const A=w/n*s*Math.PI*2;E(A,s,a,e,v),E(A+.01,s,a,e,y),x.subVectors(y,v),_.addVectors(y,v),S.crossVectors(x,_),_.crossVectors(S,x),S.normalize(),_.normalize();for(let U=0;U<=i;++U){const P=U/i*Math.PI*2,I=-t*Math.cos(P),z=t*Math.sin(P);p.x=v.x+(I*_.x+z*S.x),p.y=v.y+(I*_.y+z*S.y),p.z=v.z+(I*_.z+z*S.z),u.push(p.x,p.y,p.z),m.subVectors(p,v).normalize(),h.push(m.x,m.y,m.z),f.push(w/n),f.push(U/i)}}for(let w=1;w<=n;w++)for(let A=1;A<=i;A++){const U=(i+1)*(w-1)+(A-1),P=(i+1)*w+(A-1),I=(i+1)*w+A,z=(i+1)*(w-1)+A;c.push(U,P,z),c.push(P,I,z)}this.setIndex(c),this.setAttribute("position",new ze(u,3)),this.setAttribute("normal",new ze(h,3)),this.setAttribute("uv",new ze(f,2));function E(w,A,U,P,I){const z=Math.cos(w),R=Math.sin(w),b=U/A*w,F=Math.cos(b);I.x=P*(2+F)*.5*z,I.y=P*(2+F)*R*.5,I.z=P*Math.sin(b)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Pu(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Iu extends ut{constructor(e=new sp(new D(-1,-1,0),new D(-1,1,0),new D(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const a=e.computeFrenetFrames(t,s);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const c=new D,u=new D,h=new ue;let f=new D;const p=[],m=[],v=[],y=[];S(),this.setIndex(y),this.setAttribute("position",new ze(p,3)),this.setAttribute("normal",new ze(m,3)),this.setAttribute("uv",new ze(v,2));function S(){for(let w=0;w<t;w++)x(w);x(s===!1?t:0),E(),_()}function x(w){f=e.getPointAt(w/t,f);const A=a.normals[w],U=a.binormals[w];for(let P=0;P<=i;P++){const I=P/i*Math.PI*2,z=Math.sin(I),R=-Math.cos(I);u.x=R*A.x+z*U.x,u.y=R*A.y+z*U.y,u.z=R*A.z+z*U.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=f.x+n*u.x,c.y=f.y+n*u.y,c.z=f.z+n*u.z,p.push(c.x,c.y,c.z)}}function _(){for(let w=1;w<=t;w++)for(let A=1;A<=i;A++){const U=(i+1)*(w-1)+(A-1),P=(i+1)*w+(A-1),I=(i+1)*w+A,z=(i+1)*(w-1)+A;y.push(U,P,z),y.push(P,I,z)}}function E(){for(let w=0;w<=t;w++)for(let A=0;A<=i;A++)h.x=w/t,h.y=A/i,v.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Iu(new iu[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class G_ extends ut{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new D,s=new D;if(e.index!==null){const a=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,f=u.length;h<f;++h){const p=u[h],m=p.start,v=p.count;for(let y=m,S=m+v;y<S;y+=3)for(let x=0;x<3;x++){const _=c.getX(y+x),E=c.getX(y+(x+1)%3);i.fromBufferAttribute(a,_),s.fromBufferAttribute(a,E),h0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const a=e.attributes.position;for(let c=0,u=a.count/3;c<u;c++)for(let h=0;h<3;h++){const f=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(a,f),s.fromBufferAttribute(a,p),h0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new ze(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function h0(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var f0=Object.freeze({__proto__:null,BoxGeometry:Ss,CapsuleGeometry:yu,CircleGeometry:xu,ConeGeometry:Mu,CylinderGeometry:Po,DodecahedronGeometry:Su,EdgesGeometry:B_,ExtrudeGeometry:Eu,IcosahedronGeometry:Tu,LatheGeometry:Ya,OctahedronGeometry:ja,PlaneGeometry:Co,PolyhedronGeometry:Fr,RingGeometry:Au,ShapeGeometry:bu,SphereGeometry:Za,TetrahedronGeometry:Cu,TorusGeometry:Ru,TorusKnotGeometry:Pu,TubeGeometry:Iu,WireframeGeometry:G_});class W_ extends mn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Le(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class X_ extends Ei{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class ap extends mn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Le(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ur,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ii,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class q_ extends ap{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ue(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return qt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Le(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Le(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Le(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Y_ extends mn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Le(16777215),this.specular=new Le(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ur,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ii,this.combine=Ha,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class j_ extends mn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Le(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ur,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Z_ extends mn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ur,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class J_ extends mn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ur,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ii,this.combine=Ha,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class K_ extends mn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Le(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ur,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Q_ extends Un{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function fs(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function $_(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function ey(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function wd(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,a=0;a!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[a++]=r[c+u]}return i}function lp(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let a=s[n];if(a!==void 0)if(Array.isArray(a))do a=s[n],a!==void 0&&(e.push(s.time),t.push.apply(t,a)),s=r[i++];while(s!==void 0);else if(a.toArray!==void 0)do a=s[n],a!==void 0&&(e.push(s.time),a.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do a=s[n],a!==void 0&&(e.push(s.time),t.push(a)),s=r[i++];while(s!==void 0)}function FA(r,e,t,n,i=30){const s=r.clone();s.name=e;const a=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],f=h.getValueSize(),p=[],m=[];for(let v=0;v<h.times.length;++v){const y=h.times[v]*i;if(!(y<t||y>=n)){p.push(h.times[v]);for(let S=0;S<f;++S)m.push(h.values[v*f+S])}}p.length!==0&&(h.times=fs(p,h.times.constructor),h.values=fs(m,h.values.constructor),a.push(h))}s.tracks=a;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function zA(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let a=0;a<i;++a){const c=t.tracks[a],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===u});if(h===void 0)continue;let f=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=p/3);let m=0;const v=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=v/3);const y=c.times.length-1;let S;if(s<=c.times[0]){const _=f,E=p-f;S=c.values.slice(_,E)}else if(s>=c.times[y]){const _=y*p+f,E=_+p-f;S=c.values.slice(_,E)}else{const _=c.createInterpolant(),E=f,w=p-f;_.evaluate(s),S=_.resultBuffer.slice(E,w)}u==="quaternion"&&new Vn().fromArray(S).normalize().conjugate().toArray(S);const x=h.times.length;for(let _=0;_<x;++_){const E=_*v+m;if(u==="quaternion")Vn.multiplyQuaternionsFlat(h.values,E,S,0,h.values,E);else{const w=v-m*2;for(let A=0;A<w;++A)h.values[E+A]-=S[A]}}}return r.blendMode=Vd,r}const BA={convertArray:fs,isTypedArray:$_,getKeyframeOrder:ey,sortedArray:wd,flattenJSON:lp,subclip:FA,makeClipAdditive:zA};class Ja{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}a=n,n=0;break n}break e}for(;n<a;){const c=n+a>>>1;e<t[c]?a=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let a=0;a!==i;++a)t[a]=n[s+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class ty extends Ja{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:cs,endingEnd:cs}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,a=e+1,c=i[s],u=i[a];if(c===void 0)switch(this.getSettings_().endingStart){case us:s=e,c=2*t-n;break;case Aa:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case us:a=e,u=2*n-t;break;case Aa:a=1,u=n+i[1]-i[0];break;default:a=e-1,u=t}const h=(n-t)*.5,f=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*f,this._offsetNext=a*f}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,v=this._weightNext,y=(n-t)/(i-t),S=y*y,x=S*y,_=-m*x+2*m*S-m*y,E=(1+m)*x+(-1.5-2*m)*S+(-.5+m)*y+1,w=(-1-v)*x+(1.5+v)*S+.5*y,A=v*x-v*S;for(let U=0;U!==c;++U)s[U]=_*a[f+U]+E*a[h+U]+w*a[u+U]+A*a[p+U];return s}}class cp extends Ja{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=(n-t)/(i-t),p=1-f;for(let m=0;m!==c;++m)s[m]=a[h+m]*p+a[u+m]*f;return s}}class ny extends Ja{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Ai{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=fs(t,this.TimeBufferType),this.values=fs(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:fs(e.times,Array),values:fs(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new ny(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new cp(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new ty(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ea:t=this.InterpolantFactoryMethodDiscrete;break;case Ta:t=this.InterpolantFactoryMethodLinear;break;case Jc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ea;case this.InterpolantFactoryMethodLinear:return Ta;case this.InterpolantFactoryMethodSmooth:return Jc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,a=i-1;for(;s!==i&&n[s]<e;)++s;for(;a!==-1&&n[a]>t;)--a;if(++a,s!==0||a!==i){s>=a&&(a=Math.max(a,1),s=a-1);const c=this.getValueSize();this.times=n.slice(s,a),this.values=this.values.slice(s*c,a*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(a!==null&&a>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,a),e=!1;break}a=u}if(i!==void 0&&$_(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Jc,s=e.length-1;let a=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],f=e[c+1];if(h!==f&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,v=p+n;for(let y=0;y!==n;++y){const S=t[p+y];if(S!==t[m+y]||S!==t[v+y]){u=!0;break}}}if(u){if(c!==a){e[a]=e[c];const p=c*n,m=a*n;for(let v=0;v!==n;++v)t[m+v]=t[p+v]}++a}}if(s>0){e[a]=e[s];for(let c=s*n,u=a*n,h=0;h!==n;++h)t[u+h]=t[c+h];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Ai.prototype.TimeBufferType=Float32Array;Ai.prototype.ValueBufferType=Float32Array;Ai.prototype.DefaultInterpolation=Ta;class ws extends Ai{}ws.prototype.ValueTypeName="bool";ws.prototype.ValueBufferType=Array;ws.prototype.DefaultInterpolation=Ea;ws.prototype.InterpolantFactoryMethodLinear=void 0;ws.prototype.InterpolantFactoryMethodSmooth=void 0;class up extends Ai{}up.prototype.ValueTypeName="color";class Fa extends Ai{}Fa.prototype.ValueTypeName="number";class iy extends Ja{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let f=h+c;h!==f;h+=4)Vn.slerpFlat(s,0,a,h-c,a,h,u);return s}}class Io extends Ai{InterpolantFactoryMethodLinear(e){return new iy(this.times,this.values,this.getValueSize(),e)}}Io.prototype.ValueTypeName="quaternion";Io.prototype.DefaultInterpolation=Ta;Io.prototype.InterpolantFactoryMethodSmooth=void 0;class Es extends Ai{}Es.prototype.ValueTypeName="string";Es.prototype.ValueBufferType=Array;Es.prototype.DefaultInterpolation=Ea;Es.prototype.InterpolantFactoryMethodLinear=void 0;Es.prototype.InterpolantFactoryMethodSmooth=void 0;class za extends Ai{}za.prototype.ValueTypeName="vector";class Ba{constructor(e="",t=-1,n=[],i=cu){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=ni(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,c=n.length;a!==c;++a)t.push(HA(n[a]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,a=n.length;s!==a;++s)t.push(Ai.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,a=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const f=ey(u);u=wd(u,1,f),h=wd(h,1,f),!i&&u[0]===0&&(u.push(s),h.push(h[0])),a.push(new Fa(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.name.match(s);if(f&&f.length>1){const p=f[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const a=[];for(const c in i)a.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,v,y,S){if(v.length!==0){const x=[],_=[];lp(v,x,_,y),x.length!==0&&S.push(new p(m,x,_))}},i=[],s=e.name||"default",a=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const v={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let S=0;S<m[y].morphTargets.length;S++)v[m[y].morphTargets[S]]=-1;for(const S in v){const x=[],_=[];for(let E=0;E!==m[y].morphTargets.length;++E){const w=m[y];x.push(w.time),_.push(w.morphTarget===S?1:0)}i.push(new Fa(".morphTargetInfluence["+S+"]",x,_))}u=v.length*a}else{const v=".bones["+t[p].name+"]";n(za,v+".position",m,"pos",i),n(Io,v+".quaternion",m,"rot",i),n(za,v+".scale",m,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function kA(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Fa;case"vector":case"vector2":case"vector3":case"vector4":return za;case"color":return up;case"quaternion":return Io;case"bool":case"boolean":return ws;case"string":return Es}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function HA(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=kA(r.type);if(r.times===void 0){const t=[],n=[];lp(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const rr={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};let hp=class{constructor(e,t,n){const i=this;let s=!1,a=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(f){c++,s===!1&&i.onStart!==void 0&&i.onStart(f,a,c),s=!0},this.itemEnd=function(f){a++,i.onProgress!==void 0&&i.onProgress(f,a,c),a===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(f){i.onError!==void 0&&i.onError(f)},this.resolveURL=function(f){return u?u(f):f},this.setURLModifier=function(f){return u=f,this},this.addHandler=function(f,p){return h.push(f,p),this},this.removeHandler=function(f){const p=h.indexOf(f);return p!==-1&&h.splice(p,2),this},this.getHandler=function(f){for(let p=0,m=h.length;p<m;p+=2){const v=h[p],y=h[p+1];if(v.global&&(v.lastIndex=0),v.test(f))return y}return null}}};const ry=new hp;let Gn=class{constructor(e){this.manager=e!==void 0?e:ry,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}};Gn.DEFAULT_MATERIAL_NAME="__DEFAULT";const tr={};class VA extends Error{constructor(e,t){super(e),this.response=t}}class lr extends Gn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=rr.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(tr[e]!==void 0){tr[e].push({onLoad:t,onProgress:n,onError:i});return}tr[e]=[],tr[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(a).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const f=tr[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),v=m?parseInt(m):0,y=v!==0;let S=0;const x=new ReadableStream({start(_){E();function E(){p.read().then(({done:w,value:A})=>{if(w)_.close();else{S+=A.byteLength;const U=new ProgressEvent("progress",{lengthComputable:y,loaded:S,total:v});for(let P=0,I=f.length;P<I;P++){const z=f[P];z.onProgress&&z.onProgress(U)}_.enqueue(A),E()}})}}});return new Response(x)}else throw new VA(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(f=>new DOMParser().parseFromString(f,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,v=new TextDecoder(m);return h.arrayBuffer().then(y=>v.decode(y))}}}).then(h=>{rr.add(e,h);const f=tr[e];delete tr[e];for(let p=0,m=f.length;p<m;p++){const v=f[p];v.onLoad&&v.onLoad(h)}}).catch(h=>{const f=tr[e];if(f===void 0)throw this.manager.itemError(e),h;delete tr[e];for(let p=0,m=f.length;p<m;p++){const v=f[p];v.onError&&v.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class GA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new lr(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Ba.parse(e[n]);t.push(i)}return t}}class WA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,a=[],c=new vu,u=new lr(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function f(p){u.load(e[p],function(m){const v=s.parse(m,!0);a[p]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},h+=1,h===6&&(v.mipmapCount===1&&(c.minFilter=Qt),c.image=a,c.format=v.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)f(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const v=m.mipmaps.length/m.mipmapCount;for(let y=0;y<v;y++){a[y]={mipmaps:[]};for(let S=0;S<m.mipmapCount;S++)a[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+S]),a[y].format=m.format,a[y].width=m.width,a[y].height=m.height}c.image=a}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=Qt),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}let ka=class extends Gn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=rr.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const c=La("img");function u(){f(),rr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){f(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function f(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}};class XA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=new Wa;s.colorSpace=di;const a=new ka(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let c=0;function u(h){a.load(e[h],function(f){s.images[h]=f,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class qA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new Ir,c=new lr(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){let h;try{h=s.parse(u)}catch(f){if(i!==void 0)i(f);else{console.error(f);return}}h.image!==void 0?a.image=h.image:h.data!==void 0&&(a.image.width=h.width,a.image.height=h.height,a.image.data=h.data),a.wrapS=h.wrapS!==void 0?h.wrapS:pi,a.wrapT=h.wrapT!==void 0?h.wrapT:pi,a.magFilter=h.magFilter!==void 0?h.magFilter:Qt,a.minFilter=h.minFilter!==void 0?h.minFilter:Qt,a.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0&&(a.colorSpace=h.colorSpace),h.flipY!==void 0&&(a.flipY=h.flipY),h.format!==void 0&&(a.format=h.format),h.type!==void 0&&(a.type=h.type),h.mipmaps!==void 0&&(a.mipmaps=h.mipmaps,a.minFilter=Fi),h.mipmapCount===1&&(a.minFilter=Qt),h.generateMipmaps!==void 0&&(a.generateMipmaps=h.generateMipmaps),a.needsUpdate=!0,t&&t(a,h)},n,i),a}}let YA=class extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=new rn,a=new ka(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}};class zr extends wt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Le(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class sy extends zr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(wt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Le(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const wf=new Ke,d0=new D,p0=new D;class fp{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ue(512,512),this.map=null,this.mapPass=null,this.matrix=new Ke,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Xa,this._frameExtents=new ue(1,1),this._viewportCount=1,this._viewports=[new Ct(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;d0.setFromMatrixPosition(e.matrixWorld),t.position.copy(d0),p0.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(p0),t.updateMatrixWorld(),wf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(wf),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(wf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class jA extends fp{constructor(){super(new hn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Mo*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class oy extends zr{constructor(e,t,n=0,i=Math.PI/3,s=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(wt.DEFAULT_UP),this.updateMatrix(),this.target=new wt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=a,this.map=null,this.shadow=new jA}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const m0=new Ke,aa=new D,Ef=new D;class ZA extends fp{constructor(){super(new hn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ue(4,2),this._viewportCount=6,this._viewports=[new Ct(2,1,1,1),new Ct(0,1,1,1),new Ct(3,1,1,1),new Ct(1,1,1,1),new Ct(3,0,1,1),new Ct(1,0,1,1)],this._cubeDirections=[new D(1,0,0),new D(-1,0,0),new D(0,0,1),new D(0,0,-1),new D(0,1,0),new D(0,-1,0)],this._cubeUps=[new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,0,1),new D(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),aa.setFromMatrixPosition(e.matrixWorld),n.position.copy(aa),Ef.copy(n.position),Ef.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Ef),n.updateMatrixWorld(),i.makeTranslation(-aa.x,-aa.y,-aa.z),m0.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(m0)}}class ay extends zr{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new ZA}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class JA extends fp{constructor(){super(new qa(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class ly extends zr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(wt.DEFAULT_UP),this.updateMatrix(),this.target=new wt,this.shadow=new JA}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class cy extends zr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class uy extends zr{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class hy{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new D)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*s),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*s)),t.addScaledVector(a[6],.315392*(3*s*s-1)),t.addScaledVector(a[7],1.092548*(n*s)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*s),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*s),t.addScaledVector(a[6],.743125*s*s-.247708),t.addScaledVector(a[7],2*.429043*n*s),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class fy extends zr{constructor(e=new hy,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Lu extends Gn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,a=new lr(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=Lu.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Le().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const a=e.uniforms[s];switch(i.uniforms[s]={},a.type){case"t":i.uniforms[s].value=n(a.value);break;case"c":i.uniforms[s].value=new Le().setHex(a.value);break;case"v2":i.uniforms[s].value=new ue().fromArray(a.value);break;case"v3":i.uniforms[s].value=new D().fromArray(a.value);break;case"v4":i.uniforms[s].value=new Ct().fromArray(a.value);break;case"m3":i.uniforms[s].value=new ft().fromArray(a.value);break;case"m4":i.uniforms[s].value=new Ke().fromArray(a.value);break;default:i.uniforms[s].value=a.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new ue().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ue().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:W_,SpriteMaterial:Qd,RawShaderMaterial:X_,ShaderMaterial:Ei,PointsMaterial:ep,MeshPhysicalMaterial:q_,MeshStandardMaterial:ap,MeshPhongMaterial:Y_,MeshToonMaterial:j_,MeshNormalMaterial:Z_,MeshLambertMaterial:J_,MeshDepthMaterial:Jd,MeshDistanceMaterial:Kd,MeshBasicMaterial:Or,MeshMatcapMaterial:K_,LineDashedMaterial:Q_,LineBasicMaterial:Un,Material:mn};return new t[e]}}class Ed{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class dy extends ut{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class py extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new lr(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(v,y){if(t[y]!==void 0)return t[y];const x=v.interleavedBuffers[y],_=s(v,x.buffer),E=po(x.type,_),w=new mu(E,x.stride);return w.uuid=x.uuid,t[y]=w,w}function s(v,y){if(n[y]!==void 0)return n[y];const x=v.arrayBuffers[y],_=new Uint32Array(x).buffer;return n[y]=_,_}const a=e.isInstancedBufferGeometry?new dy:new ut,c=e.data.index;if(c!==void 0){const v=po(c.type,c.array);a.setIndex(new Rt(v,1))}const u=e.data.attributes;for(const v in u){const y=u[v];let S;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);S=new xs(x,y.itemSize,y.offset,y.normalized)}else{const x=po(y.type,y.array),_=y.isInstancedBufferAttribute?wo:Rt;S=new _(x,y.itemSize,y.normalized)}y.name!==void 0&&(S.name=y.name),y.usage!==void 0&&S.setUsage(y.usage),a.setAttribute(v,S)}const h=e.data.morphAttributes;if(h)for(const v in h){const y=h[v],S=[];for(let x=0,_=y.length;x<_;x++){const E=y[x];let w;if(E.isInterleavedBufferAttribute){const A=i(e.data,E.data);w=new xs(A,E.itemSize,E.offset,E.normalized)}else{const A=po(E.type,E.array);w=new Rt(A,E.itemSize,E.normalized)}E.name!==void 0&&(w.name=E.name),S.push(w)}a.morphAttributes[v]=S}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let v=0,y=p.length;v!==y;++v){const S=p[v];a.addGroup(S.start,S.count,S.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const v=new D;m.center!==void 0&&v.fromArray(m.center),a.boundingSphere=new Tn(v,m.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}class KA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,a=this.path===""?Ed.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const c=new lr(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const f=h.metadata;if(f===void 0||f.type===void 0||f.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Ed.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new lr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const a=await s.loadAsync(e,t),c=JSON.parse(a),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,a),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),f=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,f),t!==void 0){let p=!1;for(const m in a)if(a[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,a),u=this.parseObject(e.object,i,c,a,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new _s().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,a=e.length;s<a;s++){const c=new gu().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new py;for(let s=0,a=e.length;s<a;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in f0?c=f0[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Lu;s.setTextures(t);for(let a=0,c=e.length;a<c;a++){const u=e[a];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=Ba.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function a(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return a(f)}else return u.data?{data:po(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new hp(t);s=new ka(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,f=e.length;h<f;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const v=[];for(let y=0,S=m.length;y<S;y++){const x=m[y],_=c(x);_!==null&&(_ instanceof HTMLImageElement?v.push(_):v.push(new Ir(_.data,_.width,_.height)))}i[p.uuid]=new hs(v)}else{const v=c(p.url);i[p.uuid]=new hs(v)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(a){if(typeof a=="string"){const c=a,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return a.data?{data:po(a.type,a.data),width:a.width,height:a.height}:null}if(e!==void 0&&e.length>0){i=new ka(this.manager),i.setCrossOrigin(this.crossOrigin);for(let a=0,c=e.length;a<c;a++){const u=e[a],h=u.url;if(Array.isArray(h)){const f=[];for(let p=0,m=h.length;p<m;p++){const v=h[p],y=await s(v);y!==null&&(y instanceof HTMLImageElement?f.push(y):f.push(new Ir(y.data,y.width,y.height)))}n[u.uuid]=new hs(f)}else{const f=await s(u.url);n[u.uuid]=new hs(f)}}}return n}parseTextures(e,t){function n(s,a){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),a[s])}const i={};if(e!==void 0)for(let s=0,a=e.length;s<a;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let f;Array.isArray(h)?(f=new Wa,h.length===6&&(f.needsUpdate=!0)):(h&&h.data?f=new Ir:f=new rn,h&&(f.needsUpdate=!0)),f.source=u,f.uuid=c.uuid,c.name!==void 0&&(f.name=c.name),c.mapping!==void 0&&(f.mapping=n(c.mapping,QA)),c.channel!==void 0&&(f.channel=c.channel),c.offset!==void 0&&f.offset.fromArray(c.offset),c.repeat!==void 0&&f.repeat.fromArray(c.repeat),c.center!==void 0&&f.center.fromArray(c.center),c.rotation!==void 0&&(f.rotation=c.rotation),c.wrap!==void 0&&(f.wrapS=n(c.wrap[0],g0),f.wrapT=n(c.wrap[1],g0)),c.format!==void 0&&(f.format=c.format),c.internalFormat!==void 0&&(f.internalFormat=c.internalFormat),c.type!==void 0&&(f.type=c.type),c.colorSpace!==void 0&&(f.colorSpace=c.colorSpace),c.minFilter!==void 0&&(f.minFilter=n(c.minFilter,v0)),c.magFilter!==void 0&&(f.magFilter=n(c.magFilter,v0)),c.anisotropy!==void 0&&(f.anisotropy=c.anisotropy),c.flipY!==void 0&&(f.flipY=c.flipY),c.generateMipmaps!==void 0&&(f.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(f.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(f.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(f.compareFunction=c.compareFunction),c.userData!==void 0&&(f.userData=c.userData),i[c.uuid]=f}return i}parseObject(e,t,n,i,s){let a;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const v=[];for(let y=0,S=m.length;y<S;y++){const x=m[y];n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),v.push(n[x])}return v}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let f,p;switch(e.type){case"Scene":a=new nu,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new Le(e.background):a.background=h(e.background)),e.environment!==void 0&&(a.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new pu(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new du(e.fog.color,e.fog.density)),e.fog.name!==""&&(a.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(a.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&a.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(a.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&a.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":a=new hn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new qa(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new cy(e.color,e.intensity);break;case"DirectionalLight":a=new ly(e.color,e.intensity);break;case"PointLight":a=new ay(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new uy(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new oy(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new sy(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new fy().fromJSON(e);break;case"SkinnedMesh":f=c(e.geometry),p=u(e.material),a=new R_(f,p),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":f=c(e.geometry),p=u(e.material),a=new $t(f,p);break;case"InstancedMesh":f=c(e.geometry),p=u(e.material);const m=e.count,v=e.instanceMatrix,y=e.instanceColor;a=new P_(f,p,m),a.instanceMatrix=new wo(new Float32Array(v.array),16),y!==void 0&&(a.instanceColor=new wo(new Float32Array(y.array),y.itemSize));break;case"BatchedMesh":f=c(e.geometry),p=u(e.material),a=new I_(e.maxGeometryCount,e.maxVertexCount,e.maxIndexCount,p),a.geometry=f,a.perObjectFrustumCulled=e.perObjectFrustumCulled,a.sortObjects=e.sortObjects,a._drawRanges=e.drawRanges,a._reservedRanges=e.reservedRanges,a._visibility=e.visibility,a._active=e.active,a._bounds=e.bounds.map(S=>{const x=new Dn;x.min.fromArray(S.boxMin),x.max.fromArray(S.boxMax);const _=new Tn;return _.radius=S.sphereRadius,_.center.fromArray(S.sphereCenter),{boxInitialized:S.boxInitialized,box:x,sphereInitialized:S.sphereInitialized,sphere:_}}),a._maxGeometryCount=e.maxGeometryCount,a._maxVertexCount=e.maxVertexCount,a._maxIndexCount=e.maxIndexCount,a._geometryInitialized=e.geometryInitialized,a._geometryCount=e.geometryCount,a._matricesTexture=h(e.matricesTexture.uuid);break;case"LOD":a=new C_;break;case"Line":a=new Dr(c(e.geometry),u(e.material));break;case"LineLoop":a=new L_(c(e.geometry),u(e.material));break;case"LineSegments":a=new Vi(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":a=new N_(c(e.geometry),u(e.material));break;case"Sprite":a=new b_(u(e.material));break;case"Group":a=new go;break;case"Bone":a=new $d;break;default:a=new wt}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.up!==void 0&&a.up.fromArray(e.up),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let v=0;v<m.length;v++)a.add(this.parseObject(m[v],t,n,i,s))}if(e.animations!==void 0){const m=e.animations;for(let v=0;v<m.length;v++){const y=m[v];a.animations.push(s[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const m=e.levels;for(let v=0;v<m.length;v++){const y=m[v],S=a.getObjectByProperty("uuid",y.object);S!==void 0&&a.addLevel(S,y.distance,y.hysteresis)}}return a}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const QA={UVMapping:lu,CubeReflectionMapping:ar,CubeRefractionMapping:Nr,EquirectangularReflectionMapping:ya,EquirectangularRefractionMapping:xa,CubeUVReflectionMapping:To},g0={RepeatWrapping:Ma,ClampToEdgeWrapping:pi,MirroredRepeatWrapping:Sa},v0={NearestFilter:fn,NearestMipmapNearestFilter:Ld,NearestMipmapLinearFilter:fo,LinearFilter:Qt,LinearMipmapNearestFilter:da,LinearMipmapLinearFilter:Fi};class $A extends Gn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=rr.get(e);if(a!==void 0){if(s.manager.itemStart(e),a.then){a.then(h=>{t&&t(h),s.manager.itemEnd(e)}).catch(h=>{i&&i(h)});return}return setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const u=fetch(e,c).then(function(h){return h.blob()}).then(function(h){return createImageBitmap(h,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(h){return rr.add(e,h),t&&t(h),s.manager.itemEnd(e),h}).catch(function(h){i&&i(h),rr.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});rr.add(e,u),s.manager.itemStart(e)}}let Uc;class dp{static getContext(){return Uc===void 0&&(Uc=new(window.AudioContext||window.webkitAudioContext)),Uc}static setContext(e){Uc=e}}class eb extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new lr(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(u){try{const h=u.slice(0);dp.getContext().decodeAudioData(h,function(p){t(p)}).catch(c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}const _0=new Ke,y0=new Ke,ts=new Ke;class tb{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new hn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new hn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,ts.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,a=t.near*Math.tan(gs*t.fov*.5)/t.zoom;let c,u;y0.elements[12]=-i,_0.elements[12]=i,c=-a*t.aspect+s,u=a*t.aspect+s,ts.elements[0]=2*t.near/(u-c),ts.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(ts),c=-a*t.aspect-s,u=a*t.aspect-s,ts.elements[0]=2*t.near/(u-c),ts.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(ts)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(y0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(_0)}}class pp{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=x0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=x0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function x0(){return(typeof performance>"u"?Date:performance).now()}const ns=new D,M0=new Vn,nb=new D,is=new D;class ib extends wt{constructor(){super(),this.type="AudioListener",this.context=dp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new pp}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ns,M0,nb),is.set(0,0,-1).applyQuaternion(M0),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(ns.x,i),t.positionY.linearRampToValueAtTime(ns.y,i),t.positionZ.linearRampToValueAtTime(ns.z,i),t.forwardX.linearRampToValueAtTime(is.x,i),t.forwardY.linearRampToValueAtTime(is.y,i),t.forwardZ.linearRampToValueAtTime(is.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(ns.x,ns.y,ns.z),t.setOrientation(is.x,is.y,is.z,n.x,n.y,n.z)}}class my extends wt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const rs=new D,S0=new Vn,rb=new D,ss=new D;class sb extends my{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(rs,S0,rb),ss.set(0,0,1).applyQuaternion(S0);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(rs.x,n),t.positionY.linearRampToValueAtTime(rs.y,n),t.positionZ.linearRampToValueAtTime(rs.z,n),t.orientationX.linearRampToValueAtTime(ss.x,n),t.orientationY.linearRampToValueAtTime(ss.y,n),t.orientationZ.linearRampToValueAtTime(ss.z,n)}else t.setPosition(rs.x,rs.y,rs.z),t.setOrientation(ss.x,ss.y,ss.z)}}class ob{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class gy{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,a;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let c=0;c!==i;++c)n[s+c]=n[c];a=t}else{a+=t;const c=t/a;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,a=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,a=i;s!==a;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let a=0;a!==s;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){Vn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const a=this._workIndex*s;Vn.multiplyQuaternionsFlat(e,a,e,t,e,n),Vn.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,s){const a=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*a+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let a=0;a!==s;++a){const c=t+a;e[c]=e[c]+e[n+a]*i}}}const mp="\\[\\]\\.:\\/",ab=new RegExp("["+mp+"]","g"),gp="[^"+mp+"]",lb="[^"+mp.replace("\\.","")+"]",cb=/((?:WC+[\/:])*)/.source.replace("WC",gp),ub=/(WCOD+)?/.source.replace("WCOD",lb),hb=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",gp),fb=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",gp),db=new RegExp("^"+cb+ub+hb+fb+"$"),pb=["material","materials","bones","map"];class mb{constructor(e,t,n){const i=n||vt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class vt{constructor(e,t,n){this.path=t,this.parsedPath=n||vt.parseTrackName(t),this.node=vt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new vt.Composite(e,t,n):new vt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(ab,"")}static parseTrackName(e){const t=db.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);pb.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let a=0;a<s.length;a++){const c=s[a];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=vt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let f=0;f<e.length;f++)if(e[f].name===h){h=f;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const a=e[i];if(a===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else a.fromArray!==void 0&&a.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(u=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}vt.Composite=mb;vt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};vt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};vt.prototype.GetterByBindingType=[vt.prototype._getValue_direct,vt.prototype._getValue_array,vt.prototype._getValue_arrayElement,vt.prototype._getValue_toArray];vt.prototype.SetterByBindingTypeAndVersioning=[[vt.prototype._setValue_direct,vt.prototype._setValue_direct_setNeedsUpdate,vt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[vt.prototype._setValue_array,vt.prototype._setValue_array_setNeedsUpdate,vt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[vt.prototype._setValue_arrayElement,vt.prototype._setValue_arrayElement_setNeedsUpdate,vt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[vt.prototype._setValue_fromArray,vt.prototype._setValue_fromArray_setNeedsUpdate,vt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class gb{constructor(){this.isAnimationObjectGroup=!0,this.uuid=ni(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,a=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let f=0,p=arguments.length;f!==p;++f){const m=arguments[f],v=m.uuid;let y=t[v];if(y===void 0){y=u++,t[v]=y,e.push(m);for(let S=0,x=a;S!==x;++S)s[S].push(new vt(m,n[S],i[S]))}else if(y<h){c=e[y];const S=--h,x=e[S];t[x.uuid]=y,e[y]=x,t[v]=S,e[S]=m;for(let _=0,E=a;_!==E;++_){const w=s[_],A=w[S];let U=w[y];w[y]=A,U===void 0&&(U=new vt(m,n[_],i[_])),w[S]=U}}else e[y]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let a=0,c=arguments.length;a!==c;++a){const u=arguments[a],h=u.uuid,f=t[h];if(f!==void 0&&f>=s){const p=s++,m=e[p];t[m.uuid]=f,e[f]=m,t[h]=p,e[p]=u;for(let v=0,y=i;v!==y;++v){const S=n[v],x=S[p],_=S[f];S[f]=x,S[p]=_}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,a=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],f=h.uuid,p=t[f];if(p!==void 0)if(delete t[f],p<s){const m=--s,v=e[m],y=--a,S=e[y];t[v.uuid]=p,e[p]=v,t[S.uuid]=m,e[m]=S,e.pop();for(let x=0,_=i;x!==_;++x){const E=n[x],w=E[m],A=E[y];E[p]=w,E[m]=A,E.pop()}}else{const m=--a,v=e[m];m>0&&(t[v.uuid]=p),e[p]=v,e.pop();for(let y=0,S=i;y!==S;++y){const x=n[y];x[p]=x[m],x.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const a=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,f=this.nCachedObjects_,p=new Array(h);i=s.length,n[e]=i,a.push(e),c.push(t),s.push(p);for(let m=f,v=u.length;m!==v;++m){const y=u[m];p[m]=new vt(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,a=this._bindings,c=a.length-1,u=a[c],h=e[c];t[h]=n,a[n]=u,a.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class vy{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,a=s.length,c=new Array(a),u={endingStart:cs,endingEnd:cs};for(let h=0;h!==a;++h){const f=s[h].createInterpolant(null);c[h]=f,f.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Yv,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,a=s/i,c=i/s;e.warp(1,a,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,a=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/a,h[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const a=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Vd:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(a),h[f].accumulateAdditive(c);break;case cu:default:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(a),h[f].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const a=n===jv;if(e===0)return s===-1?i:a&&(s&1)===1?t-i:i;if(n===qv){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,a)}else this._setEndings(!1,!1,a);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(a&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=us,i.endingEnd=us):(e?i.endingStart=this.zeroSlopeAtStart?us:cs:i.endingStart=Aa,t?i.endingEnd=this.zeroSlopeAtEnd?us:cs:i.endingEnd=Aa)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const c=a.parameterPositions,u=a.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const vb=new Float32Array(1);class _b extends ur{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,a=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let f=h[u];f===void 0&&(f={},h[u]=f);for(let p=0;p!==s;++p){const m=i[p],v=m.name;let y=f[v];if(y!==void 0)++y.referenceCount,a[p]=y;else{if(y=a[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,v));continue}const S=t&&t._propertyBindings[p].binding.parsedPath;y=new gy(vt.create(n,v,S),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,v),a[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let a=s[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=a;else{const c=a.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,a=this._actionsByClip,c=a[s],u=c.knownActions,h=u[u.length-1],f=e._byClipCacheIndex;h._byClipCacheIndex=f,u[f]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete a[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,a=this._bindingsByRootAndName,c=a[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new cp(new Float32Array(2),new Float32Array(2),1,vb),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let a=typeof e=="string"?Ba.findByName(i,e):e;const c=a!==null?a.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(a!==null?n=a.blendMode:n=cu),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],a===null&&(a=h._clip)}if(a===null)return null;const f=new vy(this,a,t,n);return this._bindAction(f,h),this._addInactiveAction(f,c,s),f}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?Ba.findByName(n,e):e,a=s?s.uuid:e,c=this._actionsByClip[a];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),a=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,a);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const a=s.knownActions;for(let c=0,u=a.length;c!==u;++c){const h=a[c];this._deactivateAction(h);const f=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=f,t[f]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const c=n[a].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const a in s){const c=s[a];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class vp{constructor(e){this.value=e}clone(){return new vp(this.value.clone===void 0?this.value:this.value.clone())}}let yb=0;class xb extends ur{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:yb++}),this.name="",this.usage=Pa,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const s=Array.isArray(t[n])?t[n]:[t[n]];for(let a=0;a<s.length;a++)this.uniforms.push(s[a].clone())}return this}clone(){return new this.constructor().copy(this)}}class Mb extends mu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class Sb{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const w0=new Ke;class _y{constructor(e,t,n=0,i=1/0){this.ray=new bo(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new vs,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return w0.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(w0),this}intersectObject(e,t=!0,n=[]){return Td(e,this,n,t),n.sort(E0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Td(e[i],this,n,t);return n.sort(E0),n}}function E0(r,e){return r.distance-e.distance}function Td(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,a=i.length;s<a;s++)Td(i[s],e,t,!0)}}class wb{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(qt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class Eb{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const T0=new ue;class Tb{constructor(e=new ue(1/0,1/0),t=new ue(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=T0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,T0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const A0=new D,Oc=new D;class Ab{constructor(e=new D,t=new D){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){A0.subVectors(e,this.start),Oc.subVectors(this.end,this.start);const n=Oc.dot(Oc);let s=Oc.dot(A0)/n;return t&&(s=qt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const b0=new D;class bb extends wt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new ut,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,c=1,u=32;a<u;a++,c++){const h=a/u*Math.PI*2,f=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(f),Math.sin(f),1)}n.setAttribute("position",new ze(i,3));const s=new Un({fog:!1,toneMapped:!1});this.cone=new Vi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),b0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(b0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Cr=new D,Fc=new Ke,Tf=new Ke;class Cb extends Vi{constructor(e){const t=yy(e),n=new ut,i=[],s=[],a=new Le(0,0,1),c=new Le(0,1,0);for(let h=0;h<t.length;h++){const f=t[h];f.parent&&f.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(a.r,a.g,a.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new ze(i,3)),n.setAttribute("color",new ze(s,3));const u=new Un({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Tf.copy(this.root.matrixWorld).invert();for(let s=0,a=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(Fc.multiplyMatrices(Tf,c.matrixWorld),Cr.setFromMatrixPosition(Fc),i.setXYZ(a,Cr.x,Cr.y,Cr.z),Fc.multiplyMatrices(Tf,c.parent.matrixWorld),Cr.setFromMatrixPosition(Fc),i.setXYZ(a+1,Cr.x,Cr.y,Cr.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function yy(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,yy(r.children[t]));return e}class Rb extends $t{constructor(e,t,n){const i=new Za(t,4,2),s=new Or({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Pb=new D,C0=new Le,R0=new Le;class Ib extends wt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new ja(t);i.rotateY(Math.PI*.5),this.material=new Or({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),a=new Float32Array(s.count*3);i.setAttribute("color",new Rt(a,3)),this.add(new $t(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");C0.copy(this.light.color),R0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?C0:R0;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(Pb.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Lb extends Vi{constructor(e=10,t=10,n=4473924,i=8947848){n=new Le(n),i=new Le(i);const s=t/2,a=e/t,c=e/2,u=[],h=[];for(let m=0,v=0,y=-c;m<=t;m++,y+=a){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const S=m===s?n:i;S.toArray(h,v),v+=3,S.toArray(h,v),v+=3,S.toArray(h,v),v+=3,S.toArray(h,v),v+=3}const f=new ut;f.setAttribute("position",new ze(u,3)),f.setAttribute("color",new ze(h,3));const p=new Un({vertexColors:!0,toneMapped:!1});super(f,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class Nb extends Vi{constructor(e=10,t=16,n=8,i=64,s=4473924,a=8947848){s=new Le(s),a=new Le(a);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),v=Math.sin(m)*e,y=Math.cos(m)*e;c.push(0,0,0),c.push(v,0,y);const S=p&1?s:a;u.push(S.r,S.g,S.b),u.push(S.r,S.g,S.b)}for(let p=0;p<n;p++){const m=p&1?s:a,v=e-e/n*p;for(let y=0;y<i;y++){let S=y/i*(Math.PI*2),x=Math.sin(S)*v,_=Math.cos(S)*v;c.push(x,0,_),u.push(m.r,m.g,m.b),S=(y+1)/i*(Math.PI*2),x=Math.sin(S)*v,_=Math.cos(S)*v,c.push(x,0,_),u.push(m.r,m.g,m.b)}}const h=new ut;h.setAttribute("position",new ze(c,3)),h.setAttribute("color",new ze(u,3));const f=new Un({vertexColors:!0,toneMapped:!1});super(h,f),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const P0=new D,zc=new D,I0=new D;class Db extends wt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new ut;i.setAttribute("position",new ze([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Un({fog:!1,toneMapped:!1});this.lightPlane=new Dr(i,s),this.add(this.lightPlane),i=new ut,i.setAttribute("position",new ze([0,0,0,0,0,1],3)),this.targetLine=new Dr(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),P0.setFromMatrixPosition(this.light.matrixWorld),zc.setFromMatrixPosition(this.light.target.matrixWorld),I0.subVectors(zc,P0),this.lightPlane.lookAt(zc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(zc),this.targetLine.scale.z=I0.length()}}const Bc=new D,Xt=new Ga;class Ub extends Vi{constructor(e){const t=new ut,n=new Un({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],a={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,S){u(y),u(S)}function u(y){i.push(0,0,0),s.push(0,0,0),a[y]===void 0&&(a[y]=[]),a[y].push(i.length/3-1)}t.setAttribute("position",new ze(i,3)),t.setAttribute("color",new ze(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const h=new Le(16755200),f=new Le(16711680),p=new Le(43775),m=new Le(16777215),v=new Le(3355443);this.setColors(h,f,p,m,v)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Xt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),jt("c",t,e,Xt,0,0,-1),jt("t",t,e,Xt,0,0,1),jt("n1",t,e,Xt,-n,-i,-1),jt("n2",t,e,Xt,n,-i,-1),jt("n3",t,e,Xt,-n,i,-1),jt("n4",t,e,Xt,n,i,-1),jt("f1",t,e,Xt,-n,-i,1),jt("f2",t,e,Xt,n,-i,1),jt("f3",t,e,Xt,-n,i,1),jt("f4",t,e,Xt,n,i,1),jt("u1",t,e,Xt,n*.7,i*1.1,-1),jt("u2",t,e,Xt,-n*.7,i*1.1,-1),jt("u3",t,e,Xt,0,i*2,-1),jt("cf1",t,e,Xt,-n,0,1),jt("cf2",t,e,Xt,n,0,1),jt("cf3",t,e,Xt,0,-i,1),jt("cf4",t,e,Xt,0,i,1),jt("cn1",t,e,Xt,-n,0,-1),jt("cn2",t,e,Xt,n,0,-1),jt("cn3",t,e,Xt,0,-i,-1),jt("cn4",t,e,Xt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function jt(r,e,t,n,i,s,a){Bc.set(i,s,a).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,f=c.length;h<f;h++)u.setXYZ(c[h],Bc.x,Bc.y,Bc.z)}}const kc=new Dn;class Ob extends Vi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new ut;s.setIndex(new Rt(n,1)),s.setAttribute("position",new Rt(i,3)),super(s,new Un({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&kc.setFromObject(this.object),kc.isEmpty())return;const t=kc.min,n=kc.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Fb extends Vi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new ut;s.setIndex(new Rt(n,1)),s.setAttribute("position",new ze(i,3)),super(s,new Un({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class zb extends Dr{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new ut;a.setAttribute("position",new ze(s,3)),a.computeBoundingSphere(),super(a,new Un({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new ut;u.setAttribute("position",new ze(c,3)),u.computeBoundingSphere(),this.add(new $t(u,new Or({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const L0=new D;let Hc,Af;class Bb extends wt{constructor(e=new D(0,0,1),t=new D(0,0,0),n=1,i=16776960,s=n*.2,a=s*.2){super(),this.type="ArrowHelper",Hc===void 0&&(Hc=new ut,Hc.setAttribute("position",new ze([0,0,0,0,1,0],3)),Af=new Po(0,.5,1,5,1),Af.translate(0,-.5,0)),this.position.copy(t),this.line=new Dr(Hc,new Un({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new $t(Af,new Or({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{L0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(L0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class kb extends Vi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new ut;i.setAttribute("position",new ze(t,3)),i.setAttribute("color",new ze(n,3));const s=new Un({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Le,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Hb{constructor(){this.type="ShapePath",this.color=new Le,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Na,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,a){return this.currentPath.bezierCurveTo(e,t,n,i,s,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const E=[];for(let w=0,A=_.length;w<A;w++){const U=_[w],P=new _s;P.curves=U.curves,E.push(P)}return E}function n(_,E){const w=E.length;let A=!1;for(let U=w-1,P=0;P<w;U=P++){let I=E[U],z=E[P],R=z.x-I.x,b=z.y-I.y;if(Math.abs(b)>Number.EPSILON){if(b<0&&(I=E[P],R=-R,z=E[U],b=-b),_.y<I.y||_.y>z.y)continue;if(_.y===I.y){if(_.x===I.x)return!0}else{const F=b*(_.x-I.x)-R*(_.y-I.y);if(F===0)return!0;if(F<0)continue;A=!A}}else{if(_.y!==I.y)continue;if(z.x<=_.x&&_.x<=I.x||I.x<=_.x&&_.x<=z.x)return!0}}return A}const i=Hi.isClockWise,s=this.subPaths;if(s.length===0)return[];let a,c,u;const h=[];if(s.length===1)return c=s[0],u=new _s,u.curves=c.curves,h.push(u),h;let f=!i(s[0].getPoints());f=e?!f:f;const p=[],m=[];let v=[],y=0,S;m[y]=void 0,v[y]=[];for(let _=0,E=s.length;_<E;_++)c=s[_],S=c.getPoints(),a=i(S),a=e?!a:a,a?(!f&&m[y]&&y++,m[y]={s:new _s,p:S},m[y].s.curves=c.curves,f&&y++,v[y]=[]):v[y].push({h:c,p:S[0]});if(!m[0])return t(s);if(m.length>1){let _=!1,E=0;for(let w=0,A=m.length;w<A;w++)p[w]=[];for(let w=0,A=m.length;w<A;w++){const U=v[w];for(let P=0;P<U.length;P++){const I=U[P];let z=!0;for(let R=0;R<m.length;R++)n(I.p,m[R].p)&&(w!==R&&E++,z?(z=!1,p[R].push(I)):_=!0);z&&p[w].push(I)}}E>0&&_===!1&&(v=p)}let x;for(let _=0,E=m.length;_<E;_++){u=m[_].s,h.push(u),x=v[_];for(let w=0,A=x.length;w<A;w++)u.holes.push(x[w].h)}return h}}class Vb extends wi{constructor(e=1,t=1,n=1,i={}){console.warn('THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the "count" parameter to enable MRT.'),super(e,t,{...i,count:n}),this.isWebGLMultipleRenderTargets=!0}get texture(){return this.textures}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ou}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ou);const Gb=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Id,AddEquation:Pr,AddOperation:Rv,AdditiveAnimationBlendMode:Vd,AdditiveBlending:Hf,AgXToneMapping:Dv,AlphaFormat:kv,AlwaysCompare:r_,AlwaysDepth:Sv,AlwaysStencilFunc:gd,AmbientLight:cy,AnimationAction:vy,AnimationClip:Ba,AnimationLoader:GA,AnimationMixer:_b,AnimationObjectGroup:gb,AnimationUtils:BA,ArcCurve:D_,ArrayCamera:E_,ArrowHelper:Bb,AttachedBindMode:Wf,Audio:my,AudioAnalyser:ob,AudioContext:dp,AudioListener:ib,AudioLoader:eb,AxesHelper:kb,BackSide:Nn,BasicDepthPacking:Zv,BasicShadowMap:nv,BatchedMesh:I_,Bone:$d,BooleanKeyframeTrack:ws,Box2:Tb,Box3:Dn,Box3Helper:Fb,BoxGeometry:Ss,BoxHelper:Ob,BufferAttribute:Rt,BufferGeometry:ut,BufferGeometryLoader:py,ByteType:Fv,Cache:rr,Camera:Ga,CameraHelper:Ub,CanvasTexture:cA,CapsuleGeometry:yu,CatmullRomCurve3:U_,CineonToneMapping:Lv,CircleGeometry:xu,ClampToEdgeWrapping:pi,Clock:pp,Color:Le,ColorKeyframeTrack:up,ColorManagement:bt,CompressedArrayTexture:aA,CompressedCubeTexture:lA,CompressedTexture:vu,CompressedTextureLoader:WA,ConeGeometry:Mu,ConstantAlphaFactor:yv,ConstantColorFactor:vv,CubeCamera:m_,CubeReflectionMapping:ar,CubeRefractionMapping:Nr,CubeTexture:Wa,CubeTextureLoader:XA,CubeUVReflectionMapping:To,CubicBezierCurve:np,CubicBezierCurve3:O_,CubicInterpolant:ty,CullFaceBack:kf,CullFaceFront:tv,CullFaceFrontBack:Zx,CullFaceNone:ev,Curve:Ti,CurvePath:z_,CustomBlending:iv,CustomToneMapping:Nv,CylinderGeometry:Po,Cylindrical:Eb,Data3DTexture:Xd,DataArrayTexture:hu,DataTexture:Ir,DataTextureLoader:qA,DataUtils:rS,DecrementStencilOp:oM,DecrementWrapStencilOp:lM,DefaultLoadingManager:ry,DepthFormat:ms,DepthStencilFormat:xo,DepthTexture:Zd,DetachedBindMode:Ov,DirectionalLight:ly,DirectionalLightHelper:Db,DiscreteInterpolant:ny,DisplayP3ColorSpace:uu,DodecahedronGeometry:Su,DoubleSide:Oi,DstAlphaFactor:fv,DstColorFactor:pv,DynamicCopyUsage:wM,DynamicDrawUsage:vM,DynamicReadUsage:xM,EdgesGeometry:B_,EllipseCurve:_u,EqualCompare:e_,EqualDepth:Ev,EqualStencilFunc:fM,EquirectangularReflectionMapping:ya,EquirectangularRefractionMapping:xa,Euler:ii,EventDispatcher:ur,ExtrudeGeometry:Eu,FileLoader:lr,Float16BufferAttribute:uS,Float32BufferAttribute:ze,FloatType:mi,Fog:pu,FogExp2:du,FramebufferTexture:oA,FrontSide:or,Frustum:Xa,GLBufferAttribute:Sb,GLSL1:TM,GLSL3:vd,GreaterCompare:t_,GreaterDepth:Av,GreaterEqualCompare:i_,GreaterEqualDepth:Tv,GreaterEqualStencilFunc:gM,GreaterStencilFunc:pM,GridHelper:Lb,Group:go,HalfFloatType:wa,HemisphereLight:sy,HemisphereLightHelper:Ib,IcosahedronGeometry:Tu,ImageBitmapLoader:$A,ImageLoader:ka,ImageUtils:u_,IncrementStencilOp:sM,IncrementWrapStencilOp:aM,InstancedBufferAttribute:wo,InstancedBufferGeometry:dy,InstancedInterleavedBuffer:Mb,InstancedMesh:P_,Int16BufferAttribute:lS,Int32BufferAttribute:cS,Int8BufferAttribute:sS,IntType:Dd,InterleavedBuffer:mu,InterleavedBufferAttribute:xs,Interpolant:Ja,InterpolateDiscrete:Ea,InterpolateLinear:Ta,InterpolateSmooth:Jc,InvertStencilOp:cM,KeepStencilOp:os,KeyframeTrack:Ai,LOD:C_,LatheGeometry:Ya,Layers:vs,LessCompare:$v,LessDepth:wv,LessEqualCompare:Gd,LessEqualDepth:_a,LessEqualStencilFunc:dM,LessStencilFunc:hM,Light:zr,LightProbe:fy,Line:Dr,Line3:Ab,LineBasicMaterial:Un,LineCurve:ip,LineCurve3:F_,LineDashedMaterial:Q_,LineLoop:L_,LineSegments:Vi,LinearDisplayP3ColorSpace:Va,LinearFilter:Qt,LinearInterpolant:cp,LinearMipMapLinearFilter:$x,LinearMipMapNearestFilter:Qx,LinearMipmapLinearFilter:Fi,LinearMipmapNearestFilter:da,LinearSRGBColorSpace:cr,LinearToneMapping:Pv,LinearTransfer:ba,Loader:Gn,LoaderUtils:Ed,LoadingManager:hp,LoopOnce:qv,LoopPingPong:jv,LoopRepeat:Yv,LuminanceAlphaFormat:Gv,LuminanceFormat:Vv,MOUSE:Yx,Material:mn,MaterialLoader:Lu,MathUtils:VM,Matrix3:ft,Matrix4:Ke,MaxEquation:av,Mesh:$t,MeshBasicMaterial:Or,MeshDepthMaterial:Jd,MeshDistanceMaterial:Kd,MeshLambertMaterial:J_,MeshMatcapMaterial:K_,MeshNormalMaterial:Z_,MeshPhongMaterial:Y_,MeshPhysicalMaterial:q_,MeshStandardMaterial:ap,MeshToonMaterial:j_,MinEquation:ov,MirroredRepeatWrapping:Sa,MixOperation:Cv,MultiplyBlending:Gf,MultiplyOperation:Ha,NearestFilter:fn,NearestMipMapLinearFilter:Kx,NearestMipMapNearestFilter:Jx,NearestMipmapLinearFilter:fo,NearestMipmapNearestFilter:Ld,NeutralToneMapping:Uv,NeverCompare:Qv,NeverDepth:Mv,NeverStencilFunc:uM,NoBlending:sr,NoColorSpace:nr,NoToneMapping:Bi,NormalAnimationBlendMode:cu,NormalBlending:ps,NotEqualCompare:n_,NotEqualDepth:bv,NotEqualStencilFunc:mM,NumberKeyframeTrack:Fa,Object3D:wt,ObjectLoader:KA,ObjectSpaceNormalMap:Kv,OctahedronGeometry:ja,OneFactor:cv,OneMinusConstantAlphaFactor:xv,OneMinusConstantColorFactor:_v,OneMinusDstAlphaFactor:dv,OneMinusDstColorFactor:mv,OneMinusSrcAlphaFactor:tu,OneMinusSrcColorFactor:hv,OrthographicCamera:qa,P3Primaries:Ra,PCFShadowMap:au,PCFSoftShadowMap:fa,PMREMGenerator:_d,Path:Na,PerspectiveCamera:hn,Plane:Rr,PlaneGeometry:Co,PlaneHelper:zb,PointLight:ay,PointLightHelper:Rb,Points:N_,PointsMaterial:ep,PolarGridHelper:Nb,PolyhedronGeometry:Fr,PositionalAudio:sb,PropertyBinding:vt,PropertyMixer:gy,QuadraticBezierCurve:rp,QuadraticBezierCurve3:sp,Quaternion:Vn,QuaternionKeyframeTrack:Io,QuaternionLinearInterpolant:iy,RED_GREEN_RGTC2_Format:pd,RED_RGTC1_Format:Xv,REVISION:ou,RGBADepthPacking:Jv,RGBAFormat:Hn,RGBAIntegerFormat:kd,RGBA_ASTC_10x10_Format:ld,RGBA_ASTC_10x5_Format:sd,RGBA_ASTC_10x6_Format:od,RGBA_ASTC_10x8_Format:ad,RGBA_ASTC_12x10_Format:cd,RGBA_ASTC_12x12_Format:ud,RGBA_ASTC_4x4_Format:Kf,RGBA_ASTC_5x4_Format:Qf,RGBA_ASTC_5x5_Format:$f,RGBA_ASTC_6x5_Format:ed,RGBA_ASTC_6x6_Format:td,RGBA_ASTC_8x5_Format:nd,RGBA_ASTC_8x6_Format:id,RGBA_ASTC_8x8_Format:rd,RGBA_BPTC_Format:Zc,RGBA_ETC2_EAC_Format:Jf,RGBA_PVRTC_2BPPV1_Format:jf,RGBA_PVRTC_4BPPV1_Format:Yf,RGBA_S3TC_DXT1_Format:qc,RGBA_S3TC_DXT3_Format:Yc,RGBA_S3TC_DXT5_Format:jc,RGBFormat:Hv,RGB_BPTC_SIGNED_Format:hd,RGB_BPTC_UNSIGNED_Format:fd,RGB_ETC1_Format:Hd,RGB_ETC2_Format:Zf,RGB_PVRTC_2BPPV1_Format:qf,RGB_PVRTC_4BPPV1_Format:Xf,RGB_S3TC_DXT1_Format:Xc,RGFormat:Wv,RGIntegerFormat:Bd,RawShaderMaterial:X_,Ray:bo,Raycaster:_y,Rec709Primaries:Ca,RectAreaLight:uy,RedFormat:Fd,RedIntegerFormat:zd,ReinhardToneMapping:Iv,RenderTarget:h_,RepeatWrapping:Ma,ReplaceStencilOp:rM,ReverseSubtractEquation:sv,RingGeometry:Au,SIGNED_RED_GREEN_RGTC2_Format:md,SIGNED_RED_RGTC1_Format:dd,SRGBColorSpace:di,SRGBTransfer:Ot,Scene:nu,ShaderChunk:ct,ShaderLib:Si,ShaderMaterial:Ei,ShadowMaterial:W_,Shape:_s,ShapeGeometry:bu,ShapePath:Hb,ShapeUtils:Hi,ShortType:zv,Skeleton:gu,SkeletonHelper:Cb,SkinnedMesh:R_,Source:hs,Sphere:Tn,SphereGeometry:Za,Spherical:wb,SphericalHarmonics3:hy,SplineCurve:op,SpotLight:oy,SpotLightHelper:bb,Sprite:b_,SpriteMaterial:Qd,SrcAlphaFactor:eu,SrcAlphaSaturateFactor:gv,SrcColorFactor:uv,StaticCopyUsage:SM,StaticDrawUsage:Pa,StaticReadUsage:yM,StereoCamera:tb,StreamCopyUsage:EM,StreamDrawUsage:_M,StreamReadUsage:MM,StringKeyframeTrack:Es,SubtractEquation:rv,SubtractiveBlending:Vf,TOUCH:jx,TangentSpaceNormalMap:Ur,TetrahedronGeometry:Cu,Texture:rn,TextureLoader:YA,TorusGeometry:Ru,TorusKnotGeometry:Pu,Triangle:ei,TriangleFanDrawMode:nM,TriangleStripDrawMode:tM,TrianglesDrawMode:eM,TubeGeometry:Iu,UVMapping:lu,Uint16BufferAttribute:qd,Uint32BufferAttribute:Yd,Uint8BufferAttribute:oS,Uint8ClampedBufferAttribute:aS,Uniform:vp,UniformsGroup:xb,UniformsLib:Te,UniformsUtils:p_,UnsignedByteType:ki,UnsignedInt248Type:Ao,UnsignedInt5999Type:Bv,UnsignedIntType:ys,UnsignedShort4444Type:Ud,UnsignedShort5551Type:Od,UnsignedShortType:Nd,VSMShadowMap:Mi,Vector2:ue,Vector3:D,Vector4:Ct,VectorKeyframeTrack:za,VideoTexture:sA,WebGL3DRenderTarget:jM,WebGLArrayRenderTarget:YM,WebGLCoordinateSystem:zi,WebGLCubeRenderTarget:g_,WebGLMultipleRenderTargets:Vb,WebGLRenderTarget:wi,WebGLRenderer:T_,WebGLUtils:w_,WebGPUCoordinateSystem:Ia,WireframeGeometry:G_,WrapAroundEnding:Aa,ZeroCurvatureEnding:cs,ZeroFactor:lv,ZeroSlopeEnding:us,ZeroStencilOp:iM,createCanvasElement:l_},Symbol.toStringTag,{value:"Module"}));var xy={exports:{}},Ts={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Ts.ConcurrentRoot=1;Ts.ContinuousEventPriority=4;Ts.DefaultEventPriority=16;Ts.DiscreteEventPriority=1;Ts.IdleEventPriority=536870912;Ts.LegacyRoot=0;xy.exports=Ts;var _o=xy.exports;function Wb(r){let e;const t=new Set,n=(h,f)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=f?p:Object.assign({},e,p),t.forEach(v=>v(e,m))}},i=()=>e,s=(h,f=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=f(e);function v(){const y=f(e);if(!p(m,y)){const S=m;h(m=y,S)}}return t.add(v),()=>t.delete(v)},u={setState:n,getState:i,subscribe:(h,f,p)=>f||p?s(h,f,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=r(n,i,u),u}const Xb=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),N0=Xb?Ae.useEffect:Ae.useLayoutEffect;function qb(r){const e=typeof r=="function"?Wb(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=Ae.useReducer(x=>x+1,0),a=e.getState(),c=Ae.useRef(a),u=Ae.useRef(n),h=Ae.useRef(i),f=Ae.useRef(!1),p=Ae.useRef();p.current===void 0&&(p.current=n(a));let m,v=!1;(c.current!==a||u.current!==n||h.current!==i||f.current)&&(m=n(a),v=!i(p.current,m)),N0(()=>{v&&(p.current=m),c.current=a,u.current=n,h.current=i,f.current=!1});const y=Ae.useRef(a);N0(()=>{const x=()=>{try{const E=e.getState(),w=u.current(E);h.current(p.current,w)||(c.current=E,p.current=w,s())}catch{f.current=!0,s()}},_=e.subscribe(x);return e.getState()!==y.current&&x(),_},[]);const S=v?m:p.current;return Ae.useDebugValue(S),S};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}var My={exports:{}},Sy={exports:{}},wy={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(r){function e(H,$){var J=H.length;H.push($);e:for(;0<J;){var he=J-1>>>1,Ie=H[he];if(0<i(Ie,$))H[he]=$,H[J]=Ie,J=he;else break e}}function t(H){return H.length===0?null:H[0]}function n(H){if(H.length===0)return null;var $=H[0],J=H.pop();if(J!==$){H[0]=J;e:for(var he=0,Ie=H.length,Be=Ie>>>1;he<Be;){var ne=2*(he+1)-1,pe=H[ne],Ce=ne+1,ye=H[Ce];if(0>i(pe,J))Ce<Ie&&0>i(ye,pe)?(H[he]=ye,H[Ce]=J,he=Ce):(H[he]=pe,H[ne]=J,he=ne);else if(Ce<Ie&&0>i(ye,J))H[he]=ye,H[Ce]=J,he=Ce;else break e}}return $}function i(H,$){var J=H.sortIndex-$.sortIndex;return J!==0?J:H.id-$.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var a=Date,c=a.now();r.unstable_now=function(){return a.now()-c}}var u=[],h=[],f=1,p=null,m=3,v=!1,y=!1,S=!1,x=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function w(H){for(var $=t(h);$!==null;){if($.callback===null)n(h);else if($.startTime<=H)n(h),$.sortIndex=$.expirationTime,e(u,$);else break;$=t(h)}}function A(H){if(S=!1,w(H),!y)if(t(u)!==null)y=!0,ae(U);else{var $=t(h);$!==null&&ve(A,$.startTime-H)}}function U(H,$){y=!1,S&&(S=!1,_(z),z=-1),v=!0;var J=m;try{for(w($),p=t(u);p!==null&&(!(p.expirationTime>$)||H&&!F());){var he=p.callback;if(typeof he=="function"){p.callback=null,m=p.priorityLevel;var Ie=he(p.expirationTime<=$);$=r.unstable_now(),typeof Ie=="function"?p.callback=Ie:p===t(u)&&n(u),w($)}else n(u);p=t(u)}if(p!==null)var Be=!0;else{var ne=t(h);ne!==null&&ve(A,ne.startTime-$),Be=!1}return Be}finally{p=null,m=J,v=!1}}var P=!1,I=null,z=-1,R=5,b=-1;function F(){return!(r.unstable_now()-b<R)}function q(){if(I!==null){var H=r.unstable_now();b=H;var $=!0;try{$=I(!0,H)}finally{$?k():(P=!1,I=null)}}else P=!1}var k;if(typeof E=="function")k=function(){E(q)};else if(typeof MessageChannel<"u"){var Z=new MessageChannel,se=Z.port2;Z.port1.onmessage=q,k=function(){se.postMessage(null)}}else k=function(){x(q,0)};function ae(H){I=H,P||(P=!0,k())}function ve(H,$){z=x(function(){H(r.unstable_now())},$)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(H){H.callback=null},r.unstable_continueExecution=function(){y||v||(y=!0,ae(U))},r.unstable_forceFrameRate=function(H){0>H||125<H?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):R=0<H?Math.floor(1e3/H):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(H){switch(m){case 1:case 2:case 3:var $=3;break;default:$=m}var J=m;m=$;try{return H()}finally{m=J}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(H,$){switch(H){case 1:case 2:case 3:case 4:case 5:break;default:H=3}var J=m;m=H;try{return $()}finally{m=J}},r.unstable_scheduleCallback=function(H,$,J){var he=r.unstable_now();switch(typeof J=="object"&&J!==null?(J=J.delay,J=typeof J=="number"&&0<J?he+J:he):J=he,H){case 1:var Ie=-1;break;case 2:Ie=250;break;case 5:Ie=1073741823;break;case 4:Ie=1e4;break;default:Ie=5e3}return Ie=J+Ie,H={id:f++,callback:$,priorityLevel:H,startTime:J,expirationTime:Ie,sortIndex:-1},J>he?(H.sortIndex=J,e(h,H),t(u)===null&&H===t(h)&&(S?(_(z),z=-1):S=!0,ve(A,J-he))):(H.sortIndex=Ie,e(u,H),y||v||(y=!0,ae(U))),H},r.unstable_shouldYield=F,r.unstable_wrapCallback=function(H){var $=m;return function(){var J=m;m=$;try{return H.apply(this,arguments)}finally{m=J}}}})(wy);Sy.exports=wy;var Ad=Sy.exports;/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Yb=function(e){var t={},n=Ae,i=Ad,s=Object.assign;function a(o){for(var l="https://reactjs.org/docs/error-decoder.html?invariant="+o,d=1;d<arguments.length;d++)l+="&args[]="+encodeURIComponent(arguments[d]);return"Minified React error #"+o+"; visit "+l+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),f=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),v=Symbol.for("react.provider"),y=Symbol.for("react.context"),S=Symbol.for("react.forward_ref"),x=Symbol.for("react.suspense"),_=Symbol.for("react.suspense_list"),E=Symbol.for("react.memo"),w=Symbol.for("react.lazy"),A=Symbol.for("react.offscreen"),U=Symbol.iterator;function P(o){return o===null||typeof o!="object"?null:(o=U&&o[U]||o["@@iterator"],typeof o=="function"?o:null)}function I(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case f:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case x:return"Suspense";case _:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Consumer";case v:return(o._context.displayName||"Context")+".Provider";case S:var l=o.render;return o=o.displayName,o||(o=l.displayName||l.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case E:return l=o.displayName||null,l!==null?l:I(o.type)||"Memo";case w:l=o._payload,o=o._init;try{return I(o(l))}catch{}}return null}function z(o){var l=o.type;switch(o.tag){case 24:return"Cache";case 9:return(l.displayName||"Context")+".Consumer";case 10:return(l._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=l.render,o=o.displayName||o.name||"",l.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return l;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return I(l);case 8:return l===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof l=="function")return l.displayName||l.name||null;if(typeof l=="string")return l}return null}function R(o){var l=o,d=o;if(o.alternate)for(;l.return;)l=l.return;else{o=l;do l=o,l.flags&4098&&(d=l.return),o=l.return;while(o)}return l.tag===3?d:null}function b(o){if(R(o)!==o)throw Error(a(188))}function F(o){var l=o.alternate;if(!l){if(l=R(o),l===null)throw Error(a(188));return l!==o?null:o}for(var d=o,g=l;;){var M=d.return;if(M===null)break;var T=M.alternate;if(T===null){if(g=M.return,g!==null){d=g;continue}break}if(M.child===T.child){for(T=M.child;T;){if(T===d)return b(M),o;if(T===g)return b(M),l;T=T.sibling}throw Error(a(188))}if(d.return!==g.return)d=M,g=T;else{for(var O=!1,V=M.child;V;){if(V===d){O=!0,d=M,g=T;break}if(V===g){O=!0,g=M,d=T;break}V=V.sibling}if(!O){for(V=T.child;V;){if(V===d){O=!0,d=T,g=M;break}if(V===g){O=!0,g=T,d=M;break}V=V.sibling}if(!O)throw Error(a(189))}}if(d.alternate!==g)throw Error(a(190))}if(d.tag!==3)throw Error(a(188));return d.stateNode.current===d?o:l}function q(o){return o=F(o),o!==null?k(o):null}function k(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var l=k(o);if(l!==null)return l;o=o.sibling}return null}function Z(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var l=Z(o);if(l!==null)return l}o=o.sibling}return null}var se=Array.isArray,ae=e.getPublicInstance,ve=e.getRootHostContext,H=e.getChildHostContext,$=e.prepareForCommit,J=e.resetAfterCommit,he=e.createInstance,Ie=e.appendInitialChild,Be=e.finalizeInitialChildren,ne=e.prepareUpdate,pe=e.shouldSetTextContent,Ce=e.createTextInstance,ye=e.scheduleTimeout,et=e.cancelTimeout,st=e.noTimeout,Qe=e.isPrimaryRenderer,W=e.supportsMutation,ce=e.supportsPersistence,oe=e.supportsHydration,xe=e.getInstanceFromNode,me=e.preparePortalMount,_e=e.getCurrentEventPriority,N=e.detachDeletedInstance,C=e.supportsMicrotasks,Y=e.scheduleMicrotask,re=e.supportsTestSelectors,le=e.findFiberRoot,fe=e.getBoundingRect,qe=e.getTextContent,de=e.isHiddenSubtree,He=e.matchAccessibilityRole,Ze=e.setFocusIfFocusable,Me=e.setupIntersectionObserver,Ne=e.appendChild,nt=e.appendChildToContainer,Oe=e.commitTextUpdate,Fe=e.commitMount,pt=e.commitUpdate,mt=e.insertBefore,Et=e.insertInContainerBefore,_t=e.removeChild,Dt=e.removeChildFromContainer,Ve=e.resetTextContent,B=e.hideInstance,Ee=e.hideTextInstance,Se=e.unhideInstance,Xe=e.unhideTextInstance,Ye=e.clearContainer,Pt=e.cloneInstance,Lt=e.createContainerChildSet,Ut=e.appendChildToContainerChildSet,sn=e.finalizeContainerChildren,It=e.replaceContainerChildren,Wn=e.cloneHiddenInstance,Xn=e.cloneHiddenTextInstance,Gi=e.canHydrateInstance,Qa=e.canHydrateTextInstance,$a=e.canHydrateSuspenseInstance,el=e.isSuspenseInstancePending,hr=e.isSuspenseInstanceFallback,tl=e.registerSuspenseInstanceRetry,bi=e.getNextHydratableSibling,nl=e.getFirstHydratableChild,il=e.getFirstHydratableChildWithinContainer,Du=e.getFirstHydratableChildWithinSuspenseInstance,Uu=e.hydrateInstance,Ou=e.hydrateTextInstance,L=e.hydrateSuspenseInstance,X=e.getNextHydratableInstanceAfterSuspenseInstance,Q=e.commitHydratedContainer,ee=e.commitHydratedSuspenseInstance,K=e.clearSuspenseBoundary,Re=e.clearSuspenseBoundaryFromContainer,Ge=e.shouldDeleteUnhydratedTailInstances,Je=e.didNotMatchHydratedContainerTextInstance,tt=e.didNotMatchHydratedTextInstance,it;function $e(o){if(it===void 0)try{throw Error()}catch(d){var l=d.stack.trim().match(/\n( *(at )?)/);it=l&&l[1]||""}return`
`+it+o}var rt=!1;function Ft(o,l){if(!o||rt)return"";rt=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(l)if(l=function(){throw Error()},Object.defineProperty(l.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(l,[])}catch(ge){var g=ge}Reflect.construct(o,[],l)}else{try{l.call()}catch(ge){g=ge}o.call(l.prototype)}else{try{throw Error()}catch(ge){g=ge}o()}}catch(ge){if(ge&&g&&typeof ge.stack=="string"){for(var M=ge.stack.split(`
`),T=g.stack.split(`
`),O=M.length-1,V=T.length-1;1<=O&&0<=V&&M[O]!==T[V];)V--;for(;1<=O&&0<=V;O--,V--)if(M[O]!==T[V]){if(O!==1||V!==1)do if(O--,V--,0>V||M[O]!==T[V]){var ie=`
`+M[O].replace(" at new "," at ");return o.displayName&&ie.includes("<anonymous>")&&(ie=ie.replace("<anonymous>",o.displayName)),ie}while(1<=O&&0<=V);break}}}finally{rt=!1,Error.prepareStackTrace=d}return(o=o?o.displayName||o.name:"")?$e(o):""}var An=Object.prototype.hasOwnProperty,Gt=[],gn=-1;function yt(o){return{current:o}}function De(o){0>gn||(o.current=Gt[gn],Gt[gn]=null,gn--)}function At(o,l){gn++,Gt[gn]=o.current,o.current=l}var gt={},Bt=yt(gt),dn=yt(!1),qn=gt;function Ci(o,l){var d=o.type.contextTypes;if(!d)return gt;var g=o.stateNode;if(g&&g.__reactInternalMemoizedUnmaskedChildContext===l)return g.__reactInternalMemoizedMaskedChildContext;var M={},T;for(T in d)M[T]=l[T];return g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=l,o.__reactInternalMemoizedMaskedChildContext=M),M}function Tt(o){return o=o.childContextTypes,o!=null}function Yn(){De(dn),De(Bt)}function As(o,l,d){if(Bt.current!==gt)throw Error(a(168));At(Bt,l),At(dn,d)}function bn(o,l,d){var g=o.stateNode;if(l=l.childContextTypes,typeof g.getChildContext!="function")return d;g=g.getChildContext();for(var M in g)if(!(M in l))throw Error(a(108,z(o)||"Unknown",M));return s({},d,g)}function fr(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||gt,qn=Bt.current,At(Bt,o),At(dn,dn.current),!0}function rl(o,l,d){var g=o.stateNode;if(!g)throw Error(a(169));d?(o=bn(o,l,qn),g.__reactInternalMemoizedMergedChildContext=o,De(dn),De(Bt),At(Bt,o)):De(dn),At(dn,d)}var On=Math.clz32?Math.clz32:Yy,Xy=Math.log,qy=Math.LN2;function Yy(o){return o>>>=0,o===0?32:31-(Xy(o)/qy|0)|0}var sl=64,ol=4194304;function Lo(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function al(o,l){var d=o.pendingLanes;if(d===0)return 0;var g=0,M=o.suspendedLanes,T=o.pingedLanes,O=d&268435455;if(O!==0){var V=O&~M;V!==0?g=Lo(V):(T&=O,T!==0&&(g=Lo(T)))}else O=d&~M,O!==0?g=Lo(O):T!==0&&(g=Lo(T));if(g===0)return 0;if(l!==0&&l!==g&&!(l&M)&&(M=g&-g,T=l&-l,M>=T||M===16&&(T&4194240)!==0))return l;if(g&4&&(g|=d&16),l=o.entangledLanes,l!==0)for(o=o.entanglements,l&=g;0<l;)d=31-On(l),M=1<<d,g|=o[d],l&=~M;return g}function jy(o,l){switch(o){case 1:case 2:case 4:return l+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return l+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Zy(o,l){for(var d=o.suspendedLanes,g=o.pingedLanes,M=o.expirationTimes,T=o.pendingLanes;0<T;){var O=31-On(T),V=1<<O,ie=M[O];ie===-1?(!(V&d)||V&g)&&(M[O]=jy(V,l)):ie<=l&&(o.expiredLanes|=V),T&=~V}}function Fu(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function zu(o){for(var l=[],d=0;31>d;d++)l.push(o);return l}function No(o,l,d){o.pendingLanes|=l,l!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,l=31-On(l),o[l]=d}function Jy(o,l){var d=o.pendingLanes&~l;o.pendingLanes=l,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=l,o.mutableReadLanes&=l,o.entangledLanes&=l,l=o.entanglements;var g=o.eventTimes;for(o=o.expirationTimes;0<d;){var M=31-On(d),T=1<<M;l[M]=0,g[M]=-1,o[M]=-1,d&=~T}}function Bu(o,l){var d=o.entangledLanes|=l;for(o=o.entanglements;d;){var g=31-On(d),M=1<<g;M&l|o[g]&l&&(o[g]|=l),d&=~M}}var xt=0;function Sp(o){return o&=-o,1<o?4<o?o&268435455?16:536870912:4:1}var ku=i.unstable_scheduleCallback,wp=i.unstable_cancelCallback,Ky=i.unstable_shouldYield,Qy=i.unstable_requestPaint,on=i.unstable_now,Hu=i.unstable_ImmediatePriority,$y=i.unstable_UserBlockingPriority,Vu=i.unstable_NormalPriority,ex=i.unstable_IdlePriority,ll=null,Ri=null;function tx(o){if(Ri&&typeof Ri.onCommitFiberRoot=="function")try{Ri.onCommitFiberRoot(ll,o,void 0,(o.current.flags&128)===128)}catch{}}function nx(o,l){return o===l&&(o!==0||1/o===1/l)||o!==o&&l!==l}var Pi=typeof Object.is=="function"?Object.is:nx,Wi=null,cl=!1,Gu=!1;function Ep(o){Wi===null?Wi=[o]:Wi.push(o)}function ix(o){cl=!0,Ep(o)}function Ii(){if(!Gu&&Wi!==null){Gu=!0;var o=0,l=xt;try{var d=Wi;for(xt=1;o<d.length;o++){var g=d[o];do g=g(!0);while(g!==null)}Wi=null,cl=!1}catch(M){throw Wi!==null&&(Wi=Wi.slice(o+1)),ku(Hu,Ii),M}finally{xt=l,Gu=!1}}return null}var rx=c.ReactCurrentBatchConfig;function ul(o,l){if(Pi(o,l))return!0;if(typeof o!="object"||o===null||typeof l!="object"||l===null)return!1;var d=Object.keys(o),g=Object.keys(l);if(d.length!==g.length)return!1;for(g=0;g<d.length;g++){var M=d[g];if(!An.call(l,M)||!Pi(o[M],l[M]))return!1}return!0}function sx(o){switch(o.tag){case 5:return $e(o.type);case 16:return $e("Lazy");case 13:return $e("Suspense");case 19:return $e("SuspenseList");case 0:case 2:case 15:return o=Ft(o.type,!1),o;case 11:return o=Ft(o.type.render,!1),o;case 1:return o=Ft(o.type,!0),o;default:return""}}function gi(o,l){if(o&&o.defaultProps){l=s({},l),o=o.defaultProps;for(var d in o)l[d]===void 0&&(l[d]=o[d]);return l}return l}var hl=yt(null),fl=null,bs=null,Wu=null;function Xu(){Wu=bs=fl=null}function Tp(o,l,d){Qe?(At(hl,l._currentValue),l._currentValue=d):(At(hl,l._currentValue2),l._currentValue2=d)}function qu(o){var l=hl.current;De(hl),Qe?o._currentValue=l:o._currentValue2=l}function Yu(o,l,d){for(;o!==null;){var g=o.alternate;if((o.childLanes&l)!==l?(o.childLanes|=l,g!==null&&(g.childLanes|=l)):g!==null&&(g.childLanes&l)!==l&&(g.childLanes|=l),o===d)break;o=o.return}}function Cs(o,l){fl=o,Wu=bs=null,o=o.dependencies,o!==null&&o.firstContext!==null&&(o.lanes&l&&(Jn=!0),o.firstContext=null)}function ri(o){var l=Qe?o._currentValue:o._currentValue2;if(Wu!==o)if(o={context:o,memoizedValue:l,next:null},bs===null){if(fl===null)throw Error(a(308));bs=o,fl.dependencies={lanes:0,firstContext:o}}else bs=bs.next=o;return l}var Li=null,dr=!1;function ju(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ap(o,l){o=o.updateQueue,l.updateQueue===o&&(l.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function Xi(o,l){return{eventTime:o,lane:l,tag:0,payload:null,callback:null,next:null}}function pr(o,l){var d=o.updateQueue;d!==null&&(d=d.shared,Zt!==null&&o.mode&1&&!(dt&2)?(o=d.interleaved,o===null?(l.next=l,Li===null?Li=[d]:Li.push(d)):(l.next=o.next,o.next=l),d.interleaved=l):(o=d.pending,o===null?l.next=l:(l.next=o.next,o.next=l),d.pending=l))}function dl(o,l,d){if(l=l.updateQueue,l!==null&&(l=l.shared,(d&4194240)!==0)){var g=l.lanes;g&=o.pendingLanes,d|=g,l.lanes=d,Bu(o,d)}}function bp(o,l){var d=o.updateQueue,g=o.alternate;if(g!==null&&(g=g.updateQueue,d===g)){var M=null,T=null;if(d=d.firstBaseUpdate,d!==null){do{var O={eventTime:d.eventTime,lane:d.lane,tag:d.tag,payload:d.payload,callback:d.callback,next:null};T===null?M=T=O:T=T.next=O,d=d.next}while(d!==null);T===null?M=T=l:T=T.next=l}else M=T=l;d={baseState:g.baseState,firstBaseUpdate:M,lastBaseUpdate:T,shared:g.shared,effects:g.effects},o.updateQueue=d;return}o=d.lastBaseUpdate,o===null?d.firstBaseUpdate=l:o.next=l,d.lastBaseUpdate=l}function pl(o,l,d,g){var M=o.updateQueue;dr=!1;var T=M.firstBaseUpdate,O=M.lastBaseUpdate,V=M.shared.pending;if(V!==null){M.shared.pending=null;var ie=V,ge=ie.next;ie.next=null,O===null?T=ge:O.next=ge,O=ie;var Ue=o.alternate;Ue!==null&&(Ue=Ue.updateQueue,V=Ue.lastBaseUpdate,V!==O&&(V===null?Ue.firstBaseUpdate=ge:V.next=ge,Ue.lastBaseUpdate=ie))}if(T!==null){var ot=M.baseState;O=0,Ue=ge=ie=null,V=T;do{var je=V.lane,Nt=V.eventTime;if((g&je)===je){Ue!==null&&(Ue=Ue.next={eventTime:Nt,lane:0,tag:V.tag,payload:V.payload,callback:V.callback,next:null});e:{var We=o,xn=V;switch(je=l,Nt=d,xn.tag){case 1:if(We=xn.payload,typeof We=="function"){ot=We.call(Nt,ot,je);break e}ot=We;break e;case 3:We.flags=We.flags&-65537|128;case 0:if(We=xn.payload,je=typeof We=="function"?We.call(Nt,ot,je):We,je==null)break e;ot=s({},ot,je);break e;case 2:dr=!0}}V.callback!==null&&V.lane!==0&&(o.flags|=64,je=M.effects,je===null?M.effects=[V]:je.push(V))}else Nt={eventTime:Nt,lane:je,tag:V.tag,payload:V.payload,callback:V.callback,next:null},Ue===null?(ge=Ue=Nt,ie=ot):Ue=Ue.next=Nt,O|=je;if(V=V.next,V===null){if(V=M.shared.pending,V===null)break;je=V,V=je.next,je.next=null,M.lastBaseUpdate=je,M.shared.pending=null}}while(!0);if(Ue===null&&(ie=ot),M.baseState=ie,M.firstBaseUpdate=ge,M.lastBaseUpdate=Ue,l=M.shared.interleaved,l!==null){M=l;do O|=M.lane,M=M.next;while(M!==l)}else T===null&&(M.shared.lanes=0);Fs|=O,o.lanes=O,o.memoizedState=ot}}function Cp(o,l,d){if(o=l.effects,l.effects=null,o!==null)for(l=0;l<o.length;l++){var g=o[l],M=g.callback;if(M!==null){if(g.callback=null,g=d,typeof M!="function")throw Error(a(191,M));M.call(g)}}}var Rp=new n.Component().refs;function Zu(o,l,d,g){l=o.memoizedState,d=d(g,l),d=d==null?l:s({},l,d),o.memoizedState=d,o.lanes===0&&(o.updateQueue.baseState=d)}var ml={isMounted:function(o){return(o=o._reactInternals)?R(o)===o:!1},enqueueSetState:function(o,l,d){o=o._reactInternals;var g=Rn(),M=vr(o),T=Xi(g,M);T.payload=l,d!=null&&(T.callback=d),pr(o,T),l=ci(o,M,g),l!==null&&dl(l,o,M)},enqueueReplaceState:function(o,l,d){o=o._reactInternals;var g=Rn(),M=vr(o),T=Xi(g,M);T.tag=1,T.payload=l,d!=null&&(T.callback=d),pr(o,T),l=ci(o,M,g),l!==null&&dl(l,o,M)},enqueueForceUpdate:function(o,l){o=o._reactInternals;var d=Rn(),g=vr(o),M=Xi(d,g);M.tag=2,l!=null&&(M.callback=l),pr(o,M),l=ci(o,g,d),l!==null&&dl(l,o,g)}};function Pp(o,l,d,g,M,T,O){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(g,T,O):l.prototype&&l.prototype.isPureReactComponent?!ul(d,g)||!ul(M,T):!0}function Ip(o,l,d){var g=!1,M=gt,T=l.contextType;return typeof T=="object"&&T!==null?T=ri(T):(M=Tt(l)?qn:Bt.current,g=l.contextTypes,T=(g=g!=null)?Ci(o,M):gt),l=new l(d,T),o.memoizedState=l.state!==null&&l.state!==void 0?l.state:null,l.updater=ml,o.stateNode=l,l._reactInternals=o,g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=M,o.__reactInternalMemoizedMaskedChildContext=T),l}function Lp(o,l,d,g){o=l.state,typeof l.componentWillReceiveProps=="function"&&l.componentWillReceiveProps(d,g),typeof l.UNSAFE_componentWillReceiveProps=="function"&&l.UNSAFE_componentWillReceiveProps(d,g),l.state!==o&&ml.enqueueReplaceState(l,l.state,null)}function Ju(o,l,d,g){var M=o.stateNode;M.props=d,M.state=o.memoizedState,M.refs=Rp,ju(o);var T=l.contextType;typeof T=="object"&&T!==null?M.context=ri(T):(T=Tt(l)?qn:Bt.current,M.context=Ci(o,T)),M.state=o.memoizedState,T=l.getDerivedStateFromProps,typeof T=="function"&&(Zu(o,l,T,d),M.state=o.memoizedState),typeof l.getDerivedStateFromProps=="function"||typeof M.getSnapshotBeforeUpdate=="function"||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(l=M.state,typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount(),l!==M.state&&ml.enqueueReplaceState(M,M.state,null),pl(o,d,M,g),M.state=o.memoizedState),typeof M.componentDidMount=="function"&&(o.flags|=4194308)}var Rs=[],Ps=0,gl=null,vl=0,si=[],oi=0,Br=null,qi=1,Yi="";function kr(o,l){Rs[Ps++]=vl,Rs[Ps++]=gl,gl=o,vl=l}function Np(o,l,d){si[oi++]=qi,si[oi++]=Yi,si[oi++]=Br,Br=o;var g=qi;o=Yi;var M=32-On(g)-1;g&=~(1<<M),d+=1;var T=32-On(l)+M;if(30<T){var O=M-M%5;T=(g&(1<<O)-1).toString(32),g>>=O,M-=O,qi=1<<32-On(l)+M|d<<M|g,Yi=T+o}else qi=1<<T|d<<M|g,Yi=o}function Ku(o){o.return!==null&&(kr(o,1),Np(o,1,0))}function Qu(o){for(;o===gl;)gl=Rs[--Ps],Rs[Ps]=null,vl=Rs[--Ps],Rs[Ps]=null;for(;o===Br;)Br=si[--oi],si[oi]=null,Yi=si[--oi],si[oi]=null,qi=si[--oi],si[oi]=null}var jn=null,Zn=null,kt=!1,Do=!1,vi=null;function Dp(o,l){var d=ui(5,null,null,0);d.elementType="DELETED",d.stateNode=l,d.return=o,l=o.deletions,l===null?(o.deletions=[d],o.flags|=16):l.push(d)}function Up(o,l){switch(o.tag){case 5:return l=Gi(l,o.type,o.pendingProps),l!==null?(o.stateNode=l,jn=o,Zn=nl(l),!0):!1;case 6:return l=Qa(l,o.pendingProps),l!==null?(o.stateNode=l,jn=o,Zn=null,!0):!1;case 13:if(l=$a(l),l!==null){var d=Br!==null?{id:qi,overflow:Yi}:null;return o.memoizedState={dehydrated:l,treeContext:d,retryLane:1073741824},d=ui(18,null,null,0),d.stateNode=l,d.return=o,o.child=d,jn=o,Zn=null,!0}return!1;default:return!1}}function $u(o){return(o.mode&1)!==0&&(o.flags&128)===0}function eh(o){if(kt){var l=Zn;if(l){var d=l;if(!Up(o,l)){if($u(o))throw Error(a(418));l=bi(d);var g=jn;l&&Up(o,l)?Dp(g,d):(o.flags=o.flags&-4097|2,kt=!1,jn=o)}}else{if($u(o))throw Error(a(418));o.flags=o.flags&-4097|2,kt=!1,jn=o}}}function Op(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;jn=o}function Uo(o){if(!oe||o!==jn)return!1;if(!kt)return Op(o),kt=!0,!1;if(o.tag!==3&&(o.tag!==5||Ge(o.type)&&!pe(o.type,o.memoizedProps))){var l=Zn;if(l){if($u(o)){for(o=Zn;o;)o=bi(o);throw Error(a(418))}for(;l;)Dp(o,l),l=bi(l)}}if(Op(o),o.tag===13){if(!oe)throw Error(a(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(a(317));Zn=X(o)}else Zn=jn?bi(o.stateNode):null;return!0}function Is(){oe&&(Zn=jn=null,Do=kt=!1)}function th(o){vi===null?vi=[o]:vi.push(o)}function Oo(o,l,d){if(o=d.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(d._owner){if(d=d._owner,d){if(d.tag!==1)throw Error(a(309));var g=d.stateNode}if(!g)throw Error(a(147,o));var M=g,T=""+o;return l!==null&&l.ref!==null&&typeof l.ref=="function"&&l.ref._stringRef===T?l.ref:(l=function(O){var V=M.refs;V===Rp&&(V=M.refs={}),O===null?delete V[T]:V[T]=O},l._stringRef=T,l)}if(typeof o!="string")throw Error(a(284));if(!d._owner)throw Error(a(290,o))}return o}function _l(o,l){throw o=Object.prototype.toString.call(l),Error(a(31,o==="[object Object]"?"object with keys {"+Object.keys(l).join(", ")+"}":o))}function Fp(o){var l=o._init;return l(o._payload)}function zp(o){function l(j,G){if(o){var te=j.deletions;te===null?(j.deletions=[G],j.flags|=16):te.push(G)}}function d(j,G){if(!o)return null;for(;G!==null;)l(j,G),G=G.sibling;return null}function g(j,G){for(j=new Map;G!==null;)G.key!==null?j.set(G.key,G):j.set(G.index,G),G=G.sibling;return j}function M(j,G){return j=yr(j,G),j.index=0,j.sibling=null,j}function T(j,G,te){return j.index=te,o?(te=j.alternate,te!==null?(te=te.index,te<G?(j.flags|=2,G):te):(j.flags|=2,G)):(j.flags|=1048576,G)}function O(j){return o&&j.alternate===null&&(j.flags|=2),j}function V(j,G,te,Pe){return G===null||G.tag!==6?(G=zh(te,j.mode,Pe),G.return=j,G):(G=M(G,te),G.return=j,G)}function ie(j,G,te,Pe){var ke=te.type;return ke===f?Ue(j,G,te.props.children,Pe,te.key):G!==null&&(G.elementType===ke||typeof ke=="object"&&ke!==null&&ke.$$typeof===w&&Fp(ke)===G.type)?(Pe=M(G,te.props),Pe.ref=Oo(j,G,te),Pe.return=j,Pe):(Pe=Zl(te.type,te.key,te.props,null,j.mode,Pe),Pe.ref=Oo(j,G,te),Pe.return=j,Pe)}function ge(j,G,te,Pe){return G===null||G.tag!==4||G.stateNode.containerInfo!==te.containerInfo||G.stateNode.implementation!==te.implementation?(G=Bh(te,j.mode,Pe),G.return=j,G):(G=M(G,te.children||[]),G.return=j,G)}function Ue(j,G,te,Pe,ke){return G===null||G.tag!==7?(G=Yr(te,j.mode,Pe,ke),G.return=j,G):(G=M(G,te),G.return=j,G)}function ot(j,G,te){if(typeof G=="string"&&G!==""||typeof G=="number")return G=zh(""+G,j.mode,te),G.return=j,G;if(typeof G=="object"&&G!==null){switch(G.$$typeof){case u:return te=Zl(G.type,G.key,G.props,null,j.mode,te),te.ref=Oo(j,null,G),te.return=j,te;case h:return G=Bh(G,j.mode,te),G.return=j,G;case w:var Pe=G._init;return ot(j,Pe(G._payload),te)}if(se(G)||P(G))return G=Yr(G,j.mode,te,null),G.return=j,G;_l(j,G)}return null}function je(j,G,te,Pe){var ke=G!==null?G.key:null;if(typeof te=="string"&&te!==""||typeof te=="number")return ke!==null?null:V(j,G,""+te,Pe);if(typeof te=="object"&&te!==null){switch(te.$$typeof){case u:return te.key===ke?ie(j,G,te,Pe):null;case h:return te.key===ke?ge(j,G,te,Pe):null;case w:return ke=te._init,je(j,G,ke(te._payload),Pe)}if(se(te)||P(te))return ke!==null?null:Ue(j,G,te,Pe,null);_l(j,te)}return null}function Nt(j,G,te,Pe,ke){if(typeof Pe=="string"&&Pe!==""||typeof Pe=="number")return j=j.get(te)||null,V(G,j,""+Pe,ke);if(typeof Pe=="object"&&Pe!==null){switch(Pe.$$typeof){case u:return j=j.get(Pe.key===null?te:Pe.key)||null,ie(G,j,Pe,ke);case h:return j=j.get(Pe.key===null?te:Pe.key)||null,ge(G,j,Pe,ke);case w:var ht=Pe._init;return Nt(j,G,te,ht(Pe._payload),ke)}if(se(Pe)||P(Pe))return j=j.get(te)||null,Ue(G,j,Pe,ke,null);_l(G,Pe)}return null}function We(j,G,te,Pe){for(var ke=null,ht=null,at=G,Mt=G=0,ln=null;at!==null&&Mt<te.length;Mt++){at.index>Mt?(ln=at,at=null):ln=at.sibling;var St=je(j,at,te[Mt],Pe);if(St===null){at===null&&(at=ln);break}o&&at&&St.alternate===null&&l(j,at),G=T(St,G,Mt),ht===null?ke=St:ht.sibling=St,ht=St,at=ln}if(Mt===te.length)return d(j,at),kt&&kr(j,Mt),ke;if(at===null){for(;Mt<te.length;Mt++)at=ot(j,te[Mt],Pe),at!==null&&(G=T(at,G,Mt),ht===null?ke=at:ht.sibling=at,ht=at);return kt&&kr(j,Mt),ke}for(at=g(j,at);Mt<te.length;Mt++)ln=Nt(at,j,Mt,te[Mt],Pe),ln!==null&&(o&&ln.alternate!==null&&at.delete(ln.key===null?Mt:ln.key),G=T(ln,G,Mt),ht===null?ke=ln:ht.sibling=ln,ht=ln);return o&&at.forEach(function(xr){return l(j,xr)}),kt&&kr(j,Mt),ke}function xn(j,G,te,Pe){var ke=P(te);if(typeof ke!="function")throw Error(a(150));if(te=ke.call(te),te==null)throw Error(a(151));for(var ht=ke=null,at=G,Mt=G=0,ln=null,St=te.next();at!==null&&!St.done;Mt++,St=te.next()){at.index>Mt?(ln=at,at=null):ln=at.sibling;var xr=je(j,at,St.value,Pe);if(xr===null){at===null&&(at=ln);break}o&&at&&xr.alternate===null&&l(j,at),G=T(xr,G,Mt),ht===null?ke=xr:ht.sibling=xr,ht=xr,at=ln}if(St.done)return d(j,at),kt&&kr(j,Mt),ke;if(at===null){for(;!St.done;Mt++,St=te.next())St=ot(j,St.value,Pe),St!==null&&(G=T(St,G,Mt),ht===null?ke=St:ht.sibling=St,ht=St);return kt&&kr(j,Mt),ke}for(at=g(j,at);!St.done;Mt++,St=te.next())St=Nt(at,j,Mt,St.value,Pe),St!==null&&(o&&St.alternate!==null&&at.delete(St.key===null?Mt:St.key),G=T(St,G,Mt),ht===null?ke=St:ht.sibling=St,ht=St);return o&&at.forEach(function(Ux){return l(j,Ux)}),kt&&kr(j,Mt),ke}function hi(j,G,te,Pe){if(typeof te=="object"&&te!==null&&te.type===f&&te.key===null&&(te=te.props.children),typeof te=="object"&&te!==null){switch(te.$$typeof){case u:e:{for(var ke=te.key,ht=G;ht!==null;){if(ht.key===ke){if(ke=te.type,ke===f){if(ht.tag===7){d(j,ht.sibling),G=M(ht,te.props.children),G.return=j,j=G;break e}}else if(ht.elementType===ke||typeof ke=="object"&&ke!==null&&ke.$$typeof===w&&Fp(ke)===ht.type){d(j,ht.sibling),G=M(ht,te.props),G.ref=Oo(j,ht,te),G.return=j,j=G;break e}d(j,ht);break}else l(j,ht);ht=ht.sibling}te.type===f?(G=Yr(te.props.children,j.mode,Pe,te.key),G.return=j,j=G):(Pe=Zl(te.type,te.key,te.props,null,j.mode,Pe),Pe.ref=Oo(j,G,te),Pe.return=j,j=Pe)}return O(j);case h:e:{for(ht=te.key;G!==null;){if(G.key===ht)if(G.tag===4&&G.stateNode.containerInfo===te.containerInfo&&G.stateNode.implementation===te.implementation){d(j,G.sibling),G=M(G,te.children||[]),G.return=j,j=G;break e}else{d(j,G);break}else l(j,G);G=G.sibling}G=Bh(te,j.mode,Pe),G.return=j,j=G}return O(j);case w:return ht=te._init,hi(j,G,ht(te._payload),Pe)}if(se(te))return We(j,G,te,Pe);if(P(te))return xn(j,G,te,Pe);_l(j,te)}return typeof te=="string"&&te!==""||typeof te=="number"?(te=""+te,G!==null&&G.tag===6?(d(j,G.sibling),G=M(G,te),G.return=j,j=G):(d(j,G),G=zh(te,j.mode,Pe),G.return=j,j=G),O(j)):d(j,G)}return hi}var Ls=zp(!0),Bp=zp(!1),Fo={},ai=yt(Fo),zo=yt(Fo),Ns=yt(Fo);function Ni(o){if(o===Fo)throw Error(a(174));return o}function nh(o,l){At(Ns,l),At(zo,o),At(ai,Fo),o=ve(l),De(ai),At(ai,o)}function Ds(){De(ai),De(zo),De(Ns)}function kp(o){var l=Ni(Ns.current),d=Ni(ai.current);l=H(d,o.type,l),d!==l&&(At(zo,o),At(ai,l))}function ih(o){zo.current===o&&(De(ai),De(zo))}var Ht=yt(0);function yl(o){for(var l=o;l!==null;){if(l.tag===13){var d=l.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||el(d)||hr(d)))return l}else if(l.tag===19&&l.memoizedProps.revealOrder!==void 0){if(l.flags&128)return l}else if(l.child!==null){l.child.return=l,l=l.child;continue}if(l===o)break;for(;l.sibling===null;){if(l.return===null||l.return===o)return null;l=l.return}l.sibling.return=l.return,l=l.sibling}return null}var rh=[];function sh(){for(var o=0;o<rh.length;o++){var l=rh[o];Qe?l._workInProgressVersionPrimary=null:l._workInProgressVersionSecondary=null}rh.length=0}var xl=c.ReactCurrentDispatcher,li=c.ReactCurrentBatchConfig,Us=0,Wt=null,vn=null,an=null,Ml=!1,Bo=!1,ko=0,ox=0;function _n(){throw Error(a(321))}function oh(o,l){if(l===null)return!1;for(var d=0;d<l.length&&d<o.length;d++)if(!Pi(o[d],l[d]))return!1;return!0}function ah(o,l,d,g,M,T){if(Us=T,Wt=l,l.memoizedState=null,l.updateQueue=null,l.lanes=0,xl.current=o===null||o.memoizedState===null?ux:hx,o=d(g,M),Bo){T=0;do{if(Bo=!1,ko=0,25<=T)throw Error(a(301));T+=1,an=vn=null,l.updateQueue=null,xl.current=fx,o=d(g,M)}while(Bo)}if(xl.current=Al,l=vn!==null&&vn.next!==null,Us=0,an=vn=Wt=null,Ml=!1,l)throw Error(a(300));return o}function lh(){var o=ko!==0;return ko=0,o}function ji(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return an===null?Wt.memoizedState=an=o:an=an.next=o,an}function Di(){if(vn===null){var o=Wt.alternate;o=o!==null?o.memoizedState:null}else o=vn.next;var l=an===null?Wt.memoizedState:an.next;if(l!==null)an=l,vn=o;else{if(o===null)throw Error(a(310));vn=o,o={memoizedState:vn.memoizedState,baseState:vn.baseState,baseQueue:vn.baseQueue,queue:vn.queue,next:null},an===null?Wt.memoizedState=an=o:an=an.next=o}return an}function Hr(o,l){return typeof l=="function"?l(o):l}function Sl(o){var l=Di(),d=l.queue;if(d===null)throw Error(a(311));d.lastRenderedReducer=o;var g=vn,M=g.baseQueue,T=d.pending;if(T!==null){if(M!==null){var O=M.next;M.next=T.next,T.next=O}g.baseQueue=M=T,d.pending=null}if(M!==null){T=M.next,g=g.baseState;var V=O=null,ie=null,ge=T;do{var Ue=ge.lane;if((Us&Ue)===Ue)ie!==null&&(ie=ie.next={lane:0,action:ge.action,hasEagerState:ge.hasEagerState,eagerState:ge.eagerState,next:null}),g=ge.hasEagerState?ge.eagerState:o(g,ge.action);else{var ot={lane:Ue,action:ge.action,hasEagerState:ge.hasEagerState,eagerState:ge.eagerState,next:null};ie===null?(V=ie=ot,O=g):ie=ie.next=ot,Wt.lanes|=Ue,Fs|=Ue}ge=ge.next}while(ge!==null&&ge!==T);ie===null?O=g:ie.next=V,Pi(g,l.memoizedState)||(Jn=!0),l.memoizedState=g,l.baseState=O,l.baseQueue=ie,d.lastRenderedState=g}if(o=d.interleaved,o!==null){M=o;do T=M.lane,Wt.lanes|=T,Fs|=T,M=M.next;while(M!==o)}else M===null&&(d.lanes=0);return[l.memoizedState,d.dispatch]}function wl(o){var l=Di(),d=l.queue;if(d===null)throw Error(a(311));d.lastRenderedReducer=o;var g=d.dispatch,M=d.pending,T=l.memoizedState;if(M!==null){d.pending=null;var O=M=M.next;do T=o(T,O.action),O=O.next;while(O!==M);Pi(T,l.memoizedState)||(Jn=!0),l.memoizedState=T,l.baseQueue===null&&(l.baseState=T),d.lastRenderedState=T}return[T,g]}function Hp(){}function Vp(o,l){var d=Wt,g=Di(),M=l(),T=!Pi(g.memoizedState,M);if(T&&(g.memoizedState=M,Jn=!0),g=g.queue,Vo(Xp.bind(null,d,g,o),[o]),g.getSnapshot!==l||T||an!==null&&an.memoizedState.tag&1){if(d.flags|=2048,Ho(9,Wp.bind(null,d,g,M,l),void 0,null),Zt===null)throw Error(a(349));Us&30||Gp(d,l,M)}return M}function Gp(o,l,d){o.flags|=16384,o={getSnapshot:l,value:d},l=Wt.updateQueue,l===null?(l={lastEffect:null,stores:null},Wt.updateQueue=l,l.stores=[o]):(d=l.stores,d===null?l.stores=[o]:d.push(o))}function Wp(o,l,d,g){l.value=d,l.getSnapshot=g,qp(l)&&ci(o,1,-1)}function Xp(o,l,d){return d(function(){qp(l)&&ci(o,1,-1)})}function qp(o){var l=o.getSnapshot;o=o.value;try{var d=l();return!Pi(o,d)}catch{return!0}}function ch(o){var l=ji();return typeof o=="function"&&(o=o()),l.memoizedState=l.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Hr,lastRenderedState:o},l.queue=o,o=o.dispatch=cx.bind(null,Wt,o),[l.memoizedState,o]}function Ho(o,l,d,g){return o={tag:o,create:l,destroy:d,deps:g,next:null},l=Wt.updateQueue,l===null?(l={lastEffect:null,stores:null},Wt.updateQueue=l,l.lastEffect=o.next=o):(d=l.lastEffect,d===null?l.lastEffect=o.next=o:(g=d.next,d.next=o,o.next=g,l.lastEffect=o)),o}function Yp(){return Di().memoizedState}function El(o,l,d,g){var M=ji();Wt.flags|=o,M.memoizedState=Ho(1|l,d,void 0,g===void 0?null:g)}function Tl(o,l,d,g){var M=Di();g=g===void 0?null:g;var T=void 0;if(vn!==null){var O=vn.memoizedState;if(T=O.destroy,g!==null&&oh(g,O.deps)){M.memoizedState=Ho(l,d,T,g);return}}Wt.flags|=o,M.memoizedState=Ho(1|l,d,T,g)}function uh(o,l){return El(8390656,8,o,l)}function Vo(o,l){return Tl(2048,8,o,l)}function jp(o,l){return Tl(4,2,o,l)}function Zp(o,l){return Tl(4,4,o,l)}function Jp(o,l){if(typeof l=="function")return o=o(),l(o),function(){l(null)};if(l!=null)return o=o(),l.current=o,function(){l.current=null}}function Kp(o,l,d){return d=d!=null?d.concat([o]):null,Tl(4,4,Jp.bind(null,l,o),d)}function hh(){}function Qp(o,l){var d=Di();l=l===void 0?null:l;var g=d.memoizedState;return g!==null&&l!==null&&oh(l,g[1])?g[0]:(d.memoizedState=[o,l],o)}function $p(o,l){var d=Di();l=l===void 0?null:l;var g=d.memoizedState;return g!==null&&l!==null&&oh(l,g[1])?g[0]:(o=o(),d.memoizedState=[o,l],o)}function ax(o,l){var d=xt;xt=d!==0&&4>d?d:4,o(!0);var g=li.transition;li.transition={};try{o(!1),l()}finally{xt=d,li.transition=g}}function em(){return Di().memoizedState}function lx(o,l,d){var g=vr(o);d={lane:g,action:d,hasEagerState:!1,eagerState:null,next:null},tm(o)?nm(l,d):(im(o,l,d),d=Rn(),o=ci(o,g,d),o!==null&&rm(o,l,g))}function cx(o,l,d){var g=vr(o),M={lane:g,action:d,hasEagerState:!1,eagerState:null,next:null};if(tm(o))nm(l,M);else{im(o,l,M);var T=o.alternate;if(o.lanes===0&&(T===null||T.lanes===0)&&(T=l.lastRenderedReducer,T!==null))try{var O=l.lastRenderedState,V=T(O,d);if(M.hasEagerState=!0,M.eagerState=V,Pi(V,O))return}catch{}finally{}d=Rn(),o=ci(o,g,d),o!==null&&rm(o,l,g)}}function tm(o){var l=o.alternate;return o===Wt||l!==null&&l===Wt}function nm(o,l){Bo=Ml=!0;var d=o.pending;d===null?l.next=l:(l.next=d.next,d.next=l),o.pending=l}function im(o,l,d){Zt!==null&&o.mode&1&&!(dt&2)?(o=l.interleaved,o===null?(d.next=d,Li===null?Li=[l]:Li.push(l)):(d.next=o.next,o.next=d),l.interleaved=d):(o=l.pending,o===null?d.next=d:(d.next=o.next,o.next=d),l.pending=d)}function rm(o,l,d){if(d&4194240){var g=l.lanes;g&=o.pendingLanes,d|=g,l.lanes=d,Bu(o,d)}}var Al={readContext:ri,useCallback:_n,useContext:_n,useEffect:_n,useImperativeHandle:_n,useInsertionEffect:_n,useLayoutEffect:_n,useMemo:_n,useReducer:_n,useRef:_n,useState:_n,useDebugValue:_n,useDeferredValue:_n,useTransition:_n,useMutableSource:_n,useSyncExternalStore:_n,useId:_n,unstable_isNewReconciler:!1},ux={readContext:ri,useCallback:function(o,l){return ji().memoizedState=[o,l===void 0?null:l],o},useContext:ri,useEffect:uh,useImperativeHandle:function(o,l,d){return d=d!=null?d.concat([o]):null,El(4194308,4,Jp.bind(null,l,o),d)},useLayoutEffect:function(o,l){return El(4194308,4,o,l)},useInsertionEffect:function(o,l){return El(4,2,o,l)},useMemo:function(o,l){var d=ji();return l=l===void 0?null:l,o=o(),d.memoizedState=[o,l],o},useReducer:function(o,l,d){var g=ji();return l=d!==void 0?d(l):l,g.memoizedState=g.baseState=l,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:l},g.queue=o,o=o.dispatch=lx.bind(null,Wt,o),[g.memoizedState,o]},useRef:function(o){var l=ji();return o={current:o},l.memoizedState=o},useState:ch,useDebugValue:hh,useDeferredValue:function(o){var l=ch(o),d=l[0],g=l[1];return uh(function(){var M=li.transition;li.transition={};try{g(o)}finally{li.transition=M}},[o]),d},useTransition:function(){var o=ch(!1),l=o[0];return o=ax.bind(null,o[1]),ji().memoizedState=o,[l,o]},useMutableSource:function(){},useSyncExternalStore:function(o,l,d){var g=Wt,M=ji();if(kt){if(d===void 0)throw Error(a(407));d=d()}else{if(d=l(),Zt===null)throw Error(a(349));Us&30||Gp(g,l,d)}M.memoizedState=d;var T={value:d,getSnapshot:l};return M.queue=T,uh(Xp.bind(null,g,T,o),[o]),g.flags|=2048,Ho(9,Wp.bind(null,g,T,d,l),void 0,null),d},useId:function(){var o=ji(),l=Zt.identifierPrefix;if(kt){var d=Yi,g=qi;d=(g&~(1<<32-On(g)-1)).toString(32)+d,l=":"+l+"R"+d,d=ko++,0<d&&(l+="H"+d.toString(32)),l+=":"}else d=ox++,l=":"+l+"r"+d.toString(32)+":";return o.memoizedState=l},unstable_isNewReconciler:!1},hx={readContext:ri,useCallback:Qp,useContext:ri,useEffect:Vo,useImperativeHandle:Kp,useInsertionEffect:jp,useLayoutEffect:Zp,useMemo:$p,useReducer:Sl,useRef:Yp,useState:function(){return Sl(Hr)},useDebugValue:hh,useDeferredValue:function(o){var l=Sl(Hr),d=l[0],g=l[1];return Vo(function(){var M=li.transition;li.transition={};try{g(o)}finally{li.transition=M}},[o]),d},useTransition:function(){var o=Sl(Hr)[0],l=Di().memoizedState;return[o,l]},useMutableSource:Hp,useSyncExternalStore:Vp,useId:em,unstable_isNewReconciler:!1},fx={readContext:ri,useCallback:Qp,useContext:ri,useEffect:Vo,useImperativeHandle:Kp,useInsertionEffect:jp,useLayoutEffect:Zp,useMemo:$p,useReducer:wl,useRef:Yp,useState:function(){return wl(Hr)},useDebugValue:hh,useDeferredValue:function(o){var l=wl(Hr),d=l[0],g=l[1];return Vo(function(){var M=li.transition;li.transition={};try{g(o)}finally{li.transition=M}},[o]),d},useTransition:function(){var o=wl(Hr)[0],l=Di().memoizedState;return[o,l]},useMutableSource:Hp,useSyncExternalStore:Vp,useId:em,unstable_isNewReconciler:!1};function fh(o,l){try{var d="",g=l;do d+=sx(g),g=g.return;while(g);var M=d}catch(T){M=`
Error generating stack: `+T.message+`
`+T.stack}return{value:o,source:l,stack:M}}function dh(o,l){try{console.error(l.value)}catch(d){setTimeout(function(){throw d})}}var dx=typeof WeakMap=="function"?WeakMap:Map;function sm(o,l,d){d=Xi(-1,d),d.tag=3,d.payload={element:null};var g=l.value;return d.callback=function(){Vl||(Vl=!0,Ih=g),dh(o,l)},d}function om(o,l,d){d=Xi(-1,d),d.tag=3;var g=o.type.getDerivedStateFromError;if(typeof g=="function"){var M=l.value;d.payload=function(){return g(M)},d.callback=function(){dh(o,l)}}var T=o.stateNode;return T!==null&&typeof T.componentDidCatch=="function"&&(d.callback=function(){dh(o,l),typeof g!="function"&&(mr===null?mr=new Set([this]):mr.add(this));var O=l.stack;this.componentDidCatch(l.value,{componentStack:O!==null?O:""})}),d}function am(o,l,d){var g=o.pingCache;if(g===null){g=o.pingCache=new dx;var M=new Set;g.set(l,M)}else M=g.get(l),M===void 0&&(M=new Set,g.set(l,M));M.has(d)||(M.add(d),o=bx.bind(null,o,l,d),l.then(o,o))}function lm(o){do{var l;if((l=o.tag===13)&&(l=o.memoizedState,l=l!==null?l.dehydrated!==null:!0),l)return o;o=o.return}while(o!==null);return null}function cm(o,l,d,g,M){return o.mode&1?(o.flags|=65536,o.lanes=M,o):(o===l?o.flags|=65536:(o.flags|=128,d.flags|=131072,d.flags&=-52805,d.tag===1&&(d.alternate===null?d.tag=17:(l=Xi(-1,1),l.tag=2,pr(d,l))),d.lanes|=1),o)}function Ui(o){o.flags|=4}function um(o,l){if(o!==null&&o.child===l.child)return!0;if(l.flags&16)return!1;for(o=l.child;o!==null;){if(o.flags&12854||o.subtreeFlags&12854)return!1;o=o.sibling}return!0}var Go,Wo,bl,Cl;if(W)Go=function(o,l){for(var d=l.child;d!==null;){if(d.tag===5||d.tag===6)Ie(o,d.stateNode);else if(d.tag!==4&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===l)break;for(;d.sibling===null;){if(d.return===null||d.return===l)return;d=d.return}d.sibling.return=d.return,d=d.sibling}},Wo=function(){},bl=function(o,l,d,g,M){if(o=o.memoizedProps,o!==g){var T=l.stateNode,O=Ni(ai.current);d=ne(T,d,o,g,M,O),(l.updateQueue=d)&&Ui(l)}},Cl=function(o,l,d,g){d!==g&&Ui(l)};else if(ce){Go=function(o,l,d,g){for(var M=l.child;M!==null;){if(M.tag===5){var T=M.stateNode;d&&g&&(T=Wn(T,M.type,M.memoizedProps,M)),Ie(o,T)}else if(M.tag===6)T=M.stateNode,d&&g&&(T=Xn(T,M.memoizedProps,M)),Ie(o,T);else if(M.tag!==4){if(M.tag===22&&M.memoizedState!==null)T=M.child,T!==null&&(T.return=M),Go(o,M,!0,!0);else if(M.child!==null){M.child.return=M,M=M.child;continue}}if(M===l)break;for(;M.sibling===null;){if(M.return===null||M.return===l)return;M=M.return}M.sibling.return=M.return,M=M.sibling}};var hm=function(o,l,d,g){for(var M=l.child;M!==null;){if(M.tag===5){var T=M.stateNode;d&&g&&(T=Wn(T,M.type,M.memoizedProps,M)),Ut(o,T)}else if(M.tag===6)T=M.stateNode,d&&g&&(T=Xn(T,M.memoizedProps,M)),Ut(o,T);else if(M.tag!==4){if(M.tag===22&&M.memoizedState!==null)T=M.child,T!==null&&(T.return=M),hm(o,M,!0,!0);else if(M.child!==null){M.child.return=M,M=M.child;continue}}if(M===l)break;for(;M.sibling===null;){if(M.return===null||M.return===l)return;M=M.return}M.sibling.return=M.return,M=M.sibling}};Wo=function(o,l){var d=l.stateNode;if(!um(o,l)){o=d.containerInfo;var g=Lt(o);hm(g,l,!1,!1),d.pendingChildren=g,Ui(l),sn(o,g)}},bl=function(o,l,d,g,M){var T=o.stateNode,O=o.memoizedProps;if((o=um(o,l))&&O===g)l.stateNode=T;else{var V=l.stateNode,ie=Ni(ai.current),ge=null;O!==g&&(ge=ne(V,d,O,g,M,ie)),o&&ge===null?l.stateNode=T:(T=Pt(T,ge,d,O,g,l,o,V),Be(T,d,g,M,ie)&&Ui(l),l.stateNode=T,o?Ui(l):Go(T,l,!1,!1))}},Cl=function(o,l,d,g){d!==g?(o=Ni(Ns.current),d=Ni(ai.current),l.stateNode=Ce(g,o,d,l),Ui(l)):l.stateNode=o.stateNode}}else Wo=function(){},bl=function(){},Cl=function(){};function Xo(o,l){if(!kt)switch(o.tailMode){case"hidden":l=o.tail;for(var d=null;l!==null;)l.alternate!==null&&(d=l),l=l.sibling;d===null?o.tail=null:d.sibling=null;break;case"collapsed":d=o.tail;for(var g=null;d!==null;)d.alternate!==null&&(g=d),d=d.sibling;g===null?l||o.tail===null?o.tail=null:o.tail.sibling=null:g.sibling=null}}function yn(o){var l=o.alternate!==null&&o.alternate.child===o.child,d=0,g=0;if(l)for(var M=o.child;M!==null;)d|=M.lanes|M.childLanes,g|=M.subtreeFlags&14680064,g|=M.flags&14680064,M.return=o,M=M.sibling;else for(M=o.child;M!==null;)d|=M.lanes|M.childLanes,g|=M.subtreeFlags,g|=M.flags,M.return=o,M=M.sibling;return o.subtreeFlags|=g,o.childLanes=d,l}function px(o,l,d){var g=l.pendingProps;switch(Qu(l),l.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return yn(l),null;case 1:return Tt(l.type)&&Yn(),yn(l),null;case 3:return g=l.stateNode,Ds(),De(dn),De(Bt),sh(),g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null),(o===null||o.child===null)&&(Uo(l)?Ui(l):o===null||o.memoizedState.isDehydrated&&!(l.flags&256)||(l.flags|=1024,vi!==null&&(Dh(vi),vi=null))),Wo(o,l),yn(l),null;case 5:ih(l),d=Ni(Ns.current);var M=l.type;if(o!==null&&l.stateNode!=null)bl(o,l,M,g,d),o.ref!==l.ref&&(l.flags|=512,l.flags|=2097152);else{if(!g){if(l.stateNode===null)throw Error(a(166));return yn(l),null}if(o=Ni(ai.current),Uo(l)){if(!oe)throw Error(a(175));o=Uu(l.stateNode,l.type,l.memoizedProps,d,o,l,!Do),l.updateQueue=o,o!==null&&Ui(l)}else{var T=he(M,g,d,o,l);Go(T,l,!1,!1),l.stateNode=T,Be(T,M,g,d,o)&&Ui(l)}l.ref!==null&&(l.flags|=512,l.flags|=2097152)}return yn(l),null;case 6:if(o&&l.stateNode!=null)Cl(o,l,o.memoizedProps,g);else{if(typeof g!="string"&&l.stateNode===null)throw Error(a(166));if(o=Ni(Ns.current),d=Ni(ai.current),Uo(l)){if(!oe)throw Error(a(176));if(o=l.stateNode,g=l.memoizedProps,(d=Ou(o,g,l,!Do))&&(M=jn,M!==null))switch(T=(M.mode&1)!==0,M.tag){case 3:Je(M.stateNode.containerInfo,o,g,T);break;case 5:tt(M.type,M.memoizedProps,M.stateNode,o,g,T)}d&&Ui(l)}else l.stateNode=Ce(g,o,d,l)}return yn(l),null;case 13:if(De(Ht),g=l.memoizedState,kt&&Zn!==null&&l.mode&1&&!(l.flags&128)){for(o=Zn;o;)o=bi(o);return Is(),l.flags|=98560,l}if(g!==null&&g.dehydrated!==null){if(g=Uo(l),o===null){if(!g)throw Error(a(318));if(!oe)throw Error(a(344));if(o=l.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(a(317));L(o,l)}else Is(),!(l.flags&128)&&(l.memoizedState=null),l.flags|=4;return yn(l),null}return vi!==null&&(Dh(vi),vi=null),l.flags&128?(l.lanes=d,l):(g=g!==null,d=!1,o===null?Uo(l):d=o.memoizedState!==null,g&&!d&&(l.child.flags|=8192,l.mode&1&&(o===null||Ht.current&1?en===0&&(en=3):Oh())),l.updateQueue!==null&&(l.flags|=4),yn(l),null);case 4:return Ds(),Wo(o,l),o===null&&me(l.stateNode.containerInfo),yn(l),null;case 10:return qu(l.type._context),yn(l),null;case 17:return Tt(l.type)&&Yn(),yn(l),null;case 19:if(De(Ht),M=l.memoizedState,M===null)return yn(l),null;if(g=(l.flags&128)!==0,T=M.rendering,T===null)if(g)Xo(M,!1);else{if(en!==0||o!==null&&o.flags&128)for(o=l.child;o!==null;){if(T=yl(o),T!==null){for(l.flags|=128,Xo(M,!1),o=T.updateQueue,o!==null&&(l.updateQueue=o,l.flags|=4),l.subtreeFlags=0,o=d,g=l.child;g!==null;)d=g,M=o,d.flags&=14680066,T=d.alternate,T===null?(d.childLanes=0,d.lanes=M,d.child=null,d.subtreeFlags=0,d.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null,d.stateNode=null):(d.childLanes=T.childLanes,d.lanes=T.lanes,d.child=T.child,d.subtreeFlags=0,d.deletions=null,d.memoizedProps=T.memoizedProps,d.memoizedState=T.memoizedState,d.updateQueue=T.updateQueue,d.type=T.type,M=T.dependencies,d.dependencies=M===null?null:{lanes:M.lanes,firstContext:M.firstContext}),g=g.sibling;return At(Ht,Ht.current&1|2),l.child}o=o.sibling}M.tail!==null&&on()>Ph&&(l.flags|=128,g=!0,Xo(M,!1),l.lanes=4194304)}else{if(!g)if(o=yl(T),o!==null){if(l.flags|=128,g=!0,o=o.updateQueue,o!==null&&(l.updateQueue=o,l.flags|=4),Xo(M,!0),M.tail===null&&M.tailMode==="hidden"&&!T.alternate&&!kt)return yn(l),null}else 2*on()-M.renderingStartTime>Ph&&d!==1073741824&&(l.flags|=128,g=!0,Xo(M,!1),l.lanes=4194304);M.isBackwards?(T.sibling=l.child,l.child=T):(o=M.last,o!==null?o.sibling=T:l.child=T,M.last=T)}return M.tail!==null?(l=M.tail,M.rendering=l,M.tail=l.sibling,M.renderingStartTime=on(),l.sibling=null,o=Ht.current,At(Ht,g?o&1|2:o&1),l):(yn(l),null);case 22:case 23:return Uh(),g=l.memoizedState!==null,o!==null&&o.memoizedState!==null!==g&&(l.flags|=8192),g&&l.mode&1?Kn&1073741824&&(yn(l),W&&l.subtreeFlags&6&&(l.flags|=8192)):yn(l),null;case 24:return null;case 25:return null}throw Error(a(156,l.tag))}var mx=c.ReactCurrentOwner,Jn=!1;function Cn(o,l,d,g){l.child=o===null?Bp(l,null,d,g):Ls(l,o.child,d,g)}function fm(o,l,d,g,M){d=d.render;var T=l.ref;return Cs(l,M),g=ah(o,l,d,g,T,M),d=lh(),o!==null&&!Jn?(l.updateQueue=o.updateQueue,l.flags&=-2053,o.lanes&=~M,Zi(o,l,M)):(kt&&d&&Ku(l),l.flags|=1,Cn(o,l,g,M),l.child)}function dm(o,l,d,g,M){if(o===null){var T=d.type;return typeof T=="function"&&!Fh(T)&&T.defaultProps===void 0&&d.compare===null&&d.defaultProps===void 0?(l.tag=15,l.type=T,pm(o,l,T,g,M)):(o=Zl(d.type,null,g,l,l.mode,M),o.ref=l.ref,o.return=l,l.child=o)}if(T=o.child,!(o.lanes&M)){var O=T.memoizedProps;if(d=d.compare,d=d!==null?d:ul,d(O,g)&&o.ref===l.ref)return Zi(o,l,M)}return l.flags|=1,o=yr(T,g),o.ref=l.ref,o.return=l,l.child=o}function pm(o,l,d,g,M){if(o!==null&&ul(o.memoizedProps,g)&&o.ref===l.ref)if(Jn=!1,(o.lanes&M)!==0)o.flags&131072&&(Jn=!0);else return l.lanes=o.lanes,Zi(o,l,M);return ph(o,l,d,g,M)}function mm(o,l,d){var g=l.pendingProps,M=g.children,T=o!==null?o.memoizedState:null;if(g.mode==="hidden")if(!(l.mode&1))l.memoizedState={baseLanes:0,cachePool:null},At(Os,Kn),Kn|=d;else if(d&1073741824)l.memoizedState={baseLanes:0,cachePool:null},g=T!==null?T.baseLanes:d,At(Os,Kn),Kn|=g;else return o=T!==null?T.baseLanes|d:d,l.lanes=l.childLanes=1073741824,l.memoizedState={baseLanes:o,cachePool:null},l.updateQueue=null,At(Os,Kn),Kn|=o,null;else T!==null?(g=T.baseLanes|d,l.memoizedState=null):g=d,At(Os,Kn),Kn|=g;return Cn(o,l,M,d),l.child}function gm(o,l){var d=l.ref;(o===null&&d!==null||o!==null&&o.ref!==d)&&(l.flags|=512,l.flags|=2097152)}function ph(o,l,d,g,M){var T=Tt(d)?qn:Bt.current;return T=Ci(l,T),Cs(l,M),d=ah(o,l,d,g,T,M),g=lh(),o!==null&&!Jn?(l.updateQueue=o.updateQueue,l.flags&=-2053,o.lanes&=~M,Zi(o,l,M)):(kt&&g&&Ku(l),l.flags|=1,Cn(o,l,d,M),l.child)}function vm(o,l,d,g,M){if(Tt(d)){var T=!0;fr(l)}else T=!1;if(Cs(l,M),l.stateNode===null)o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),Ip(l,d,g),Ju(l,d,g,M),g=!0;else if(o===null){var O=l.stateNode,V=l.memoizedProps;O.props=V;var ie=O.context,ge=d.contextType;typeof ge=="object"&&ge!==null?ge=ri(ge):(ge=Tt(d)?qn:Bt.current,ge=Ci(l,ge));var Ue=d.getDerivedStateFromProps,ot=typeof Ue=="function"||typeof O.getSnapshotBeforeUpdate=="function";ot||typeof O.UNSAFE_componentWillReceiveProps!="function"&&typeof O.componentWillReceiveProps!="function"||(V!==g||ie!==ge)&&Lp(l,O,g,ge),dr=!1;var je=l.memoizedState;O.state=je,pl(l,g,O,M),ie=l.memoizedState,V!==g||je!==ie||dn.current||dr?(typeof Ue=="function"&&(Zu(l,d,Ue,g),ie=l.memoizedState),(V=dr||Pp(l,d,V,g,je,ie,ge))?(ot||typeof O.UNSAFE_componentWillMount!="function"&&typeof O.componentWillMount!="function"||(typeof O.componentWillMount=="function"&&O.componentWillMount(),typeof O.UNSAFE_componentWillMount=="function"&&O.UNSAFE_componentWillMount()),typeof O.componentDidMount=="function"&&(l.flags|=4194308)):(typeof O.componentDidMount=="function"&&(l.flags|=4194308),l.memoizedProps=g,l.memoizedState=ie),O.props=g,O.state=ie,O.context=ge,g=V):(typeof O.componentDidMount=="function"&&(l.flags|=4194308),g=!1)}else{O=l.stateNode,Ap(o,l),V=l.memoizedProps,ge=l.type===l.elementType?V:gi(l.type,V),O.props=ge,ot=l.pendingProps,je=O.context,ie=d.contextType,typeof ie=="object"&&ie!==null?ie=ri(ie):(ie=Tt(d)?qn:Bt.current,ie=Ci(l,ie));var Nt=d.getDerivedStateFromProps;(Ue=typeof Nt=="function"||typeof O.getSnapshotBeforeUpdate=="function")||typeof O.UNSAFE_componentWillReceiveProps!="function"&&typeof O.componentWillReceiveProps!="function"||(V!==ot||je!==ie)&&Lp(l,O,g,ie),dr=!1,je=l.memoizedState,O.state=je,pl(l,g,O,M);var We=l.memoizedState;V!==ot||je!==We||dn.current||dr?(typeof Nt=="function"&&(Zu(l,d,Nt,g),We=l.memoizedState),(ge=dr||Pp(l,d,ge,g,je,We,ie)||!1)?(Ue||typeof O.UNSAFE_componentWillUpdate!="function"&&typeof O.componentWillUpdate!="function"||(typeof O.componentWillUpdate=="function"&&O.componentWillUpdate(g,We,ie),typeof O.UNSAFE_componentWillUpdate=="function"&&O.UNSAFE_componentWillUpdate(g,We,ie)),typeof O.componentDidUpdate=="function"&&(l.flags|=4),typeof O.getSnapshotBeforeUpdate=="function"&&(l.flags|=1024)):(typeof O.componentDidUpdate!="function"||V===o.memoizedProps&&je===o.memoizedState||(l.flags|=4),typeof O.getSnapshotBeforeUpdate!="function"||V===o.memoizedProps&&je===o.memoizedState||(l.flags|=1024),l.memoizedProps=g,l.memoizedState=We),O.props=g,O.state=We,O.context=ie,g=ge):(typeof O.componentDidUpdate!="function"||V===o.memoizedProps&&je===o.memoizedState||(l.flags|=4),typeof O.getSnapshotBeforeUpdate!="function"||V===o.memoizedProps&&je===o.memoizedState||(l.flags|=1024),g=!1)}return mh(o,l,d,g,T,M)}function mh(o,l,d,g,M,T){gm(o,l);var O=(l.flags&128)!==0;if(!g&&!O)return M&&rl(l,d,!1),Zi(o,l,T);g=l.stateNode,mx.current=l;var V=O&&typeof d.getDerivedStateFromError!="function"?null:g.render();return l.flags|=1,o!==null&&O?(l.child=Ls(l,o.child,null,T),l.child=Ls(l,null,V,T)):Cn(o,l,V,T),l.memoizedState=g.state,M&&rl(l,d,!0),l.child}function _m(o){var l=o.stateNode;l.pendingContext?As(o,l.pendingContext,l.pendingContext!==l.context):l.context&&As(o,l.context,!1),nh(o,l.containerInfo)}function ym(o,l,d,g,M){return Is(),th(M),l.flags|=256,Cn(o,l,d,g),l.child}var Rl={dehydrated:null,treeContext:null,retryLane:0};function Pl(o){return{baseLanes:o,cachePool:null}}function xm(o,l,d){var g=l.pendingProps,M=Ht.current,T=!1,O=(l.flags&128)!==0,V;if((V=O)||(V=o!==null&&o.memoizedState===null?!1:(M&2)!==0),V?(T=!0,l.flags&=-129):(o===null||o.memoizedState!==null)&&(M|=1),At(Ht,M&1),o===null)return eh(l),o=l.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?(l.mode&1?hr(o)?l.lanes=8:l.lanes=1073741824:l.lanes=1,null):(M=g.children,o=g.fallback,T?(g=l.mode,T=l.child,M={mode:"hidden",children:M},!(g&1)&&T!==null?(T.childLanes=0,T.pendingProps=M):T=Jl(M,g,0,null),o=Yr(o,g,d,null),T.return=l,o.return=l,T.sibling=o,l.child=T,l.child.memoizedState=Pl(d),l.memoizedState=Rl,o):gh(l,M));if(M=o.memoizedState,M!==null){if(V=M.dehydrated,V!==null){if(O)return l.flags&256?(l.flags&=-257,Il(o,l,d,Error(a(422)))):l.memoizedState!==null?(l.child=o.child,l.flags|=128,null):(T=g.fallback,M=l.mode,g=Jl({mode:"visible",children:g.children},M,0,null),T=Yr(T,M,d,null),T.flags|=2,g.return=l,T.return=l,g.sibling=T,l.child=g,l.mode&1&&Ls(l,o.child,null,d),l.child.memoizedState=Pl(d),l.memoizedState=Rl,T);if(!(l.mode&1))l=Il(o,l,d,null);else if(hr(V))l=Il(o,l,d,Error(a(419)));else if(g=(d&o.childLanes)!==0,Jn||g){if(g=Zt,g!==null){switch(d&-d){case 4:T=2;break;case 16:T=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:T=32;break;case 536870912:T=268435456;break;default:T=0}g=T&(g.suspendedLanes|d)?0:T,g!==0&&g!==M.retryLane&&(M.retryLane=g,ci(o,g,-1))}Oh(),l=Il(o,l,d,Error(a(421)))}else el(V)?(l.flags|=128,l.child=o.child,l=Cx.bind(null,o),tl(V,l),l=null):(d=M.treeContext,oe&&(Zn=Du(V),jn=l,kt=!0,vi=null,Do=!1,d!==null&&(si[oi++]=qi,si[oi++]=Yi,si[oi++]=Br,qi=d.id,Yi=d.overflow,Br=l)),l=gh(l,l.pendingProps.children),l.flags|=4096);return l}return T?(g=Sm(o,l,g.children,g.fallback,d),T=l.child,M=o.child.memoizedState,T.memoizedState=M===null?Pl(d):{baseLanes:M.baseLanes|d,cachePool:null},T.childLanes=o.childLanes&~d,l.memoizedState=Rl,g):(d=Mm(o,l,g.children,d),l.memoizedState=null,d)}return T?(g=Sm(o,l,g.children,g.fallback,d),T=l.child,M=o.child.memoizedState,T.memoizedState=M===null?Pl(d):{baseLanes:M.baseLanes|d,cachePool:null},T.childLanes=o.childLanes&~d,l.memoizedState=Rl,g):(d=Mm(o,l,g.children,d),l.memoizedState=null,d)}function gh(o,l){return l=Jl({mode:"visible",children:l},o.mode,0,null),l.return=o,o.child=l}function Mm(o,l,d,g){var M=o.child;return o=M.sibling,d=yr(M,{mode:"visible",children:d}),!(l.mode&1)&&(d.lanes=g),d.return=l,d.sibling=null,o!==null&&(g=l.deletions,g===null?(l.deletions=[o],l.flags|=16):g.push(o)),l.child=d}function Sm(o,l,d,g,M){var T=l.mode;o=o.child;var O=o.sibling,V={mode:"hidden",children:d};return!(T&1)&&l.child!==o?(d=l.child,d.childLanes=0,d.pendingProps=V,l.deletions=null):(d=yr(o,V),d.subtreeFlags=o.subtreeFlags&14680064),O!==null?g=yr(O,g):(g=Yr(g,T,M,null),g.flags|=2),g.return=l,d.return=l,d.sibling=g,l.child=d,g}function Il(o,l,d,g){return g!==null&&th(g),Ls(l,o.child,null,d),o=gh(l,l.pendingProps.children),o.flags|=2,l.memoizedState=null,o}function wm(o,l,d){o.lanes|=l;var g=o.alternate;g!==null&&(g.lanes|=l),Yu(o.return,l,d)}function vh(o,l,d,g,M){var T=o.memoizedState;T===null?o.memoizedState={isBackwards:l,rendering:null,renderingStartTime:0,last:g,tail:d,tailMode:M}:(T.isBackwards=l,T.rendering=null,T.renderingStartTime=0,T.last=g,T.tail=d,T.tailMode=M)}function Em(o,l,d){var g=l.pendingProps,M=g.revealOrder,T=g.tail;if(Cn(o,l,g.children,d),g=Ht.current,g&2)g=g&1|2,l.flags|=128;else{if(o!==null&&o.flags&128)e:for(o=l.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&wm(o,d,l);else if(o.tag===19)wm(o,d,l);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===l)break e;for(;o.sibling===null;){if(o.return===null||o.return===l)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}g&=1}if(At(Ht,g),!(l.mode&1))l.memoizedState=null;else switch(M){case"forwards":for(d=l.child,M=null;d!==null;)o=d.alternate,o!==null&&yl(o)===null&&(M=d),d=d.sibling;d=M,d===null?(M=l.child,l.child=null):(M=d.sibling,d.sibling=null),vh(l,!1,M,d,T);break;case"backwards":for(d=null,M=l.child,l.child=null;M!==null;){if(o=M.alternate,o!==null&&yl(o)===null){l.child=M;break}o=M.sibling,M.sibling=d,d=M,M=o}vh(l,!0,d,null,T);break;case"together":vh(l,!1,null,null,void 0);break;default:l.memoizedState=null}return l.child}function Zi(o,l,d){if(o!==null&&(l.dependencies=o.dependencies),Fs|=l.lanes,!(d&l.childLanes))return null;if(o!==null&&l.child!==o.child)throw Error(a(153));if(l.child!==null){for(o=l.child,d=yr(o,o.pendingProps),l.child=d,d.return=l;o.sibling!==null;)o=o.sibling,d=d.sibling=yr(o,o.pendingProps),d.return=l;d.sibling=null}return l.child}function gx(o,l,d){switch(l.tag){case 3:_m(l),Is();break;case 5:kp(l);break;case 1:Tt(l.type)&&fr(l);break;case 4:nh(l,l.stateNode.containerInfo);break;case 10:Tp(l,l.type._context,l.memoizedProps.value);break;case 13:var g=l.memoizedState;if(g!==null)return g.dehydrated!==null?(At(Ht,Ht.current&1),l.flags|=128,null):d&l.child.childLanes?xm(o,l,d):(At(Ht,Ht.current&1),o=Zi(o,l,d),o!==null?o.sibling:null);At(Ht,Ht.current&1);break;case 19:if(g=(d&l.childLanes)!==0,o.flags&128){if(g)return Em(o,l,d);l.flags|=128}var M=l.memoizedState;if(M!==null&&(M.rendering=null,M.tail=null,M.lastEffect=null),At(Ht,Ht.current),g)break;return null;case 22:case 23:return l.lanes=0,mm(o,l,d)}return Zi(o,l,d)}function vx(o,l){switch(Qu(l),l.tag){case 1:return Tt(l.type)&&Yn(),o=l.flags,o&65536?(l.flags=o&-65537|128,l):null;case 3:return Ds(),De(dn),De(Bt),sh(),o=l.flags,o&65536&&!(o&128)?(l.flags=o&-65537|128,l):null;case 5:return ih(l),null;case 13:if(De(Ht),o=l.memoizedState,o!==null&&o.dehydrated!==null){if(l.alternate===null)throw Error(a(340));Is()}return o=l.flags,o&65536?(l.flags=o&-65537|128,l):null;case 19:return De(Ht),null;case 4:return Ds(),null;case 10:return qu(l.type._context),null;case 22:case 23:return Uh(),null;case 24:return null;default:return null}}var Ll=!1,Vr=!1,_x=typeof WeakSet=="function"?WeakSet:Set,be=null;function Nl(o,l){var d=o.ref;if(d!==null)if(typeof d=="function")try{d(null)}catch(g){Bn(o,l,g)}else d.current=null}function _h(o,l,d){try{d()}catch(g){Bn(o,l,g)}}var Tm=!1;function yx(o,l){for($(o.containerInfo),be=l;be!==null;)if(o=be,l=o.child,(o.subtreeFlags&1028)!==0&&l!==null)l.return=o,be=l;else for(;be!==null;){o=be;try{var d=o.alternate;if(o.flags&1024)switch(o.tag){case 0:case 11:case 15:break;case 1:if(d!==null){var g=d.memoizedProps,M=d.memoizedState,T=o.stateNode,O=T.getSnapshotBeforeUpdate(o.elementType===o.type?g:gi(o.type,g),M);T.__reactInternalSnapshotBeforeUpdate=O}break;case 3:W&&Ye(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(a(163))}}catch(V){Bn(o,o.return,V)}if(l=o.sibling,l!==null){l.return=o.return,be=l;break}be=o.return}return d=Tm,Tm=!1,d}function Gr(o,l,d){var g=l.updateQueue;if(g=g!==null?g.lastEffect:null,g!==null){var M=g=g.next;do{if((M.tag&o)===o){var T=M.destroy;M.destroy=void 0,T!==void 0&&_h(l,d,T)}M=M.next}while(M!==g)}}function qo(o,l){if(l=l.updateQueue,l=l!==null?l.lastEffect:null,l!==null){var d=l=l.next;do{if((d.tag&o)===o){var g=d.create;d.destroy=g()}d=d.next}while(d!==l)}}function yh(o){var l=o.ref;if(l!==null){var d=o.stateNode;switch(o.tag){case 5:o=ae(d);break;default:o=d}typeof l=="function"?l(o):l.current=o}}function Am(o,l,d){if(Ri&&typeof Ri.onCommitFiberUnmount=="function")try{Ri.onCommitFiberUnmount(ll,l)}catch{}switch(l.tag){case 0:case 11:case 14:case 15:if(o=l.updateQueue,o!==null&&(o=o.lastEffect,o!==null)){var g=o=o.next;do{var M=g,T=M.destroy;M=M.tag,T!==void 0&&(M&2||M&4)&&_h(l,d,T),g=g.next}while(g!==o)}break;case 1:if(Nl(l,d),o=l.stateNode,typeof o.componentWillUnmount=="function")try{o.props=l.memoizedProps,o.state=l.memoizedState,o.componentWillUnmount()}catch(O){Bn(l,d,O)}break;case 5:Nl(l,d);break;case 4:W?Lm(o,l,d):ce&&ce&&(l=l.stateNode.containerInfo,d=Lt(l),It(l,d))}}function bm(o,l,d){for(var g=l;;)if(Am(o,g,d),g.child===null||W&&g.tag===4){if(g===l)break;for(;g.sibling===null;){if(g.return===null||g.return===l)return;g=g.return}g.sibling.return=g.return,g=g.sibling}else g.child.return=g,g=g.child}function Cm(o){var l=o.alternate;l!==null&&(o.alternate=null,Cm(l)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(l=o.stateNode,l!==null&&N(l)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function Rm(o){return o.tag===5||o.tag===3||o.tag===4}function Pm(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||Rm(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function Im(o){if(W){e:{for(var l=o.return;l!==null;){if(Rm(l))break e;l=l.return}throw Error(a(160))}var d=l;switch(d.tag){case 5:l=d.stateNode,d.flags&32&&(Ve(l),d.flags&=-33),d=Pm(o),Mh(o,d,l);break;case 3:case 4:l=d.stateNode.containerInfo,d=Pm(o),xh(o,d,l);break;default:throw Error(a(161))}}}function xh(o,l,d){var g=o.tag;if(g===5||g===6)o=o.stateNode,l?Et(d,o,l):nt(d,o);else if(g!==4&&(o=o.child,o!==null))for(xh(o,l,d),o=o.sibling;o!==null;)xh(o,l,d),o=o.sibling}function Mh(o,l,d){var g=o.tag;if(g===5||g===6)o=o.stateNode,l?mt(d,o,l):Ne(d,o);else if(g!==4&&(o=o.child,o!==null))for(Mh(o,l,d),o=o.sibling;o!==null;)Mh(o,l,d),o=o.sibling}function Lm(o,l,d){for(var g=l,M=!1,T,O;;){if(!M){M=g.return;e:for(;;){if(M===null)throw Error(a(160));switch(T=M.stateNode,M.tag){case 5:O=!1;break e;case 3:T=T.containerInfo,O=!0;break e;case 4:T=T.containerInfo,O=!0;break e}M=M.return}M=!0}if(g.tag===5||g.tag===6)bm(o,g,d),O?Dt(T,g.stateNode):_t(T,g.stateNode);else if(g.tag===18)O?Re(T,g.stateNode):K(T,g.stateNode);else if(g.tag===4){if(g.child!==null){T=g.stateNode.containerInfo,O=!0,g.child.return=g,g=g.child;continue}}else if(Am(o,g,d),g.child!==null){g.child.return=g,g=g.child;continue}if(g===l)break;for(;g.sibling===null;){if(g.return===null||g.return===l)return;g=g.return,g.tag===4&&(M=!1)}g.sibling.return=g.return,g=g.sibling}}function Sh(o,l){if(W){switch(l.tag){case 0:case 11:case 14:case 15:Gr(3,l,l.return),qo(3,l),Gr(5,l,l.return);return;case 1:return;case 5:var d=l.stateNode;if(d!=null){var g=l.memoizedProps;o=o!==null?o.memoizedProps:g;var M=l.type,T=l.updateQueue;l.updateQueue=null,T!==null&&pt(d,T,M,o,g,l)}return;case 6:if(l.stateNode===null)throw Error(a(162));d=l.memoizedProps,Oe(l.stateNode,o!==null?o.memoizedProps:d,d);return;case 3:oe&&o!==null&&o.memoizedState.isDehydrated&&Q(l.stateNode.containerInfo);return;case 12:return;case 13:Dl(l);return;case 19:Dl(l);return;case 17:return}throw Error(a(163))}switch(l.tag){case 0:case 11:case 14:case 15:Gr(3,l,l.return),qo(3,l),Gr(5,l,l.return);return;case 12:return;case 13:Dl(l);return;case 19:Dl(l);return;case 3:oe&&o!==null&&o.memoizedState.isDehydrated&&Q(l.stateNode.containerInfo);break;case 22:case 23:return}e:if(ce){switch(l.tag){case 1:case 5:case 6:break e;case 3:case 4:l=l.stateNode,It(l.containerInfo,l.pendingChildren);break e}throw Error(a(163))}}function Dl(o){var l=o.updateQueue;if(l!==null){o.updateQueue=null;var d=o.stateNode;d===null&&(d=o.stateNode=new _x),l.forEach(function(g){var M=Rx.bind(null,o,g);d.has(g)||(d.add(g),g.then(M,M))})}}function xx(o,l){for(be=l;be!==null;){l=be;var d=l.deletions;if(d!==null)for(var g=0;g<d.length;g++){var M=d[g];try{var T=o;W?Lm(T,M,l):bm(T,M,l);var O=M.alternate;O!==null&&(O.return=null),M.return=null}catch(ke){Bn(M,l,ke)}}if(d=l.child,l.subtreeFlags&12854&&d!==null)d.return=l,be=d;else for(;be!==null;){l=be;try{var V=l.flags;if(V&32&&W&&Ve(l.stateNode),V&512){var ie=l.alternate;if(ie!==null){var ge=ie.ref;ge!==null&&(typeof ge=="function"?ge(null):ge.current=null)}}if(V&8192)switch(l.tag){case 13:if(l.memoizedState!==null){var Ue=l.alternate;(Ue===null||Ue.memoizedState===null)&&(Rh=on())}break;case 22:var ot=l.memoizedState!==null,je=l.alternate,Nt=je!==null&&je.memoizedState!==null;if(d=l,W){e:if(g=d,M=ot,T=null,W)for(var We=g;;){if(We.tag===5){if(T===null){T=We;var xn=We.stateNode;M?B(xn):Se(We.stateNode,We.memoizedProps)}}else if(We.tag===6){if(T===null){var hi=We.stateNode;M?Ee(hi):Xe(hi,We.memoizedProps)}}else if((We.tag!==22&&We.tag!==23||We.memoizedState===null||We===g)&&We.child!==null){We.child.return=We,We=We.child;continue}if(We===g)break;for(;We.sibling===null;){if(We.return===null||We.return===g)break e;T===We&&(T=null),We=We.return}T===We&&(T=null),We.sibling.return=We.return,We=We.sibling}}if(ot&&!Nt&&d.mode&1){be=d;for(var j=d.child;j!==null;){for(d=be=j;be!==null;){g=be;var G=g.child;switch(g.tag){case 0:case 11:case 14:case 15:Gr(4,g,g.return);break;case 1:Nl(g,g.return);var te=g.stateNode;if(typeof te.componentWillUnmount=="function"){var Pe=g.return;try{te.props=g.memoizedProps,te.state=g.memoizedState,te.componentWillUnmount()}catch(ke){Bn(g,Pe,ke)}}break;case 5:Nl(g,g.return);break;case 22:if(g.memoizedState!==null){Um(d);continue}}G!==null?(G.return=g,be=G):Um(d)}j=j.sibling}}}switch(V&4102){case 2:Im(l),l.flags&=-3;break;case 6:Im(l),l.flags&=-3,Sh(l.alternate,l);break;case 4096:l.flags&=-4097;break;case 4100:l.flags&=-4097,Sh(l.alternate,l);break;case 4:Sh(l.alternate,l)}}catch(ke){Bn(l,l.return,ke)}if(d=l.sibling,d!==null){d.return=l.return,be=d;break}be=l.return}}}function Mx(o,l,d){be=o,Nm(o)}function Nm(o,l,d){for(var g=(o.mode&1)!==0;be!==null;){var M=be,T=M.child;if(M.tag===22&&g){var O=M.memoizedState!==null||Ll;if(!O){var V=M.alternate,ie=V!==null&&V.memoizedState!==null||Vr;V=Ll;var ge=Vr;if(Ll=O,(Vr=ie)&&!ge)for(be=M;be!==null;)O=be,ie=O.child,O.tag===22&&O.memoizedState!==null?Om(M):ie!==null?(ie.return=O,be=ie):Om(M);for(;T!==null;)be=T,Nm(T),T=T.sibling;be=M,Ll=V,Vr=ge}Dm(o)}else M.subtreeFlags&8772&&T!==null?(T.return=M,be=T):Dm(o)}}function Dm(o){for(;be!==null;){var l=be;if(l.flags&8772){var d=l.alternate;try{if(l.flags&8772)switch(l.tag){case 0:case 11:case 15:Vr||qo(5,l);break;case 1:var g=l.stateNode;if(l.flags&4&&!Vr)if(d===null)g.componentDidMount();else{var M=l.elementType===l.type?d.memoizedProps:gi(l.type,d.memoizedProps);g.componentDidUpdate(M,d.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}var T=l.updateQueue;T!==null&&Cp(l,T,g);break;case 3:var O=l.updateQueue;if(O!==null){if(d=null,l.child!==null)switch(l.child.tag){case 5:d=ae(l.child.stateNode);break;case 1:d=l.child.stateNode}Cp(l,O,d)}break;case 5:var V=l.stateNode;d===null&&l.flags&4&&Fe(V,l.type,l.memoizedProps,l);break;case 6:break;case 4:break;case 12:break;case 13:if(oe&&l.memoizedState===null){var ie=l.alternate;if(ie!==null){var ge=ie.memoizedState;if(ge!==null){var Ue=ge.dehydrated;Ue!==null&&ee(Ue)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(a(163))}Vr||l.flags&512&&yh(l)}catch(ot){Bn(l,l.return,ot)}}if(l===o){be=null;break}if(d=l.sibling,d!==null){d.return=l.return,be=d;break}be=l.return}}function Um(o){for(;be!==null;){var l=be;if(l===o){be=null;break}var d=l.sibling;if(d!==null){d.return=l.return,be=d;break}be=l.return}}function Om(o){for(;be!==null;){var l=be;try{switch(l.tag){case 0:case 11:case 15:var d=l.return;try{qo(4,l)}catch(ie){Bn(l,d,ie)}break;case 1:var g=l.stateNode;if(typeof g.componentDidMount=="function"){var M=l.return;try{g.componentDidMount()}catch(ie){Bn(l,M,ie)}}var T=l.return;try{yh(l)}catch(ie){Bn(l,T,ie)}break;case 5:var O=l.return;try{yh(l)}catch(ie){Bn(l,O,ie)}}}catch(ie){Bn(l,l.return,ie)}if(l===o){be=null;break}var V=l.sibling;if(V!==null){V.return=l.return,be=V;break}be=l.return}}var Ul=0,Ol=1,Fl=2,zl=3,Bl=4;if(typeof Symbol=="function"&&Symbol.for){var Yo=Symbol.for;Ul=Yo("selector.component"),Ol=Yo("selector.has_pseudo_class"),Fl=Yo("selector.role"),zl=Yo("selector.test_id"),Bl=Yo("selector.text")}function wh(o){var l=xe(o);if(l!=null){if(typeof l.memoizedProps["data-testname"]!="string")throw Error(a(364));return l}if(o=le(o),o===null)throw Error(a(362));return o.stateNode.current}function Eh(o,l){switch(l.$$typeof){case Ul:if(o.type===l.value)return!0;break;case Ol:e:{l=l.value,o=[o,0];for(var d=0;d<o.length;){var g=o[d++],M=o[d++],T=l[M];if(g.tag!==5||!de(g)){for(;T!=null&&Eh(g,T);)M++,T=l[M];if(M===l.length){l=!0;break e}else for(g=g.child;g!==null;)o.push(g,M),g=g.sibling}}l=!1}return l;case Fl:if(o.tag===5&&He(o.stateNode,l.value))return!0;break;case Bl:if((o.tag===5||o.tag===6)&&(o=qe(o),o!==null&&0<=o.indexOf(l.value)))return!0;break;case zl:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===l.value.toLowerCase()))return!0;break;default:throw Error(a(365))}return!1}function Th(o){switch(o.$$typeof){case Ul:return"<"+(I(o.value)||"Unknown")+">";case Ol:return":has("+(Th(o)||"")+")";case Fl:return'[role="'+o.value+'"]';case Bl:return'"'+o.value+'"';case zl:return'[data-testname="'+o.value+'"]';default:throw Error(a(365))}}function Fm(o,l){var d=[];o=[o,0];for(var g=0;g<o.length;){var M=o[g++],T=o[g++],O=l[T];if(M.tag!==5||!de(M)){for(;O!=null&&Eh(M,O);)T++,O=l[T];if(T===l.length)d.push(M);else for(M=M.child;M!==null;)o.push(M,T),M=M.sibling}}return d}function Ah(o,l){if(!re)throw Error(a(363));o=wh(o),o=Fm(o,l),l=[],o=Array.from(o);for(var d=0;d<o.length;){var g=o[d++];if(g.tag===5)de(g)||l.push(g.stateNode);else for(g=g.child;g!==null;)o.push(g),g=g.sibling}return l}var Sx=Math.ceil,kl=c.ReactCurrentDispatcher,bh=c.ReactCurrentOwner,Yt=c.ReactCurrentBatchConfig,dt=0,Zt=null,Jt=null,pn=0,Kn=0,Os=yt(0),en=0,jo=null,Fs=0,Hl=0,Ch=0,Zo=null,Fn=null,Rh=0,Ph=1/0;function zs(){Ph=on()+500}var Vl=!1,Ih=null,mr=null,Gl=!1,gr=null,Wl=0,Jo=0,Lh=null,Xl=-1,ql=0;function Rn(){return dt&6?on():Xl!==-1?Xl:Xl=on()}function vr(o){return o.mode&1?dt&2&&pn!==0?pn&-pn:rx.transition!==null?(ql===0&&(o=sl,sl<<=1,!(sl&4194240)&&(sl=64),ql=o),ql):(o=xt,o!==0?o:_e()):1}function ci(o,l,d){if(50<Jo)throw Jo=0,Lh=null,Error(a(185));var g=Yl(o,l);return g===null?null:(No(g,l,d),(!(dt&2)||g!==Zt)&&(g===Zt&&(!(dt&2)&&(Hl|=l),en===4&&_r(g,pn)),zn(g,d),l===1&&dt===0&&!(o.mode&1)&&(zs(),cl&&Ii())),g)}function Yl(o,l){o.lanes|=l;var d=o.alternate;for(d!==null&&(d.lanes|=l),d=o,o=o.return;o!==null;)o.childLanes|=l,d=o.alternate,d!==null&&(d.childLanes|=l),d=o,o=o.return;return d.tag===3?d.stateNode:null}function zn(o,l){var d=o.callbackNode;Zy(o,l);var g=al(o,o===Zt?pn:0);if(g===0)d!==null&&wp(d),o.callbackNode=null,o.callbackPriority=0;else if(l=g&-g,o.callbackPriority!==l){if(d!=null&&wp(d),l===1)o.tag===0?ix(Bm.bind(null,o)):Ep(Bm.bind(null,o)),C?Y(function(){dt===0&&Ii()}):ku(Hu,Ii),d=null;else{switch(Sp(g)){case 1:d=Hu;break;case 4:d=$y;break;case 16:d=Vu;break;case 536870912:d=ex;break;default:d=Vu}d=jm(d,zm.bind(null,o))}o.callbackPriority=l,o.callbackNode=d}}function zm(o,l){if(Xl=-1,ql=0,dt&6)throw Error(a(327));var d=o.callbackNode;if(qr()&&o.callbackNode!==d)return null;var g=al(o,o===Zt?pn:0);if(g===0)return null;if(g&30||g&o.expiredLanes||l)l=jl(o,g);else{l=g;var M=dt;dt|=2;var T=Vm();(Zt!==o||pn!==l)&&(zs(),Wr(o,l));do try{Tx();break}catch(V){Hm(o,V)}while(!0);Xu(),kl.current=T,dt=M,Jt!==null?l=0:(Zt=null,pn=0,l=en)}if(l!==0){if(l===2&&(M=Fu(o),M!==0&&(g=M,l=Nh(o,M))),l===1)throw d=jo,Wr(o,0),_r(o,g),zn(o,on()),d;if(l===6)_r(o,g);else{if(M=o.current.alternate,!(g&30)&&!wx(M)&&(l=jl(o,g),l===2&&(T=Fu(o),T!==0&&(g=T,l=Nh(o,T))),l===1))throw d=jo,Wr(o,0),_r(o,g),zn(o,on()),d;switch(o.finishedWork=M,o.finishedLanes=g,l){case 0:case 1:throw Error(a(345));case 2:Xr(o,Fn);break;case 3:if(_r(o,g),(g&130023424)===g&&(l=Rh+500-on(),10<l)){if(al(o,0)!==0)break;if(M=o.suspendedLanes,(M&g)!==g){Rn(),o.pingedLanes|=o.suspendedLanes&M;break}o.timeoutHandle=ye(Xr.bind(null,o,Fn),l);break}Xr(o,Fn);break;case 4:if(_r(o,g),(g&4194240)===g)break;for(l=o.eventTimes,M=-1;0<g;){var O=31-On(g);T=1<<O,O=l[O],O>M&&(M=O),g&=~T}if(g=M,g=on()-g,g=(120>g?120:480>g?480:1080>g?1080:1920>g?1920:3e3>g?3e3:4320>g?4320:1960*Sx(g/1960))-g,10<g){o.timeoutHandle=ye(Xr.bind(null,o,Fn),g);break}Xr(o,Fn);break;case 5:Xr(o,Fn);break;default:throw Error(a(329))}}}return zn(o,on()),o.callbackNode===d?zm.bind(null,o):null}function Nh(o,l){var d=Zo;return o.current.memoizedState.isDehydrated&&(Wr(o,l).flags|=256),o=jl(o,l),o!==2&&(l=Fn,Fn=d,l!==null&&Dh(l)),o}function Dh(o){Fn===null?Fn=o:Fn.push.apply(Fn,o)}function wx(o){for(var l=o;;){if(l.flags&16384){var d=l.updateQueue;if(d!==null&&(d=d.stores,d!==null))for(var g=0;g<d.length;g++){var M=d[g],T=M.getSnapshot;M=M.value;try{if(!Pi(T(),M))return!1}catch{return!1}}}if(d=l.child,l.subtreeFlags&16384&&d!==null)d.return=l,l=d;else{if(l===o)break;for(;l.sibling===null;){if(l.return===null||l.return===o)return!0;l=l.return}l.sibling.return=l.return,l=l.sibling}}return!0}function _r(o,l){for(l&=~Ch,l&=~Hl,o.suspendedLanes|=l,o.pingedLanes&=~l,o=o.expirationTimes;0<l;){var d=31-On(l),g=1<<d;o[d]=-1,l&=~g}}function Bm(o){if(dt&6)throw Error(a(327));qr();var l=al(o,0);if(!(l&1))return zn(o,on()),null;var d=jl(o,l);if(o.tag!==0&&d===2){var g=Fu(o);g!==0&&(l=g,d=Nh(o,g))}if(d===1)throw d=jo,Wr(o,0),_r(o,l),zn(o,on()),d;if(d===6)throw Error(a(345));return o.finishedWork=o.current.alternate,o.finishedLanes=l,Xr(o,Fn),zn(o,on()),null}function km(o){gr!==null&&gr.tag===0&&!(dt&6)&&qr();var l=dt;dt|=1;var d=Yt.transition,g=xt;try{if(Yt.transition=null,xt=1,o)return o()}finally{xt=g,Yt.transition=d,dt=l,!(dt&6)&&Ii()}}function Uh(){Kn=Os.current,De(Os)}function Wr(o,l){o.finishedWork=null,o.finishedLanes=0;var d=o.timeoutHandle;if(d!==st&&(o.timeoutHandle=st,et(d)),Jt!==null)for(d=Jt.return;d!==null;){var g=d;switch(Qu(g),g.tag){case 1:g=g.type.childContextTypes,g!=null&&Yn();break;case 3:Ds(),De(dn),De(Bt),sh();break;case 5:ih(g);break;case 4:Ds();break;case 13:De(Ht);break;case 19:De(Ht);break;case 10:qu(g.type._context);break;case 22:case 23:Uh()}d=d.return}if(Zt=o,Jt=o=yr(o.current,null),pn=Kn=l,en=0,jo=null,Ch=Hl=Fs=0,Fn=Zo=null,Li!==null){for(l=0;l<Li.length;l++)if(d=Li[l],g=d.interleaved,g!==null){d.interleaved=null;var M=g.next,T=d.pending;if(T!==null){var O=T.next;T.next=M,g.next=O}d.pending=g}Li=null}return o}function Hm(o,l){do{var d=Jt;try{if(Xu(),xl.current=Al,Ml){for(var g=Wt.memoizedState;g!==null;){var M=g.queue;M!==null&&(M.pending=null),g=g.next}Ml=!1}if(Us=0,an=vn=Wt=null,Bo=!1,ko=0,bh.current=null,d===null||d.return===null){en=1,jo=l,Jt=null;break}e:{var T=o,O=d.return,V=d,ie=l;if(l=pn,V.flags|=32768,ie!==null&&typeof ie=="object"&&typeof ie.then=="function"){var ge=ie,Ue=V,ot=Ue.tag;if(!(Ue.mode&1)&&(ot===0||ot===11||ot===15)){var je=Ue.alternate;je?(Ue.updateQueue=je.updateQueue,Ue.memoizedState=je.memoizedState,Ue.lanes=je.lanes):(Ue.updateQueue=null,Ue.memoizedState=null)}var Nt=lm(O);if(Nt!==null){Nt.flags&=-257,cm(Nt,O,V,T,l),Nt.mode&1&&am(T,ge,l),l=Nt,ie=ge;var We=l.updateQueue;if(We===null){var xn=new Set;xn.add(ie),l.updateQueue=xn}else We.add(ie);break e}else{if(!(l&1)){am(T,ge,l),Oh();break e}ie=Error(a(426))}}else if(kt&&V.mode&1){var hi=lm(O);if(hi!==null){!(hi.flags&65536)&&(hi.flags|=256),cm(hi,O,V,T,l),th(ie);break e}}T=ie,en!==4&&(en=2),Zo===null?Zo=[T]:Zo.push(T),ie=fh(ie,V),V=O;do{switch(V.tag){case 3:V.flags|=65536,l&=-l,V.lanes|=l;var j=sm(V,ie,l);bp(V,j);break e;case 1:T=ie;var G=V.type,te=V.stateNode;if(!(V.flags&128)&&(typeof G.getDerivedStateFromError=="function"||te!==null&&typeof te.componentDidCatch=="function"&&(mr===null||!mr.has(te)))){V.flags|=65536,l&=-l,V.lanes|=l;var Pe=om(V,T,l);bp(V,Pe);break e}}V=V.return}while(V!==null)}Wm(d)}catch(ke){l=ke,Jt===d&&d!==null&&(Jt=d=d.return);continue}break}while(!0)}function Vm(){var o=kl.current;return kl.current=Al,o===null?Al:o}function Oh(){(en===0||en===3||en===2)&&(en=4),Zt===null||!(Fs&268435455)&&!(Hl&268435455)||_r(Zt,pn)}function jl(o,l){var d=dt;dt|=2;var g=Vm();Zt===o&&pn===l||Wr(o,l);do try{Ex();break}catch(M){Hm(o,M)}while(!0);if(Xu(),dt=d,kl.current=g,Jt!==null)throw Error(a(261));return Zt=null,pn=0,en}function Ex(){for(;Jt!==null;)Gm(Jt)}function Tx(){for(;Jt!==null&&!Ky();)Gm(Jt)}function Gm(o){var l=Ym(o.alternate,o,Kn);o.memoizedProps=o.pendingProps,l===null?Wm(o):Jt=l,bh.current=null}function Wm(o){var l=o;do{var d=l.alternate;if(o=l.return,l.flags&32768){if(d=vx(d,l),d!==null){d.flags&=32767,Jt=d;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{en=6,Jt=null;return}}else if(d=px(d,l,Kn),d!==null){Jt=d;return}if(l=l.sibling,l!==null){Jt=l;return}Jt=l=o}while(l!==null);en===0&&(en=5)}function Xr(o,l){var d=xt,g=Yt.transition;try{Yt.transition=null,xt=1,Ax(o,l,d)}finally{Yt.transition=g,xt=d}return null}function Ax(o,l,d){do qr();while(gr!==null);if(dt&6)throw Error(a(327));var g=o.finishedWork,M=o.finishedLanes;if(g===null)return null;if(o.finishedWork=null,o.finishedLanes=0,g===o.current)throw Error(a(177));o.callbackNode=null,o.callbackPriority=0;var T=g.lanes|g.childLanes;if(Jy(o,T),o===Zt&&(Jt=Zt=null,pn=0),!(g.subtreeFlags&2064)&&!(g.flags&2064)||Gl||(Gl=!0,jm(Vu,function(){return qr(),null})),T=(g.flags&15990)!==0,g.subtreeFlags&15990||T){T=Yt.transition,Yt.transition=null;var O=xt;xt=1;var V=dt;dt|=4,bh.current=null,yx(o,g),xx(o,g),J(o.containerInfo),o.current=g,Mx(g),Qy(),dt=V,xt=O,Yt.transition=T}else o.current=g;if(Gl&&(Gl=!1,gr=o,Wl=M),T=o.pendingLanes,T===0&&(mr=null),tx(g.stateNode),zn(o,on()),l!==null)for(d=o.onRecoverableError,g=0;g<l.length;g++)d(l[g]);if(Vl)throw Vl=!1,o=Ih,Ih=null,o;return Wl&1&&o.tag!==0&&qr(),T=o.pendingLanes,T&1?o===Lh?Jo++:(Jo=0,Lh=o):Jo=0,Ii(),null}function qr(){if(gr!==null){var o=Sp(Wl),l=Yt.transition,d=xt;try{if(Yt.transition=null,xt=16>o?16:o,gr===null)var g=!1;else{if(o=gr,gr=null,Wl=0,dt&6)throw Error(a(331));var M=dt;for(dt|=4,be=o.current;be!==null;){var T=be,O=T.child;if(be.flags&16){var V=T.deletions;if(V!==null){for(var ie=0;ie<V.length;ie++){var ge=V[ie];for(be=ge;be!==null;){var Ue=be;switch(Ue.tag){case 0:case 11:case 15:Gr(8,Ue,T)}var ot=Ue.child;if(ot!==null)ot.return=Ue,be=ot;else for(;be!==null;){Ue=be;var je=Ue.sibling,Nt=Ue.return;if(Cm(Ue),Ue===ge){be=null;break}if(je!==null){je.return=Nt,be=je;break}be=Nt}}}var We=T.alternate;if(We!==null){var xn=We.child;if(xn!==null){We.child=null;do{var hi=xn.sibling;xn.sibling=null,xn=hi}while(xn!==null)}}be=T}}if(T.subtreeFlags&2064&&O!==null)O.return=T,be=O;else e:for(;be!==null;){if(T=be,T.flags&2048)switch(T.tag){case 0:case 11:case 15:Gr(9,T,T.return)}var j=T.sibling;if(j!==null){j.return=T.return,be=j;break e}be=T.return}}var G=o.current;for(be=G;be!==null;){O=be;var te=O.child;if(O.subtreeFlags&2064&&te!==null)te.return=O,be=te;else e:for(O=G;be!==null;){if(V=be,V.flags&2048)try{switch(V.tag){case 0:case 11:case 15:qo(9,V)}}catch(ke){Bn(V,V.return,ke)}if(V===O){be=null;break e}var Pe=V.sibling;if(Pe!==null){Pe.return=V.return,be=Pe;break e}be=V.return}}if(dt=M,Ii(),Ri&&typeof Ri.onPostCommitFiberRoot=="function")try{Ri.onPostCommitFiberRoot(ll,o)}catch{}g=!0}return g}finally{xt=d,Yt.transition=l}}return!1}function Xm(o,l,d){l=fh(d,l),l=sm(o,l,1),pr(o,l),l=Rn(),o=Yl(o,1),o!==null&&(No(o,1,l),zn(o,l))}function Bn(o,l,d){if(o.tag===3)Xm(o,o,d);else for(;l!==null;){if(l.tag===3){Xm(l,o,d);break}else if(l.tag===1){var g=l.stateNode;if(typeof l.type.getDerivedStateFromError=="function"||typeof g.componentDidCatch=="function"&&(mr===null||!mr.has(g))){o=fh(d,o),o=om(l,o,1),pr(l,o),o=Rn(),l=Yl(l,1),l!==null&&(No(l,1,o),zn(l,o));break}}l=l.return}}function bx(o,l,d){var g=o.pingCache;g!==null&&g.delete(l),l=Rn(),o.pingedLanes|=o.suspendedLanes&d,Zt===o&&(pn&d)===d&&(en===4||en===3&&(pn&130023424)===pn&&500>on()-Rh?Wr(o,0):Ch|=d),zn(o,l)}function qm(o,l){l===0&&(o.mode&1?(l=ol,ol<<=1,!(ol&130023424)&&(ol=4194304)):l=1);var d=Rn();o=Yl(o,l),o!==null&&(No(o,l,d),zn(o,d))}function Cx(o){var l=o.memoizedState,d=0;l!==null&&(d=l.retryLane),qm(o,d)}function Rx(o,l){var d=0;switch(o.tag){case 13:var g=o.stateNode,M=o.memoizedState;M!==null&&(d=M.retryLane);break;case 19:g=o.stateNode;break;default:throw Error(a(314))}g!==null&&g.delete(l),qm(o,d)}var Ym;Ym=function(o,l,d){if(o!==null)if(o.memoizedProps!==l.pendingProps||dn.current)Jn=!0;else{if(!(o.lanes&d)&&!(l.flags&128))return Jn=!1,gx(o,l,d);Jn=!!(o.flags&131072)}else Jn=!1,kt&&l.flags&1048576&&Np(l,vl,l.index);switch(l.lanes=0,l.tag){case 2:var g=l.type;o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),o=l.pendingProps;var M=Ci(l,Bt.current);Cs(l,d),M=ah(null,l,g,o,M,d);var T=lh();return l.flags|=1,typeof M=="object"&&M!==null&&typeof M.render=="function"&&M.$$typeof===void 0?(l.tag=1,l.memoizedState=null,l.updateQueue=null,Tt(g)?(T=!0,fr(l)):T=!1,l.memoizedState=M.state!==null&&M.state!==void 0?M.state:null,ju(l),M.updater=ml,l.stateNode=M,M._reactInternals=l,Ju(l,g,o,d),l=mh(null,l,g,!0,T,d)):(l.tag=0,kt&&T&&Ku(l),Cn(null,l,M,d),l=l.child),l;case 16:g=l.elementType;e:{switch(o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),o=l.pendingProps,M=g._init,g=M(g._payload),l.type=g,M=l.tag=Ix(g),o=gi(g,o),M){case 0:l=ph(null,l,g,o,d);break e;case 1:l=vm(null,l,g,o,d);break e;case 11:l=fm(null,l,g,o,d);break e;case 14:l=dm(null,l,g,gi(g.type,o),d);break e}throw Error(a(306,g,""))}return l;case 0:return g=l.type,M=l.pendingProps,M=l.elementType===g?M:gi(g,M),ph(o,l,g,M,d);case 1:return g=l.type,M=l.pendingProps,M=l.elementType===g?M:gi(g,M),vm(o,l,g,M,d);case 3:e:{if(_m(l),o===null)throw Error(a(387));g=l.pendingProps,T=l.memoizedState,M=T.element,Ap(o,l),pl(l,g,null,d);var O=l.memoizedState;if(g=O.element,oe&&T.isDehydrated)if(T={element:g,isDehydrated:!1,cache:O.cache,transitions:O.transitions},l.updateQueue.baseState=T,l.memoizedState=T,l.flags&256){M=Error(a(423)),l=ym(o,l,g,d,M);break e}else if(g!==M){M=Error(a(424)),l=ym(o,l,g,d,M);break e}else for(oe&&(Zn=il(l.stateNode.containerInfo),jn=l,kt=!0,vi=null,Do=!1),d=Bp(l,null,g,d),l.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling;else{if(Is(),g===M){l=Zi(o,l,d);break e}Cn(o,l,g,d)}l=l.child}return l;case 5:return kp(l),o===null&&eh(l),g=l.type,M=l.pendingProps,T=o!==null?o.memoizedProps:null,O=M.children,pe(g,M)?O=null:T!==null&&pe(g,T)&&(l.flags|=32),gm(o,l),Cn(o,l,O,d),l.child;case 6:return o===null&&eh(l),null;case 13:return xm(o,l,d);case 4:return nh(l,l.stateNode.containerInfo),g=l.pendingProps,o===null?l.child=Ls(l,null,g,d):Cn(o,l,g,d),l.child;case 11:return g=l.type,M=l.pendingProps,M=l.elementType===g?M:gi(g,M),fm(o,l,g,M,d);case 7:return Cn(o,l,l.pendingProps,d),l.child;case 8:return Cn(o,l,l.pendingProps.children,d),l.child;case 12:return Cn(o,l,l.pendingProps.children,d),l.child;case 10:e:{if(g=l.type._context,M=l.pendingProps,T=l.memoizedProps,O=M.value,Tp(l,g,O),T!==null)if(Pi(T.value,O)){if(T.children===M.children&&!dn.current){l=Zi(o,l,d);break e}}else for(T=l.child,T!==null&&(T.return=l);T!==null;){var V=T.dependencies;if(V!==null){O=T.child;for(var ie=V.firstContext;ie!==null;){if(ie.context===g){if(T.tag===1){ie=Xi(-1,d&-d),ie.tag=2;var ge=T.updateQueue;if(ge!==null){ge=ge.shared;var Ue=ge.pending;Ue===null?ie.next=ie:(ie.next=Ue.next,Ue.next=ie),ge.pending=ie}}T.lanes|=d,ie=T.alternate,ie!==null&&(ie.lanes|=d),Yu(T.return,d,l),V.lanes|=d;break}ie=ie.next}}else if(T.tag===10)O=T.type===l.type?null:T.child;else if(T.tag===18){if(O=T.return,O===null)throw Error(a(341));O.lanes|=d,V=O.alternate,V!==null&&(V.lanes|=d),Yu(O,d,l),O=T.sibling}else O=T.child;if(O!==null)O.return=T;else for(O=T;O!==null;){if(O===l){O=null;break}if(T=O.sibling,T!==null){T.return=O.return,O=T;break}O=O.return}T=O}Cn(o,l,M.children,d),l=l.child}return l;case 9:return M=l.type,g=l.pendingProps.children,Cs(l,d),M=ri(M),g=g(M),l.flags|=1,Cn(o,l,g,d),l.child;case 14:return g=l.type,M=gi(g,l.pendingProps),M=gi(g.type,M),dm(o,l,g,M,d);case 15:return pm(o,l,l.type,l.pendingProps,d);case 17:return g=l.type,M=l.pendingProps,M=l.elementType===g?M:gi(g,M),o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),l.tag=1,Tt(g)?(o=!0,fr(l)):o=!1,Cs(l,d),Ip(l,g,M),Ju(l,g,M,d),mh(null,l,g,!0,o,d);case 19:return Em(o,l,d);case 22:return mm(o,l,d)}throw Error(a(156,l.tag))};function jm(o,l){return ku(o,l)}function Px(o,l,d,g){this.tag=o,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=l,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=g,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function ui(o,l,d,g){return new Px(o,l,d,g)}function Fh(o){return o=o.prototype,!(!o||!o.isReactComponent)}function Ix(o){if(typeof o=="function")return Fh(o)?1:0;if(o!=null){if(o=o.$$typeof,o===S)return 11;if(o===E)return 14}return 2}function yr(o,l){var d=o.alternate;return d===null?(d=ui(o.tag,l,o.key,o.mode),d.elementType=o.elementType,d.type=o.type,d.stateNode=o.stateNode,d.alternate=o,o.alternate=d):(d.pendingProps=l,d.type=o.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=o.flags&14680064,d.childLanes=o.childLanes,d.lanes=o.lanes,d.child=o.child,d.memoizedProps=o.memoizedProps,d.memoizedState=o.memoizedState,d.updateQueue=o.updateQueue,l=o.dependencies,d.dependencies=l===null?null:{lanes:l.lanes,firstContext:l.firstContext},d.sibling=o.sibling,d.index=o.index,d.ref=o.ref,d}function Zl(o,l,d,g,M,T){var O=2;if(g=o,typeof o=="function")Fh(o)&&(O=1);else if(typeof o=="string")O=5;else e:switch(o){case f:return Yr(d.children,M,T,l);case p:O=8,M|=8;break;case m:return o=ui(12,d,l,M|2),o.elementType=m,o.lanes=T,o;case x:return o=ui(13,d,l,M),o.elementType=x,o.lanes=T,o;case _:return o=ui(19,d,l,M),o.elementType=_,o.lanes=T,o;case A:return Jl(d,M,T,l);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case v:O=10;break e;case y:O=9;break e;case S:O=11;break e;case E:O=14;break e;case w:O=16,g=null;break e}throw Error(a(130,o==null?o:typeof o,""))}return l=ui(O,d,l,M),l.elementType=o,l.type=g,l.lanes=T,l}function Yr(o,l,d,g){return o=ui(7,o,g,l),o.lanes=d,o}function Jl(o,l,d,g){return o=ui(22,o,g,l),o.elementType=A,o.lanes=d,o.stateNode={},o}function zh(o,l,d){return o=ui(6,o,null,l),o.lanes=d,o}function Bh(o,l,d){return l=ui(4,o.children!==null?o.children:[],o.key,l),l.lanes=d,l.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},l}function Lx(o,l,d,g,M){this.tag=l,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=st,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=zu(0),this.expirationTimes=zu(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=zu(0),this.identifierPrefix=g,this.onRecoverableError=M,oe&&(this.mutableSourceEagerHydrationData=null)}function Zm(o,l,d,g,M,T,O,V,ie){return o=new Lx(o,l,d,V,ie),l===1?(l=1,T===!0&&(l|=8)):l=0,T=ui(3,null,null,l),o.current=T,T.stateNode=o,T.memoizedState={element:g,isDehydrated:d,cache:null,transitions:null},ju(T),o}function Jm(o){if(!o)return gt;o=o._reactInternals;e:{if(R(o)!==o||o.tag!==1)throw Error(a(170));var l=o;do{switch(l.tag){case 3:l=l.stateNode.context;break e;case 1:if(Tt(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break e}}l=l.return}while(l!==null);throw Error(a(171))}if(o.tag===1){var d=o.type;if(Tt(d))return bn(o,d,l)}return l}function Km(o){var l=o._reactInternals;if(l===void 0)throw typeof o.render=="function"?Error(a(188)):(o=Object.keys(o).join(","),Error(a(268,o)));return o=q(l),o===null?null:o.stateNode}function Qm(o,l){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var d=o.retryLane;o.retryLane=d!==0&&d<l?d:l}}function kh(o,l){Qm(o,l),(o=o.alternate)&&Qm(o,l)}function Nx(o){return o=q(o),o===null?null:o.stateNode}function Dx(){return null}return t.attemptContinuousHydration=function(o){if(o.tag===13){var l=Rn();ci(o,134217728,l),kh(o,134217728)}},t.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var l=Rn(),d=vr(o);ci(o,d,l),kh(o,d)}},t.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var l=o.stateNode;if(l.current.memoizedState.isDehydrated){var d=Lo(l.pendingLanes);d!==0&&(Bu(l,d|1),zn(l,on()),!(dt&6)&&(zs(),Ii()))}break;case 13:var g=Rn();km(function(){return ci(o,1,g)}),kh(o,1)}},t.batchedUpdates=function(o,l){var d=dt;dt|=1;try{return o(l)}finally{dt=d,dt===0&&(zs(),cl&&Ii())}},t.createComponentSelector=function(o){return{$$typeof:Ul,value:o}},t.createContainer=function(o,l,d,g,M,T,O){return Zm(o,l,!1,null,d,g,M,T,O)},t.createHasPseudoClassSelector=function(o){return{$$typeof:Ol,value:o}},t.createHydrationContainer=function(o,l,d,g,M,T,O,V,ie){return o=Zm(d,g,!0,o,M,T,O,V,ie),o.context=Jm(null),d=o.current,g=Rn(),M=vr(d),T=Xi(g,M),T.callback=l??null,pr(d,T),o.current.lanes=M,No(o,M,g),zn(o,g),o},t.createPortal=function(o,l,d){var g=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:g==null?null:""+g,children:o,containerInfo:l,implementation:d}},t.createRoleSelector=function(o){return{$$typeof:Fl,value:o}},t.createTestNameSelector=function(o){return{$$typeof:zl,value:o}},t.createTextSelector=function(o){return{$$typeof:Bl,value:o}},t.deferredUpdates=function(o){var l=xt,d=Yt.transition;try{return Yt.transition=null,xt=16,o()}finally{xt=l,Yt.transition=d}},t.discreteUpdates=function(o,l,d,g,M){var T=xt,O=Yt.transition;try{return Yt.transition=null,xt=1,o(l,d,g,M)}finally{xt=T,Yt.transition=O,dt===0&&zs()}},t.findAllNodes=Ah,t.findBoundingRects=function(o,l){if(!re)throw Error(a(363));l=Ah(o,l),o=[];for(var d=0;d<l.length;d++)o.push(fe(l[d]));for(l=o.length-1;0<l;l--){d=o[l];for(var g=d.x,M=g+d.width,T=d.y,O=T+d.height,V=l-1;0<=V;V--)if(l!==V){var ie=o[V],ge=ie.x,Ue=ge+ie.width,ot=ie.y,je=ot+ie.height;if(g>=ge&&T>=ot&&M<=Ue&&O<=je){o.splice(l,1);break}else if(g!==ge||d.width!==ie.width||je<T||ot>O){if(!(T!==ot||d.height!==ie.height||Ue<g||ge>M)){ge>g&&(ie.width+=ge-g,ie.x=g),Ue<M&&(ie.width=M-ge),o.splice(l,1);break}}else{ot>T&&(ie.height+=ot-T,ie.y=T),je<O&&(ie.height=O-ot),o.splice(l,1);break}}}return o},t.findHostInstance=Km,t.findHostInstanceWithNoPortals=function(o){return o=F(o),o=o!==null?Z(o):null,o===null?null:o.stateNode},t.findHostInstanceWithWarning=function(o){return Km(o)},t.flushControlled=function(o){var l=dt;dt|=1;var d=Yt.transition,g=xt;try{Yt.transition=null,xt=1,o()}finally{xt=g,Yt.transition=d,dt=l,dt===0&&(zs(),Ii())}},t.flushPassiveEffects=qr,t.flushSync=km,t.focusWithin=function(o,l){if(!re)throw Error(a(363));for(o=wh(o),l=Fm(o,l),l=Array.from(l),o=0;o<l.length;){var d=l[o++];if(!de(d)){if(d.tag===5&&Ze(d.stateNode))return!0;for(d=d.child;d!==null;)l.push(d),d=d.sibling}}return!1},t.getCurrentUpdatePriority=function(){return xt},t.getFindAllNodesFailureDescription=function(o,l){if(!re)throw Error(a(363));var d=0,g=[];o=[wh(o),0];for(var M=0;M<o.length;){var T=o[M++],O=o[M++],V=l[O];if((T.tag!==5||!de(T))&&(Eh(T,V)&&(g.push(Th(V)),O++,O>d&&(d=O)),O<l.length))for(T=T.child;T!==null;)o.push(T,O),T=T.sibling}if(d<l.length){for(o=[];d<l.length;d++)o.push(Th(l[d]));return`findAllNodes was able to match part of the selector:
  `+(g.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},t.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return ae(o.child.stateNode);default:return o.child.stateNode}},t.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:Nx,findFiberByHostInstance:o.findFiberByHostInstance||Dx,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")o=!1;else{var l=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(l.isDisabled||!l.supportsFiber)o=!0;else{try{ll=l.inject(o),Ri=l}catch{}o=!!l.checkDCE}}return o},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(o,l,d,g){if(!re)throw Error(a(363));o=Ah(o,l);var M=Me(o,d,g).disconnect;return{disconnect:function(){M()}}},t.registerMutableSourceForHydration=function(o,l){var d=l._getVersion;d=d(l._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[l,d]:o.mutableSourceEagerHydrationData.push(l,d)},t.runWithPriority=function(o,l){var d=xt;try{return xt=o,l()}finally{xt=d}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(o,l,d,g){var M=l.current,T=Rn(),O=vr(M);return d=Jm(d),l.context===null?l.context=d:l.pendingContext=d,l=Xi(T,O),l.payload={element:o},g=g===void 0?null:g,g!==null&&(l.callback=g),pr(M,l),o=ci(M,O,T),o!==null&&dl(o,M,O),O},t};My.exports=Yb;var jb=My.exports;const Zb=Q0(jb),Jb=r=>typeof r=="object"&&typeof r.then=="function",ds=[];function Ey(r,e,t=(n,i)=>n===i){if(r===e)return!0;if(!r||!e)return!1;const n=r.length;if(e.length!==n)return!1;for(let i=0;i<n;i++)if(!t(r[i],e[i]))return!1;return!0}function Ty(r,e=null,t=!1,n={}){e===null&&(e=[r]);for(const s of ds)if(Ey(e,s.keys,s.equal)){if(t)return;if(Object.prototype.hasOwnProperty.call(s,"error"))throw s.error;if(Object.prototype.hasOwnProperty.call(s,"response"))return n.lifespan&&n.lifespan>0&&(s.timeout&&clearTimeout(s.timeout),s.timeout=setTimeout(s.remove,n.lifespan)),s.response;if(!t)throw s.promise}const i={keys:e,equal:n.equal,remove:()=>{const s=ds.indexOf(i);s!==-1&&ds.splice(s,1)},promise:(Jb(r)?r:r(...e)).then(s=>{i.response=s,n.lifespan&&n.lifespan>0&&(i.timeout=setTimeout(i.remove,n.lifespan))}).catch(s=>i.error=s)};if(ds.push(i),!t)throw i.promise}const Kb=(r,e,t)=>Ty(r,e,!1,t),Qb=(r,e,t)=>void Ty(r,e,!0,t),$b=r=>{if(r===void 0||r.length===0)ds.splice(0,ds.length);else{const e=ds.find(t=>Ey(r,t.keys,t.equal));e&&e.remove()}},_p={},eC=r=>void Object.assign(_p,r);function tC(r,e){function t(f,{args:p=[],attach:m,...v},y){let S=`${f[0].toUpperCase()}${f.slice(1)}`,x;if(f==="primitive"){if(v.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const _=v.object;x=uo(_,{type:f,root:y,attach:m,primitive:!0})}else{const _=_p[S];if(!_)throw new Error(`R3F: ${S} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");x=uo(new _(...p),{type:f,root:y,attach:m,memoizedProps:{args:p}})}return x.__r3f.attach===void 0&&(x instanceof ut?x.__r3f.attach="geometry":x instanceof mn&&(x.__r3f.attach="material")),S!=="inject"&&Rf(x,v),x}function n(f,p){let m=!1;if(p){var v,y;(v=p.__r3f)!=null&&v.attach?Cf(f,p,p.__r3f.attach):p.isObject3D&&f.isObject3D&&(f.add(p),m=!0),m||(y=f.__r3f)==null||y.objects.push(p),p.__r3f||uo(p,{}),p.__r3f.parent=f,Cd(p),ho(p)}}function i(f,p,m){let v=!1;if(p){var y,S;if((y=p.__r3f)!=null&&y.attach)Cf(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){p.parent=f,p.dispatchEvent({type:"added"}),f.dispatchEvent({type:"childadded",child:p});const x=f.children.filter(E=>E!==p),_=x.indexOf(m);f.children=[...x.slice(0,_),p,...x.slice(_)],v=!0}v||(S=f.__r3f)==null||S.objects.push(p),p.__r3f||uo(p,{}),p.__r3f.parent=f,Cd(p),ho(p)}}function s(f,p,m=!1){f&&[...f].forEach(v=>a(p,v,m))}function a(f,p,m){if(p){var v,y,S;if(p.__r3f&&(p.__r3f.parent=null),(v=f.__r3f)!=null&&v.objects&&(f.__r3f.objects=f.__r3f.objects.filter(A=>A!==p)),(y=p.__r3f)!=null&&y.attach)z0(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){var x;f.remove(p),(x=p.__r3f)!=null&&x.root&&uC($c(p),p)}const E=(S=p.__r3f)==null?void 0:S.primitive,w=!E&&(m===void 0?p.dispose!==null:m);if(!E){var _;s((_=p.__r3f)==null?void 0:_.objects,p,w),s(p.children,p,w)}if(delete p.__r3f,w&&p.dispose&&p.type!=="Scene"){const A=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?Ad.unstable_scheduleCallback(Ad.unstable_IdlePriority,A):A()}ho(f)}}function c(f,p,m,v){var y;const S=(y=f.__r3f)==null?void 0:y.parent;if(!S)return;const x=t(p,m,f.__r3f.root);if(f.children){for(const _ of f.children)_.__r3f&&n(x,_);f.children=f.children.filter(_=>!_.__r3f)}f.__r3f.objects.forEach(_=>n(x,_)),f.__r3f.objects=[],f.__r3f.autoRemovedBeforeAppend||a(S,f),x.parent&&(x.__r3f.autoRemovedBeforeAppend=!0),n(S,x),x.raycast&&x.__r3f.eventCount&&$c(x).getState().internal.interaction.push(x),[v,v.alternate].forEach(_=>{_!==null&&(_.stateNode=x,_.ref&&(typeof _.ref=="function"?_.ref(x):_.ref.current=x))})}const u=()=>console.warn("Text is not allowed in the R3F tree! This could be stray whitespace or characters.");return{reconciler:Zb({createInstance:t,removeChild:a,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(f,p)=>{if(!p)return;const m=f.getState().scene;m.__r3f&&(m.__r3f.root=f,n(m,p))},removeChildFromContainer:(f,p)=>{p&&a(f.getState().scene,p)},insertInContainerBefore:(f,p,m)=>{if(!p||!m)return;const v=f.getState().scene;v.__r3f&&i(v,p,m)},getRootHostContext:()=>null,getChildHostContext:f=>f,finalizeInitialChildren(f){var p;return!!((p=f==null?void 0:f.__r3f)!=null?p:{}).handlers},prepareUpdate(f,p,m,v){var y;if(((y=f==null?void 0:f.__r3f)!=null?y:{}).primitive&&v.object&&v.object!==f)return[!0];{const{args:x=[],children:_,...E}=v,{args:w=[],children:A,...U}=m;if(!Array.isArray(x))throw new Error("R3F: the args prop must be an array!");if(x.some((I,z)=>I!==w[z]))return[!0];const P=Ly(f,E,U,!0);return P.changes.length?[!1,P]:null}},commitUpdate(f,[p,m],v,y,S,x){p?c(f,v,S,x):Rf(f,m)},commitMount(f,p,m,v){var y;const S=(y=f.__r3f)!=null?y:{};f.raycast&&S.handlers&&S.eventCount&&$c(f).getState().internal.interaction.push(f)},getPublicInstance:f=>f,prepareForCommit:()=>null,preparePortalMount:f=>uo(f.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(f){var p;const{attach:m,parent:v}=(p=f.__r3f)!=null?p:{};m&&v&&z0(v,f,m),f.isObject3D&&(f.visible=!1),ho(f)},unhideInstance(f,p){var m;const{attach:v,parent:y}=(m=f.__r3f)!=null?m:{};v&&y&&Cf(y,f,v),(f.isObject3D&&p.visible==null||p.visible)&&(f.visible=!0),ho(f)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():_o.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&zt.fun(performance.now)?performance.now:zt.fun(Date.now)?Date.now:()=>0,scheduleTimeout:zt.fun(setTimeout)?setTimeout:void 0,cancelTimeout:zt.fun(clearTimeout)?clearTimeout:void 0}),applyProps:Rf}}var D0,U0;const bf=r=>"colorSpace"in r||"outputColorSpace"in r,Ay=()=>{var r;return(r=_p.ColorManagement)!=null?r:null},by=r=>r&&r.isOrthographicCamera,nC=r=>r&&r.hasOwnProperty("current"),Ka=typeof window<"u"&&((D0=window.document)!=null&&D0.createElement||((U0=window.navigator)==null?void 0:U0.product)==="ReactNative")?Ae.useLayoutEffect:Ae.useEffect;function Cy(r){const e=Ae.useRef(r);return Ka(()=>void(e.current=r),[r]),e}function iC({set:r}){return Ka(()=>(r(new Promise(()=>null)),()=>r(!1)),[r]),null}class Ry extends Ae.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}Ry.getDerivedStateFromError=()=>({error:!0});const Py="__default",O0=new Map,rC=r=>r&&!!r.memoized&&!!r.changes;function Iy(r){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(r)?Math.min(Math.max(r[0],t),r[1]):r}const la=r=>{var e;return(e=r.__r3f)==null?void 0:e.root.getState()};function $c(r){let e=r.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const zt={obj:r=>r===Object(r)&&!zt.arr(r)&&typeof r!="function",fun:r=>typeof r=="function",str:r=>typeof r=="string",num:r=>typeof r=="number",boo:r=>typeof r=="boolean",und:r=>r===void 0,arr:r=>Array.isArray(r),equ(r,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof r!=typeof e||!!r!=!!e)return!1;if(zt.str(r)||zt.num(r))return r===e;const s=zt.obj(r);if(s&&n==="reference")return r===e;const a=zt.arr(r);if(a&&t==="reference")return r===e;if((a||s)&&r===e)return!0;let c;for(c in r)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in i?e:r)if(!zt.equ(r[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:r)if(r[c]!==e[c])return!1;if(zt.und(c)){if(a&&r.length===0&&e.length===0||s&&Object.keys(r).length===0&&Object.keys(e).length===0)return!0;if(r!==e)return!1}return!0}};function sC(r){const e={nodes:{},materials:{}};return r&&r.traverse(t=>{t.name&&(e.nodes[t.name]=t),t.material&&!e.materials[t.material.name]&&(e.materials[t.material.name]=t.material)}),e}function oC(r){r.dispose&&r.type!=="Scene"&&r.dispose();for(const e in r)e.dispose==null||e.dispose(),delete r[e]}function uo(r,e){const t=r;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},r}function bd(r,e){let t=r;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((s,a)=>s[a],r),{target:t,key:i}}else return{target:t,key:e}}const F0=/-\d+$/;function Cf(r,e,t){if(zt.str(t)){if(F0.test(t)){const s=t.replace(F0,""),{target:a,key:c}=bd(r,s);Array.isArray(a[c])||(a[c]=[])}const{target:n,key:i}=bd(r,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(r,e)}function z0(r,e,t){var n,i;if(zt.str(t)){const{target:s,key:a}=bd(r,t),c=e.__r3f.previousAttach;c===void 0?delete s[a]:s[a]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(r,e);(i=e.__r3f)==null||delete i.previousAttach}function Ly(r,{children:e,key:t,ref:n,...i},{children:s,key:a,ref:c,...u}={},h=!1){var f;const p=(f=r==null?void 0:r.__r3f)!=null?f:{},m=Object.entries(i),v=[];if(h){const S=Object.keys(u);for(let x=0;x<S.length;x++)i.hasOwnProperty(S[x])||m.unshift([S[x],Py+"remove"])}m.forEach(([S,x])=>{var _;if((_=r.__r3f)!=null&&_.primitive&&S==="object"||zt.equ(x,u[S]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(S))return v.push([S,x,!0,[]]);let E=[];S.includes("-")&&(E=S.split("-")),v.push([S,x,!1,E]);for(const w in i){const A=i[w];w.startsWith(`${S}-`)&&v.push([w,A,!1,w.split("-")])}});const y={...i};return p.memoizedProps&&p.memoizedProps.args&&(y.args=p.memoizedProps.args),p.memoizedProps&&p.memoizedProps.attach&&(y.attach=p.memoizedProps.attach),{memoized:y,changes:v}}const aC=typeof process<"u"&&!1;function Rf(r,e){var t,n,i;const s=(t=r.__r3f)!=null?t:{},a=s.root,c=(n=a==null||a.getState==null?void 0:a.getState())!=null?n:{},{memoized:u,changes:h}=rC(e)?e:Ly(r,e),f=s.eventCount;r.__r3f&&(r.__r3f.memoizedProps=u);for(let m=0;m<h.length;m++){let[v,y,S,x]=h[m];if(bf(r)){const A="srgb",U="srgb-linear";v==="encoding"?(v="colorSpace",y=y===3001?A:U):v==="outputEncoding"&&(v="outputColorSpace",y=y===3001?A:U)}let _=r,E=_[v];if(x.length&&(E=x.reduce((w,A)=>w[A],r),!(E&&E.set))){const[w,...A]=x.reverse();_=A.reverse().reduce((U,P)=>U[P],r),v=w}if(y===Py+"remove")if(_.constructor){let w=O0.get(_.constructor);w||(w=new _.constructor,O0.set(_.constructor,w)),y=w[v]}else y=0;if(S)y?s.handlers[v]=y:delete s.handlers[v],s.eventCount=Object.keys(s.handlers).length;else if(E&&E.set&&(E.copy||E instanceof vs)){if(Array.isArray(y))E.fromArray?E.fromArray(y):E.set(...y);else if(E.copy&&y&&y.constructor&&(aC?E.constructor.name===y.constructor.name:E.constructor===y.constructor))E.copy(y);else if(y!==void 0){const w=E instanceof Le;!w&&E.setScalar?E.setScalar(y):E instanceof vs&&y instanceof vs?E.mask=y.mask:E.set(y),!Ay()&&!c.linear&&w&&E.convertSRGBToLinear()}}else if(_[v]=y,_[v]instanceof rn&&_[v].format===Hn&&_[v].type===ki){const w=_[v];bf(w)&&bf(c.gl)?w.colorSpace=c.gl.outputColorSpace:w.encoding=c.gl.outputEncoding}ho(r)}if(s.parent&&r.raycast&&f!==s.eventCount){const m=$c(r).getState().internal,v=m.interaction.indexOf(r);v>-1&&m.interaction.splice(v,1),s.eventCount&&m.interaction.push(r)}return!(h.length===1&&h[0][0]==="onUpdate")&&h.length&&(i=r.__r3f)!=null&&i.parent&&Cd(r),r}function ho(r){var e,t;const n=(e=r.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function Cd(r){r.onUpdate==null||r.onUpdate(r)}function lC(r,e){r.manual||(by(r)?(r.left=e.width/-2,r.right=e.width/2,r.top=e.height/2,r.bottom=e.height/-2):r.aspect=e.width/e.height,r.updateProjectionMatrix(),r.updateMatrixWorld())}function Vc(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}function cC(){var r;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return _o.DefaultEventPriority;switch((r=e.event)==null?void 0:r.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return _o.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return _o.ContinuousEventPriority;default:return _o.DefaultEventPriority}}function Ny(r,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(r.delete(n),i.target.releasePointerCapture(n)))}function uC(r,e){const{internal:t}=r.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{Ny(t.capturedMap,e,n,i)})}function hC(r){function e(u){const{internal:h}=r.getState(),f=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(f*f+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(f=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+f]}))}function n(u,h){const f=r.getState(),p=new Set,m=[],v=h?h(f.internal.interaction):f.internal.interaction;for(let _=0;_<v.length;_++){const E=la(v[_]);E&&(E.raycaster.camera=void 0)}f.previousRoot||f.events.compute==null||f.events.compute(u,f);function y(_){const E=la(_);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var w;E.events.compute==null||E.events.compute(u,E,(w=E.previousRoot)==null?void 0:w.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(_,!0):[]}let S=v.flatMap(y).sort((_,E)=>{const w=la(_.object),A=la(E.object);return!w||!A?_.distance-E.distance:A.events.priority-w.events.priority||_.distance-E.distance}).filter(_=>{const E=Vc(_);return p.has(E)?!1:(p.add(E),!0)});f.events.filter&&(S=f.events.filter(S,f));for(const _ of S){let E=_.object;for(;E;){var x;(x=E.__r3f)!=null&&x.eventCount&&m.push({..._,eventObject:E}),E=E.parent}}if("pointerId"in u&&f.internal.capturedMap.has(u.pointerId))for(let _ of f.internal.capturedMap.get(u.pointerId).values())p.has(Vc(_.intersection))||m.push(_.intersection);return m}function i(u,h,f,p){const m=r.getState();if(u.length){const v={stopped:!1};for(const y of u){const S=la(y.object)||m,{raycaster:x,pointer:_,camera:E,internal:w}=S,A=new D(_.x,_.y,0).unproject(E),U=b=>{var F,q;return(F=(q=w.capturedMap.get(b))==null?void 0:q.has(y.eventObject))!=null?F:!1},P=b=>{const F={intersection:y,target:h.target};w.capturedMap.has(b)?w.capturedMap.get(b).set(y.eventObject,F):w.capturedMap.set(b,new Map([[y.eventObject,F]])),h.target.setPointerCapture(b)},I=b=>{const F=w.capturedMap.get(b);F&&Ny(w.capturedMap,y.eventObject,F,b)};let z={};for(let b in h){let F=h[b];typeof F!="function"&&(z[b]=F)}let R={...y,...z,pointer:_,intersections:u,stopped:v.stopped,delta:f,unprojectedPoint:A,ray:x.ray,camera:E,stopPropagation(){const b="pointerId"in h&&w.capturedMap.get(h.pointerId);if((!b||b.has(y.eventObject))&&(R.stopped=v.stopped=!0,w.hovered.size&&Array.from(w.hovered.values()).find(F=>F.eventObject===y.eventObject))){const F=u.slice(0,u.indexOf(y));s([...F,y])}},target:{hasPointerCapture:U,setPointerCapture:P,releasePointerCapture:I},currentTarget:{hasPointerCapture:U,setPointerCapture:P,releasePointerCapture:I},nativeEvent:h};if(p(R),v.stopped===!0)break}}return u}function s(u){const{internal:h}=r.getState();for(const f of h.hovered.values())if(!u.length||!u.find(p=>p.object===f.object&&p.index===f.index&&p.instanceId===f.instanceId)){const m=f.eventObject.__r3f,v=m==null?void 0:m.handlers;if(h.hovered.delete(Vc(f)),m!=null&&m.eventCount){const y={...f,intersections:u};v.onPointerOut==null||v.onPointerOut(y),v.onPointerLeave==null||v.onPointerLeave(y)}}}function a(u,h){for(let f=0;f<h.length;f++){const p=h[f].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:f}=r.getState();"pointerId"in h&&f.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{f.capturedMap.has(h.pointerId)&&(f.capturedMap.delete(h.pointerId),s([]))})}}return function(f){const{onPointerMissed:p,internal:m}=r.getState();m.lastEvent.current=f;const v=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",x=n(f,v?t:void 0),_=y?e(f):0;u==="onPointerDown"&&(m.initialClick=[f.offsetX,f.offsetY],m.initialHits=x.map(w=>w.eventObject)),y&&!x.length&&_<=2&&(a(f,m.interaction),p&&p(f)),v&&s(x);function E(w){const A=w.eventObject,U=A.__r3f,P=U==null?void 0:U.handlers;if(U!=null&&U.eventCount)if(v){if(P.onPointerOver||P.onPointerEnter||P.onPointerOut||P.onPointerLeave){const I=Vc(w),z=m.hovered.get(I);z?z.stopped&&w.stopPropagation():(m.hovered.set(I,w),P.onPointerOver==null||P.onPointerOver(w),P.onPointerEnter==null||P.onPointerEnter(w))}P.onPointerMove==null||P.onPointerMove(w)}else{const I=P[u];I?(!y||m.initialHits.includes(A))&&(a(f,m.interaction.filter(z=>!m.initialHits.includes(z))),I(w)):y&&m.initialHits.includes(A)&&a(f,m.interaction.filter(z=>!m.initialHits.includes(z)))}}i(x,f,_,E)}}return{handlePointer:c}}const Dy=r=>!!(r!=null&&r.render),Uy=Ae.createContext(null),fC=(r,e)=>{const t=qb((c,u)=>{const h=new D,f=new D,p=new D;function m(_=u().camera,E=f,w=u().size){const{width:A,height:U,top:P,left:I}=w,z=A/U;E instanceof D?p.copy(E):p.set(...E);const R=_.getWorldPosition(h).distanceTo(p);if(by(_))return{width:A/_.zoom,height:U/_.zoom,top:P,left:I,factor:1,distance:R,aspect:z};{const b=_.fov*Math.PI/180,F=2*Math.tan(b/2)*R,q=F*(A/U);return{width:q,height:F,top:P,left:I,factor:A/q,distance:R,aspect:z}}}let v;const y=_=>c(E=>({performance:{...E.performance,current:_}})),S=new ue;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(_=1)=>r(u(),_),advance:(_,E)=>e(_,E,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new pp,pointer:S,mouse:S,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const _=u();v&&clearTimeout(v),_.performance.current!==_.performance.min&&y(_.performance.min),v=setTimeout(()=>y(u().performance.max),_.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:_=>c(E=>({...E,events:{...E.events,..._}})),setSize:(_,E,w,A,U)=>{const P=u().camera,I={width:_,height:E,top:A||0,left:U||0,updateStyle:w};c(z=>({size:I,viewport:{...z.viewport,...m(P,f,I)}}))},setDpr:_=>c(E=>{const w=Iy(_);return{viewport:{...E.viewport,dpr:w,initialDpr:E.viewport.initialDpr||w}}}),setFrameloop:(_="always")=>{const E=u().clock;E.stop(),E.elapsedTime=0,_!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:_}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:Ae.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(_,E,w)=>{const A=u().internal;return A.priority=A.priority+(E>0?1:0),A.subscribers.push({ref:_,priority:E,store:w}),A.subscribers=A.subscribers.sort((U,P)=>U.priority-P.priority),()=>{const U=u().internal;U!=null&&U.subscribers&&(U.priority=U.priority-(E>0?1:0),U.subscribers=U.subscribers.filter(P=>P.ref!==_))}}}}}),n=t.getState();let i=n.size,s=n.viewport.dpr,a=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:f,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||h.dpr!==s){var m;i=u,s=h.dpr,lC(c,u),f.setPixelRatio(h.dpr);const v=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&f.domElement instanceof HTMLCanvasElement;f.setSize(u.width,u.height,v)}c!==a&&(a=c,p(v=>({viewport:{...v.viewport,...v.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>r(c)),t};let Gc,dC=new Set,pC=new Set,mC=new Set;function Pf(r,e){if(r.size)for(const{callback:t}of r.values())t(e)}function ca(r,e){switch(r){case"before":return Pf(dC,e);case"after":return Pf(pC,e);case"tail":return Pf(mC,e)}}let If,Lf;function Nf(r,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof r=="number"&&(n=r-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=r),If=e.internal.subscribers,Gc=0;Gc<If.length;Gc++)Lf=If[Gc],Lf.ref.current(Lf.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function gC(r){let e=!1,t=!1,n,i,s;function a(h){i=requestAnimationFrame(a),e=!0,n=0,ca("before",h),t=!0;for(const p of r.values()){var f;s=p.store.getState(),s.internal.active&&(s.frameloop==="always"||s.internal.frames>0)&&!((f=s.gl.xr)!=null&&f.isPresenting)&&(n+=Nf(h,s))}if(t=!1,ca("after",h),n===0)return ca("tail",h),e=!1,cancelAnimationFrame(i)}function c(h,f=1){var p;if(!h)return r.forEach(m=>c(m.store.getState(),f));(p=h.gl.xr)!=null&&p.isPresenting||!h.internal.active||h.frameloop==="never"||(f>1?h.internal.frames=Math.min(60,h.internal.frames+f):t?h.internal.frames=2:h.internal.frames=1,e||(e=!0,requestAnimationFrame(a)))}function u(h,f=!0,p,m){if(f&&ca("before",h),p)Nf(h,p,m);else for(const v of r.values())Nf(h,v.store.getState());f&&ca("after",h)}return{loop:a,invalidate:c,advance:u}}function vC(){const r=Ae.useContext(Uy);if(!r)throw new Error("R3F: Hooks can only be used within the Canvas component!");return r}function Oy(r,e=0){const t=vC(),n=t.getState().internal.subscribe,i=Cy(r);return Ka(()=>n(i,e,t),[e,n,t]),null}const B0=new WeakMap;function Fy(r,e){return function(t,...n){let i=B0.get(t);return i||(i=new t,B0.set(t,i)),r&&r(i),Promise.all(n.map(s=>new Promise((a,c)=>i.load(s,u=>{u.scene&&Object.assign(u,sC(u.scene)),a(u)},e,u=>c(new Error(`Could not load ${s}: ${u==null?void 0:u.message}`)))))).finally(()=>i.dispose==null?void 0:i.dispose())}}function yp(r,e,t,n){const i=Array.isArray(e)?e:[e],s=Kb(Fy(t,n),[r,...i],{equal:zt.equ});return Array.isArray(e)?s:s[0]}yp.preload=function(r,e,t){const n=Array.isArray(e)?e:[e];return Qb(Fy(t),[r,...n])};yp.clear=function(r,e){const t=Array.isArray(e)?e:[e];return $b([r,...t])};const Eo=new Map,{invalidate:k0,advance:H0}=gC(Eo),{reconciler:ru,applyProps:ao}=tC(Eo,cC),lo={objects:"shallow",strict:!1},_C=(r,e)=>{const t=typeof r=="function"?r(e):r;return Dy(t)?t:new T_({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...r})};function yC(r,e){const t=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement;if(e){const{width:n,height:i,top:s,left:a,updateStyle:c=t}=e;return{width:n,height:i,top:s,left:a,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement&&r.parentElement){const{width:n,height:i,top:s,left:a}=r.parentElement.getBoundingClientRect();return{width:n,height:i,top:s,left:a,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas)return{width:r.width,height:r.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function xC(r){const e=Eo.get(r),t=e==null?void 0:e.fiber,n=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,s=n||fC(k0,H0),a=t||ru.createContainer(s,_o.ConcurrentRoot,null,!1,null,"",i,null);e||Eo.set(r,{fiber:a,store:s});let c,u=!1,h;return{configure(f={}){let{gl:p,size:m,scene:v,events:y,onCreated:S,shadows:x=!1,linear:_=!1,flat:E=!1,legacy:w=!1,orthographic:A=!1,frameloop:U="always",dpr:P=[1,2],performance:I,raycaster:z,camera:R,onPointerMissed:b}=f,F=s.getState(),q=F.gl;F.gl||F.set({gl:q=_C(p,r)});let k=F.raycaster;k||F.set({raycaster:k=new _y});const{params:Z,...se}=z||{};if(zt.equ(se,k,lo)||ao(k,{...se}),zt.equ(Z,k.params,lo)||ao(k,{params:{...k.params,...Z}}),!F.camera||F.camera===h&&!zt.equ(h,R,lo)){h=R;const J=R instanceof Ga,he=J?R:A?new qa(0,0,0,0,.1,1e3):new hn(75,0,.1,1e3);J||(he.position.z=5,R&&ao(he,R),!F.camera&&!(R!=null&&R.rotation)&&he.lookAt(0,0,0)),F.set({camera:he}),k.camera=he}if(!F.scene){let J;v instanceof nu?J=v:(J=new nu,v&&ao(J,v)),F.set({scene:uo(J)})}if(!F.xr){var ae;const J=(Be,ne)=>{const pe=s.getState();pe.frameloop!=="never"&&H0(Be,!0,pe,ne)},he=()=>{const Be=s.getState();Be.gl.xr.enabled=Be.gl.xr.isPresenting,Be.gl.xr.setAnimationLoop(Be.gl.xr.isPresenting?J:null),Be.gl.xr.isPresenting||k0(Be)},Ie={connect(){const Be=s.getState().gl;Be.xr.addEventListener("sessionstart",he),Be.xr.addEventListener("sessionend",he)},disconnect(){const Be=s.getState().gl;Be.xr.removeEventListener("sessionstart",he),Be.xr.removeEventListener("sessionend",he)}};typeof((ae=q.xr)==null?void 0:ae.addEventListener)=="function"&&Ie.connect(),F.set({xr:Ie})}if(q.shadowMap){const J=q.shadowMap.enabled,he=q.shadowMap.type;if(q.shadowMap.enabled=!!x,zt.boo(x))q.shadowMap.type=fa;else if(zt.str(x)){var ve;const Ie={basic:nv,percentage:au,soft:fa,variance:Mi};q.shadowMap.type=(ve=Ie[x])!=null?ve:fa}else zt.obj(x)&&Object.assign(q.shadowMap,x);(J!==q.shadowMap.enabled||he!==q.shadowMap.type)&&(q.shadowMap.needsUpdate=!0)}const H=Ay();H&&("enabled"in H?H.enabled=!w:"legacyMode"in H&&(H.legacyMode=w)),u||ao(q,{outputEncoding:_?3e3:3001,toneMapping:E?Bi:Id}),F.legacy!==w&&F.set(()=>({legacy:w})),F.linear!==_&&F.set(()=>({linear:_})),F.flat!==E&&F.set(()=>({flat:E})),p&&!zt.fun(p)&&!Dy(p)&&!zt.equ(p,q,lo)&&ao(q,p),y&&!F.events.handlers&&F.set({events:y(s)});const $=yC(r,m);return zt.equ($,F.size,lo)||F.setSize($.width,$.height,$.updateStyle,$.top,$.left),P&&F.viewport.dpr!==Iy(P)&&F.setDpr(P),F.frameloop!==U&&F.setFrameloop(U),F.onPointerMissed||F.set({onPointerMissed:b}),I&&!zt.equ(I,F.performance,lo)&&F.set(J=>({performance:{...J.performance,...I}})),c=S,u=!0,this},render(f){return u||this.configure(),ru.updateContainer(Ae.createElement(MC,{store:s,children:f,onCreated:c,rootElement:r}),a,null,()=>{}),s},unmount(){zy(r)}}}function MC({store:r,children:e,onCreated:t,rootElement:n}){return Ka(()=>{const i=r.getState();i.set(s=>({internal:{...s.internal,active:!0}})),t&&t(i),r.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),Ae.createElement(Uy.Provider,{value:r},e)}function zy(r,e){const t=Eo.get(r),n=t==null?void 0:t.fiber;if(n){const i=t==null?void 0:t.store.getState();i&&(i.internal.active=!1),ru.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var s,a,c,u;i.events.disconnect==null||i.events.disconnect(),(s=i.gl)==null||(a=s.renderLists)==null||a.dispose==null||a.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),oC(i),Eo.delete(r),e&&e(r)}catch{}},500)})}}ru.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:Ae.version});function su(){return su=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r},su.apply(this,arguments)}function Rd(r,e,t){var n,i,s,a,c;e==null&&(e=100);function u(){var f=Date.now()-a;f<e&&f>=0?n=setTimeout(u,e-f):(n=null,t||(c=r.apply(s,i),s=i=null))}var h=function(){s=this,i=arguments,a=Date.now();var f=t&&!n;return n||(n=setTimeout(u,e)),f&&(c=r.apply(s,i),s=i=null),c};return h.clear=function(){n&&(clearTimeout(n),n=null)},h.flush=function(){n&&(c=r.apply(s,i),s=i=null,clearTimeout(n),n=null)},h}Rd.debounce=Rd;var SC=Rd;const V0=Q0(SC);function wC(r){let{debounce:e,scroll:t,polyfill:n,offsetSize:i}=r===void 0?{debounce:0,scroll:!1,offsetSize:!1}:r;const s=n||(typeof window>"u"?class{}:window.ResizeObserver);if(!s)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[a,c]=Ae.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),u=Ae.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:a}),h=e?typeof e=="number"?e:e.scroll:null,f=e?typeof e=="number"?e:e.resize:null,p=Ae.useRef(!1);Ae.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[m,v,y]=Ae.useMemo(()=>{const E=()=>{if(!u.current.element)return;const{left:w,top:A,width:U,height:P,bottom:I,right:z,x:R,y:b}=u.current.element.getBoundingClientRect(),F={left:w,top:A,width:U,height:P,bottom:I,right:z,x:R,y:b};u.current.element instanceof HTMLElement&&i&&(F.height=u.current.element.offsetHeight,F.width=u.current.element.offsetWidth),Object.freeze(F),p.current&&!bC(u.current.lastBounds,F)&&c(u.current.lastBounds=F)};return[E,f?V0(E,f):E,h?V0(E,h):E]},[c,i,h,f]);function S(){u.current.scrollContainers&&(u.current.scrollContainers.forEach(E=>E.removeEventListener("scroll",y,!0)),u.current.scrollContainers=null),u.current.resizeObserver&&(u.current.resizeObserver.disconnect(),u.current.resizeObserver=null)}function x(){u.current.element&&(u.current.resizeObserver=new s(y),u.current.resizeObserver.observe(u.current.element),t&&u.current.scrollContainers&&u.current.scrollContainers.forEach(E=>E.addEventListener("scroll",y,{capture:!0,passive:!0})))}const _=E=>{!E||E===u.current.element||(S(),u.current.element=E,u.current.scrollContainers=By(E),x())};return TC(y,!!t),EC(v),Ae.useEffect(()=>{S(),x()},[t,y,v]),Ae.useEffect(()=>S,[]),[_,a,m]}function EC(r){Ae.useEffect(()=>{const e=r;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[r])}function TC(r,e){Ae.useEffect(()=>{if(e){const t=r;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[r,e])}function By(r){const e=[];if(!r||r===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(r);return[t,n,i].some(s=>s==="auto"||s==="scroll")&&e.push(r),[...e,...By(r.parentElement)]}const AC=["x","y","top","bottom","left","right","width","height"],bC=(r,e)=>AC.every(t=>r[t]===e[t]);var CC=Object.defineProperty,RC=Object.defineProperties,PC=Object.getOwnPropertyDescriptors,G0=Object.getOwnPropertySymbols,IC=Object.prototype.hasOwnProperty,LC=Object.prototype.propertyIsEnumerable,W0=(r,e,t)=>e in r?CC(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,X0=(r,e)=>{for(var t in e||(e={}))IC.call(e,t)&&W0(r,t,e[t]);if(G0)for(var t of G0(e))LC.call(e,t)&&W0(r,t,e[t]);return r},NC=(r,e)=>RC(r,PC(e));function ky(r,e,t){if(!r)return;if(t(r)===!0)return r;let n=e?r.return:r.child;for(;n;){const i=ky(n,e,t);if(i)return i;n=e?null:n.sibling}}function Hy(r){try{return Object.defineProperties(r,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return r}}const xp=Hy(Ae.createContext(null));class Vy extends Ae.Component{render(){return Ae.createElement(xp.Provider,{value:this._reactInternals},this.props.children)}}const{ReactCurrentOwner:q0,ReactCurrentDispatcher:Y0}=Ae.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function DC(){const r=Ae.useContext(xp);if(r===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=Ae.useId();return Ae.useMemo(()=>{for(const n of[q0==null?void 0:q0.current,r,r==null?void 0:r.alternate]){if(!n)continue;const i=ky(n,!1,s=>{let a=s.memoizedState;for(;a;){if(a.memoizedState===e)return!0;a=a.next}});if(i)return i}},[r,e])}function UC(){var r;const e=DC(),[t]=Ae.useState(()=>new Map);t.clear();let n=e;for(;n;){if(n.type&&typeof n.type=="object"){const s=n.type._context===void 0&&n.type.Provider===n.type?n.type:n.type._context;s&&s!==xp&&!t.has(s)&&t.set(s,(r=Y0==null?void 0:Y0.current)==null?void 0:r.readContext(Hy(s)))}n=n.return}return t}function OC(){const r=UC();return Ae.useMemo(()=>Array.from(r.keys()).reduce((e,t)=>n=>Ae.createElement(e,null,Ae.createElement(t.Provider,NC(X0({},n),{value:r.get(t)}))),e=>Ae.createElement(Vy,X0({},e))),[r])}const Df={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function FC(r){const{handlePointer:e}=hC(r);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Df).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=r.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:s}=r.getState();s.disconnect==null||s.disconnect(),i(a=>({events:{...a.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([a,c])=>{const[u,h]=Df[a];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=r.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([s,a])=>{if(n&&n.connected instanceof HTMLElement){const[c]=Df[s];n.connected.removeEventListener(c,a)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}const zC=Ae.forwardRef(function({children:e,fallback:t,resize:n,style:i,gl:s,events:a=FC,eventSource:c,eventPrefix:u,shadows:h,linear:f,flat:p,legacy:m,orthographic:v,frameloop:y,dpr:S,performance:x,raycaster:_,camera:E,scene:w,onPointerMissed:A,onCreated:U,...P},I){Ae.useMemo(()=>eC(Gb),[]);const z=OC(),[R,b]=wC({scroll:!0,debounce:{scroll:50,resize:0},...n}),F=Ae.useRef(null),q=Ae.useRef(null);Ae.useImperativeHandle(I,()=>F.current);const k=Cy(A),[Z,se]=Ae.useState(!1),[ae,ve]=Ae.useState(!1);if(Z)throw Z;if(ae)throw ae;const H=Ae.useRef(null);Ka(()=>{const J=F.current;b.width>0&&b.height>0&&J&&(H.current||(H.current=xC(J)),H.current.configure({gl:s,events:a,shadows:h,linear:f,flat:p,legacy:m,orthographic:v,frameloop:y,dpr:S,performance:x,raycaster:_,camera:E,scene:w,size:b,onPointerMissed:(...he)=>k.current==null?void 0:k.current(...he),onCreated:he=>{he.events.connect==null||he.events.connect(c?nC(c)?c.current:c:q.current),u&&he.setEvents({compute:(Ie,Be)=>{const ne=Ie[u+"X"],pe=Ie[u+"Y"];Be.pointer.set(ne/Be.size.width*2-1,-(pe/Be.size.height)*2+1),Be.raycaster.setFromCamera(Be.pointer,Be.camera)}}),U==null||U(he)}}),H.current.render(Ae.createElement(z,null,Ae.createElement(Ry,{set:ve},Ae.createElement(Ae.Suspense,{fallback:Ae.createElement(iC,{set:se})},e)))))}),Ae.useEffect(()=>{const J=F.current;if(J)return()=>zy(J)},[]);const $=c?"none":"auto";return Ae.createElement("div",su({ref:q,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:$,...i}},P),Ae.createElement("div",{ref:R,style:{width:"100%",height:"100%"}},Ae.createElement("canvas",{ref:F,style:{display:"block"}},t)))}),BC=Ae.forwardRef(function(e,t){return Ae.createElement(Vy,null,Ae.createElement(zC,su({},e,{ref:t})))}),j0={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class kC{constructor(e,t,n){const i=this;let s=!1,a=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(f){c++,s===!1&&i.onStart!==void 0&&i.onStart(f,a,c),s=!0},this.itemEnd=function(f){a++,i.onProgress!==void 0&&i.onProgress(f,a,c),a===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(f){i.onError!==void 0&&i.onError(f)},this.resolveURL=function(f){return u?u(f):f},this.setURLModifier=function(f){return u=f,this},this.addHandler=function(f,p){return h.push(f,p),this},this.removeHandler=function(f){const p=h.indexOf(f);return p!==-1&&h.splice(p,2),this},this.getHandler=function(f){for(let p=0,m=h.length;p<m;p+=2){const v=h[p],y=h[p+1];if(v.global&&(v.lastIndex=0),v.test(f))return y}return null}}}const HC=new kC;class Mp{constructor(e){this.manager=e!==void 0?e:HC,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Mp.DEFAULT_MATERIAL_NAME="__DEFAULT";function Pd(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}class VC extends Mp{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=j0.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const c=Pd("img");function u(){f(),j0.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){f(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function f(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class GC{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,a=i.length;s<a;s++)i[s].call(this,e);e.target=null}}}const Gy=300,Z0=1e3,Wc=1001,J0=1002,WC=1006,XC=1008,qC=1009,YC=1023,jC="",En=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function Wy(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(En[r&255]+En[r>>8&255]+En[r>>16&255]+En[r>>24&255]+"-"+En[e&255]+En[e>>8&255]+"-"+En[e>>16&15|64]+En[e>>24&255]+"-"+En[t&63|128]+En[t>>8&255]+"-"+En[t>>16&255]+En[t>>24&255]+En[n&255]+En[n>>8&255]+En[n>>16&255]+En[n>>24&255]).toLowerCase()}function ZC(r,e,t){return Math.max(e,Math.min(t,r))}class va{constructor(e=0,t=0){va.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(ZC(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*n-a*i+e.x,this.y=s*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Nu{constructor(e,t,n,i,s,a,c,u,h){Nu.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,a,c,u,h)}set(e,t,n,i,s,a,c,u,h){const f=this.elements;return f[0]=e,f[1]=i,f[2]=c,f[3]=t,f[4]=s,f[5]=u,f[6]=n,f[7]=a,f[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],c=n[3],u=n[6],h=n[1],f=n[4],p=n[7],m=n[2],v=n[5],y=n[8],S=i[0],x=i[3],_=i[6],E=i[1],w=i[4],A=i[7],U=i[2],P=i[5],I=i[8];return s[0]=a*S+c*E+u*U,s[3]=a*x+c*w+u*P,s[6]=a*_+c*A+u*I,s[1]=h*S+f*E+p*U,s[4]=h*x+f*w+p*P,s[7]=h*_+f*A+p*I,s[2]=m*S+v*E+y*U,s[5]=m*x+v*w+y*P,s[8]=m*_+v*A+y*I,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],c=e[5],u=e[6],h=e[7],f=e[8];return t*a*f-t*c*h-n*s*f+n*c*u+i*s*h-i*a*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=f*a-c*h,m=c*u-f*s,v=h*s-a*u,y=t*p+n*m+i*v;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const S=1/y;return e[0]=p*S,e[1]=(i*h-f*n)*S,e[2]=(c*n-i*a)*S,e[3]=m*S,e[4]=(f*t-i*u)*S,e[5]=(i*s-c*t)*S,e[6]=v*S,e[7]=(n*u-h*t)*S,e[8]=(a*t-n*s)*S,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,a,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*a+h*c)+a+e,-i*h,i*u,-i*(-h*a+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(Uf.makeScale(e,t)),this}rotate(e){return this.premultiply(Uf.makeRotation(-e)),this}translate(e,t){return this.premultiply(Uf.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Uf=new Nu;function Of(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}let co;class JC{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{co===void 0&&(co=Pd("canvas")),co.width=e.width,co.height=e.height;const n=co.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=co}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Pd("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let a=0;a<s.length;a++)s[a]=Of(s[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Of(t[n]/255)*255):t[n]=Of(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let KC=0;class QC{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:KC++}),this.uuid=Wy(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let a=0,c=i.length;a<c;a++)i[a].isDataTexture?s.push(Ff(i[a].image)):s.push(Ff(i[a]))}else s=Ff(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Ff(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?JC.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let $C=0;class Lr extends GC{constructor(e=Lr.DEFAULT_IMAGE,t=Lr.DEFAULT_MAPPING,n=Wc,i=Wc,s=WC,a=XC,c=YC,u=qC,h=Lr.DEFAULT_ANISOTROPY,f=jC){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:$C++}),this.uuid=Wy(),this.name="",this.source=new QC(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=a,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new va(0,0),this.repeat=new va(1,1),this.center=new va(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Nu,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=f,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Gy)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Z0:e.x=e.x-Math.floor(e.x);break;case Wc:e.x=e.x<0?0:1;break;case J0:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Z0:e.y=e.y-Math.floor(e.y);break;case Wc:e.y=e.y<0?0:1;break;case J0:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Lr.DEFAULT_IMAGE=null;Lr.DEFAULT_MAPPING=Gy;Lr.DEFAULT_ANISOTROPY=1;class eR extends Mp{constructor(e){super(e)}load(e,t,n,i){const s=new Lr,a=new VC(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}const ti=[{name:"wax-flamingos",year:"2024",keywords:"Behavioral Robotics, Additive Manufacturing, Material Indeterminancy"},{name:"honeycomb",year:"2023",keywords:"Symmetry Groups, Parametric Design, Grasshopper Development"},{name:"water-qwop",year:"2023",keywords:"Reinforcement Learning, Unity Modeling, Game Agent Design"},{name:"horse-and-chariot",year:"2023",keywords:"Arduino Programming, Mobile Robotics, Data Transmission"},{name:"hyper-hydration",year:"2023",keywords:"Machine Learning, Optimization, Product Design"},{name:"sprawl-and-resilience",year:"2022",keywords:"Landscape Ecology, Board Game Design, Urban Planning"},{name:"cybernetic-field",year:"2021",keywords:"Cybernetics, Agent-Based Modeling, Human-Computer Interaction"},{name:"bubble-gan",year:"2021",keywords:"Machine Learning, Generative Adversarial Network, Architectural AI"},{name:"elc-carrick",year:"2020",keywords:"Educational Architecture, Materials and Assembly, Pittsburgh"},{name:"placeholder",year:"2020",keywords:"Photogrammetry, Python Programming, Software Design"},{name:"collaborative-winding",year:"2020",keywords:"Architectural Robotics, Dual-Robot, Digital Fabrication"},{name:"flood-museum",year:"2019",keywords:"Cultural Architecture, Combined Sewer System, Pittsburgh"},{name:"design-fabrication",year:"2019",keywords:"Digital Fabrication, Computer-Aided-Design, Spatial Extrapolation"},{name:"spring-garden-hostel",year:"2019",keywords:"Residential Architecture, Adaptive Reuse, Pittsburgh"},{name:"modular-garden",year:"2019",keywords:"Digital Fabrication, CNC Milling, Parametric Design"},{name:"bathhouse",year:"2019",keywords:"Recreational Archtiecture, Architectural Sequencing, White Mountains"},{name:"hoophouse",year:"2018",keywords:"Residential (for plants), Design & Build, Phipps Conservatory"},{name:"misc",year:"2017-",keywords:"Render, Storyboard, Animation, Diagram"}];let tR=.08,zf=.5,nR=1;function Bf(r,e){return(r%e+e)%e}function K0(r){return r>=0?(Math.cos(Math.PI*r)-1)/2:-(Math.cos(Math.PI*r)-1)/2}function iR(r){return Math.sin(r*Math.PI/2)}function rR({cover:r,location:e,index:t,targetOffset:n,setTargetOffset:i,hovered:s,setHovered:a}){const c=Ae.useRef(),u=$0(),h=()=>{c.current.position.x>-.5&&c.current.position.x<.5?u("./projects/"+ti[t].name):i(Math.round(n-c.current.position.x))};return Ae.useEffect(()=>{c.current&&(e>ti.length/2?c.current.position.x=e-ti.length:e<-ti.length/2?c.current.position.x=e+ti.length:c.current.position.x=e)},[e]),Oy(()=>{c.current&&(c.current.position.x>=1?(c.current.rotation.y=-zf,c.current.position.z=0):c.current.position.x<=-1?(c.current.rotation.y=zf,c.current.position.z=0):(c.current.rotation.y=K0(c.current.position.x)*zf,c.current.position.z=(K0(Math.abs(c.current.position.x))+1)*nR))}),we.jsxs("mesh",{ref:c,onClick:f=>{h(),f.stopPropagation()},onPointerEnter:f=>{a(s+1)},onPointerOut:f=>{a(s-1)},children:[we.jsx("planeGeometry",{args:[2,2]}),we.jsx("meshStandardMaterial",{map:r,toneMapped:!1})]})}function sR({setCurCenter:r}){const e=$0(),[t,n]=Ae.useState(0),[i,s]=Ae.useState(0),[a,c]=Ae.useState(null),[u,h]=Ae.useState(null),[f,p]=Ae.useState(0);function m(x){x.key=="ArrowLeft"?n(_=>Math.round(_+1)):x.key=="ArrowRight"?n(_=>Math.round(_-1)):x.key=="Enter"&&e("./projects/"+ti[Bf(-t,ti.length)].name)}function v(x){x.type=="mousedown"?c(x.screenX):c(x.touches[0].screenX)}function y(x){if(a==null)return;let _=null;h(a),x.type=="mousemove"?c(x.screenX):c(x.touches[0].screenX),!(a==null||u==null)&&(_=u-a,_!=null&&(x.type=="mousemove"?_/=250:_/=100,n(E=>E-_)))}function S(x){c(null),h(null),n(_=>Math.round(_))}return Ae.useEffect(()=>{document.body.style.cursor=f>0?"pointer":"auto"},[f]),Ae.useEffect(()=>(document.addEventListener("keydown",m),document.addEventListener("mousedown",v),document.addEventListener("mousemove",y),document.addEventListener("mouseup",S),document.addEventListener("touchstart",v),document.addEventListener("touchmove",y),document.addEventListener("touchend",S),()=>{document.removeEventListener("keydown",m),document.removeEventListener("mousedown",v),document.removeEventListener("mousemove",y),document.removeEventListener("mouseup",S),document.removeEventListener("touchstart",v),document.removeEventListener("touchmove",y),document.removeEventListener("touchend",S)}),[t,a,u]),Oy(()=>{let x=t-i,_=iR(x*tR);s(i+_);let E=Bf(Math.round(-i),ti.length);r(E)}),we.jsxs(we.Fragment,{children:[we.jsx("ambientLight",{intensity:3.1}),ti.map((x,_)=>we.jsx(rR,{cover:yp(eR,"/mats/homepage/cover-"+x.name+".jpg"),location:Bf(_+i,ti.length),index:_,targetOffset:t,setTargetOffset:n,hovered:f,setHovered:p},_))]})}const oR=()=>{const[r,e]=Ae.useState(0);return we.jsxs("div",{className:"absolute w-screen h-screen left-0 top-0",children:[we.jsx(BC,{linear:!0,children:we.jsx(Ae.Suspense,{fallback:null,children:we.jsx(sR,{setCurCenter:e})})}),we.jsx("h1",{className:"absolute left-1/2 top-[68%] md:top-[70%] -translate-x-1/2 text-nowrap",children:ti[r].name}),we.jsx("h2",{className:"absolute left-1/2 top-[73%] -translate-x-1/2",children:ti[r].year}),we.jsxs("p",{className:"absolute left-1/2 top-[77%] md:top-[76%] -translate-x-1/2 w-80 text-center",children:[we.jsx("i",{children:"Keywords: "}),ti[r].keywords]})]})},aR=oR,lR="/assets/tailwind-G-eXl6Fs.css",xR=()=>[{rel:"stylesheet",href:lR}];function MR({children:r}){return we.jsxs("html",{lang:"en",children:[we.jsxs("head",{children:[we.jsx("meta",{charSet:"utf-8"}),we.jsx("meta",{name:"viewport",content:"width=device-width, initial-scale=1"}),we.jsx("meta",{name:"description",content:"Samuel Losi is a student of Computational Design. He is attending the University of Stuttgart's ITECH Program to study intimate processes of digital making."}),we.jsx("meta",{name:"keywords",content:"architect, computational design, student, architecture portfolio, carnegie mellon university, school of architecture, institue of compoutational design, university of stuttgart, design, architecture, ITECH, soa, sam losi, samuel losi, losi, undergraduate student, graduate student, computation, robotics, architectural robotics"}),we.jsx(Vx,{}),we.jsx(Gx,{})]}),we.jsxs("body",{children:[r,we.jsx(Xx,{}),we.jsx(Wx,{})]})]})}function SR(){return we.jsxs("div",{className:"w-full h-screen",children:[we.jsx(aR,{}),we.jsx(Hx,{}),we.jsx(qx,{})]})}export{MR as Layout,SR as default,xR as links};
