import{r as Te,j as xe,g as F0}from"./jsx-runtime-BlSqMCxk.js";import{u as _x,f as yx,g as xx,h as Sx,j as Mx,L as cn,k as z0,O as wx,M as Ex,n as Ax,S as Tx}from"./components--iMuTRih.js";/**
 * @remix-run/react v2.8.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */let Hm="positions";function bx({getKey:r,...e}){let{isSpaMode:t}=_x(),n=yx(),i=xx();Sx({getKey:r,storageKey:Hm});let s=Te.useMemo(()=>{if(!r)return null;let c=r(n,i);return c!==n.key?c:null},[]);if(t)return null;let l=((c,u)=>{if(!window.history.state||!window.history.state.key){let h=Math.random().toString(32).slice(2);window.history.replaceState({key:h},"")}try{let d=JSON.parse(sessionStorage.getItem(c)||"{}")[u||window.history.state.key];typeof d=="number"&&window.scrollTo(0,d)}catch(h){console.error(h),sessionStorage.removeItem(c)}}).toString();return Te.createElement("script",Mx({},e,{suppressHydrationWarning:!0,dangerouslySetInnerHTML:{__html:`(${l})(${JSON.stringify(Hm)}, ${JSON.stringify(s)})`}}))}function Cx(){const[r,e]=Te.useState(!1),t=()=>e(!r);return xe.jsxs("div",{className:"bg-opacity-80 bg-white",children:[xe.jsx("div",{className:"fixed left-3 top-3 text-2xl w-2",children:xe.jsx("p",{className:`hover:text-yellow-500 cursor-pointer ${r?"hidden":"show"}`,onClick:t,children:"☰"})}),xe.jsxs("div",{className:`transform top-0 p-4 left-0 w-auto bg-white fixed h-[97vh] m-4 mt-[1.5vh] border-2 border-neutral-250 rounded-md ease-in-out transition-all duration-300 z-30 ${r?"translate-x-0":"-translate-x-[200%]"}`,onClick:t,children:[xe.jsxs("ul",{className:"hover:*:*:text-yellow-500",children:[xe.jsx("li",{className:"text-sm italic pt-3",children:"2024"}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/wax-flamingos",children:"Wax Flamingos**"})}),xe.jsx("li",{className:"text-sm italic pt-3",children:"2023"}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/honeycomb",children:"Honeycomb**"})}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/water-qwop",children:"Water-QWOP"})}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/horse-and-chariot",children:"Horse & Chariot*"})}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/hyper-hydration",children:"Hyper-hydration"})}),xe.jsx("li",{className:"text-sm italic pt-3",children:"2022"}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/sprawl-and-resilience",children:"Sprawl & Resilience*"})}),xe.jsx("li",{className:"text-sm italic pt-3",children:"2021"}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/cybernetic-field",children:"Cybernetic Field"})}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/bubble-gan",children:"Bubble-GAN"})}),xe.jsx("li",{className:"text-sm italic pt-3",children:"2020"}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/elc-carrick",children:"ELC: Carrick"})}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/placeholder",children:"15-112: placeHolder**"})}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/collaborative-winding",children:"Collaborative Winding"})}),xe.jsx("li",{className:"text-sm italic pt-3",children:"2019"}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/flood-museum",children:"Flood Museum"})}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/design-fabrication",children:"Design Fabrication*"})}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/spring-garden-hostel",children:"Spring Garden Hostel*"})}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/modular-garden",children:"Modular Garden"})}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/bathhouse",children:"Bathhouse"})}),xe.jsx("li",{className:"text-sm italic pt-3",children:"2018"}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/hoophouse",children:"Hoophouse"})}),xe.jsx("li",{children:xe.jsx(cn,{to:"./projects/misc",children:"Misc"})})]}),xe.jsx("p",{className:"absolute top-4 -right-7 hover:text-yellow-500 cursor-pointer font-bold",onClick:t,children:"✕"})]})]})}/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const eu="163",Rx={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Px={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},B0=0,Pf=1,k0=2,Ix=3,H0=0,tu=1,ca=2,xi=3,sr=0,Ln=1,Ui=2,rr=0,fs=1,If=2,Lf=3,Nf=4,V0=5,Rr=100,G0=101,W0=102,X0=103,q0=104,Y0=200,j0=201,Z0=202,J0=203,jc=204,Zc=205,K0=206,Q0=207,$0=208,ev=209,tv=210,nv=211,iv=212,rv=213,sv=214,ov=0,av=1,lv=2,pa=3,cv=4,uv=5,hv=6,fv=7,Fa=0,dv=1,pv=2,zi=0,mv=1,gv=2,vv=3,xd=4,_v=5,yv=6,xv=7,Df="attached",Sv="detached",nu=300,or=301,Ir=302,ma=303,ga=304,Mo=306,va=1e3,di=1001,_a=1002,fn=1003,Sd=1004,Lx=1004,co=1005,Nx=1005,$t=1006,ua=1007,Dx=1007,Oi=1008,Ux=1008,Bi=1009,Mv=1010,wv=1011,Md=1012,wd=1013,vs=1014,pi=1015,ya=1016,Ed=1017,Ad=1018,wo=1020,Ev=35902,Av=1021,Tv=1022,kn=1023,bv=1024,Cv=1025,ds=1026,vo=1027,Td=1028,bd=1029,Rv=1030,Cd=1031,Rd=1033,kc=33776,Hc=33777,Vc=33778,Gc=33779,Uf=35840,Of=35841,Ff=35842,zf=35843,Pd=36196,Bf=37492,kf=37496,Hf=37808,Vf=37809,Gf=37810,Wf=37811,Xf=37812,qf=37813,Yf=37814,jf=37815,Zf=37816,Jf=37817,Kf=37818,Qf=37819,$f=37820,ed=37821,Wc=36492,td=36494,nd=36495,Pv=36283,id=36284,rd=36285,sd=36286,Iv=2200,Lv=2201,Nv=2202,xa=2300,Sa=2301,Xc=2302,as=2400,ls=2401,Ma=2402,iu=2500,Id=2501,Ox=0,Fx=1,zx=2,Dv=3200,Uv=3201,Nr=0,Ov=1,tr="",fi="srgb",lr="srgb-linear",ru="display-p3",za="display-p3-linear",wa="linear",Ot="srgb",Ea="rec709",Aa="p3",Bx=0,rs=7680,kx=7681,Hx=7682,Vx=7683,Gx=34055,Wx=34056,Xx=5386,qx=512,Yx=513,jx=514,Zx=515,Jx=516,Kx=517,Qx=518,od=519,Fv=512,zv=513,Bv=514,Ld=515,kv=516,Hv=517,Vv=518,Gv=519,Ta=35044,$x=35048,eS=35040,tS=35045,nS=35049,iS=35041,rS=35046,sS=35050,oS=35042,aS="100",ad="300 es",Fi=2e3,ba=2001;class cr{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}}const Sn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Vm=1234567;const ps=Math.PI/180,_o=180/Math.PI;function ti(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Sn[r&255]+Sn[r>>8&255]+Sn[r>>16&255]+Sn[r>>24&255]+"-"+Sn[e&255]+Sn[e>>8&255]+"-"+Sn[e>>16&15|64]+Sn[e>>24&255]+"-"+Sn[t&63|128]+Sn[t>>8&255]+"-"+Sn[t>>16&255]+Sn[t>>24&255]+Sn[n&255]+Sn[n>>8&255]+Sn[n>>16&255]+Sn[n>>24&255]).toLowerCase()}function Yt(r,e,t){return Math.max(e,Math.min(t,r))}function Nd(r,e){return(r%e+e)%e}function lS(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function cS(r,e,t){return r!==e?(t-r)/(e-r):0}function ha(r,e,t){return(1-t)*r+t*e}function uS(r,e,t,n){return ha(r,e,1-Math.exp(-t*n))}function hS(r,e=1){return e-Math.abs(Nd(r,e*2)-e)}function fS(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function dS(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function pS(r,e){return r+Math.floor(Math.random()*(e-r+1))}function mS(r,e){return r+Math.random()*(e-r)}function gS(r){return r*(.5-Math.random())}function vS(r){r!==void 0&&(Vm=r);let e=Vm+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function _S(r){return r*ps}function yS(r){return r*_o}function xS(r){return(r&r-1)===0&&r!==0}function SS(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function MS(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function wS(r,e,t,n,i){const s=Math.cos,l=Math.sin,c=s(t/2),u=l(t/2),h=s((e+n)/2),d=l((e+n)/2),p=s((e-n)/2),m=l((e-n)/2),v=s((n-e)/2),y=l((n-e)/2);switch(i){case"XYX":r.set(c*d,u*p,u*m,c*h);break;case"YZY":r.set(u*m,c*d,u*p,c*h);break;case"ZXZ":r.set(u*p,u*m,c*d,c*h);break;case"XZX":r.set(c*d,u*y,u*v,c*h);break;case"YXY":r.set(u*v,c*d,u*y,c*h);break;case"ZYZ":r.set(u*y,u*v,c*d,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function In(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function ct(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const ES={DEG2RAD:ps,RAD2DEG:_o,generateUUID:ti,clamp:Yt,euclideanModulo:Nd,mapLinear:lS,inverseLerp:cS,lerp:ha,damp:uS,pingpong:hS,smoothstep:fS,smootherstep:dS,randInt:pS,randFloat:mS,randFloatSpread:gS,seededRandom:vS,degToRad:_S,radToDeg:yS,isPowerOfTwo:xS,ceilPowerOfTwo:SS,floorPowerOfTwo:MS,setQuaternionFromProperEuler:wS,normalize:ct,denormalize:In};class ue{constructor(e=0,t=0){ue.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Yt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,l=this.y-e.y;return this.x=s*n-l*i+e.x,this.y=s*i+l*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class lt{constructor(e,t,n,i,s,l,c,u,h){lt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h)}set(e,t,n,i,s,l,c,u,h){const d=this.elements;return d[0]=e,d[1]=i,d[2]=c,d[3]=t,d[4]=s,d[5]=u,d[6]=n,d[7]=l,d[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[3],u=n[6],h=n[1],d=n[4],p=n[7],m=n[2],v=n[5],y=n[8],M=i[0],x=i[3],_=i[6],E=i[1],w=i[4],T=i[7],U=i[2],P=i[5],L=i[8];return s[0]=l*M+c*E+u*U,s[3]=l*x+c*w+u*P,s[6]=l*_+c*T+u*L,s[1]=h*M+d*E+p*U,s[4]=h*x+d*w+p*P,s[7]=h*_+d*T+p*L,s[2]=m*M+v*E+y*U,s[5]=m*x+v*w+y*P,s[8]=m*_+v*T+y*L,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8];return t*l*d-t*c*h-n*s*d+n*c*u+i*s*h-i*l*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=d*l-c*h,m=c*u-d*s,v=h*s-l*u,y=t*p+n*m+i*v;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const M=1/y;return e[0]=p*M,e[1]=(i*h-d*n)*M,e[2]=(c*n-i*l)*M,e[3]=m*M,e[4]=(d*t-i*u)*M,e[5]=(i*s-c*t)*M,e[6]=v*M,e[7]=(n*u-h*t)*M,e[8]=(l*t-n*s)*M,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,l,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*l+h*c)+l+e,-i*h,i*u,-i*(-h*l+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(Dh.makeScale(e,t)),this}rotate(e){return this.premultiply(Dh.makeRotation(-e)),this}translate(e,t){return this.premultiply(Dh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Dh=new lt;function Wv(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const AS={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function uo(r,e){return new AS[r](e)}function Ca(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function Xv(){const r=Ca("canvas");return r.style.display="block",r}const Gm={};function qv(r){r in Gm||(Gm[r]=!0,console.warn(r))}const Wm=new lt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Xm=new lt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Yl={[lr]:{transfer:wa,primaries:Ea,toReference:r=>r,fromReference:r=>r},[fi]:{transfer:Ot,primaries:Ea,toReference:r=>r.convertSRGBToLinear(),fromReference:r=>r.convertLinearToSRGB()},[za]:{transfer:wa,primaries:Aa,toReference:r=>r.applyMatrix3(Xm),fromReference:r=>r.applyMatrix3(Wm)},[ru]:{transfer:Ot,primaries:Aa,toReference:r=>r.convertSRGBToLinear().applyMatrix3(Xm),fromReference:r=>r.applyMatrix3(Wm).convertLinearToSRGB()}},TS=new Set([lr,za]),bt={enabled:!0,_workingColorSpace:lr,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(r){if(!TS.has(r))throw new Error(`Unsupported working color space, "${r}".`);this._workingColorSpace=r},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const n=Yl[e].toReference,i=Yl[t].fromReference;return i(n(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this._workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this._workingColorSpace)},getPrimaries:function(r){return Yl[r].primaries},getTransfer:function(r){return r===tr?wa:Yl[r].transfer}};function go(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Uh(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Fs;class Yv{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Fs===void 0&&(Fs=Ca("canvas")),Fs.width=e.width,Fs.height=e.height;const n=Fs.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Fs}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Ca("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let l=0;l<s.length;l++)s[l]=go(s[l]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(go(t[n]/255)*255):t[n]=go(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let bS=0;class cs{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:bS++}),this.uuid=ti(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?s.push(Oh(i[l].image)):s.push(Oh(i[l]))}else s=Oh(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Oh(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Yv.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let CS=0;class Gt extends cr{constructor(e=Gt.DEFAULT_IMAGE,t=Gt.DEFAULT_MAPPING,n=di,i=di,s=$t,l=Oi,c=kn,u=Bi,h=Gt.DEFAULT_ANISOTROPY,d=tr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:CS++}),this.uuid=ti(),this.name="",this.source=new cs(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=l,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new ue(0,0),this.repeat=new ue(1,1),this.center=new ue(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new lt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=d,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==nu)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case va:e.x=e.x-Math.floor(e.x);break;case di:e.x=e.x<0?0:1;break;case _a:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case va:e.y=e.y-Math.floor(e.y);break;case di:e.y=e.y<0?0:1;break;case _a:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Gt.DEFAULT_IMAGE=null;Gt.DEFAULT_MAPPING=nu;Gt.DEFAULT_ANISOTROPY=1;class Ct{constructor(e=0,t=0,n=0,i=1){Ct.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,l=e.elements;return this.x=l[0]*t+l[4]*n+l[8]*i+l[12]*s,this.y=l[1]*t+l[5]*n+l[9]*i+l[13]*s,this.z=l[2]*t+l[6]*n+l[10]*i+l[14]*s,this.w=l[3]*t+l[7]*n+l[11]*i+l[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],d=u[4],p=u[8],m=u[1],v=u[5],y=u[9],M=u[2],x=u[6],_=u[10];if(Math.abs(d-m)<.01&&Math.abs(p-M)<.01&&Math.abs(y-x)<.01){if(Math.abs(d+m)<.1&&Math.abs(p+M)<.1&&Math.abs(y+x)<.1&&Math.abs(h+v+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const w=(h+1)/2,T=(v+1)/2,U=(_+1)/2,P=(d+m)/4,L=(p+M)/4,z=(y+x)/4;return w>T&&w>U?w<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(w),i=P/n,s=L/n):T>U?T<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(T),n=P/i,s=z/i):U<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(U),n=L/s,i=z/s),this.set(n,i,s,t),this}let E=Math.sqrt((x-y)*(x-y)+(p-M)*(p-M)+(m-d)*(m-d));return Math.abs(E)<.001&&(E=1),this.x=(x-y)/E,this.y=(p-M)/E,this.z=(m-d)/E,this.w=Math.acos((h+v+_-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class jv extends cr{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ct(0,0,e,t),this.scissorTest=!1,this.viewport=new Ct(0,0,e,t);const i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:$t,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0,count:1},n);const s=new Gt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const l=n.count;for(let c=0;c<l;c++)this.textures[c]=s.clone(),this.textures[c].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new cs(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Mi extends jv{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class su extends Gt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=fn,this.minFilter=fn,this.wrapR=di,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class RS extends Mi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new su(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Dd extends Gt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=fn,this.minFilter=fn,this.wrapR=di,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class PS extends Mi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Dd(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Hn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,l,c){let u=n[i+0],h=n[i+1],d=n[i+2],p=n[i+3];const m=s[l+0],v=s[l+1],y=s[l+2],M=s[l+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=v,e[t+2]=y,e[t+3]=M;return}if(p!==M||u!==m||h!==v||d!==y){let x=1-c;const _=u*m+h*v+d*y+p*M,E=_>=0?1:-1,w=1-_*_;if(w>Number.EPSILON){const U=Math.sqrt(w),P=Math.atan2(U,_*E);x=Math.sin(x*P)/U,c=Math.sin(c*P)/U}const T=c*E;if(u=u*x+m*T,h=h*x+v*T,d=d*x+y*T,p=p*x+M*T,x===1-c){const U=1/Math.sqrt(u*u+h*h+d*d+p*p);u*=U,h*=U,d*=U,p*=U}}e[t]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,l){const c=n[i],u=n[i+1],h=n[i+2],d=n[i+3],p=s[l],m=s[l+1],v=s[l+2],y=s[l+3];return e[t]=c*y+d*p+u*v-h*m,e[t+1]=u*y+d*m+h*p-c*v,e[t+2]=h*y+d*v+c*m-u*p,e[t+3]=d*y-c*p-u*m-h*v,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,s=e._z,l=e._order,c=Math.cos,u=Math.sin,h=c(n/2),d=c(i/2),p=c(s/2),m=u(n/2),v=u(i/2),y=u(s/2);switch(l){case"XYZ":this._x=m*d*p+h*v*y,this._y=h*v*p-m*d*y,this._z=h*d*y+m*v*p,this._w=h*d*p-m*v*y;break;case"YXZ":this._x=m*d*p+h*v*y,this._y=h*v*p-m*d*y,this._z=h*d*y-m*v*p,this._w=h*d*p+m*v*y;break;case"ZXY":this._x=m*d*p-h*v*y,this._y=h*v*p+m*d*y,this._z=h*d*y+m*v*p,this._w=h*d*p-m*v*y;break;case"ZYX":this._x=m*d*p-h*v*y,this._y=h*v*p+m*d*y,this._z=h*d*y-m*v*p,this._w=h*d*p+m*v*y;break;case"YZX":this._x=m*d*p+h*v*y,this._y=h*v*p+m*d*y,this._z=h*d*y-m*v*p,this._w=h*d*p-m*v*y;break;case"XZY":this._x=m*d*p-h*v*y,this._y=h*v*p-m*d*y,this._z=h*d*y+m*v*p,this._w=h*d*p+m*v*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],l=t[1],c=t[5],u=t[9],h=t[2],d=t[6],p=t[10],m=n+c+p;if(m>0){const v=.5/Math.sqrt(m+1);this._w=.25/v,this._x=(d-u)*v,this._y=(s-h)*v,this._z=(l-i)*v}else if(n>c&&n>p){const v=2*Math.sqrt(1+n-c-p);this._w=(d-u)/v,this._x=.25*v,this._y=(i+l)/v,this._z=(s+h)/v}else if(c>p){const v=2*Math.sqrt(1+c-n-p);this._w=(s-h)/v,this._x=(i+l)/v,this._y=.25*v,this._z=(u+d)/v}else{const v=2*Math.sqrt(1+p-n-c);this._w=(l-i)/v,this._x=(s+h)/v,this._y=(u+d)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Yt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,l=e._w,c=t._x,u=t._y,h=t._z,d=t._w;return this._x=n*d+l*c+i*h-s*u,this._y=i*d+l*u+s*c-n*h,this._z=s*d+l*h+n*u-i*c,this._w=l*d-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,l=this._w;let c=l*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=l,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const v=1-t;return this._w=v*l+t*this._w,this._x=v*n+t*this._x,this._y=v*i+t*this._y,this._z=v*s+t*this._z,this.normalize(),this}const h=Math.sqrt(u),d=Math.atan2(h,c),p=Math.sin((1-t)*d)/h,m=Math.sin(t*d)/h;return this._w=l*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class D{constructor(e=0,t=0,n=0){D.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(qm.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(qm.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,l=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*l,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*l,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*l,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,l=e.y,c=e.z,u=e.w,h=2*(l*i-c*n),d=2*(c*t-s*i),p=2*(s*n-l*t);return this.x=t+u*h+l*p-c*d,this.y=n+u*d+c*h-s*p,this.z=i+u*p+s*d-l*h,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,l=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*l-n*u,this.z=n*c-i*l,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Fh.copy(this).projectOnVector(e),this.sub(Fh)}reflect(e){return this.sub(Fh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Yt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Fh=new D,qm=new Hn;class Nn{constructor(e=new D(1/0,1/0,1/0),t=new D(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(vi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(vi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=vi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let l=0,c=s.count;l<c;l++)e.isMesh===!0?e.getVertexPosition(l,vi):vi.fromBufferAttribute(s,l),vi.applyMatrix4(e.matrixWorld),this.expandByPoint(vi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),jl.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),jl.copy(n.boundingBox)),jl.applyMatrix4(e.matrixWorld),this.union(jl)}const i=e.children;for(let s=0,l=i.length;s<l;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,vi),vi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(jo),Zl.subVectors(this.max,jo),zs.subVectors(e.a,jo),Bs.subVectors(e.b,jo),ks.subVectors(e.c,jo),xr.subVectors(Bs,zs),Sr.subVectors(ks,Bs),qr.subVectors(zs,ks);let t=[0,-xr.z,xr.y,0,-Sr.z,Sr.y,0,-qr.z,qr.y,xr.z,0,-xr.x,Sr.z,0,-Sr.x,qr.z,0,-qr.x,-xr.y,xr.x,0,-Sr.y,Sr.x,0,-qr.y,qr.x,0];return!zh(t,zs,Bs,ks,Zl)||(t=[1,0,0,0,1,0,0,0,1],!zh(t,zs,Bs,ks,Zl))?!1:(Jl.crossVectors(xr,Sr),t=[Jl.x,Jl.y,Jl.z],zh(t,zs,Bs,ks,Zl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,vi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(vi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Zi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Zi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Zi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Zi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Zi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Zi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Zi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Zi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Zi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Zi=[new D,new D,new D,new D,new D,new D,new D,new D],vi=new D,jl=new Nn,zs=new D,Bs=new D,ks=new D,xr=new D,Sr=new D,qr=new D,jo=new D,Zl=new D,Jl=new D,Yr=new D;function zh(r,e,t,n,i){for(let s=0,l=r.length-3;s<=l;s+=3){Yr.fromArray(r,s);const c=i.x*Math.abs(Yr.x)+i.y*Math.abs(Yr.y)+i.z*Math.abs(Yr.z),u=e.dot(Yr),h=t.dot(Yr),d=n.dot(Yr);if(Math.max(-Math.max(u,h,d),Math.min(u,h,d))>c)return!1}return!0}const IS=new Nn,Zo=new D,Bh=new D;class En{constructor(e=new D,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):IS.setFromPoints(e).getCenter(n);let i=0;for(let s=0,l=e.length;s<l;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Zo.subVectors(e,this.center);const t=Zo.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Zo,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Bh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Zo.copy(e.center).add(Bh)),this.expandByPoint(Zo.copy(e.center).sub(Bh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ji=new D,kh=new D,Kl=new D,Mr=new D,Hh=new D,Ql=new D,Vh=new D;class Eo{constructor(e=new D,t=new D(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ji)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ji.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ji.copy(this.origin).addScaledVector(this.direction,t),Ji.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){kh.copy(e).add(t).multiplyScalar(.5),Kl.copy(t).sub(e).normalize(),Mr.copy(this.origin).sub(kh);const s=e.distanceTo(t)*.5,l=-this.direction.dot(Kl),c=Mr.dot(this.direction),u=-Mr.dot(Kl),h=Mr.lengthSq(),d=Math.abs(1-l*l);let p,m,v,y;if(d>0)if(p=l*u-c,m=l*c-u,y=s*d,p>=0)if(m>=-y)if(m<=y){const M=1/d;p*=M,m*=M,v=p*(p+l*m+2*c)+m*(l*p+m+2*u)+h}else m=s,p=Math.max(0,-(l*m+c)),v=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(l*m+c)),v=-p*p+m*(m+2*u)+h;else m<=-y?(p=Math.max(0,-(-l*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),v=-p*p+m*(m+2*u)+h):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),v=m*(m+2*u)+h):(p=Math.max(0,-(l*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),v=-p*p+m*(m+2*u)+h);else m=l>0?-s:s,p=Math.max(0,-(l*m+c)),v=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(kh).addScaledVector(Kl,m),v}intersectSphere(e,t){Ji.subVectors(e.center,this.origin);const n=Ji.dot(this.direction),i=Ji.dot(Ji)-n*n,s=e.radius*e.radius;if(i>s)return null;const l=Math.sqrt(s-i),c=n-l,u=n+l;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,l,c,u;const h=1/this.direction.x,d=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),d>=0?(s=(e.min.y-m.y)*d,l=(e.max.y-m.y)*d):(s=(e.max.y-m.y)*d,l=(e.min.y-m.y)*d),n>l||s>i||((s>n||isNaN(n))&&(n=s),(l<i||isNaN(i))&&(i=l),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Ji)!==null}intersectTriangle(e,t,n,i,s){Hh.subVectors(t,e),Ql.subVectors(n,e),Vh.crossVectors(Hh,Ql);let l=this.direction.dot(Vh),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;Mr.subVectors(this.origin,e);const u=c*this.direction.dot(Ql.crossVectors(Mr,Ql));if(u<0)return null;const h=c*this.direction.dot(Hh.cross(Mr));if(h<0||u+h>l)return null;const d=-c*Mr.dot(Vh);return d<0?null:this.at(d/l,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Ke{constructor(e,t,n,i,s,l,c,u,h,d,p,m,v,y,M,x){Ke.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h,d,p,m,v,y,M,x)}set(e,t,n,i,s,l,c,u,h,d,p,m,v,y,M,x){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=s,_[5]=l,_[9]=c,_[13]=u,_[2]=h,_[6]=d,_[10]=p,_[14]=m,_[3]=v,_[7]=y,_[11]=M,_[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ke().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Hs.setFromMatrixColumn(e,0).length(),s=1/Hs.setFromMatrixColumn(e,1).length(),l=1/Hs.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*l,t[9]=n[9]*l,t[10]=n[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,l=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),d=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=l*d,v=l*p,y=c*d,M=c*p;t[0]=u*d,t[4]=-u*p,t[8]=h,t[1]=v+y*h,t[5]=m-M*h,t[9]=-c*u,t[2]=M-m*h,t[6]=y+v*h,t[10]=l*u}else if(e.order==="YXZ"){const m=u*d,v=u*p,y=h*d,M=h*p;t[0]=m+M*c,t[4]=y*c-v,t[8]=l*h,t[1]=l*p,t[5]=l*d,t[9]=-c,t[2]=v*c-y,t[6]=M+m*c,t[10]=l*u}else if(e.order==="ZXY"){const m=u*d,v=u*p,y=h*d,M=h*p;t[0]=m-M*c,t[4]=-l*p,t[8]=y+v*c,t[1]=v+y*c,t[5]=l*d,t[9]=M-m*c,t[2]=-l*h,t[6]=c,t[10]=l*u}else if(e.order==="ZYX"){const m=l*d,v=l*p,y=c*d,M=c*p;t[0]=u*d,t[4]=y*h-v,t[8]=m*h+M,t[1]=u*p,t[5]=M*h+m,t[9]=v*h-y,t[2]=-h,t[6]=c*u,t[10]=l*u}else if(e.order==="YZX"){const m=l*u,v=l*h,y=c*u,M=c*h;t[0]=u*d,t[4]=M-m*p,t[8]=y*p+v,t[1]=p,t[5]=l*d,t[9]=-c*d,t[2]=-h*d,t[6]=v*p+y,t[10]=m-M*p}else if(e.order==="XZY"){const m=l*u,v=l*h,y=c*u,M=c*h;t[0]=u*d,t[4]=-p,t[8]=h*d,t[1]=m*p+M,t[5]=l*d,t[9]=v*p-y,t[2]=y*p-v,t[6]=c*d,t[10]=M*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(LS,e,NS)}lookAt(e,t,n){const i=this.elements;return Kn.subVectors(e,t),Kn.lengthSq()===0&&(Kn.z=1),Kn.normalize(),wr.crossVectors(n,Kn),wr.lengthSq()===0&&(Math.abs(n.z)===1?Kn.x+=1e-4:Kn.z+=1e-4,Kn.normalize(),wr.crossVectors(n,Kn)),wr.normalize(),$l.crossVectors(Kn,wr),i[0]=wr.x,i[4]=$l.x,i[8]=Kn.x,i[1]=wr.y,i[5]=$l.y,i[9]=Kn.y,i[2]=wr.z,i[6]=$l.z,i[10]=Kn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[4],u=n[8],h=n[12],d=n[1],p=n[5],m=n[9],v=n[13],y=n[2],M=n[6],x=n[10],_=n[14],E=n[3],w=n[7],T=n[11],U=n[15],P=i[0],L=i[4],z=i[8],R=i[12],b=i[1],F=i[5],q=i[9],k=i[13],Z=i[2],se=i[6],ae=i[10],ve=i[14],H=i[3],$=i[7],J=i[11],he=i[15];return s[0]=l*P+c*b+u*Z+h*H,s[4]=l*L+c*F+u*se+h*$,s[8]=l*z+c*q+u*ae+h*J,s[12]=l*R+c*k+u*ve+h*he,s[1]=d*P+p*b+m*Z+v*H,s[5]=d*L+p*F+m*se+v*$,s[9]=d*z+p*q+m*ae+v*J,s[13]=d*R+p*k+m*ve+v*he,s[2]=y*P+M*b+x*Z+_*H,s[6]=y*L+M*F+x*se+_*$,s[10]=y*z+M*q+x*ae+_*J,s[14]=y*R+M*k+x*ve+_*he,s[3]=E*P+w*b+T*Z+U*H,s[7]=E*L+w*F+T*se+U*$,s[11]=E*z+w*q+T*ae+U*J,s[15]=E*R+w*k+T*ve+U*he,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],l=e[1],c=e[5],u=e[9],h=e[13],d=e[2],p=e[6],m=e[10],v=e[14],y=e[3],M=e[7],x=e[11],_=e[15];return y*(+s*u*p-i*h*p-s*c*m+n*h*m+i*c*v-n*u*v)+M*(+t*u*v-t*h*m+s*l*m-i*l*v+i*h*d-s*u*d)+x*(+t*h*p-t*c*v-s*l*p+n*l*v+s*c*d-n*h*d)+_*(-i*c*d-t*u*p+t*c*m+i*l*p-n*l*m+n*u*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=e[9],m=e[10],v=e[11],y=e[12],M=e[13],x=e[14],_=e[15],E=p*x*h-M*m*h+M*u*v-c*x*v-p*u*_+c*m*_,w=y*m*h-d*x*h-y*u*v+l*x*v+d*u*_-l*m*_,T=d*M*h-y*p*h+y*c*v-l*M*v-d*c*_+l*p*_,U=y*p*u-d*M*u-y*c*m+l*M*m+d*c*x-l*p*x,P=t*E+n*w+i*T+s*U;if(P===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const L=1/P;return e[0]=E*L,e[1]=(M*m*s-p*x*s-M*i*v+n*x*v+p*i*_-n*m*_)*L,e[2]=(c*x*s-M*u*s+M*i*h-n*x*h-c*i*_+n*u*_)*L,e[3]=(p*u*s-c*m*s-p*i*h+n*m*h+c*i*v-n*u*v)*L,e[4]=w*L,e[5]=(d*x*s-y*m*s+y*i*v-t*x*v-d*i*_+t*m*_)*L,e[6]=(y*u*s-l*x*s-y*i*h+t*x*h+l*i*_-t*u*_)*L,e[7]=(l*m*s-d*u*s+d*i*h-t*m*h-l*i*v+t*u*v)*L,e[8]=T*L,e[9]=(y*p*s-d*M*s-y*n*v+t*M*v+d*n*_-t*p*_)*L,e[10]=(l*M*s-y*c*s+y*n*h-t*M*h-l*n*_+t*c*_)*L,e[11]=(d*c*s-l*p*s-d*n*h+t*p*h+l*n*v-t*c*v)*L,e[12]=U*L,e[13]=(d*M*i-y*p*i+y*n*m-t*M*m-d*n*x+t*p*x)*L,e[14]=(y*c*i-l*M*i-y*n*u+t*M*u+l*n*x-t*c*x)*L,e[15]=(l*p*i-d*c*i+d*n*u-t*p*u-l*n*m+t*c*m)*L,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,l=e.x,c=e.y,u=e.z,h=s*l,d=s*c;return this.set(h*l+n,h*c-i*u,h*u+i*c,0,h*c+i*u,d*c+n,d*u-i*l,0,h*u-i*c,d*u+i*l,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,l){return this.set(1,n,s,0,e,1,l,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,l=t._y,c=t._z,u=t._w,h=s+s,d=l+l,p=c+c,m=s*h,v=s*d,y=s*p,M=l*d,x=l*p,_=c*p,E=u*h,w=u*d,T=u*p,U=n.x,P=n.y,L=n.z;return i[0]=(1-(M+_))*U,i[1]=(v+T)*U,i[2]=(y-w)*U,i[3]=0,i[4]=(v-T)*P,i[5]=(1-(m+_))*P,i[6]=(x+E)*P,i[7]=0,i[8]=(y+w)*L,i[9]=(x-E)*L,i[10]=(1-(m+M))*L,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Hs.set(i[0],i[1],i[2]).length();const l=Hs.set(i[4],i[5],i[6]).length(),c=Hs.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],_i.copy(this);const h=1/s,d=1/l,p=1/c;return _i.elements[0]*=h,_i.elements[1]*=h,_i.elements[2]*=h,_i.elements[4]*=d,_i.elements[5]*=d,_i.elements[6]*=d,_i.elements[8]*=p,_i.elements[9]*=p,_i.elements[10]*=p,t.setFromRotationMatrix(_i),n.x=s,n.y=l,n.z=c,this}makePerspective(e,t,n,i,s,l,c=Fi){const u=this.elements,h=2*s/(t-e),d=2*s/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let v,y;if(c===Fi)v=-(l+s)/(l-s),y=-2*l*s/(l-s);else if(c===ba)v=-l/(l-s),y=-l*s/(l-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=d,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=v,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,l,c=Fi){const u=this.elements,h=1/(t-e),d=1/(n-i),p=1/(l-s),m=(t+e)*h,v=(n+i)*d;let y,M;if(c===Fi)y=(l+s)*p,M=-2*p;else if(c===ba)y=s*p,M=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*d,u[9]=0,u[13]=-v,u[2]=0,u[6]=0,u[10]=M,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Hs=new D,_i=new Ke,LS=new D(0,0,0),NS=new D(1,1,1),wr=new D,$l=new D,Kn=new D,Ym=new Ke,jm=new Hn;class ni{constructor(e=0,t=0,n=0,i=ni.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],l=i[4],c=i[8],u=i[1],h=i[5],d=i[9],p=i[2],m=i[6],v=i[10];switch(t){case"XYZ":this._y=Math.asin(Yt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,v),this._z=Math.atan2(-l,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Yt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(Yt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,v),this._z=Math.atan2(-l,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-Yt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,v),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-l,h));break;case"YZX":this._z=Math.asin(Yt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-d,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-Yt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-d,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Ym.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Ym,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return jm.setFromEuler(this),this.setFromQuaternion(jm,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ni.DEFAULT_ORDER="XYZ";class ms{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let DS=0;const Zm=new D,Vs=new Hn,Ki=new Ke,ec=new D,Jo=new D,US=new D,OS=new Hn,Jm=new D(1,0,0),Km=new D(0,1,0),Qm=new D(0,0,1),$m={type:"added"},FS={type:"removed"},Gs={type:"childadded",child:null},Gh={type:"childremoved",child:null};class wt extends cr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:DS++}),this.uuid=ti(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=wt.DEFAULT_UP.clone();const e=new D,t=new ni,n=new Hn,i=new D(1,1,1);function s(){n.setFromEuler(t,!1)}function l(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Ke},normalMatrix:{value:new lt}}),this.matrix=new Ke,this.matrixWorld=new Ke,this.matrixAutoUpdate=wt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=wt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new ms,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Vs.setFromAxisAngle(e,t),this.quaternion.multiply(Vs),this}rotateOnWorldAxis(e,t){return Vs.setFromAxisAngle(e,t),this.quaternion.premultiply(Vs),this}rotateX(e){return this.rotateOnAxis(Jm,e)}rotateY(e){return this.rotateOnAxis(Km,e)}rotateZ(e){return this.rotateOnAxis(Qm,e)}translateOnAxis(e,t){return Zm.copy(e).applyQuaternion(this.quaternion),this.position.add(Zm.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Jm,e)}translateY(e){return this.translateOnAxis(Km,e)}translateZ(e){return this.translateOnAxis(Qm,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Ki.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?ec.copy(e):ec.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Jo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ki.lookAt(Jo,ec,this.up):Ki.lookAt(ec,Jo,this.up),this.quaternion.setFromRotationMatrix(Ki),i&&(Ki.extractRotation(i.matrixWorld),Vs.setFromRotationMatrix(Ki),this.quaternion.premultiply(Vs.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent($m),Gs.child=e,this.dispatchEvent(Gs),Gs.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(FS),Gh.child=e,this.dispatchEvent(Gh),Gh.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Ki.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ki.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ki),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent($m),Gs.child=e,this.dispatchEvent(Gs),Gs.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(e,t);if(l!==void 0)return l}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let s=0,l=i.length;s<l;s++)i[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Jo,e,US),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Jo,OS,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,l=i.length;s<l;s++){const c=i[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),i.maxGeometryCount=this._maxGeometryCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,d=u.length;h<d;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=l(e.geometries),u=l(e.materials),h=l(e.textures),d=l(e.images),p=l(e.shapes),m=l(e.skeletons),v=l(e.animations),y=l(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),d.length>0&&(n.images=d),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),v.length>0&&(n.animations=v),y.length>0&&(n.nodes=y)}return n.object=i,n;function l(c){const u=[];for(const h in c){const d=c[h];delete d.metadata,u.push(d)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}wt.DEFAULT_UP=new D(0,1,0);wt.DEFAULT_MATRIX_AUTO_UPDATE=!0;wt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const yi=new D,Qi=new D,Wh=new D,$i=new D,Ws=new D,Xs=new D,eg=new D,Xh=new D,qh=new D,Yh=new D;class $n{constructor(e=new D,t=new D,n=new D){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),yi.subVectors(e,t),i.cross(yi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){yi.subVectors(i,t),Qi.subVectors(n,t),Wh.subVectors(e,t);const l=yi.dot(yi),c=yi.dot(Qi),u=yi.dot(Wh),h=Qi.dot(Qi),d=Qi.dot(Wh),p=l*h-c*c;if(p===0)return s.set(0,0,0),null;const m=1/p,v=(h*u-c*d)*m,y=(l*d-c*u)*m;return s.set(1-v-y,y,v)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,$i)===null?!1:$i.x>=0&&$i.y>=0&&$i.x+$i.y<=1}static getInterpolation(e,t,n,i,s,l,c,u){return this.getBarycoord(e,t,n,i,$i)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(s,$i.x),u.addScaledVector(l,$i.y),u.addScaledVector(c,$i.z),u)}static isFrontFacing(e,t,n,i){return yi.subVectors(n,t),Qi.subVectors(e,t),yi.cross(Qi).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return yi.subVectors(this.c,this.b),Qi.subVectors(this.a,this.b),yi.cross(Qi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return $n.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return $n.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,s){return $n.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return $n.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return $n.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let l,c;Ws.subVectors(i,n),Xs.subVectors(s,n),Xh.subVectors(e,n);const u=Ws.dot(Xh),h=Xs.dot(Xh);if(u<=0&&h<=0)return t.copy(n);qh.subVectors(e,i);const d=Ws.dot(qh),p=Xs.dot(qh);if(d>=0&&p<=d)return t.copy(i);const m=u*p-d*h;if(m<=0&&u>=0&&d<=0)return l=u/(u-d),t.copy(n).addScaledVector(Ws,l);Yh.subVectors(e,s);const v=Ws.dot(Yh),y=Xs.dot(Yh);if(y>=0&&v<=y)return t.copy(s);const M=v*h-u*y;if(M<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(n).addScaledVector(Xs,c);const x=d*y-v*p;if(x<=0&&p-d>=0&&v-y>=0)return eg.subVectors(s,i),c=(p-d)/(p-d+(v-y)),t.copy(i).addScaledVector(eg,c);const _=1/(x+M+m);return l=M*_,c=m*_,t.copy(n).addScaledVector(Ws,l).addScaledVector(Xs,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Zv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Er={h:0,s:0,l:0},tc={h:0,s:0,l:0};function jh(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class Le{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=fi){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,bt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=bt.workingColorSpace){return this.r=e,this.g=t,this.b=n,bt.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=bt.workingColorSpace){if(e=Nd(e,1),t=Yt(t,0,1),n=Yt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,l=2*n-s;this.r=jh(l,s,e+1/3),this.g=jh(l,s,e),this.b=jh(l,s,e-1/3)}return bt.toWorkingColorSpace(this,i),this}setStyle(e,t=fi){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],l=s.length;if(l===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(l===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=fi){const n=Zv[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=go(e.r),this.g=go(e.g),this.b=go(e.b),this}copyLinearToSRGB(e){return this.r=Uh(e.r),this.g=Uh(e.g),this.b=Uh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=fi){return bt.fromWorkingColorSpace(Mn.copy(this),e),Math.round(Yt(Mn.r*255,0,255))*65536+Math.round(Yt(Mn.g*255,0,255))*256+Math.round(Yt(Mn.b*255,0,255))}getHexString(e=fi){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=bt.workingColorSpace){bt.fromWorkingColorSpace(Mn.copy(this),t);const n=Mn.r,i=Mn.g,s=Mn.b,l=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const d=(c+l)/2;if(c===l)u=0,h=0;else{const p=l-c;switch(h=d<=.5?p/(l+c):p/(2-l-c),l){case n:u=(i-s)/p+(i<s?6:0);break;case i:u=(s-n)/p+2;break;case s:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=d,e}getRGB(e,t=bt.workingColorSpace){return bt.fromWorkingColorSpace(Mn.copy(this),t),e.r=Mn.r,e.g=Mn.g,e.b=Mn.b,e}getStyle(e=fi){bt.fromWorkingColorSpace(Mn.copy(this),e);const t=Mn.r,n=Mn.g,i=Mn.b;return e!==fi?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Er),this.setHSL(Er.h+e,Er.s+t,Er.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Er),e.getHSL(tc);const n=ha(Er.h,tc.h,t),i=ha(Er.s,tc.s,t),s=ha(Er.l,tc.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Mn=new Le;Le.NAMES=Zv;let zS=0;class mn extends cr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:zS++}),this.uuid=ti(),this.name="",this.type="Material",this.blending=fs,this.side=sr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=jc,this.blendDst=Zc,this.blendEquation=Rr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Le(0,0,0),this.blendAlpha=0,this.depthFunc=pa,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=od,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=rs,this.stencilZFail=rs,this.stencilZPass=rs,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==fs&&(n.blending=this.blending),this.side!==sr&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==jc&&(n.blendSrc=this.blendSrc),this.blendDst!==Zc&&(n.blendDst=this.blendDst),this.blendEquation!==Rr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==pa&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==od&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==rs&&(n.stencilFail=this.stencilFail),this.stencilZFail!==rs&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==rs&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const l=[];for(const c in s){const u=s[c];delete u.metadata,l.push(u)}return l}if(t){const s=i(e.textures),l=i(e.images);s.length>0&&(n.textures=s),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Dr extends mn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ni,this.combine=Fa,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const nr=BS();function BS(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,d=0;for(;!(h&8388608);)h<<=1,d-=8388608;h&=-8388609,d+=947912704,s[u]=h|d}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)l[u]=u<<23;l[31]=1199570944,l[32]=2147483648;for(let u=33;u<63;++u)l[u]=2147483648+(u-32<<23);l[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:l,offsetTable:c}}function Bn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=Yt(r,-65504,65504),nr.floatView[0]=r;const e=nr.uint32View[0],t=e>>23&511;return nr.baseTable[t]+((e&8388607)>>nr.shiftTable[t])}function aa(r){const e=r>>10;return nr.uint32View[0]=nr.mantissaTable[nr.offsetTable[e]+(r&1023)]+nr.exponentTable[e],nr.floatView[0]}const kS={toHalfFloat:Bn,fromHalfFloat:aa},Qt=new D,nc=new ue;class Rt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Ta,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=pi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return qv("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)nc.fromBufferAttribute(this,t),nc.applyMatrix3(e),this.setXY(t,nc.x,nc.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Qt.fromBufferAttribute(this,t),Qt.applyMatrix3(e),this.setXYZ(t,Qt.x,Qt.y,Qt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Qt.fromBufferAttribute(this,t),Qt.applyMatrix4(e),this.setXYZ(t,Qt.x,Qt.y,Qt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Qt.fromBufferAttribute(this,t),Qt.applyNormalMatrix(e),this.setXYZ(t,Qt.x,Qt.y,Qt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Qt.fromBufferAttribute(this,t),Qt.transformDirection(e),this.setXYZ(t,Qt.x,Qt.y,Qt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=In(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ct(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=In(t,this.array)),t}setX(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=In(t,this.array)),t}setY(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=In(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=In(t,this.array)),t}setW(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array),s=ct(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Ta&&(e.usage=this.usage),e}}class HS extends Rt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class VS extends Rt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class GS extends Rt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class WS extends Rt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Ud extends Rt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class XS extends Rt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Od extends Rt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class qS extends Rt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=aa(this.array[e*this.itemSize]);return this.normalized&&(t=In(t,this.array)),t}setX(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize]=Bn(t),this}getY(e){let t=aa(this.array[e*this.itemSize+1]);return this.normalized&&(t=In(t,this.array)),t}setY(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+1]=Bn(t),this}getZ(e){let t=aa(this.array[e*this.itemSize+2]);return this.normalized&&(t=In(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+2]=Bn(t),this}getW(e){let t=aa(this.array[e*this.itemSize+3]);return this.normalized&&(t=In(t,this.array)),t}setW(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+3]=Bn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array)),this.array[e+0]=Bn(t),this.array[e+1]=Bn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array)),this.array[e+0]=Bn(t),this.array[e+1]=Bn(n),this.array[e+2]=Bn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array),s=ct(s,this.array)),this.array[e+0]=Bn(t),this.array[e+1]=Bn(n),this.array[e+2]=Bn(i),this.array[e+3]=Bn(s),this}}class ze extends Rt{constructor(e,t,n){super(new Float32Array(e),t,n)}}let YS=0;const hi=new Ke,Zh=new wt,qs=new D,Qn=new Nn,Ko=new Nn,un=new D;class ht extends cr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:YS++}),this.uuid=ti(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Wv(e)?Od:Ud)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new lt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return hi.makeRotationFromQuaternion(e),this.applyMatrix4(hi),this}rotateX(e){return hi.makeRotationX(e),this.applyMatrix4(hi),this}rotateY(e){return hi.makeRotationY(e),this.applyMatrix4(hi),this}rotateZ(e){return hi.makeRotationZ(e),this.applyMatrix4(hi),this}translate(e,t,n){return hi.makeTranslation(e,t,n),this.applyMatrix4(hi),this}scale(e,t,n){return hi.makeScale(e,t,n),this.applyMatrix4(hi),this}lookAt(e){return Zh.lookAt(e),Zh.updateMatrix(),this.applyMatrix4(Zh.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(qs).negate(),this.translate(qs.x,qs.y,qs.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new ze(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Nn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new D(-1/0,-1/0,-1/0),new D(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];Qn.setFromBufferAttribute(s),this.morphTargetsRelative?(un.addVectors(this.boundingBox.min,Qn.min),this.boundingBox.expandByPoint(un),un.addVectors(this.boundingBox.max,Qn.max),this.boundingBox.expandByPoint(un)):(this.boundingBox.expandByPoint(Qn.min),this.boundingBox.expandByPoint(Qn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new En);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new D,1/0);return}if(e){const n=this.boundingSphere.center;if(Qn.setFromBufferAttribute(e),t)for(let s=0,l=t.length;s<l;s++){const c=t[s];Ko.setFromBufferAttribute(c),this.morphTargetsRelative?(un.addVectors(Qn.min,Ko.min),Qn.expandByPoint(un),un.addVectors(Qn.max,Ko.max),Qn.expandByPoint(un)):(Qn.expandByPoint(Ko.min),Qn.expandByPoint(Ko.max))}Qn.getCenter(n);let i=0;for(let s=0,l=e.count;s<l;s++)un.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(un));if(t)for(let s=0,l=t.length;s<l;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,d=c.count;h<d;h++)un.fromBufferAttribute(c,h),u&&(qs.fromBufferAttribute(e,h),un.add(qs)),i=Math.max(i,n.distanceToSquared(un))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Rt(new Float32Array(4*n.count),4));const l=this.getAttribute("tangent"),c=[],u=[];for(let z=0;z<n.count;z++)c[z]=new D,u[z]=new D;const h=new D,d=new D,p=new D,m=new ue,v=new ue,y=new ue,M=new D,x=new D;function _(z,R,b){h.fromBufferAttribute(n,z),d.fromBufferAttribute(n,R),p.fromBufferAttribute(n,b),m.fromBufferAttribute(s,z),v.fromBufferAttribute(s,R),y.fromBufferAttribute(s,b),d.sub(h),p.sub(h),v.sub(m),y.sub(m);const F=1/(v.x*y.y-y.x*v.y);isFinite(F)&&(M.copy(d).multiplyScalar(y.y).addScaledVector(p,-v.y).multiplyScalar(F),x.copy(p).multiplyScalar(v.x).addScaledVector(d,-y.x).multiplyScalar(F),c[z].add(M),c[R].add(M),c[b].add(M),u[z].add(x),u[R].add(x),u[b].add(x))}let E=this.groups;E.length===0&&(E=[{start:0,count:e.count}]);for(let z=0,R=E.length;z<R;++z){const b=E[z],F=b.start,q=b.count;for(let k=F,Z=F+q;k<Z;k+=3)_(e.getX(k+0),e.getX(k+1),e.getX(k+2))}const w=new D,T=new D,U=new D,P=new D;function L(z){U.fromBufferAttribute(i,z),P.copy(U);const R=c[z];w.copy(R),w.sub(U.multiplyScalar(U.dot(R))).normalize(),T.crossVectors(P,R);const F=T.dot(u[z])<0?-1:1;l.setXYZW(z,w.x,w.y,w.z,F)}for(let z=0,R=E.length;z<R;++z){const b=E[z],F=b.start,q=b.count;for(let k=F,Z=F+q;k<Z;k+=3)L(e.getX(k+0)),L(e.getX(k+1)),L(e.getX(k+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Rt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,v=n.count;m<v;m++)n.setXYZ(m,0,0,0);const i=new D,s=new D,l=new D,c=new D,u=new D,h=new D,d=new D,p=new D;if(e)for(let m=0,v=e.count;m<v;m+=3){const y=e.getX(m+0),M=e.getX(m+1),x=e.getX(m+2);i.fromBufferAttribute(t,y),s.fromBufferAttribute(t,M),l.fromBufferAttribute(t,x),d.subVectors(l,s),p.subVectors(i,s),d.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,M),h.fromBufferAttribute(n,x),c.add(d),u.add(d),h.add(d),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(M,u.x,u.y,u.z),n.setXYZ(x,h.x,h.y,h.z)}else for(let m=0,v=t.count;m<v;m+=3)i.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),l.fromBufferAttribute(t,m+2),d.subVectors(l,s),p.subVectors(i,s),d.cross(p),n.setXYZ(m+0,d.x,d.y,d.z),n.setXYZ(m+1,d.x,d.y,d.z),n.setXYZ(m+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)un.fromBufferAttribute(e,t),un.normalize(),e.setXYZ(t,un.x,un.y,un.z)}toNonIndexed(){function e(c,u){const h=c.array,d=c.itemSize,p=c.normalized,m=new h.constructor(u.length*d);let v=0,y=0;for(let M=0,x=u.length;M<x;M++){c.isInterleavedBufferAttribute?v=u[M]*c.data.stride+c.offset:v=u[M]*d;for(let _=0;_<d;_++)m[y++]=h[v++]}return new Rt(m,d,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ht,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let d=0,p=h.length;d<p;d++){const m=h[d],v=e(m,n);u.push(v)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,u=l.length;c<u;c++){const h=l[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],d=[];for(let p=0,m=h.length;p<m;p++){const v=h[p];d.push(v.toJSON(e.data))}d.length>0&&(i[u]=d,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const d=i[h];this.setAttribute(h,d.clone(t))}const s=e.morphAttributes;for(const h in s){const d=[],p=s[h];for(let m=0,v=p.length;m<v;m++)d.push(p[m].clone(t));this.morphAttributes[h]=d}this.morphTargetsRelative=e.morphTargetsRelative;const l=e.groups;for(let h=0,d=l.length;h<d;h++){const p=l[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const tg=new Ke,jr=new Eo,ic=new En,ng=new D,Ys=new D,js=new D,Zs=new D,Jh=new D,rc=new D,sc=new ue,oc=new ue,ac=new ue,ig=new D,rg=new D,sg=new D,lc=new D,cc=new D;class en extends wt{constructor(e=new ht,t=new Dr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,l=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){rc.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const d=c[u],p=s[u];d!==0&&(Jh.fromBufferAttribute(p,e),l?rc.addScaledVector(Jh,d):rc.addScaledVector(Jh.sub(t),d))}t.add(rc)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),ic.copy(n.boundingSphere),ic.applyMatrix4(s),jr.copy(e.ray).recast(e.near),!(ic.containsPoint(jr.origin)===!1&&(jr.intersectSphere(ic,ng)===null||jr.origin.distanceToSquared(ng)>(e.far-e.near)**2))&&(tg.copy(s).invert(),jr.copy(e.ray).applyMatrix4(tg),!(n.boundingBox!==null&&jr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,jr)))}_computeIntersections(e,t,n){let i;const s=this.geometry,l=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,d=s.attributes.uv1,p=s.attributes.normal,m=s.groups,v=s.drawRange;if(c!==null)if(Array.isArray(l))for(let y=0,M=m.length;y<M;y++){const x=m[y],_=l[x.materialIndex],E=Math.max(x.start,v.start),w=Math.min(c.count,Math.min(x.start+x.count,v.start+v.count));for(let T=E,U=w;T<U;T+=3){const P=c.getX(T),L=c.getX(T+1),z=c.getX(T+2);i=uc(this,_,e,n,h,d,p,P,L,z),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,v.start),M=Math.min(c.count,v.start+v.count);for(let x=y,_=M;x<_;x+=3){const E=c.getX(x),w=c.getX(x+1),T=c.getX(x+2);i=uc(this,l,e,n,h,d,p,E,w,T),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(l))for(let y=0,M=m.length;y<M;y++){const x=m[y],_=l[x.materialIndex],E=Math.max(x.start,v.start),w=Math.min(u.count,Math.min(x.start+x.count,v.start+v.count));for(let T=E,U=w;T<U;T+=3){const P=T,L=T+1,z=T+2;i=uc(this,_,e,n,h,d,p,P,L,z),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,v.start),M=Math.min(u.count,v.start+v.count);for(let x=y,_=M;x<_;x+=3){const E=x,w=x+1,T=x+2;i=uc(this,l,e,n,h,d,p,E,w,T),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}}}function jS(r,e,t,n,i,s,l,c){let u;if(e.side===Ln?u=n.intersectTriangle(l,s,i,!0,c):u=n.intersectTriangle(i,s,l,e.side===sr,c),u===null)return null;cc.copy(c),cc.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(cc);return h<t.near||h>t.far?null:{distance:h,point:cc.clone(),object:r}}function uc(r,e,t,n,i,s,l,c,u,h){r.getVertexPosition(c,Ys),r.getVertexPosition(u,js),r.getVertexPosition(h,Zs);const d=jS(r,e,t,n,Ys,js,Zs,lc);if(d){i&&(sc.fromBufferAttribute(i,c),oc.fromBufferAttribute(i,u),ac.fromBufferAttribute(i,h),d.uv=$n.getInterpolation(lc,Ys,js,Zs,sc,oc,ac,new ue)),s&&(sc.fromBufferAttribute(s,c),oc.fromBufferAttribute(s,u),ac.fromBufferAttribute(s,h),d.uv1=$n.getInterpolation(lc,Ys,js,Zs,sc,oc,ac,new ue)),l&&(ig.fromBufferAttribute(l,c),rg.fromBufferAttribute(l,u),sg.fromBufferAttribute(l,h),d.normal=$n.getInterpolation(lc,Ys,js,Zs,ig,rg,sg,new D),d.normal.dot(n.direction)>0&&d.normal.multiplyScalar(-1));const p={a:c,b:u,c:h,normal:new D,materialIndex:0};$n.getNormal(Ys,js,Zs,p.normal),d.face=p}return d}class xs extends ht{constructor(e=1,t=1,n=1,i=1,s=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:l};const c=this;i=Math.floor(i),s=Math.floor(s),l=Math.floor(l);const u=[],h=[],d=[],p=[];let m=0,v=0;y("z","y","x",-1,-1,n,t,e,l,s,0),y("z","y","x",1,-1,n,t,-e,l,s,1),y("x","z","y",1,1,e,n,t,i,l,2),y("x","z","y",1,-1,e,n,-t,i,l,3),y("x","y","z",1,-1,e,t,n,i,s,4),y("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new ze(h,3)),this.setAttribute("normal",new ze(d,3)),this.setAttribute("uv",new ze(p,2));function y(M,x,_,E,w,T,U,P,L,z,R){const b=T/L,F=U/z,q=T/2,k=U/2,Z=P/2,se=L+1,ae=z+1;let ve=0,H=0;const $=new D;for(let J=0;J<ae;J++){const he=J*F-k;for(let Ie=0;Ie<se;Ie++){const Be=Ie*b-q;$[M]=Be*E,$[x]=he*w,$[_]=Z,h.push($.x,$.y,$.z),$[M]=0,$[x]=0,$[_]=P>0?1:-1,d.push($.x,$.y,$.z),p.push(Ie/L),p.push(1-J/z),ve+=1}}for(let J=0;J<z;J++)for(let he=0;he<L;he++){const Ie=m+he+se*J,Be=m+he+se*(J+1),ne=m+(he+1)+se*(J+1),pe=m+(he+1)+se*J;u.push(Ie,Be,pe),u.push(Be,ne,pe),H+=6}c.addGroup(v,H,R),v+=H,m+=ve}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xs(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function yo(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Pn(r){const e={};for(let t=0;t<r.length;t++){const n=yo(r[t]);for(const i in n)e[i]=n[i]}return e}function ZS(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function Jv(r){const e=r.getRenderTarget();return e===null?r.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:bt.workingColorSpace}const Kv={clone:yo,merge:Pn};var JS=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,KS=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class wi extends mn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=JS,this.fragmentShader=KS,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=yo(e.uniforms),this.uniformsGroups=ZS(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?t.uniforms[i]={type:"t",value:l.toJSON(e).uuid}:l&&l.isColor?t.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?t.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?t.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?t.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?t.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?t.uniforms[i]={type:"m4",value:l.toArray()}:t.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Ba extends wt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ke,this.projectionMatrix=new Ke,this.projectionMatrixInverse=new Ke,this.coordinateSystem=Fi}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Ar=new D,og=new ue,ag=new ue;class hn extends Ba{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=_o*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(ps*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return _o*2*Math.atan(Math.tan(ps*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){Ar.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Ar.x,Ar.y).multiplyScalar(-e/Ar.z),Ar.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Ar.x,Ar.y).multiplyScalar(-e/Ar.z)}getViewSize(e,t){return this.getViewBounds(e,og,ag),t.subVectors(ag,og)}setViewOffset(e,t,n,i,s,l){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(ps*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const u=l.fullWidth,h=l.fullHeight;s+=l.offsetX*i/u,t-=l.offsetY*n/h,i*=l.width/u,n*=l.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Js=-90,Ks=1;class Qv extends wt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new hn(Js,Ks,e,t);i.layers=this.layers,this.add(i);const s=new hn(Js,Ks,e,t);s.layers=this.layers,this.add(s);const l=new hn(Js,Ks,e,t);l.layers=this.layers,this.add(l);const c=new hn(Js,Ks,e,t);c.layers=this.layers,this.add(c);const u=new hn(Js,Ks,e,t);u.layers=this.layers,this.add(u);const h=new hn(Js,Ks,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,l,c,u]=t;for(const h of t)this.remove(h);if(e===Fi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===ba)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,l,c,u,h,d]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),v=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const M=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,l),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,u),e.setRenderTarget(n,4,i),e.render(t,h),n.texture.generateMipmaps=M,e.setRenderTarget(n,5,i),e.render(t,d),e.setRenderTarget(p,m,v),e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}}class ka extends Gt{constructor(e,t,n,i,s,l,c,u,h,d){e=e!==void 0?e:[],t=t!==void 0?t:or,super(e,t,n,i,s,l,c,u,h,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class $v extends Mi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new ka(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:$t}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new xs(5,5,5),s=new wi({name:"CubemapFromEquirect",uniforms:yo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Ln,blending:rr});s.uniforms.tEquirect.value=t;const l=new en(i,s),c=t.minFilter;return t.minFilter===Oi&&(t.minFilter=$t),new Qv(1,10,this).update(e,l),t.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let l=0;l<6;l++)e.setRenderTarget(this,l),e.clear(t,n,i);e.setRenderTarget(s)}}const Kh=new D,QS=new D,$S=new lt;class Cr{constructor(e=new D(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Kh.subVectors(n,t).cross(QS.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Kh),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||$S.getNormalMatrix(e),i=this.coplanarPoint(Kh).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Zr=new En,hc=new D;class Ha{constructor(e=new Cr,t=new Cr,n=new Cr,i=new Cr,s=new Cr,l=new Cr){this.planes=[e,t,n,i,s,l]}set(e,t,n,i,s,l){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(l),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Fi){const n=this.planes,i=e.elements,s=i[0],l=i[1],c=i[2],u=i[3],h=i[4],d=i[5],p=i[6],m=i[7],v=i[8],y=i[9],M=i[10],x=i[11],_=i[12],E=i[13],w=i[14],T=i[15];if(n[0].setComponents(u-s,m-h,x-v,T-_).normalize(),n[1].setComponents(u+s,m+h,x+v,T+_).normalize(),n[2].setComponents(u+l,m+d,x+y,T+E).normalize(),n[3].setComponents(u-l,m-d,x-y,T-E).normalize(),n[4].setComponents(u-c,m-p,x-M,T-w).normalize(),t===Fi)n[5].setComponents(u+c,m+p,x+M,T+w).normalize();else if(t===ba)n[5].setComponents(c,p,M,w).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Zr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Zr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Zr)}intersectsSprite(e){return Zr.center.set(0,0,0),Zr.radius=.7071067811865476,Zr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Zr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(hc.x=i.normal.x>0?e.max.x:e.min.x,hc.y=i.normal.y>0?e.max.y:e.min.y,hc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(hc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function e_(){let r=null,e=!1,t=null,n=null;function i(s,l){t(s,l),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function eM(r){const e=new WeakMap;function t(c,u){const h=c.array,d=c.usage,p=h.byteLength,m=r.createBuffer();r.bindBuffer(u,m),r.bufferData(u,h,d),c.onUploadCallback();let v;if(h instanceof Float32Array)v=r.FLOAT;else if(h instanceof Uint16Array)c.isFloat16BufferAttribute?v=r.HALF_FLOAT:v=r.UNSIGNED_SHORT;else if(h instanceof Int16Array)v=r.SHORT;else if(h instanceof Uint32Array)v=r.UNSIGNED_INT;else if(h instanceof Int32Array)v=r.INT;else if(h instanceof Int8Array)v=r.BYTE;else if(h instanceof Uint8Array)v=r.UNSIGNED_BYTE;else if(h instanceof Uint8ClampedArray)v=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:m,type:v,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version,size:p}}function n(c,u,h){const d=u.array,p=u._updateRange,m=u.updateRanges;if(r.bindBuffer(h,c),p.count===-1&&m.length===0&&r.bufferSubData(h,0,d),m.length!==0){for(let v=0,y=m.length;v<y;v++){const M=m[v];r.bufferSubData(h,M.start*d.BYTES_PER_ELEMENT,d,M.start,M.count)}u.clearUpdateRanges()}p.count!==-1&&(r.bufferSubData(h,p.offset*d.BYTES_PER_ELEMENT,d,p.offset,p.count),p.count=-1),u.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),e.get(c)}function s(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=e.get(c);u&&(r.deleteBuffer(u.buffer),e.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const d=e.get(c);(!d||d.version<c.version)&&e.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=e.get(c);if(h===void 0)e.set(c,t(c,u));else if(h.version<c.version){if(h.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(h.buffer,c,u),h.version=c.version}}return{get:i,remove:s,update:l}}class Ao extends ht{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,l=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,d=u+1,p=e/c,m=t/u,v=[],y=[],M=[],x=[];for(let _=0;_<d;_++){const E=_*m-l;for(let w=0;w<h;w++){const T=w*p-s;y.push(T,-E,0),M.push(0,0,1),x.push(w/c),x.push(1-_/u)}}for(let _=0;_<u;_++)for(let E=0;E<c;E++){const w=E+h*_,T=E+h*(_+1),U=E+1+h*(_+1),P=E+1+h*_;v.push(w,T,P),v.push(T,U,P)}this.setIndex(v),this.setAttribute("position",new ze(y,3)),this.setAttribute("normal",new ze(M,3)),this.setAttribute("uv",new ze(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ao(e.width,e.height,e.widthSegments,e.heightSegments)}}var tM=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,nM=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,iM=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,rM=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,sM=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,oM=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,aM=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,lM=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,cM=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,uM=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,hM=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,fM=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,dM=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,pM=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,mM=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,gM=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,vM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,_M=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,yM=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,xM=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,SM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,MM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,wM=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,EM=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,AM=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,TM=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,bM=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,CM=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,RM=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,PM=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,IM="gl_FragColor = linearToOutputTexel( gl_FragColor );",LM=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,NM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,DM=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,UM=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,OM=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,FM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,zM=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,BM=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,kM=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,HM=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,VM=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,GM=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,WM=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,XM=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,qM=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,YM=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,jM=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,ZM=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,JM=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,KM=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,QM=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,$M=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,e1=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,t1=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,n1=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,i1=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,r1=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,s1=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,o1=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,a1=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,l1=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,c1=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,u1=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,h1=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,f1=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,d1=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,p1=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[MORPHTARGETS_COUNT];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,m1=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,g1=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,v1=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
	#endif
	#ifdef MORPHTARGETS_TEXTURE
		#ifndef USE_INSTANCING_MORPH
			uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		#endif
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,_1=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,y1=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,x1=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,S1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,M1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,w1=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,E1=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,A1=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,T1=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,b1=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,C1=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,R1=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,P1=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,I1=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,L1=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,N1=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,D1=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,U1=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,O1=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,F1=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return shadow;
	}
#endif`,z1=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,B1=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,k1=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,H1=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,V1=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,G1=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,W1=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,X1=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,q1=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Y1=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,j1=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	float startCompression = 0.8 - 0.04;
	float desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min(color.r, min(color.g, color.b));
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max(color.r, max(color.g, color.b));
	if (peak < startCompression) return color;
	float d = 1. - startCompression;
	float newPeak = 1. - d * d / (peak + d - startCompression);
	color *= newPeak / peak;
	float g = 1. - 1. / (desaturation * (peak - newPeak) + 1.);
	return mix(color, newPeak * vec3(1, 1, 1), g);
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Z1=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,J1=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,K1=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Q1=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,$1=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,ew=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const tw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,nw=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,iw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,rw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,sw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,ow=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,aw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,lw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,cw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,uw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,hw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,fw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,dw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,pw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,mw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,gw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,_w=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,yw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,xw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Sw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Mw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,ww=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ew=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Aw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Tw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Cw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Rw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Pw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Iw=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Lw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Nw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Dw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ut={alphahash_fragment:tM,alphahash_pars_fragment:nM,alphamap_fragment:iM,alphamap_pars_fragment:rM,alphatest_fragment:sM,alphatest_pars_fragment:oM,aomap_fragment:aM,aomap_pars_fragment:lM,batching_pars_vertex:cM,batching_vertex:uM,begin_vertex:hM,beginnormal_vertex:fM,bsdfs:dM,iridescence_fragment:pM,bumpmap_pars_fragment:mM,clipping_planes_fragment:gM,clipping_planes_pars_fragment:vM,clipping_planes_pars_vertex:_M,clipping_planes_vertex:yM,color_fragment:xM,color_pars_fragment:SM,color_pars_vertex:MM,color_vertex:wM,common:EM,cube_uv_reflection_fragment:AM,defaultnormal_vertex:TM,displacementmap_pars_vertex:bM,displacementmap_vertex:CM,emissivemap_fragment:RM,emissivemap_pars_fragment:PM,colorspace_fragment:IM,colorspace_pars_fragment:LM,envmap_fragment:NM,envmap_common_pars_fragment:DM,envmap_pars_fragment:UM,envmap_pars_vertex:OM,envmap_physical_pars_fragment:jM,envmap_vertex:FM,fog_vertex:zM,fog_pars_vertex:BM,fog_fragment:kM,fog_pars_fragment:HM,gradientmap_pars_fragment:VM,lightmap_fragment:GM,lightmap_pars_fragment:WM,lights_lambert_fragment:XM,lights_lambert_pars_fragment:qM,lights_pars_begin:YM,lights_toon_fragment:ZM,lights_toon_pars_fragment:JM,lights_phong_fragment:KM,lights_phong_pars_fragment:QM,lights_physical_fragment:$M,lights_physical_pars_fragment:e1,lights_fragment_begin:t1,lights_fragment_maps:n1,lights_fragment_end:i1,logdepthbuf_fragment:r1,logdepthbuf_pars_fragment:s1,logdepthbuf_pars_vertex:o1,logdepthbuf_vertex:a1,map_fragment:l1,map_pars_fragment:c1,map_particle_fragment:u1,map_particle_pars_fragment:h1,metalnessmap_fragment:f1,metalnessmap_pars_fragment:d1,morphinstance_vertex:p1,morphcolor_vertex:m1,morphnormal_vertex:g1,morphtarget_pars_vertex:v1,morphtarget_vertex:_1,normal_fragment_begin:y1,normal_fragment_maps:x1,normal_pars_fragment:S1,normal_pars_vertex:M1,normal_vertex:w1,normalmap_pars_fragment:E1,clearcoat_normal_fragment_begin:A1,clearcoat_normal_fragment_maps:T1,clearcoat_pars_fragment:b1,iridescence_pars_fragment:C1,opaque_fragment:R1,packing:P1,premultiplied_alpha_fragment:I1,project_vertex:L1,dithering_fragment:N1,dithering_pars_fragment:D1,roughnessmap_fragment:U1,roughnessmap_pars_fragment:O1,shadowmap_pars_fragment:F1,shadowmap_pars_vertex:z1,shadowmap_vertex:B1,shadowmask_pars_fragment:k1,skinbase_vertex:H1,skinning_pars_vertex:V1,skinning_vertex:G1,skinnormal_vertex:W1,specularmap_fragment:X1,specularmap_pars_fragment:q1,tonemapping_fragment:Y1,tonemapping_pars_fragment:j1,transmission_fragment:Z1,transmission_pars_fragment:J1,uv_pars_fragment:K1,uv_pars_vertex:Q1,uv_vertex:$1,worldpos_vertex:ew,background_vert:tw,background_frag:nw,backgroundCube_vert:iw,backgroundCube_frag:rw,cube_vert:sw,cube_frag:ow,depth_vert:aw,depth_frag:lw,distanceRGBA_vert:cw,distanceRGBA_frag:uw,equirect_vert:hw,equirect_frag:fw,linedashed_vert:dw,linedashed_frag:pw,meshbasic_vert:mw,meshbasic_frag:gw,meshlambert_vert:vw,meshlambert_frag:_w,meshmatcap_vert:yw,meshmatcap_frag:xw,meshnormal_vert:Sw,meshnormal_frag:Mw,meshphong_vert:ww,meshphong_frag:Ew,meshphysical_vert:Aw,meshphysical_frag:Tw,meshtoon_vert:bw,meshtoon_frag:Cw,points_vert:Rw,points_frag:Pw,shadow_vert:Iw,shadow_frag:Lw,sprite_vert:Nw,sprite_frag:Dw},Ae={common:{diffuse:{value:new Le(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new lt},alphaMap:{value:null},alphaMapTransform:{value:new lt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new lt}},envmap:{envMap:{value:null},envMapRotation:{value:new lt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new lt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new lt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new lt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new lt},normalScale:{value:new ue(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new lt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new lt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new lt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new lt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Le(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Le(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new lt},alphaTest:{value:0},uvTransform:{value:new lt}},sprite:{diffuse:{value:new Le(16777215)},opacity:{value:1},center:{value:new ue(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new lt},alphaMap:{value:null},alphaMapTransform:{value:new lt},alphaTest:{value:0}}},Si={basic:{uniforms:Pn([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.fog]),vertexShader:ut.meshbasic_vert,fragmentShader:ut.meshbasic_frag},lambert:{uniforms:Pn([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.fog,Ae.lights,{emissive:{value:new Le(0)}}]),vertexShader:ut.meshlambert_vert,fragmentShader:ut.meshlambert_frag},phong:{uniforms:Pn([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.fog,Ae.lights,{emissive:{value:new Le(0)},specular:{value:new Le(1118481)},shininess:{value:30}}]),vertexShader:ut.meshphong_vert,fragmentShader:ut.meshphong_frag},standard:{uniforms:Pn([Ae.common,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.roughnessmap,Ae.metalnessmap,Ae.fog,Ae.lights,{emissive:{value:new Le(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ut.meshphysical_vert,fragmentShader:ut.meshphysical_frag},toon:{uniforms:Pn([Ae.common,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.gradientmap,Ae.fog,Ae.lights,{emissive:{value:new Le(0)}}]),vertexShader:ut.meshtoon_vert,fragmentShader:ut.meshtoon_frag},matcap:{uniforms:Pn([Ae.common,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.fog,{matcap:{value:null}}]),vertexShader:ut.meshmatcap_vert,fragmentShader:ut.meshmatcap_frag},points:{uniforms:Pn([Ae.points,Ae.fog]),vertexShader:ut.points_vert,fragmentShader:ut.points_frag},dashed:{uniforms:Pn([Ae.common,Ae.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ut.linedashed_vert,fragmentShader:ut.linedashed_frag},depth:{uniforms:Pn([Ae.common,Ae.displacementmap]),vertexShader:ut.depth_vert,fragmentShader:ut.depth_frag},normal:{uniforms:Pn([Ae.common,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,{opacity:{value:1}}]),vertexShader:ut.meshnormal_vert,fragmentShader:ut.meshnormal_frag},sprite:{uniforms:Pn([Ae.sprite,Ae.fog]),vertexShader:ut.sprite_vert,fragmentShader:ut.sprite_frag},background:{uniforms:{uvTransform:{value:new lt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ut.background_vert,fragmentShader:ut.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new lt}},vertexShader:ut.backgroundCube_vert,fragmentShader:ut.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ut.cube_vert,fragmentShader:ut.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ut.equirect_vert,fragmentShader:ut.equirect_frag},distanceRGBA:{uniforms:Pn([Ae.common,Ae.displacementmap,{referencePosition:{value:new D},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ut.distanceRGBA_vert,fragmentShader:ut.distanceRGBA_frag},shadow:{uniforms:Pn([Ae.lights,Ae.fog,{color:{value:new Le(0)},opacity:{value:1}}]),vertexShader:ut.shadow_vert,fragmentShader:ut.shadow_frag}};Si.physical={uniforms:Pn([Si.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new lt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new lt},clearcoatNormalScale:{value:new ue(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new lt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new lt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new lt},sheen:{value:0},sheenColor:{value:new Le(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new lt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new lt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new lt},transmissionSamplerSize:{value:new ue},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new lt},attenuationDistance:{value:0},attenuationColor:{value:new Le(0)},specularColor:{value:new Le(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new lt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new lt},anisotropyVector:{value:new ue},anisotropyMap:{value:null},anisotropyMapTransform:{value:new lt}}]),vertexShader:ut.meshphysical_vert,fragmentShader:ut.meshphysical_frag};const fc={r:0,b:0,g:0},Jr=new ni,Uw=new Ke;function Ow(r,e,t,n,i,s,l){const c=new Le(0);let u=s===!0?0:1,h,d,p=null,m=0,v=null;function y(x,_){let E=!1,w=_.isScene===!0?_.background:null;w&&w.isTexture&&(w=(_.backgroundBlurriness>0?t:e).get(w)),w===null?M(c,u):w&&w.isColor&&(M(w,1),E=!0);const T=r.xr.getEnvironmentBlendMode();T==="additive"?n.buffers.color.setClear(0,0,0,1,l):T==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(r.autoClear||E)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),w&&(w.isCubeTexture||w.mapping===Mo)?(d===void 0&&(d=new en(new xs(1,1,1),new wi({name:"BackgroundCubeMaterial",uniforms:yo(Si.backgroundCube.uniforms),vertexShader:Si.backgroundCube.vertexShader,fragmentShader:Si.backgroundCube.fragmentShader,side:Ln,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(U,P,L){this.matrixWorld.copyPosition(L.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(d)),Jr.copy(_.backgroundRotation),Jr.x*=-1,Jr.y*=-1,Jr.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(Jr.y*=-1,Jr.z*=-1),d.material.uniforms.envMap.value=w,d.material.uniforms.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,d.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,d.material.uniforms.backgroundRotation.value.setFromMatrix4(Uw.makeRotationFromEuler(Jr)),d.material.toneMapped=bt.getTransfer(w.colorSpace)!==Ot,(p!==w||m!==w.version||v!==r.toneMapping)&&(d.material.needsUpdate=!0,p=w,m=w.version,v=r.toneMapping),d.layers.enableAll(),x.unshift(d,d.geometry,d.material,0,0,null)):w&&w.isTexture&&(h===void 0&&(h=new en(new Ao(2,2),new wi({name:"BackgroundMaterial",uniforms:yo(Si.background.uniforms),vertexShader:Si.background.vertexShader,fragmentShader:Si.background.fragmentShader,side:sr,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=w,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.toneMapped=bt.getTransfer(w.colorSpace)!==Ot,w.matrixAutoUpdate===!0&&w.updateMatrix(),h.material.uniforms.uvTransform.value.copy(w.matrix),(p!==w||m!==w.version||v!==r.toneMapping)&&(h.material.needsUpdate=!0,p=w,m=w.version,v=r.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null))}function M(x,_){x.getRGB(fc,Jv(r)),n.buffers.color.setClear(fc.r,fc.g,fc.b,_,l)}return{getClearColor:function(){return c},setClearColor:function(x,_=1){c.set(x),u=_,M(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(x){u=x,M(c,u)},render:y}}function Fw(r,e){const t=r.getParameter(r.MAX_VERTEX_ATTRIBS),n={},i=m(null);let s=i,l=!1;function c(b,F,q,k,Z){let se=!1;const ae=p(k,q,F);s!==ae&&(s=ae,h(s.object)),se=v(b,k,q,Z),se&&y(b,k,q,Z),Z!==null&&e.update(Z,r.ELEMENT_ARRAY_BUFFER),(se||l)&&(l=!1,T(b,F,q,k),Z!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e.get(Z).buffer))}function u(){return r.createVertexArray()}function h(b){return r.bindVertexArray(b)}function d(b){return r.deleteVertexArray(b)}function p(b,F,q){const k=q.wireframe===!0;let Z=n[b.id];Z===void 0&&(Z={},n[b.id]=Z);let se=Z[F.id];se===void 0&&(se={},Z[F.id]=se);let ae=se[k];return ae===void 0&&(ae=m(u()),se[k]=ae),ae}function m(b){const F=[],q=[],k=[];for(let Z=0;Z<t;Z++)F[Z]=0,q[Z]=0,k[Z]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:F,enabledAttributes:q,attributeDivisors:k,object:b,attributes:{},index:null}}function v(b,F,q,k){const Z=s.attributes,se=F.attributes;let ae=0;const ve=q.getAttributes();for(const H in ve)if(ve[H].location>=0){const J=Z[H];let he=se[H];if(he===void 0&&(H==="instanceMatrix"&&b.instanceMatrix&&(he=b.instanceMatrix),H==="instanceColor"&&b.instanceColor&&(he=b.instanceColor)),J===void 0||J.attribute!==he||he&&J.data!==he.data)return!0;ae++}return s.attributesNum!==ae||s.index!==k}function y(b,F,q,k){const Z={},se=F.attributes;let ae=0;const ve=q.getAttributes();for(const H in ve)if(ve[H].location>=0){let J=se[H];J===void 0&&(H==="instanceMatrix"&&b.instanceMatrix&&(J=b.instanceMatrix),H==="instanceColor"&&b.instanceColor&&(J=b.instanceColor));const he={};he.attribute=J,J&&J.data&&(he.data=J.data),Z[H]=he,ae++}s.attributes=Z,s.attributesNum=ae,s.index=k}function M(){const b=s.newAttributes;for(let F=0,q=b.length;F<q;F++)b[F]=0}function x(b){_(b,0)}function _(b,F){const q=s.newAttributes,k=s.enabledAttributes,Z=s.attributeDivisors;q[b]=1,k[b]===0&&(r.enableVertexAttribArray(b),k[b]=1),Z[b]!==F&&(r.vertexAttribDivisor(b,F),Z[b]=F)}function E(){const b=s.newAttributes,F=s.enabledAttributes;for(let q=0,k=F.length;q<k;q++)F[q]!==b[q]&&(r.disableVertexAttribArray(q),F[q]=0)}function w(b,F,q,k,Z,se,ae){ae===!0?r.vertexAttribIPointer(b,F,q,Z,se):r.vertexAttribPointer(b,F,q,k,Z,se)}function T(b,F,q,k){M();const Z=k.attributes,se=q.getAttributes(),ae=F.defaultAttributeValues;for(const ve in se){const H=se[ve];if(H.location>=0){let $=Z[ve];if($===void 0&&(ve==="instanceMatrix"&&b.instanceMatrix&&($=b.instanceMatrix),ve==="instanceColor"&&b.instanceColor&&($=b.instanceColor)),$!==void 0){const J=$.normalized,he=$.itemSize,Ie=e.get($);if(Ie===void 0)continue;const Be=Ie.buffer,ne=Ie.type,pe=Ie.bytesPerElement,Ce=ne===r.INT||ne===r.UNSIGNED_INT||$.gpuType===wd;if($.isInterleavedBufferAttribute){const ye=$.data,et=ye.stride,st=$.offset;if(ye.isInstancedInterleavedBuffer){for(let Qe=0;Qe<H.locationSize;Qe++)_(H.location+Qe,ye.meshPerAttribute);b.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=ye.meshPerAttribute*ye.count)}else for(let Qe=0;Qe<H.locationSize;Qe++)x(H.location+Qe);r.bindBuffer(r.ARRAY_BUFFER,Be);for(let Qe=0;Qe<H.locationSize;Qe++)w(H.location+Qe,he/H.locationSize,ne,J,et*pe,(st+he/H.locationSize*Qe)*pe,Ce)}else{if($.isInstancedBufferAttribute){for(let ye=0;ye<H.locationSize;ye++)_(H.location+ye,$.meshPerAttribute);b.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=$.meshPerAttribute*$.count)}else for(let ye=0;ye<H.locationSize;ye++)x(H.location+ye);r.bindBuffer(r.ARRAY_BUFFER,Be);for(let ye=0;ye<H.locationSize;ye++)w(H.location+ye,he/H.locationSize,ne,J,he*pe,he/H.locationSize*ye*pe,Ce)}}else if(ae!==void 0){const J=ae[ve];if(J!==void 0)switch(J.length){case 2:r.vertexAttrib2fv(H.location,J);break;case 3:r.vertexAttrib3fv(H.location,J);break;case 4:r.vertexAttrib4fv(H.location,J);break;default:r.vertexAttrib1fv(H.location,J)}}}}E()}function U(){z();for(const b in n){const F=n[b];for(const q in F){const k=F[q];for(const Z in k)d(k[Z].object),delete k[Z];delete F[q]}delete n[b]}}function P(b){if(n[b.id]===void 0)return;const F=n[b.id];for(const q in F){const k=F[q];for(const Z in k)d(k[Z].object),delete k[Z];delete F[q]}delete n[b.id]}function L(b){for(const F in n){const q=n[F];if(q[b.id]===void 0)continue;const k=q[b.id];for(const Z in k)d(k[Z].object),delete k[Z];delete q[b.id]}}function z(){R(),l=!0,s!==i&&(s=i,h(s.object))}function R(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:z,resetDefaultState:R,dispose:U,releaseStatesOfGeometry:P,releaseStatesOfProgram:L,initAttributes:M,enableAttribute:x,disableUnusedAttributes:E}}function zw(r,e,t){let n;function i(u){n=u}function s(u,h){r.drawArrays(n,u,h),t.update(h,n,1)}function l(u,h,d){d!==0&&(r.drawArraysInstanced(n,u,h,d),t.update(h,n,d))}function c(u,h,d){if(d===0)return;const p=e.get("WEBGL_multi_draw");if(p===null)for(let m=0;m<d;m++)this.render(u[m],h[m]);else{p.multiDrawArraysWEBGL(n,u,0,h,0,d);let m=0;for(let v=0;v<d;v++)m+=h[v];t.update(m,n,1)}}this.setMode=i,this.render=s,this.renderInstances=l,this.renderMultiDraw=c}function Bw(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const w=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(w.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(w){if(w==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";w="mediump"}return w==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let l=t.precision!==void 0?t.precision:"highp";const c=s(l);c!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",c,"instead."),l=c);const u=t.logarithmicDepthBuffer===!0,h=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),d=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),p=r.getParameter(r.MAX_TEXTURE_SIZE),m=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),v=r.getParameter(r.MAX_VERTEX_ATTRIBS),y=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),M=r.getParameter(r.MAX_VARYING_VECTORS),x=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),_=d>0,E=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:i,getMaxPrecision:s,precision:l,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:d,maxTextureSize:p,maxCubemapSize:m,maxAttributes:v,maxVertexUniforms:y,maxVaryings:M,maxFragmentUniforms:x,vertexTextures:_,maxSamples:E}}function kw(r){const e=this;let t=null,n=0,i=!1,s=!1;const l=new Cr,c=new lt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const v=p.length!==0||m||n!==0||i;return i=m,n=p.length,v},this.beginShadows=function(){s=!0,d(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=d(p,m,0)},this.setState=function(p,m,v){const y=p.clippingPlanes,M=p.clipIntersection,x=p.clipShadows,_=r.get(p);if(!i||y===null||y.length===0||s&&!x)s?d(null):h();else{const E=s?0:n,w=E*4;let T=_.clippingState||null;u.value=T,T=d(y,m,w,v);for(let U=0;U!==w;++U)T[U]=t[U];_.clippingState=T,this.numIntersection=M?this.numPlanes:0,this.numPlanes+=E}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function d(p,m,v,y){const M=p!==null?p.length:0;let x=null;if(M!==0){if(x=u.value,y!==!0||x===null){const _=v+M*4,E=m.matrixWorldInverse;c.getNormalMatrix(E),(x===null||x.length<_)&&(x=new Float32Array(_));for(let w=0,T=v;w!==M;++w,T+=4)l.copy(p[w]).applyMatrix4(E,c),l.normal.toArray(x,T),x[T+3]=l.constant}u.value=x,u.needsUpdate=!0}return e.numPlanes=M,e.numIntersection=0,x}}function Hw(r){let e=new WeakMap;function t(l,c){return c===ma?l.mapping=or:c===ga&&(l.mapping=Ir),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===ma||c===ga)if(e.has(l)){const u=e.get(l).texture;return t(u,l.mapping)}else{const u=l.image;if(u&&u.height>0){const h=new $v(u.height);return h.fromEquirectangularTexture(r,l),e.set(l,h),l.addEventListener("dispose",i),t(h.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Va extends Ba{constructor(e=-1,t=1,n=1,i=-1,s=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=l,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,l=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,l=s+h*this.view.width,c-=d*this.view.offsetY,u=c-d*this.view.height}this.projectionMatrix.makeOrthographic(s,l,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const ho=4,lg=[.125,.215,.35,.446,.526,.582],os=20,Qh=new Va,cg=new Le;let $h=null,ef=0,tf=0,nf=!1;const ss=(1+Math.sqrt(5))/2,Qs=1/ss,ug=[new D(1,1,1),new D(-1,1,1),new D(1,1,-1),new D(-1,1,-1),new D(0,ss,Qs),new D(0,ss,-Qs),new D(Qs,0,ss),new D(-Qs,0,ss),new D(ss,Qs,0),new D(-ss,Qs,0)];class ld{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){$h=this._renderer.getRenderTarget(),ef=this._renderer.getActiveCubeFace(),tf=this._renderer.getActiveMipmapLevel(),nf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=dg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=fg(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget($h,ef,tf),this._renderer.xr.enabled=nf,e.scissorTest=!1,dc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===or||e.mapping===Ir?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),$h=this._renderer.getRenderTarget(),ef=this._renderer.getActiveCubeFace(),tf=this._renderer.getActiveMipmapLevel(),nf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:$t,minFilter:$t,generateMipmaps:!1,type:ya,format:kn,colorSpace:lr,depthBuffer:!1},i=hg(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=hg(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Vw(s)),this._blurMaterial=Gw(s,e,t)}return i}_compileMaterial(e){const t=new en(this._lodPlanes[0],e);this._renderer.compile(t,Qh)}_sceneToCubeUV(e,t,n,i){const c=new hn(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,p=d.autoClear,m=d.toneMapping;d.getClearColor(cg),d.toneMapping=zi,d.autoClear=!1;const v=new Dr({name:"PMREM.Background",side:Ln,depthWrite:!1,depthTest:!1}),y=new en(new xs,v);let M=!1;const x=e.background;x?x.isColor&&(v.color.copy(x),e.background=null,M=!0):(v.color.copy(cg),M=!0);for(let _=0;_<6;_++){const E=_%3;E===0?(c.up.set(0,u[_],0),c.lookAt(h[_],0,0)):E===1?(c.up.set(0,0,u[_]),c.lookAt(0,h[_],0)):(c.up.set(0,u[_],0),c.lookAt(0,0,h[_]));const w=this._cubeSize;dc(i,E*w,_>2?w:0,w,w),d.setRenderTarget(i),M&&d.render(y,c),d.render(e,c)}y.geometry.dispose(),y.material.dispose(),d.toneMapping=m,d.autoClear=p,e.background=x}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===or||e.mapping===Ir;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=dg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=fg());const s=i?this._cubemapMaterial:this._equirectMaterial,l=new en(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;dc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(l,Qh)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),l=ug[(i-1)%ug.length];this._blur(e,i-1,i,s,l)}t.autoClear=n}_blur(e,t,n,i,s){const l=this._pingPongRenderTarget;this._halfBlur(e,l,t,n,i,"latitudinal",s),this._halfBlur(l,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,l,c){const u=this._renderer,h=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,p=new en(this._lodPlanes[i],h),m=h.uniforms,v=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*v):2*Math.PI/(2*os-1),M=s/y,x=isFinite(s)?1+Math.floor(d*M):os;x>os&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${os}`);const _=[];let E=0;for(let L=0;L<os;++L){const z=L/M,R=Math.exp(-z*z/2);_.push(R),L===0?E+=R:L<x&&(E+=2*R)}for(let L=0;L<_.length;L++)_[L]=_[L]/E;m.envMap.value=e.texture,m.samples.value=x,m.weights.value=_,m.latitudinal.value=l==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:w}=this;m.dTheta.value=y,m.mipInt.value=w-n;const T=this._sizeLods[i],U=3*T*(i>w-ho?i-w+ho:0),P=4*(this._cubeSize-T);dc(t,U,P,3*T,2*T),u.setRenderTarget(t),u.render(p,Qh)}}function Vw(r){const e=[],t=[],n=[];let i=r;const s=r-ho+1+lg.length;for(let l=0;l<s;l++){const c=Math.pow(2,i);t.push(c);let u=1/c;l>r-ho?u=lg[l-r+ho-1]:l===0&&(u=0),n.push(u);const h=1/(c-2),d=-h,p=1+h,m=[d,d,p,d,p,p,d,d,p,p,d,p],v=6,y=6,M=3,x=2,_=1,E=new Float32Array(M*y*v),w=new Float32Array(x*y*v),T=new Float32Array(_*y*v);for(let P=0;P<v;P++){const L=P%3*2/3-1,z=P>2?0:-1,R=[L,z,0,L+2/3,z,0,L+2/3,z+1,0,L,z,0,L+2/3,z+1,0,L,z+1,0];E.set(R,M*y*P),w.set(m,x*y*P);const b=[P,P,P,P,P,P];T.set(b,_*y*P)}const U=new ht;U.setAttribute("position",new Rt(E,M)),U.setAttribute("uv",new Rt(w,x)),U.setAttribute("faceIndex",new Rt(T,_)),e.push(U),i>ho&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function hg(r,e,t){const n=new Mi(r,e,t);return n.texture.mapping=Mo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function dc(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function Gw(r,e,t){const n=new Float32Array(os),i=new D(0,1,0);return new wi({name:"SphericalGaussianBlur",defines:{n:os,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Fd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:rr,depthTest:!1,depthWrite:!1})}function fg(){return new wi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Fd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:rr,depthTest:!1,depthWrite:!1})}function dg(){return new wi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Fd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:rr,depthTest:!1,depthWrite:!1})}function Fd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Ww(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===ma||u===ga,d=u===or||u===Ir;if(h||d){let p=e.get(c);const m=p!==void 0?p.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==m)return t===null&&(t=new ld(r)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),p.texture;if(p!==void 0)return p.texture;{const v=c.image;return h&&v&&v.height>0||d&&v&&i(v)?(t===null&&(t=new ld(r)),p=h?t.fromEquirectangular(c):t.fromCubemap(c),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),c.addEventListener("dispose",s),p.texture):null}}}return c}function i(c){let u=0;const h=6;for(let d=0;d<h;d++)c[d]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function l(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:l}}function Xw(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function qw(r,e,t,n){const i={},s=new WeakMap;function l(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);for(const y in m.morphAttributes){const M=m.morphAttributes[y];for(let x=0,_=M.length;x<_;x++)e.remove(M[x])}m.removeEventListener("dispose",l),delete i[m.id];const v=s.get(m);v&&(e.remove(v),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",l),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const y in m)e.update(m[y],r.ARRAY_BUFFER);const v=p.morphAttributes;for(const y in v){const M=v[y];for(let x=0,_=M.length;x<_;x++)e.update(M[x],r.ARRAY_BUFFER)}}function h(p){const m=[],v=p.index,y=p.attributes.position;let M=0;if(v!==null){const E=v.array;M=v.version;for(let w=0,T=E.length;w<T;w+=3){const U=E[w+0],P=E[w+1],L=E[w+2];m.push(U,P,P,L,L,U)}}else if(y!==void 0){const E=y.array;M=y.version;for(let w=0,T=E.length/3-1;w<T;w+=3){const U=w+0,P=w+1,L=w+2;m.push(U,P,P,L,L,U)}}else return;const x=new(Wv(m)?Od:Ud)(m,1);x.version=M;const _=s.get(p);_&&e.remove(_),s.set(p,x)}function d(p){const m=s.get(p);if(m){const v=p.index;v!==null&&m.version<v.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:d}}function Yw(r,e,t){let n;function i(p){n=p}let s,l;function c(p){s=p.type,l=p.bytesPerElement}function u(p,m){r.drawElements(n,m,s,p*l),t.update(m,n,1)}function h(p,m,v){v!==0&&(r.drawElementsInstanced(n,m,s,p*l,v),t.update(m,n,v))}function d(p,m,v){if(v===0)return;const y=e.get("WEBGL_multi_draw");if(y===null)for(let M=0;M<v;M++)this.render(p[M]/l,m[M]);else{y.multiDrawElementsWEBGL(n,m,0,s,p,0,v);let M=0;for(let x=0;x<v;x++)M+=m[x];t.update(M,n,1)}}this.setMode=i,this.setIndex=c,this.render=u,this.renderInstances=h,this.renderMultiDraw=d}function jw(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,l,c){switch(t.calls++,l){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function Zw(r,e,t){const n=new WeakMap,i=new Ct;function s(l,c,u){const h=l.morphTargetInfluences,d=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,p=d!==void 0?d.length:0;let m=n.get(c);if(m===void 0||m.count!==p){let R=function(){L.dispose(),n.delete(c),c.removeEventListener("dispose",R)};m!==void 0&&m.texture.dispose();const v=c.morphAttributes.position!==void 0,y=c.morphAttributes.normal!==void 0,M=c.morphAttributes.color!==void 0,x=c.morphAttributes.position||[],_=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let w=0;v===!0&&(w=1),y===!0&&(w=2),M===!0&&(w=3);let T=c.attributes.position.count*w,U=1;T>e.maxTextureSize&&(U=Math.ceil(T/e.maxTextureSize),T=e.maxTextureSize);const P=new Float32Array(T*U*4*p),L=new su(P,T,U,p);L.type=pi,L.needsUpdate=!0;const z=w*4;for(let b=0;b<p;b++){const F=x[b],q=_[b],k=E[b],Z=T*U*4*b;for(let se=0;se<F.count;se++){const ae=se*z;v===!0&&(i.fromBufferAttribute(F,se),P[Z+ae+0]=i.x,P[Z+ae+1]=i.y,P[Z+ae+2]=i.z,P[Z+ae+3]=0),y===!0&&(i.fromBufferAttribute(q,se),P[Z+ae+4]=i.x,P[Z+ae+5]=i.y,P[Z+ae+6]=i.z,P[Z+ae+7]=0),M===!0&&(i.fromBufferAttribute(k,se),P[Z+ae+8]=i.x,P[Z+ae+9]=i.y,P[Z+ae+10]=i.z,P[Z+ae+11]=k.itemSize===4?i.w:1)}}m={count:p,texture:L,size:new ue(T,U)},n.set(c,m),c.addEventListener("dispose",R)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)u.getUniforms().setValue(r,"morphTexture",l.morphTexture,t);else{let v=0;for(let M=0;M<h.length;M++)v+=h[M];const y=c.morphTargetsRelative?1:1-v;u.getUniforms().setValue(r,"morphTargetBaseInfluence",y),u.getUniforms().setValue(r,"morphTargetInfluences",h)}u.getUniforms().setValue(r,"morphTargetsTexture",m.texture,t),u.getUniforms().setValue(r,"morphTargetsTextureSize",m.size)}return{update:s}}function Jw(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,d=u.geometry,p=e.get(u,d);if(i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),i.get(u)!==h&&(t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER),i.set(u,h))),u.isSkinnedMesh){const m=u.skeleton;i.get(m)!==h&&(m.update(),i.set(m,h))}return p}function l(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:l}}class zd extends Gt{constructor(e,t,n,i,s,l,c,u,h,d){if(d=d!==void 0?d:ds,d!==ds&&d!==vo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&d===ds&&(n=vs),n===void 0&&d===vo&&(n=wo),super(null,i,s,l,c,u,d,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:fn,this.minFilter=u!==void 0?u:fn,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const t_=new Gt,n_=new zd(1,1);n_.compareFunction=Ld;const i_=new su,r_=new Dd,s_=new ka,pg=[],mg=[],gg=new Float32Array(16),vg=new Float32Array(9),_g=new Float32Array(4);function To(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=pg[i];if(s===void 0&&(s=new Float32Array(i),pg[i]=s),e!==0){n.toArray(s,0);for(let l=1,c=0;l!==e;++l)c+=t,r[l].toArray(s,c)}return s}function nn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function rn(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function ou(r,e){let t=mg[e];t===void 0&&(t=new Int32Array(e),mg[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function Kw(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function Qw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(nn(t,e))return;r.uniform2fv(this.addr,e),rn(t,e)}}function $w(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(nn(t,e))return;r.uniform3fv(this.addr,e),rn(t,e)}}function eE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(nn(t,e))return;r.uniform4fv(this.addr,e),rn(t,e)}}function tE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(nn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),rn(t,e)}else{if(nn(t,n))return;_g.set(n),r.uniformMatrix2fv(this.addr,!1,_g),rn(t,n)}}function nE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(nn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),rn(t,e)}else{if(nn(t,n))return;vg.set(n),r.uniformMatrix3fv(this.addr,!1,vg),rn(t,n)}}function iE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(nn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),rn(t,e)}else{if(nn(t,n))return;gg.set(n),r.uniformMatrix4fv(this.addr,!1,gg),rn(t,n)}}function rE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function sE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(nn(t,e))return;r.uniform2iv(this.addr,e),rn(t,e)}}function oE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(nn(t,e))return;r.uniform3iv(this.addr,e),rn(t,e)}}function aE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(nn(t,e))return;r.uniform4iv(this.addr,e),rn(t,e)}}function lE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function cE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(nn(t,e))return;r.uniform2uiv(this.addr,e),rn(t,e)}}function uE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(nn(t,e))return;r.uniform3uiv(this.addr,e),rn(t,e)}}function hE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(nn(t,e))return;r.uniform4uiv(this.addr,e),rn(t,e)}}function fE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i);const s=this.type===r.SAMPLER_2D_SHADOW?n_:t_;t.setTexture2D(e||s,i)}function dE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||r_,i)}function pE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||s_,i)}function mE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||i_,i)}function gE(r){switch(r){case 5126:return Kw;case 35664:return Qw;case 35665:return $w;case 35666:return eE;case 35674:return tE;case 35675:return nE;case 35676:return iE;case 5124:case 35670:return rE;case 35667:case 35671:return sE;case 35668:case 35672:return oE;case 35669:case 35673:return aE;case 5125:return lE;case 36294:return cE;case 36295:return uE;case 36296:return hE;case 35678:case 36198:case 36298:case 36306:case 35682:return fE;case 35679:case 36299:case 36307:return dE;case 35680:case 36300:case 36308:case 36293:return pE;case 36289:case 36303:case 36311:case 36292:return mE}}function vE(r,e){r.uniform1fv(this.addr,e)}function _E(r,e){const t=To(e,this.size,2);r.uniform2fv(this.addr,t)}function yE(r,e){const t=To(e,this.size,3);r.uniform3fv(this.addr,t)}function xE(r,e){const t=To(e,this.size,4);r.uniform4fv(this.addr,t)}function SE(r,e){const t=To(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function ME(r,e){const t=To(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function wE(r,e){const t=To(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function EE(r,e){r.uniform1iv(this.addr,e)}function AE(r,e){r.uniform2iv(this.addr,e)}function TE(r,e){r.uniform3iv(this.addr,e)}function bE(r,e){r.uniform4iv(this.addr,e)}function CE(r,e){r.uniform1uiv(this.addr,e)}function RE(r,e){r.uniform2uiv(this.addr,e)}function PE(r,e){r.uniform3uiv(this.addr,e)}function IE(r,e){r.uniform4uiv(this.addr,e)}function LE(r,e,t){const n=this.cache,i=e.length,s=ou(t,i);nn(n,s)||(r.uniform1iv(this.addr,s),rn(n,s));for(let l=0;l!==i;++l)t.setTexture2D(e[l]||t_,s[l])}function NE(r,e,t){const n=this.cache,i=e.length,s=ou(t,i);nn(n,s)||(r.uniform1iv(this.addr,s),rn(n,s));for(let l=0;l!==i;++l)t.setTexture3D(e[l]||r_,s[l])}function DE(r,e,t){const n=this.cache,i=e.length,s=ou(t,i);nn(n,s)||(r.uniform1iv(this.addr,s),rn(n,s));for(let l=0;l!==i;++l)t.setTextureCube(e[l]||s_,s[l])}function UE(r,e,t){const n=this.cache,i=e.length,s=ou(t,i);nn(n,s)||(r.uniform1iv(this.addr,s),rn(n,s));for(let l=0;l!==i;++l)t.setTexture2DArray(e[l]||i_,s[l])}function OE(r){switch(r){case 5126:return vE;case 35664:return _E;case 35665:return yE;case 35666:return xE;case 35674:return SE;case 35675:return ME;case 35676:return wE;case 5124:case 35670:return EE;case 35667:case 35671:return AE;case 35668:case 35672:return TE;case 35669:case 35673:return bE;case 5125:return CE;case 36294:return RE;case 36295:return PE;case 36296:return IE;case 35678:case 36198:case 36298:case 36306:case 35682:return LE;case 35679:case 36299:case 36307:return NE;case 35680:case 36300:case 36308:case 36293:return DE;case 36289:case 36303:case 36311:case 36292:return UE}}class FE{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=gE(t.type)}}class zE{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=OE(t.type)}}class BE{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,l=i.length;s!==l;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const rf=/(\w+)(\])?(\[|\.)?/g;function yg(r,e){r.seq.push(e),r.map[e.id]=e}function kE(r,e,t){const n=r.name,i=n.length;for(rf.lastIndex=0;;){const s=rf.exec(n),l=rf.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&l+2===i){yg(t,h===void 0?new FE(c,r,e):new zE(c,r,e));break}else{let p=t.map[c];p===void 0&&(p=new BE(c),yg(t,p)),t=p}}}class qc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),l=e.getUniformLocation(t,s.name);kE(s,l,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,l=t.length;s!==l;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const l=e[i];l.id in t&&n.push(l)}return n}}function xg(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}const HE=37297;let VE=0;function GE(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let l=i;l<s;l++){const c=l+1;n.push(`${c===e?">":" "} ${c}: ${t[l]}`)}return n.join(`
`)}function WE(r){const e=bt.getPrimaries(bt.workingColorSpace),t=bt.getPrimaries(r);let n;switch(e===t?n="":e===Aa&&t===Ea?n="LinearDisplayP3ToLinearSRGB":e===Ea&&t===Aa&&(n="LinearSRGBToLinearDisplayP3"),r){case lr:case za:return[n,"LinearTransferOETF"];case fi:case ru:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),[n,"LinearTransferOETF"]}}function Sg(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const l=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+GE(r.getShaderSource(e),l)}else return i}function XE(r,e){const t=WE(e);return`vec4 ${r}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function qE(r,e){let t;switch(e){case mv:t="Linear";break;case gv:t="Reinhard";break;case vv:t="OptimizedCineon";break;case xd:t="ACESFilmic";break;case yv:t="AgX";break;case xv:t="Neutral";break;case _v:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function YE(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(la).join(`
`)}function jE(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function ZE(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),l=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[l]={type:s.type,location:r.getAttribLocation(e,l),locationSize:c}}return t}function la(r){return r!==""}function Mg(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function wg(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const JE=/^[ \t]*#include +<([\w\d./]+)>/gm;function cd(r){return r.replace(JE,QE)}const KE=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function QE(r,e){let t=ut[e];if(t===void 0){const n=KE.get(e);if(n!==void 0)t=ut[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return cd(t)}const $E=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Eg(r){return r.replace($E,eA)}function eA(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Ag(r){let e=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function tA(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===tu?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===ca?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===xi&&(e="SHADOWMAP_TYPE_VSM"),e}function nA(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case or:case Ir:e="ENVMAP_TYPE_CUBE";break;case Mo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function iA(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Ir:e="ENVMAP_MODE_REFRACTION";break}return e}function rA(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Fa:e="ENVMAP_BLENDING_MULTIPLY";break;case dv:e="ENVMAP_BLENDING_MIX";break;case pv:e="ENVMAP_BLENDING_ADD";break}return e}function sA(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function oA(r,e,t,n){const i=r.getContext(),s=t.defines;let l=t.vertexShader,c=t.fragmentShader;const u=tA(t),h=nA(t),d=iA(t),p=rA(t),m=sA(t),v=YE(t),y=jE(s),M=i.createProgram();let x,_,E=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(x=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(la).join(`
`),x.length>0&&(x+=`
`),_=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(la).join(`
`),_.length>0&&(_+=`
`)):(x=[Ag(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(la).join(`
`),_=[Ag(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==zi?"#define TONE_MAPPING":"",t.toneMapping!==zi?ut.tonemapping_pars_fragment:"",t.toneMapping!==zi?qE("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ut.colorspace_pars_fragment,XE("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(la).join(`
`)),l=cd(l),l=Mg(l,t),l=wg(l,t),c=cd(c),c=Mg(c,t),c=wg(c,t),l=Eg(l),c=Eg(c),t.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,x=[v,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,_=["#define varying in",t.glslVersion===ad?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===ad?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const w=E+x+l,T=E+_+c,U=xg(i,i.VERTEX_SHADER,w),P=xg(i,i.FRAGMENT_SHADER,T);i.attachShader(M,U),i.attachShader(M,P),t.index0AttributeName!==void 0?i.bindAttribLocation(M,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(M,0,"position"),i.linkProgram(M);function L(F){if(r.debug.checkShaderErrors){const q=i.getProgramInfoLog(M).trim(),k=i.getShaderInfoLog(U).trim(),Z=i.getShaderInfoLog(P).trim();let se=!0,ae=!0;if(i.getProgramParameter(M,i.LINK_STATUS)===!1)if(se=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,M,U,P);else{const ve=Sg(i,U,"vertex"),H=Sg(i,P,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(M,i.VALIDATE_STATUS)+`

Material Name: `+F.name+`
Material Type: `+F.type+`

Program Info Log: `+q+`
`+ve+`
`+H)}else q!==""?console.warn("THREE.WebGLProgram: Program Info Log:",q):(k===""||Z==="")&&(ae=!1);ae&&(F.diagnostics={runnable:se,programLog:q,vertexShader:{log:k,prefix:x},fragmentShader:{log:Z,prefix:_}})}i.deleteShader(U),i.deleteShader(P),z=new qc(i,M),R=ZE(i,M)}let z;this.getUniforms=function(){return z===void 0&&L(this),z};let R;this.getAttributes=function(){return R===void 0&&L(this),R};let b=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return b===!1&&(b=i.getProgramParameter(M,HE)),b},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(M),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=VE++,this.cacheKey=e,this.usedTimes=1,this.program=M,this.vertexShader=U,this.fragmentShader=P,this}let aA=0;class lA{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),l=this._getShaderCacheForMaterial(e);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(s)===!1&&(l.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new cA(e),t.set(e,n)),n}}class cA{constructor(e){this.id=aA++,this.code=e,this.usedTimes=0}}function uA(r,e,t,n,i,s,l){const c=new ms,u=new lA,h=new Set,d=[],p=i.logarithmicDepthBuffer,m=i.vertexTextures;let v=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function M(R){return h.add(R),R===0?"uv":`uv${R}`}function x(R,b,F,q,k){const Z=q.fog,se=k.geometry,ae=R.isMeshStandardMaterial?q.environment:null,ve=(R.isMeshStandardMaterial?t:e).get(R.envMap||ae),H=ve&&ve.mapping===Mo?ve.image.height:null,$=y[R.type];R.precision!==null&&(v=i.getMaxPrecision(R.precision),v!==R.precision&&console.warn("THREE.WebGLProgram.getParameters:",R.precision,"not supported, using",v,"instead."));const J=se.morphAttributes.position||se.morphAttributes.normal||se.morphAttributes.color,he=J!==void 0?J.length:0;let Ie=0;se.morphAttributes.position!==void 0&&(Ie=1),se.morphAttributes.normal!==void 0&&(Ie=2),se.morphAttributes.color!==void 0&&(Ie=3);let Be,ne,pe,Ce;if($){const sn=Si[$];Be=sn.vertexShader,ne=sn.fragmentShader}else Be=R.vertexShader,ne=R.fragmentShader,u.update(R),pe=u.getVertexShaderID(R),Ce=u.getFragmentShaderID(R);const ye=r.getRenderTarget(),et=k.isInstancedMesh===!0,st=k.isBatchedMesh===!0,Qe=!!R.map,W=!!R.matcap,ce=!!ve,oe=!!R.aoMap,Se=!!R.lightMap,me=!!R.bumpMap,_e=!!R.normalMap,N=!!R.displacementMap,C=!!R.emissiveMap,Y=!!R.metalnessMap,re=!!R.roughnessMap,le=R.anisotropy>0,fe=R.clearcoat>0,qe=R.iridescence>0,de=R.sheen>0,He=R.transmission>0,Ze=le&&!!R.anisotropyMap,Me=fe&&!!R.clearcoatMap,Ne=fe&&!!R.clearcoatNormalMap,nt=fe&&!!R.clearcoatRoughnessMap,Oe=qe&&!!R.iridescenceMap,Fe=qe&&!!R.iridescenceThicknessMap,pt=de&&!!R.sheenColorMap,mt=de&&!!R.sheenRoughnessMap,Et=!!R.specularMap,_t=!!R.specularColorMap,Dt=!!R.specularIntensityMap,Ve=He&&!!R.transmissionMap,B=He&&!!R.thicknessMap,Ee=!!R.gradientMap,we=!!R.alphaMap,Xe=R.alphaTest>0,Ye=!!R.alphaHash,Pt=!!R.extensions;let Lt=zi;R.toneMapped&&(ye===null||ye.isXRRenderTarget===!0)&&(Lt=r.toneMapping);const Ut={shaderID:$,shaderType:R.type,shaderName:R.name,vertexShader:Be,fragmentShader:ne,defines:R.defines,customVertexShaderID:pe,customFragmentShaderID:Ce,isRawShaderMaterial:R.isRawShaderMaterial===!0,glslVersion:R.glslVersion,precision:v,batching:st,instancing:et,instancingColor:et&&k.instanceColor!==null,instancingMorph:et&&k.morphTexture!==null,supportsVertexTextures:m,outputColorSpace:ye===null?r.outputColorSpace:ye.isXRRenderTarget===!0?ye.texture.colorSpace:lr,alphaToCoverage:!!R.alphaToCoverage,map:Qe,matcap:W,envMap:ce,envMapMode:ce&&ve.mapping,envMapCubeUVHeight:H,aoMap:oe,lightMap:Se,bumpMap:me,normalMap:_e,displacementMap:m&&N,emissiveMap:C,normalMapObjectSpace:_e&&R.normalMapType===Ov,normalMapTangentSpace:_e&&R.normalMapType===Nr,metalnessMap:Y,roughnessMap:re,anisotropy:le,anisotropyMap:Ze,clearcoat:fe,clearcoatMap:Me,clearcoatNormalMap:Ne,clearcoatRoughnessMap:nt,iridescence:qe,iridescenceMap:Oe,iridescenceThicknessMap:Fe,sheen:de,sheenColorMap:pt,sheenRoughnessMap:mt,specularMap:Et,specularColorMap:_t,specularIntensityMap:Dt,transmission:He,transmissionMap:Ve,thicknessMap:B,gradientMap:Ee,opaque:R.transparent===!1&&R.blending===fs&&R.alphaToCoverage===!1,alphaMap:we,alphaTest:Xe,alphaHash:Ye,combine:R.combine,mapUv:Qe&&M(R.map.channel),aoMapUv:oe&&M(R.aoMap.channel),lightMapUv:Se&&M(R.lightMap.channel),bumpMapUv:me&&M(R.bumpMap.channel),normalMapUv:_e&&M(R.normalMap.channel),displacementMapUv:N&&M(R.displacementMap.channel),emissiveMapUv:C&&M(R.emissiveMap.channel),metalnessMapUv:Y&&M(R.metalnessMap.channel),roughnessMapUv:re&&M(R.roughnessMap.channel),anisotropyMapUv:Ze&&M(R.anisotropyMap.channel),clearcoatMapUv:Me&&M(R.clearcoatMap.channel),clearcoatNormalMapUv:Ne&&M(R.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:nt&&M(R.clearcoatRoughnessMap.channel),iridescenceMapUv:Oe&&M(R.iridescenceMap.channel),iridescenceThicknessMapUv:Fe&&M(R.iridescenceThicknessMap.channel),sheenColorMapUv:pt&&M(R.sheenColorMap.channel),sheenRoughnessMapUv:mt&&M(R.sheenRoughnessMap.channel),specularMapUv:Et&&M(R.specularMap.channel),specularColorMapUv:_t&&M(R.specularColorMap.channel),specularIntensityMapUv:Dt&&M(R.specularIntensityMap.channel),transmissionMapUv:Ve&&M(R.transmissionMap.channel),thicknessMapUv:B&&M(R.thicknessMap.channel),alphaMapUv:we&&M(R.alphaMap.channel),vertexTangents:!!se.attributes.tangent&&(_e||le),vertexColors:R.vertexColors,vertexAlphas:R.vertexColors===!0&&!!se.attributes.color&&se.attributes.color.itemSize===4,pointsUvs:k.isPoints===!0&&!!se.attributes.uv&&(Qe||we),fog:!!Z,useFog:R.fog===!0,fogExp2:!!Z&&Z.isFogExp2,flatShading:R.flatShading===!0,sizeAttenuation:R.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:k.isSkinnedMesh===!0,morphTargets:se.morphAttributes.position!==void 0,morphNormals:se.morphAttributes.normal!==void 0,morphColors:se.morphAttributes.color!==void 0,morphTargetsCount:he,morphTextureStride:Ie,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numLightProbes:b.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:R.dithering,shadowMapEnabled:r.shadowMap.enabled&&F.length>0,shadowMapType:r.shadowMap.type,toneMapping:Lt,useLegacyLights:r._useLegacyLights,decodeVideoTexture:Qe&&R.map.isVideoTexture===!0&&bt.getTransfer(R.map.colorSpace)===Ot,premultipliedAlpha:R.premultipliedAlpha,doubleSided:R.side===Ui,flipSided:R.side===Ln,useDepthPacking:R.depthPacking>=0,depthPacking:R.depthPacking||0,index0AttributeName:R.index0AttributeName,extensionClipCullDistance:Pt&&R.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:Pt&&R.extensions.multiDraw===!0&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:R.customProgramCacheKey()};return Ut.vertexUv1s=h.has(1),Ut.vertexUv2s=h.has(2),Ut.vertexUv3s=h.has(3),h.clear(),Ut}function _(R){const b=[];if(R.shaderID?b.push(R.shaderID):(b.push(R.customVertexShaderID),b.push(R.customFragmentShaderID)),R.defines!==void 0)for(const F in R.defines)b.push(F),b.push(R.defines[F]);return R.isRawShaderMaterial===!1&&(E(b,R),w(b,R),b.push(r.outputColorSpace)),b.push(R.customProgramCacheKey),b.join()}function E(R,b){R.push(b.precision),R.push(b.outputColorSpace),R.push(b.envMapMode),R.push(b.envMapCubeUVHeight),R.push(b.mapUv),R.push(b.alphaMapUv),R.push(b.lightMapUv),R.push(b.aoMapUv),R.push(b.bumpMapUv),R.push(b.normalMapUv),R.push(b.displacementMapUv),R.push(b.emissiveMapUv),R.push(b.metalnessMapUv),R.push(b.roughnessMapUv),R.push(b.anisotropyMapUv),R.push(b.clearcoatMapUv),R.push(b.clearcoatNormalMapUv),R.push(b.clearcoatRoughnessMapUv),R.push(b.iridescenceMapUv),R.push(b.iridescenceThicknessMapUv),R.push(b.sheenColorMapUv),R.push(b.sheenRoughnessMapUv),R.push(b.specularMapUv),R.push(b.specularColorMapUv),R.push(b.specularIntensityMapUv),R.push(b.transmissionMapUv),R.push(b.thicknessMapUv),R.push(b.combine),R.push(b.fogExp2),R.push(b.sizeAttenuation),R.push(b.morphTargetsCount),R.push(b.morphAttributeCount),R.push(b.numDirLights),R.push(b.numPointLights),R.push(b.numSpotLights),R.push(b.numSpotLightMaps),R.push(b.numHemiLights),R.push(b.numRectAreaLights),R.push(b.numDirLightShadows),R.push(b.numPointLightShadows),R.push(b.numSpotLightShadows),R.push(b.numSpotLightShadowsWithMaps),R.push(b.numLightProbes),R.push(b.shadowMapType),R.push(b.toneMapping),R.push(b.numClippingPlanes),R.push(b.numClipIntersection),R.push(b.depthPacking)}function w(R,b){c.disableAll(),b.supportsVertexTextures&&c.enable(0),b.instancing&&c.enable(1),b.instancingColor&&c.enable(2),b.instancingMorph&&c.enable(3),b.matcap&&c.enable(4),b.envMap&&c.enable(5),b.normalMapObjectSpace&&c.enable(6),b.normalMapTangentSpace&&c.enable(7),b.clearcoat&&c.enable(8),b.iridescence&&c.enable(9),b.alphaTest&&c.enable(10),b.vertexColors&&c.enable(11),b.vertexAlphas&&c.enable(12),b.vertexUv1s&&c.enable(13),b.vertexUv2s&&c.enable(14),b.vertexUv3s&&c.enable(15),b.vertexTangents&&c.enable(16),b.anisotropy&&c.enable(17),b.alphaHash&&c.enable(18),b.batching&&c.enable(19),R.push(c.mask),c.disableAll(),b.fog&&c.enable(0),b.useFog&&c.enable(1),b.flatShading&&c.enable(2),b.logarithmicDepthBuffer&&c.enable(3),b.skinning&&c.enable(4),b.morphTargets&&c.enable(5),b.morphNormals&&c.enable(6),b.morphColors&&c.enable(7),b.premultipliedAlpha&&c.enable(8),b.shadowMapEnabled&&c.enable(9),b.useLegacyLights&&c.enable(10),b.doubleSided&&c.enable(11),b.flipSided&&c.enable(12),b.useDepthPacking&&c.enable(13),b.dithering&&c.enable(14),b.transmission&&c.enable(15),b.sheen&&c.enable(16),b.opaque&&c.enable(17),b.pointsUvs&&c.enable(18),b.decodeVideoTexture&&c.enable(19),b.alphaToCoverage&&c.enable(20),R.push(c.mask)}function T(R){const b=y[R.type];let F;if(b){const q=Si[b];F=Kv.clone(q.uniforms)}else F=R.uniforms;return F}function U(R,b){let F;for(let q=0,k=d.length;q<k;q++){const Z=d[q];if(Z.cacheKey===b){F=Z,++F.usedTimes;break}}return F===void 0&&(F=new oA(r,b,R,s),d.push(F)),F}function P(R){if(--R.usedTimes===0){const b=d.indexOf(R);d[b]=d[d.length-1],d.pop(),R.destroy()}}function L(R){u.remove(R)}function z(){u.dispose()}return{getParameters:x,getProgramCacheKey:_,getUniforms:T,acquireProgram:U,releaseProgram:P,releaseShaderCache:L,programs:d,dispose:z}}function hA(){let r=new WeakMap;function e(s){let l=r.get(s);return l===void 0&&(l={},r.set(s,l)),l}function t(s){r.delete(s)}function n(s,l,c){r.get(s)[l]=c}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function fA(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function Tg(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function bg(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function l(p,m,v,y,M,x){let _=r[e];return _===void 0?(_={id:p.id,object:p,geometry:m,material:v,groupOrder:y,renderOrder:p.renderOrder,z:M,group:x},r[e]=_):(_.id=p.id,_.object=p,_.geometry=m,_.material=v,_.groupOrder=y,_.renderOrder=p.renderOrder,_.z=M,_.group=x),e++,_}function c(p,m,v,y,M,x){const _=l(p,m,v,y,M,x);v.transmission>0?n.push(_):v.transparent===!0?i.push(_):t.push(_)}function u(p,m,v,y,M,x){const _=l(p,m,v,y,M,x);v.transmission>0?n.unshift(_):v.transparent===!0?i.unshift(_):t.unshift(_)}function h(p,m){t.length>1&&t.sort(p||fA),n.length>1&&n.sort(m||Tg),i.length>1&&i.sort(m||Tg)}function d(){for(let p=e,m=r.length;p<m;p++){const v=r[p];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:d,sort:h}}function dA(){let r=new WeakMap;function e(n,i){const s=r.get(n);let l;return s===void 0?(l=new bg,r.set(n,[l])):i>=s.length?(l=new bg,s.push(l)):l=s[i],l}function t(){r=new WeakMap}return{get:e,dispose:t}}function pA(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new D,color:new Le};break;case"SpotLight":t={position:new D,direction:new D,color:new Le,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new D,color:new Le,distance:0,decay:0};break;case"HemisphereLight":t={direction:new D,skyColor:new Le,groundColor:new Le};break;case"RectAreaLight":t={color:new Le,position:new D,halfWidth:new D,halfHeight:new D};break}return r[e.id]=t,t}}}function mA(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let gA=0;function vA(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function _A(r){const e=new pA,t=mA(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let h=0;h<9;h++)n.probe.push(new D);const i=new D,s=new Ke,l=new Ke;function c(h,d){let p=0,m=0,v=0;for(let F=0;F<9;F++)n.probe[F].set(0,0,0);let y=0,M=0,x=0,_=0,E=0,w=0,T=0,U=0,P=0,L=0,z=0;h.sort(vA);const R=d===!0?Math.PI:1;for(let F=0,q=h.length;F<q;F++){const k=h[F],Z=k.color,se=k.intensity,ae=k.distance,ve=k.shadow&&k.shadow.map?k.shadow.map.texture:null;if(k.isAmbientLight)p+=Z.r*se*R,m+=Z.g*se*R,v+=Z.b*se*R;else if(k.isLightProbe){for(let H=0;H<9;H++)n.probe[H].addScaledVector(k.sh.coefficients[H],se);z++}else if(k.isDirectionalLight){const H=e.get(k);if(H.color.copy(k.color).multiplyScalar(k.intensity*R),k.castShadow){const $=k.shadow,J=t.get(k);J.shadowBias=$.bias,J.shadowNormalBias=$.normalBias,J.shadowRadius=$.radius,J.shadowMapSize=$.mapSize,n.directionalShadow[y]=J,n.directionalShadowMap[y]=ve,n.directionalShadowMatrix[y]=k.shadow.matrix,w++}n.directional[y]=H,y++}else if(k.isSpotLight){const H=e.get(k);H.position.setFromMatrixPosition(k.matrixWorld),H.color.copy(Z).multiplyScalar(se*R),H.distance=ae,H.coneCos=Math.cos(k.angle),H.penumbraCos=Math.cos(k.angle*(1-k.penumbra)),H.decay=k.decay,n.spot[x]=H;const $=k.shadow;if(k.map&&(n.spotLightMap[P]=k.map,P++,$.updateMatrices(k),k.castShadow&&L++),n.spotLightMatrix[x]=$.matrix,k.castShadow){const J=t.get(k);J.shadowBias=$.bias,J.shadowNormalBias=$.normalBias,J.shadowRadius=$.radius,J.shadowMapSize=$.mapSize,n.spotShadow[x]=J,n.spotShadowMap[x]=ve,U++}x++}else if(k.isRectAreaLight){const H=e.get(k);H.color.copy(Z).multiplyScalar(se),H.halfWidth.set(k.width*.5,0,0),H.halfHeight.set(0,k.height*.5,0),n.rectArea[_]=H,_++}else if(k.isPointLight){const H=e.get(k);if(H.color.copy(k.color).multiplyScalar(k.intensity*R),H.distance=k.distance,H.decay=k.decay,k.castShadow){const $=k.shadow,J=t.get(k);J.shadowBias=$.bias,J.shadowNormalBias=$.normalBias,J.shadowRadius=$.radius,J.shadowMapSize=$.mapSize,J.shadowCameraNear=$.camera.near,J.shadowCameraFar=$.camera.far,n.pointShadow[M]=J,n.pointShadowMap[M]=ve,n.pointShadowMatrix[M]=k.shadow.matrix,T++}n.point[M]=H,M++}else if(k.isHemisphereLight){const H=e.get(k);H.skyColor.copy(k.color).multiplyScalar(se*R),H.groundColor.copy(k.groundColor).multiplyScalar(se*R),n.hemi[E]=H,E++}}_>0&&(r.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Ae.LTC_FLOAT_1,n.rectAreaLTC2=Ae.LTC_FLOAT_2):(n.rectAreaLTC1=Ae.LTC_HALF_1,n.rectAreaLTC2=Ae.LTC_HALF_2)),n.ambient[0]=p,n.ambient[1]=m,n.ambient[2]=v;const b=n.hash;(b.directionalLength!==y||b.pointLength!==M||b.spotLength!==x||b.rectAreaLength!==_||b.hemiLength!==E||b.numDirectionalShadows!==w||b.numPointShadows!==T||b.numSpotShadows!==U||b.numSpotMaps!==P||b.numLightProbes!==z)&&(n.directional.length=y,n.spot.length=x,n.rectArea.length=_,n.point.length=M,n.hemi.length=E,n.directionalShadow.length=w,n.directionalShadowMap.length=w,n.pointShadow.length=T,n.pointShadowMap.length=T,n.spotShadow.length=U,n.spotShadowMap.length=U,n.directionalShadowMatrix.length=w,n.pointShadowMatrix.length=T,n.spotLightMatrix.length=U+P-L,n.spotLightMap.length=P,n.numSpotLightShadowsWithMaps=L,n.numLightProbes=z,b.directionalLength=y,b.pointLength=M,b.spotLength=x,b.rectAreaLength=_,b.hemiLength=E,b.numDirectionalShadows=w,b.numPointShadows=T,b.numSpotShadows=U,b.numSpotMaps=P,b.numLightProbes=z,n.version=gA++)}function u(h,d){let p=0,m=0,v=0,y=0,M=0;const x=d.matrixWorldInverse;for(let _=0,E=h.length;_<E;_++){const w=h[_];if(w.isDirectionalLight){const T=n.directional[p];T.direction.setFromMatrixPosition(w.matrixWorld),i.setFromMatrixPosition(w.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(x),p++}else if(w.isSpotLight){const T=n.spot[v];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(x),T.direction.setFromMatrixPosition(w.matrixWorld),i.setFromMatrixPosition(w.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(x),v++}else if(w.isRectAreaLight){const T=n.rectArea[y];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(x),l.identity(),s.copy(w.matrixWorld),s.premultiply(x),l.extractRotation(s),T.halfWidth.set(w.width*.5,0,0),T.halfHeight.set(0,w.height*.5,0),T.halfWidth.applyMatrix4(l),T.halfHeight.applyMatrix4(l),y++}else if(w.isPointLight){const T=n.point[m];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(x),m++}else if(w.isHemisphereLight){const T=n.hemi[M];T.direction.setFromMatrixPosition(w.matrixWorld),T.direction.transformDirection(x),M++}}}return{setup:c,setupView:u,state:n}}function Cg(r){const e=new _A(r),t=[],n=[];function i(){t.length=0,n.length=0}function s(d){t.push(d)}function l(d){n.push(d)}function c(d){e.setup(t,d)}function u(d){e.setupView(t,d)}return{init:i,state:{lightsArray:t,shadowsArray:n,lights:e,transmissionRenderTarget:null},setupLights:c,setupLightsView:u,pushLight:s,pushShadow:l}}function yA(r){let e=new WeakMap;function t(i,s=0){const l=e.get(i);let c;return l===void 0?(c=new Cg(r),e.set(i,[c])):s>=l.length?(c=new Cg(r),l.push(c)):c=l[s],c}function n(){e=new WeakMap}return{get:t,dispose:n}}class Bd extends mn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Dv,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class kd extends mn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const xA=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,SA=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function MA(r,e,t){let n=new Ha;const i=new ue,s=new ue,l=new Ct,c=new Bd({depthPacking:Uv}),u=new kd,h={},d=t.maxTextureSize,p={[sr]:Ln,[Ln]:sr,[Ui]:Ui},m=new wi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ue},radius:{value:4}},vertexShader:xA,fragmentShader:SA}),v=m.clone();v.defines.HORIZONTAL_PASS=1;const y=new ht;y.setAttribute("position",new Rt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new en(y,m),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=tu;let _=this.type;this.render=function(P,L,z){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||P.length===0)return;const R=r.getRenderTarget(),b=r.getActiveCubeFace(),F=r.getActiveMipmapLevel(),q=r.state;q.setBlending(rr),q.buffers.color.setClear(1,1,1,1),q.buffers.depth.setTest(!0),q.setScissorTest(!1);const k=_!==xi&&this.type===xi,Z=_===xi&&this.type!==xi;for(let se=0,ae=P.length;se<ae;se++){const ve=P[se],H=ve.shadow;if(H===void 0){console.warn("THREE.WebGLShadowMap:",ve,"has no shadow.");continue}if(H.autoUpdate===!1&&H.needsUpdate===!1)continue;i.copy(H.mapSize);const $=H.getFrameExtents();if(i.multiply($),s.copy(H.mapSize),(i.x>d||i.y>d)&&(i.x>d&&(s.x=Math.floor(d/$.x),i.x=s.x*$.x,H.mapSize.x=s.x),i.y>d&&(s.y=Math.floor(d/$.y),i.y=s.y*$.y,H.mapSize.y=s.y)),H.map===null||k===!0||Z===!0){const he=this.type!==xi?{minFilter:fn,magFilter:fn}:{};H.map!==null&&H.map.dispose(),H.map=new Mi(i.x,i.y,he),H.map.texture.name=ve.name+".shadowMap",H.camera.updateProjectionMatrix()}r.setRenderTarget(H.map),r.clear();const J=H.getViewportCount();for(let he=0;he<J;he++){const Ie=H.getViewport(he);l.set(s.x*Ie.x,s.y*Ie.y,s.x*Ie.z,s.y*Ie.w),q.viewport(l),H.updateMatrices(ve,he),n=H.getFrustum(),T(L,z,H.camera,ve,this.type)}H.isPointLightShadow!==!0&&this.type===xi&&E(H,z),H.needsUpdate=!1}_=this.type,x.needsUpdate=!1,r.setRenderTarget(R,b,F)};function E(P,L){const z=e.update(M);m.defines.VSM_SAMPLES!==P.blurSamples&&(m.defines.VSM_SAMPLES=P.blurSamples,v.defines.VSM_SAMPLES=P.blurSamples,m.needsUpdate=!0,v.needsUpdate=!0),P.mapPass===null&&(P.mapPass=new Mi(i.x,i.y)),m.uniforms.shadow_pass.value=P.map.texture,m.uniforms.resolution.value=P.mapSize,m.uniforms.radius.value=P.radius,r.setRenderTarget(P.mapPass),r.clear(),r.renderBufferDirect(L,null,z,m,M,null),v.uniforms.shadow_pass.value=P.mapPass.texture,v.uniforms.resolution.value=P.mapSize,v.uniforms.radius.value=P.radius,r.setRenderTarget(P.map),r.clear(),r.renderBufferDirect(L,null,z,v,M,null)}function w(P,L,z,R){let b=null;const F=z.isPointLight===!0?P.customDistanceMaterial:P.customDepthMaterial;if(F!==void 0)b=F;else if(b=z.isPointLight===!0?u:c,r.localClippingEnabled&&L.clipShadows===!0&&Array.isArray(L.clippingPlanes)&&L.clippingPlanes.length!==0||L.displacementMap&&L.displacementScale!==0||L.alphaMap&&L.alphaTest>0||L.map&&L.alphaTest>0){const q=b.uuid,k=L.uuid;let Z=h[q];Z===void 0&&(Z={},h[q]=Z);let se=Z[k];se===void 0&&(se=b.clone(),Z[k]=se,L.addEventListener("dispose",U)),b=se}if(b.visible=L.visible,b.wireframe=L.wireframe,R===xi?b.side=L.shadowSide!==null?L.shadowSide:L.side:b.side=L.shadowSide!==null?L.shadowSide:p[L.side],b.alphaMap=L.alphaMap,b.alphaTest=L.alphaTest,b.map=L.map,b.clipShadows=L.clipShadows,b.clippingPlanes=L.clippingPlanes,b.clipIntersection=L.clipIntersection,b.displacementMap=L.displacementMap,b.displacementScale=L.displacementScale,b.displacementBias=L.displacementBias,b.wireframeLinewidth=L.wireframeLinewidth,b.linewidth=L.linewidth,z.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const q=r.properties.get(b);q.light=z}return b}function T(P,L,z,R,b){if(P.visible===!1)return;if(P.layers.test(L.layers)&&(P.isMesh||P.isLine||P.isPoints)&&(P.castShadow||P.receiveShadow&&b===xi)&&(!P.frustumCulled||n.intersectsObject(P))){P.modelViewMatrix.multiplyMatrices(z.matrixWorldInverse,P.matrixWorld);const k=e.update(P),Z=P.material;if(Array.isArray(Z)){const se=k.groups;for(let ae=0,ve=se.length;ae<ve;ae++){const H=se[ae],$=Z[H.materialIndex];if($&&$.visible){const J=w(P,$,R,b);P.onBeforeShadow(r,P,L,z,k,J,H),r.renderBufferDirect(z,null,k,J,P,H),P.onAfterShadow(r,P,L,z,k,J,H)}}}else if(Z.visible){const se=w(P,Z,R,b);P.onBeforeShadow(r,P,L,z,k,se,null),r.renderBufferDirect(z,null,k,se,P,null),P.onAfterShadow(r,P,L,z,k,se,null)}}const q=P.children;for(let k=0,Z=q.length;k<Z;k++)T(q[k],L,z,R,b)}function U(P){P.target.removeEventListener("dispose",U);for(const z in h){const R=h[z],b=P.target.uuid;b in R&&(R[b].dispose(),delete R[b])}}}function wA(r){function e(){let B=!1;const Ee=new Ct;let we=null;const Xe=new Ct(0,0,0,0);return{setMask:function(Ye){we!==Ye&&!B&&(r.colorMask(Ye,Ye,Ye,Ye),we=Ye)},setLocked:function(Ye){B=Ye},setClear:function(Ye,Pt,Lt,Ut,sn){sn===!0&&(Ye*=Ut,Pt*=Ut,Lt*=Ut),Ee.set(Ye,Pt,Lt,Ut),Xe.equals(Ee)===!1&&(r.clearColor(Ye,Pt,Lt,Ut),Xe.copy(Ee))},reset:function(){B=!1,we=null,Xe.set(-1,0,0,0)}}}function t(){let B=!1,Ee=null,we=null,Xe=null;return{setTest:function(Ye){Ye?Ce(r.DEPTH_TEST):ye(r.DEPTH_TEST)},setMask:function(Ye){Ee!==Ye&&!B&&(r.depthMask(Ye),Ee=Ye)},setFunc:function(Ye){if(we!==Ye){switch(Ye){case ov:r.depthFunc(r.NEVER);break;case av:r.depthFunc(r.ALWAYS);break;case lv:r.depthFunc(r.LESS);break;case pa:r.depthFunc(r.LEQUAL);break;case cv:r.depthFunc(r.EQUAL);break;case uv:r.depthFunc(r.GEQUAL);break;case hv:r.depthFunc(r.GREATER);break;case fv:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}we=Ye}},setLocked:function(Ye){B=Ye},setClear:function(Ye){Xe!==Ye&&(r.clearDepth(Ye),Xe=Ye)},reset:function(){B=!1,Ee=null,we=null,Xe=null}}}function n(){let B=!1,Ee=null,we=null,Xe=null,Ye=null,Pt=null,Lt=null,Ut=null,sn=null;return{setTest:function(It){B||(It?Ce(r.STENCIL_TEST):ye(r.STENCIL_TEST))},setMask:function(It){Ee!==It&&!B&&(r.stencilMask(It),Ee=It)},setFunc:function(It,Gn,Wn){(we!==It||Xe!==Gn||Ye!==Wn)&&(r.stencilFunc(It,Gn,Wn),we=It,Xe=Gn,Ye=Wn)},setOp:function(It,Gn,Wn){(Pt!==It||Lt!==Gn||Ut!==Wn)&&(r.stencilOp(It,Gn,Wn),Pt=It,Lt=Gn,Ut=Wn)},setLocked:function(It){B=It},setClear:function(It){sn!==It&&(r.clearStencil(It),sn=It)},reset:function(){B=!1,Ee=null,we=null,Xe=null,Ye=null,Pt=null,Lt=null,Ut=null,sn=null}}}const i=new e,s=new t,l=new n,c=new WeakMap,u=new WeakMap;let h={},d={},p=new WeakMap,m=[],v=null,y=!1,M=null,x=null,_=null,E=null,w=null,T=null,U=null,P=new Le(0,0,0),L=0,z=!1,R=null,b=null,F=null,q=null,k=null;const Z=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let se=!1,ae=0;const ve=r.getParameter(r.VERSION);ve.indexOf("WebGL")!==-1?(ae=parseFloat(/^WebGL (\d)/.exec(ve)[1]),se=ae>=1):ve.indexOf("OpenGL ES")!==-1&&(ae=parseFloat(/^OpenGL ES (\d)/.exec(ve)[1]),se=ae>=2);let H=null,$={};const J=r.getParameter(r.SCISSOR_BOX),he=r.getParameter(r.VIEWPORT),Ie=new Ct().fromArray(J),Be=new Ct().fromArray(he);function ne(B,Ee,we,Xe){const Ye=new Uint8Array(4),Pt=r.createTexture();r.bindTexture(B,Pt),r.texParameteri(B,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(B,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Lt=0;Lt<we;Lt++)B===r.TEXTURE_3D||B===r.TEXTURE_2D_ARRAY?r.texImage3D(Ee,0,r.RGBA,1,1,Xe,0,r.RGBA,r.UNSIGNED_BYTE,Ye):r.texImage2D(Ee+Lt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Ye);return Pt}const pe={};pe[r.TEXTURE_2D]=ne(r.TEXTURE_2D,r.TEXTURE_2D,1),pe[r.TEXTURE_CUBE_MAP]=ne(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),pe[r.TEXTURE_2D_ARRAY]=ne(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),pe[r.TEXTURE_3D]=ne(r.TEXTURE_3D,r.TEXTURE_3D,1,1),i.setClear(0,0,0,1),s.setClear(1),l.setClear(0),Ce(r.DEPTH_TEST),s.setFunc(pa),me(!1),_e(Pf),Ce(r.CULL_FACE),oe(rr);function Ce(B){h[B]!==!0&&(r.enable(B),h[B]=!0)}function ye(B){h[B]!==!1&&(r.disable(B),h[B]=!1)}function et(B,Ee){return d[B]!==Ee?(r.bindFramebuffer(B,Ee),d[B]=Ee,B===r.DRAW_FRAMEBUFFER&&(d[r.FRAMEBUFFER]=Ee),B===r.FRAMEBUFFER&&(d[r.DRAW_FRAMEBUFFER]=Ee),!0):!1}function st(B,Ee){let we=m,Xe=!1;if(B){we=p.get(Ee),we===void 0&&(we=[],p.set(Ee,we));const Ye=B.textures;if(we.length!==Ye.length||we[0]!==r.COLOR_ATTACHMENT0){for(let Pt=0,Lt=Ye.length;Pt<Lt;Pt++)we[Pt]=r.COLOR_ATTACHMENT0+Pt;we.length=Ye.length,Xe=!0}}else we[0]!==r.BACK&&(we[0]=r.BACK,Xe=!0);Xe&&r.drawBuffers(we)}function Qe(B){return v!==B?(r.useProgram(B),v=B,!0):!1}const W={[Rr]:r.FUNC_ADD,[G0]:r.FUNC_SUBTRACT,[W0]:r.FUNC_REVERSE_SUBTRACT};W[X0]=r.MIN,W[q0]=r.MAX;const ce={[Y0]:r.ZERO,[j0]:r.ONE,[Z0]:r.SRC_COLOR,[jc]:r.SRC_ALPHA,[tv]:r.SRC_ALPHA_SATURATE,[$0]:r.DST_COLOR,[K0]:r.DST_ALPHA,[J0]:r.ONE_MINUS_SRC_COLOR,[Zc]:r.ONE_MINUS_SRC_ALPHA,[ev]:r.ONE_MINUS_DST_COLOR,[Q0]:r.ONE_MINUS_DST_ALPHA,[nv]:r.CONSTANT_COLOR,[iv]:r.ONE_MINUS_CONSTANT_COLOR,[rv]:r.CONSTANT_ALPHA,[sv]:r.ONE_MINUS_CONSTANT_ALPHA};function oe(B,Ee,we,Xe,Ye,Pt,Lt,Ut,sn,It){if(B===rr){y===!0&&(ye(r.BLEND),y=!1);return}if(y===!1&&(Ce(r.BLEND),y=!0),B!==V0){if(B!==M||It!==z){if((x!==Rr||w!==Rr)&&(r.blendEquation(r.FUNC_ADD),x=Rr,w=Rr),It)switch(B){case fs:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case If:r.blendFunc(r.ONE,r.ONE);break;case Lf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Nf:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}else switch(B){case fs:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case If:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case Lf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Nf:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}_=null,E=null,T=null,U=null,P.set(0,0,0),L=0,M=B,z=It}return}Ye=Ye||Ee,Pt=Pt||we,Lt=Lt||Xe,(Ee!==x||Ye!==w)&&(r.blendEquationSeparate(W[Ee],W[Ye]),x=Ee,w=Ye),(we!==_||Xe!==E||Pt!==T||Lt!==U)&&(r.blendFuncSeparate(ce[we],ce[Xe],ce[Pt],ce[Lt]),_=we,E=Xe,T=Pt,U=Lt),(Ut.equals(P)===!1||sn!==L)&&(r.blendColor(Ut.r,Ut.g,Ut.b,sn),P.copy(Ut),L=sn),M=B,z=!1}function Se(B,Ee){B.side===Ui?ye(r.CULL_FACE):Ce(r.CULL_FACE);let we=B.side===Ln;Ee&&(we=!we),me(we),B.blending===fs&&B.transparent===!1?oe(rr):oe(B.blending,B.blendEquation,B.blendSrc,B.blendDst,B.blendEquationAlpha,B.blendSrcAlpha,B.blendDstAlpha,B.blendColor,B.blendAlpha,B.premultipliedAlpha),s.setFunc(B.depthFunc),s.setTest(B.depthTest),s.setMask(B.depthWrite),i.setMask(B.colorWrite);const Xe=B.stencilWrite;l.setTest(Xe),Xe&&(l.setMask(B.stencilWriteMask),l.setFunc(B.stencilFunc,B.stencilRef,B.stencilFuncMask),l.setOp(B.stencilFail,B.stencilZFail,B.stencilZPass)),C(B.polygonOffset,B.polygonOffsetFactor,B.polygonOffsetUnits),B.alphaToCoverage===!0?Ce(r.SAMPLE_ALPHA_TO_COVERAGE):ye(r.SAMPLE_ALPHA_TO_COVERAGE)}function me(B){R!==B&&(B?r.frontFace(r.CW):r.frontFace(r.CCW),R=B)}function _e(B){B!==B0?(Ce(r.CULL_FACE),B!==b&&(B===Pf?r.cullFace(r.BACK):B===k0?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):ye(r.CULL_FACE),b=B}function N(B){B!==F&&(se&&r.lineWidth(B),F=B)}function C(B,Ee,we){B?(Ce(r.POLYGON_OFFSET_FILL),(q!==Ee||k!==we)&&(r.polygonOffset(Ee,we),q=Ee,k=we)):ye(r.POLYGON_OFFSET_FILL)}function Y(B){B?Ce(r.SCISSOR_TEST):ye(r.SCISSOR_TEST)}function re(B){B===void 0&&(B=r.TEXTURE0+Z-1),H!==B&&(r.activeTexture(B),H=B)}function le(B,Ee,we){we===void 0&&(H===null?we=r.TEXTURE0+Z-1:we=H);let Xe=$[we];Xe===void 0&&(Xe={type:void 0,texture:void 0},$[we]=Xe),(Xe.type!==B||Xe.texture!==Ee)&&(H!==we&&(r.activeTexture(we),H=we),r.bindTexture(B,Ee||pe[B]),Xe.type=B,Xe.texture=Ee)}function fe(){const B=$[H];B!==void 0&&B.type!==void 0&&(r.bindTexture(B.type,null),B.type=void 0,B.texture=void 0)}function qe(){try{r.compressedTexImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function de(){try{r.compressedTexImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function He(){try{r.texSubImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Ze(){try{r.texSubImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Me(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Ne(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function nt(){try{r.texStorage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Oe(){try{r.texStorage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Fe(){try{r.texImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function pt(){try{r.texImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function mt(B){Ie.equals(B)===!1&&(r.scissor(B.x,B.y,B.z,B.w),Ie.copy(B))}function Et(B){Be.equals(B)===!1&&(r.viewport(B.x,B.y,B.z,B.w),Be.copy(B))}function _t(B,Ee){let we=u.get(Ee);we===void 0&&(we=new WeakMap,u.set(Ee,we));let Xe=we.get(B);Xe===void 0&&(Xe=r.getUniformBlockIndex(Ee,B.name),we.set(B,Xe))}function Dt(B,Ee){const Xe=u.get(Ee).get(B);c.get(Ee)!==Xe&&(r.uniformBlockBinding(Ee,Xe,B.__bindingPointIndex),c.set(Ee,Xe))}function Ve(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),h={},H=null,$={},d={},p=new WeakMap,m=[],v=null,y=!1,M=null,x=null,_=null,E=null,w=null,T=null,U=null,P=new Le(0,0,0),L=0,z=!1,R=null,b=null,F=null,q=null,k=null,Ie.set(0,0,r.canvas.width,r.canvas.height),Be.set(0,0,r.canvas.width,r.canvas.height),i.reset(),s.reset(),l.reset()}return{buffers:{color:i,depth:s,stencil:l},enable:Ce,disable:ye,bindFramebuffer:et,drawBuffers:st,useProgram:Qe,setBlending:oe,setMaterial:Se,setFlipSided:me,setCullFace:_e,setLineWidth:N,setPolygonOffset:C,setScissorTest:Y,activeTexture:re,bindTexture:le,unbindTexture:fe,compressedTexImage2D:qe,compressedTexImage3D:de,texImage2D:Fe,texImage3D:pt,updateUBOMapping:_t,uniformBlockBinding:Dt,texStorage2D:nt,texStorage3D:Oe,texSubImage2D:He,texSubImage3D:Ze,compressedTexSubImage2D:Me,compressedTexSubImage3D:Ne,scissor:mt,viewport:Et,reset:Ve}}function EA(r,e,t,n,i,s,l){const c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,u=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new ue,d=new WeakMap;let p;const m=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(N,C){return v?new OffscreenCanvas(N,C):Ca("canvas")}function M(N,C,Y){let re=1;const le=_e(N);if((le.width>Y||le.height>Y)&&(re=Y/Math.max(le.width,le.height)),re<1)if(typeof HTMLImageElement<"u"&&N instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&N instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&N instanceof ImageBitmap||typeof VideoFrame<"u"&&N instanceof VideoFrame){const fe=Math.floor(re*le.width),qe=Math.floor(re*le.height);p===void 0&&(p=y(fe,qe));const de=C?y(fe,qe):p;return de.width=fe,de.height=qe,de.getContext("2d").drawImage(N,0,0,fe,qe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+le.width+"x"+le.height+") to ("+fe+"x"+qe+")."),de}else return"data"in N&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+le.width+"x"+le.height+")."),N;return N}function x(N){return N.generateMipmaps&&N.minFilter!==fn&&N.minFilter!==$t}function _(N){r.generateMipmap(N)}function E(N,C,Y,re,le=!1){if(N!==null){if(r[N]!==void 0)return r[N];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+N+"'")}let fe=C;if(C===r.RED&&(Y===r.FLOAT&&(fe=r.R32F),Y===r.HALF_FLOAT&&(fe=r.R16F),Y===r.UNSIGNED_BYTE&&(fe=r.R8)),C===r.RED_INTEGER&&(Y===r.UNSIGNED_BYTE&&(fe=r.R8UI),Y===r.UNSIGNED_SHORT&&(fe=r.R16UI),Y===r.UNSIGNED_INT&&(fe=r.R32UI),Y===r.BYTE&&(fe=r.R8I),Y===r.SHORT&&(fe=r.R16I),Y===r.INT&&(fe=r.R32I)),C===r.RG&&(Y===r.FLOAT&&(fe=r.RG32F),Y===r.HALF_FLOAT&&(fe=r.RG16F),Y===r.UNSIGNED_BYTE&&(fe=r.RG8)),C===r.RG_INTEGER&&(Y===r.UNSIGNED_BYTE&&(fe=r.RG8UI),Y===r.UNSIGNED_SHORT&&(fe=r.RG16UI),Y===r.UNSIGNED_INT&&(fe=r.RG32UI),Y===r.BYTE&&(fe=r.RG8I),Y===r.SHORT&&(fe=r.RG16I),Y===r.INT&&(fe=r.RG32I)),C===r.RGB&&Y===r.UNSIGNED_INT_5_9_9_9_REV&&(fe=r.RGB9_E5),C===r.RGBA){const qe=le?wa:bt.getTransfer(re);Y===r.FLOAT&&(fe=r.RGBA32F),Y===r.HALF_FLOAT&&(fe=r.RGBA16F),Y===r.UNSIGNED_BYTE&&(fe=qe===Ot?r.SRGB8_ALPHA8:r.RGBA8),Y===r.UNSIGNED_SHORT_4_4_4_4&&(fe=r.RGBA4),Y===r.UNSIGNED_SHORT_5_5_5_1&&(fe=r.RGB5_A1)}return(fe===r.R16F||fe===r.R32F||fe===r.RG16F||fe===r.RG32F||fe===r.RGBA16F||fe===r.RGBA32F)&&e.get("EXT_color_buffer_float"),fe}function w(N,C){return x(N)===!0||N.isFramebufferTexture&&N.minFilter!==fn&&N.minFilter!==$t?Math.log2(Math.max(C.width,C.height))+1:N.mipmaps!==void 0&&N.mipmaps.length>0?N.mipmaps.length:N.isCompressedTexture&&Array.isArray(N.image)?C.mipmaps.length:1}function T(N){const C=N.target;C.removeEventListener("dispose",T),P(C),C.isVideoTexture&&d.delete(C)}function U(N){const C=N.target;C.removeEventListener("dispose",U),z(C)}function P(N){const C=n.get(N);if(C.__webglInit===void 0)return;const Y=N.source,re=m.get(Y);if(re){const le=re[C.__cacheKey];le.usedTimes--,le.usedTimes===0&&L(N),Object.keys(re).length===0&&m.delete(Y)}n.remove(N)}function L(N){const C=n.get(N);r.deleteTexture(C.__webglTexture);const Y=N.source,re=m.get(Y);delete re[C.__cacheKey],l.memory.textures--}function z(N){const C=n.get(N);if(N.depthTexture&&N.depthTexture.dispose(),N.isWebGLCubeRenderTarget)for(let re=0;re<6;re++){if(Array.isArray(C.__webglFramebuffer[re]))for(let le=0;le<C.__webglFramebuffer[re].length;le++)r.deleteFramebuffer(C.__webglFramebuffer[re][le]);else r.deleteFramebuffer(C.__webglFramebuffer[re]);C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer[re])}else{if(Array.isArray(C.__webglFramebuffer))for(let re=0;re<C.__webglFramebuffer.length;re++)r.deleteFramebuffer(C.__webglFramebuffer[re]);else r.deleteFramebuffer(C.__webglFramebuffer);if(C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer),C.__webglMultisampledFramebuffer&&r.deleteFramebuffer(C.__webglMultisampledFramebuffer),C.__webglColorRenderbuffer)for(let re=0;re<C.__webglColorRenderbuffer.length;re++)C.__webglColorRenderbuffer[re]&&r.deleteRenderbuffer(C.__webglColorRenderbuffer[re]);C.__webglDepthRenderbuffer&&r.deleteRenderbuffer(C.__webglDepthRenderbuffer)}const Y=N.textures;for(let re=0,le=Y.length;re<le;re++){const fe=n.get(Y[re]);fe.__webglTexture&&(r.deleteTexture(fe.__webglTexture),l.memory.textures--),n.remove(Y[re])}n.remove(N)}let R=0;function b(){R=0}function F(){const N=R;return N>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+N+" texture units while this GPU supports only "+i.maxTextures),R+=1,N}function q(N){const C=[];return C.push(N.wrapS),C.push(N.wrapT),C.push(N.wrapR||0),C.push(N.magFilter),C.push(N.minFilter),C.push(N.anisotropy),C.push(N.internalFormat),C.push(N.format),C.push(N.type),C.push(N.generateMipmaps),C.push(N.premultiplyAlpha),C.push(N.flipY),C.push(N.unpackAlignment),C.push(N.colorSpace),C.join()}function k(N,C){const Y=n.get(N);if(N.isVideoTexture&&Se(N),N.isRenderTargetTexture===!1&&N.version>0&&Y.__version!==N.version){const re=N.image;if(re===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(re.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ie(Y,N,C);return}}t.bindTexture(r.TEXTURE_2D,Y.__webglTexture,r.TEXTURE0+C)}function Z(N,C){const Y=n.get(N);if(N.version>0&&Y.__version!==N.version){Ie(Y,N,C);return}t.bindTexture(r.TEXTURE_2D_ARRAY,Y.__webglTexture,r.TEXTURE0+C)}function se(N,C){const Y=n.get(N);if(N.version>0&&Y.__version!==N.version){Ie(Y,N,C);return}t.bindTexture(r.TEXTURE_3D,Y.__webglTexture,r.TEXTURE0+C)}function ae(N,C){const Y=n.get(N);if(N.version>0&&Y.__version!==N.version){Be(Y,N,C);return}t.bindTexture(r.TEXTURE_CUBE_MAP,Y.__webglTexture,r.TEXTURE0+C)}const ve={[va]:r.REPEAT,[di]:r.CLAMP_TO_EDGE,[_a]:r.MIRRORED_REPEAT},H={[fn]:r.NEAREST,[Sd]:r.NEAREST_MIPMAP_NEAREST,[co]:r.NEAREST_MIPMAP_LINEAR,[$t]:r.LINEAR,[ua]:r.LINEAR_MIPMAP_NEAREST,[Oi]:r.LINEAR_MIPMAP_LINEAR},$={[Fv]:r.NEVER,[Gv]:r.ALWAYS,[zv]:r.LESS,[Ld]:r.LEQUAL,[Bv]:r.EQUAL,[Vv]:r.GEQUAL,[kv]:r.GREATER,[Hv]:r.NOTEQUAL};function J(N,C){if(C.type===pi&&e.has("OES_texture_float_linear")===!1&&(C.magFilter===$t||C.magFilter===ua||C.magFilter===co||C.magFilter===Oi||C.minFilter===$t||C.minFilter===ua||C.minFilter===co||C.minFilter===Oi)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),r.texParameteri(N,r.TEXTURE_WRAP_S,ve[C.wrapS]),r.texParameteri(N,r.TEXTURE_WRAP_T,ve[C.wrapT]),(N===r.TEXTURE_3D||N===r.TEXTURE_2D_ARRAY)&&r.texParameteri(N,r.TEXTURE_WRAP_R,ve[C.wrapR]),r.texParameteri(N,r.TEXTURE_MAG_FILTER,H[C.magFilter]),r.texParameteri(N,r.TEXTURE_MIN_FILTER,H[C.minFilter]),C.compareFunction&&(r.texParameteri(N,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(N,r.TEXTURE_COMPARE_FUNC,$[C.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(C.magFilter===fn||C.minFilter!==co&&C.minFilter!==Oi||C.type===pi&&e.has("OES_texture_float_linear")===!1)return;if(C.anisotropy>1||n.get(C).__currentAnisotropy){const Y=e.get("EXT_texture_filter_anisotropic");r.texParameterf(N,Y.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(C.anisotropy,i.getMaxAnisotropy())),n.get(C).__currentAnisotropy=C.anisotropy}}}function he(N,C){let Y=!1;N.__webglInit===void 0&&(N.__webglInit=!0,C.addEventListener("dispose",T));const re=C.source;let le=m.get(re);le===void 0&&(le={},m.set(re,le));const fe=q(C);if(fe!==N.__cacheKey){le[fe]===void 0&&(le[fe]={texture:r.createTexture(),usedTimes:0},l.memory.textures++,Y=!0),le[fe].usedTimes++;const qe=le[N.__cacheKey];qe!==void 0&&(le[N.__cacheKey].usedTimes--,qe.usedTimes===0&&L(C)),N.__cacheKey=fe,N.__webglTexture=le[fe].texture}return Y}function Ie(N,C,Y){let re=r.TEXTURE_2D;(C.isDataArrayTexture||C.isCompressedArrayTexture)&&(re=r.TEXTURE_2D_ARRAY),C.isData3DTexture&&(re=r.TEXTURE_3D);const le=he(N,C),fe=C.source;t.bindTexture(re,N.__webglTexture,r.TEXTURE0+Y);const qe=n.get(fe);if(fe.version!==qe.__version||le===!0){t.activeTexture(r.TEXTURE0+Y);const de=bt.getPrimaries(bt.workingColorSpace),He=C.colorSpace===tr?null:bt.getPrimaries(C.colorSpace),Ze=C.colorSpace===tr||de===He?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ze);let Me=M(C.image,!1,i.maxTextureSize);Me=me(C,Me);const Ne=s.convert(C.format,C.colorSpace),nt=s.convert(C.type);let Oe=E(C.internalFormat,Ne,nt,C.colorSpace,C.isVideoTexture);J(re,C);let Fe;const pt=C.mipmaps,mt=C.isVideoTexture!==!0&&Oe!==Pd,Et=qe.__version===void 0||le===!0,_t=fe.dataReady,Dt=w(C,Me);if(C.isDepthTexture)Oe=r.DEPTH_COMPONENT16,C.type===pi?Oe=r.DEPTH_COMPONENT32F:C.type===vs?Oe=r.DEPTH_COMPONENT24:C.type===wo&&(Oe=r.DEPTH24_STENCIL8),Et&&(mt?t.texStorage2D(r.TEXTURE_2D,1,Oe,Me.width,Me.height):t.texImage2D(r.TEXTURE_2D,0,Oe,Me.width,Me.height,0,Ne,nt,null));else if(C.isDataTexture)if(pt.length>0){mt&&Et&&t.texStorage2D(r.TEXTURE_2D,Dt,Oe,pt[0].width,pt[0].height);for(let Ve=0,B=pt.length;Ve<B;Ve++)Fe=pt[Ve],mt?_t&&t.texSubImage2D(r.TEXTURE_2D,Ve,0,0,Fe.width,Fe.height,Ne,nt,Fe.data):t.texImage2D(r.TEXTURE_2D,Ve,Oe,Fe.width,Fe.height,0,Ne,nt,Fe.data);C.generateMipmaps=!1}else mt?(Et&&t.texStorage2D(r.TEXTURE_2D,Dt,Oe,Me.width,Me.height),_t&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,Me.width,Me.height,Ne,nt,Me.data)):t.texImage2D(r.TEXTURE_2D,0,Oe,Me.width,Me.height,0,Ne,nt,Me.data);else if(C.isCompressedTexture)if(C.isCompressedArrayTexture){mt&&Et&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Dt,Oe,pt[0].width,pt[0].height,Me.depth);for(let Ve=0,B=pt.length;Ve<B;Ve++)Fe=pt[Ve],C.format!==kn?Ne!==null?mt?_t&&t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,Ve,0,0,0,Fe.width,Fe.height,Me.depth,Ne,Fe.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,Ve,Oe,Fe.width,Fe.height,Me.depth,0,Fe.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):mt?_t&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,Ve,0,0,0,Fe.width,Fe.height,Me.depth,Ne,nt,Fe.data):t.texImage3D(r.TEXTURE_2D_ARRAY,Ve,Oe,Fe.width,Fe.height,Me.depth,0,Ne,nt,Fe.data)}else{mt&&Et&&t.texStorage2D(r.TEXTURE_2D,Dt,Oe,pt[0].width,pt[0].height);for(let Ve=0,B=pt.length;Ve<B;Ve++)Fe=pt[Ve],C.format!==kn?Ne!==null?mt?_t&&t.compressedTexSubImage2D(r.TEXTURE_2D,Ve,0,0,Fe.width,Fe.height,Ne,Fe.data):t.compressedTexImage2D(r.TEXTURE_2D,Ve,Oe,Fe.width,Fe.height,0,Fe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):mt?_t&&t.texSubImage2D(r.TEXTURE_2D,Ve,0,0,Fe.width,Fe.height,Ne,nt,Fe.data):t.texImage2D(r.TEXTURE_2D,Ve,Oe,Fe.width,Fe.height,0,Ne,nt,Fe.data)}else if(C.isDataArrayTexture)mt?(Et&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Dt,Oe,Me.width,Me.height,Me.depth),_t&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,Me.width,Me.height,Me.depth,Ne,nt,Me.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,Oe,Me.width,Me.height,Me.depth,0,Ne,nt,Me.data);else if(C.isData3DTexture)mt?(Et&&t.texStorage3D(r.TEXTURE_3D,Dt,Oe,Me.width,Me.height,Me.depth),_t&&t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,Me.width,Me.height,Me.depth,Ne,nt,Me.data)):t.texImage3D(r.TEXTURE_3D,0,Oe,Me.width,Me.height,Me.depth,0,Ne,nt,Me.data);else if(C.isFramebufferTexture){if(Et)if(mt)t.texStorage2D(r.TEXTURE_2D,Dt,Oe,Me.width,Me.height);else{let Ve=Me.width,B=Me.height;for(let Ee=0;Ee<Dt;Ee++)t.texImage2D(r.TEXTURE_2D,Ee,Oe,Ve,B,0,Ne,nt,null),Ve>>=1,B>>=1}}else if(pt.length>0){if(mt&&Et){const Ve=_e(pt[0]);t.texStorage2D(r.TEXTURE_2D,Dt,Oe,Ve.width,Ve.height)}for(let Ve=0,B=pt.length;Ve<B;Ve++)Fe=pt[Ve],mt?_t&&t.texSubImage2D(r.TEXTURE_2D,Ve,0,0,Ne,nt,Fe):t.texImage2D(r.TEXTURE_2D,Ve,Oe,Ne,nt,Fe);C.generateMipmaps=!1}else if(mt){if(Et){const Ve=_e(Me);t.texStorage2D(r.TEXTURE_2D,Dt,Oe,Ve.width,Ve.height)}_t&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,Ne,nt,Me)}else t.texImage2D(r.TEXTURE_2D,0,Oe,Ne,nt,Me);x(C)&&_(re),qe.__version=fe.version,C.onUpdate&&C.onUpdate(C)}N.__version=C.version}function Be(N,C,Y){if(C.image.length!==6)return;const re=he(N,C),le=C.source;t.bindTexture(r.TEXTURE_CUBE_MAP,N.__webglTexture,r.TEXTURE0+Y);const fe=n.get(le);if(le.version!==fe.__version||re===!0){t.activeTexture(r.TEXTURE0+Y);const qe=bt.getPrimaries(bt.workingColorSpace),de=C.colorSpace===tr?null:bt.getPrimaries(C.colorSpace),He=C.colorSpace===tr||qe===de?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,He);const Ze=C.isCompressedTexture||C.image[0].isCompressedTexture,Me=C.image[0]&&C.image[0].isDataTexture,Ne=[];for(let B=0;B<6;B++)!Ze&&!Me?Ne[B]=M(C.image[B],!0,i.maxCubemapSize):Ne[B]=Me?C.image[B].image:C.image[B],Ne[B]=me(C,Ne[B]);const nt=Ne[0],Oe=s.convert(C.format,C.colorSpace),Fe=s.convert(C.type),pt=E(C.internalFormat,Oe,Fe,C.colorSpace),mt=C.isVideoTexture!==!0,Et=fe.__version===void 0||re===!0,_t=le.dataReady;let Dt=w(C,nt);J(r.TEXTURE_CUBE_MAP,C);let Ve;if(Ze){mt&&Et&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Dt,pt,nt.width,nt.height);for(let B=0;B<6;B++){Ve=Ne[B].mipmaps;for(let Ee=0;Ee<Ve.length;Ee++){const we=Ve[Ee];C.format!==kn?Oe!==null?mt?_t&&t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ee,0,0,we.width,we.height,Oe,we.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ee,pt,we.width,we.height,0,we.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):mt?_t&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ee,0,0,we.width,we.height,Oe,Fe,we.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ee,pt,we.width,we.height,0,Oe,Fe,we.data)}}}else{if(Ve=C.mipmaps,mt&&Et){Ve.length>0&&Dt++;const B=_e(Ne[0]);t.texStorage2D(r.TEXTURE_CUBE_MAP,Dt,pt,B.width,B.height)}for(let B=0;B<6;B++)if(Me){mt?_t&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,0,0,Ne[B].width,Ne[B].height,Oe,Fe,Ne[B].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,pt,Ne[B].width,Ne[B].height,0,Oe,Fe,Ne[B].data);for(let Ee=0;Ee<Ve.length;Ee++){const Xe=Ve[Ee].image[B].image;mt?_t&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ee+1,0,0,Xe.width,Xe.height,Oe,Fe,Xe.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ee+1,pt,Xe.width,Xe.height,0,Oe,Fe,Xe.data)}}else{mt?_t&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,0,0,Oe,Fe,Ne[B]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,pt,Oe,Fe,Ne[B]);for(let Ee=0;Ee<Ve.length;Ee++){const we=Ve[Ee];mt?_t&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ee+1,0,0,Oe,Fe,we.image[B]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ee+1,pt,Oe,Fe,we.image[B])}}}x(C)&&_(r.TEXTURE_CUBE_MAP),fe.__version=le.version,C.onUpdate&&C.onUpdate(C)}N.__version=C.version}function ne(N,C,Y,re,le,fe){const qe=s.convert(Y.format,Y.colorSpace),de=s.convert(Y.type),He=E(Y.internalFormat,qe,de,Y.colorSpace);if(!n.get(C).__hasExternalTextures){const Me=Math.max(1,C.width>>fe),Ne=Math.max(1,C.height>>fe);le===r.TEXTURE_3D||le===r.TEXTURE_2D_ARRAY?t.texImage3D(le,fe,He,Me,Ne,C.depth,0,qe,de,null):t.texImage2D(le,fe,He,Me,Ne,0,qe,de,null)}t.bindFramebuffer(r.FRAMEBUFFER,N),oe(C)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,re,le,n.get(Y).__webglTexture,0,ce(C)):(le===r.TEXTURE_2D||le>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&le<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,re,le,n.get(Y).__webglTexture,fe),t.bindFramebuffer(r.FRAMEBUFFER,null)}function pe(N,C,Y){if(r.bindRenderbuffer(r.RENDERBUFFER,N),C.depthBuffer&&!C.stencilBuffer){let re=r.DEPTH_COMPONENT24;if(Y||oe(C)){const le=C.depthTexture;le&&le.isDepthTexture&&(le.type===pi?re=r.DEPTH_COMPONENT32F:le.type===vs&&(re=r.DEPTH_COMPONENT24));const fe=ce(C);oe(C)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,fe,re,C.width,C.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,fe,re,C.width,C.height)}else r.renderbufferStorage(r.RENDERBUFFER,re,C.width,C.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,N)}else if(C.depthBuffer&&C.stencilBuffer){const re=ce(C);Y&&oe(C)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,re,r.DEPTH24_STENCIL8,C.width,C.height):oe(C)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,re,r.DEPTH24_STENCIL8,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,C.width,C.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,N)}else{const re=C.textures;for(let le=0;le<re.length;le++){const fe=re[le],qe=s.convert(fe.format,fe.colorSpace),de=s.convert(fe.type),He=E(fe.internalFormat,qe,de,fe.colorSpace),Ze=ce(C);Y&&oe(C)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Ze,He,C.width,C.height):oe(C)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Ze,He,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,He,C.width,C.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function Ce(N,C){if(C&&C.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,N),!(C.depthTexture&&C.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(C.depthTexture).__webglTexture||C.depthTexture.image.width!==C.width||C.depthTexture.image.height!==C.height)&&(C.depthTexture.image.width=C.width,C.depthTexture.image.height=C.height,C.depthTexture.needsUpdate=!0),k(C.depthTexture,0);const re=n.get(C.depthTexture).__webglTexture,le=ce(C);if(C.depthTexture.format===ds)oe(C)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,re,0,le):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,re,0);else if(C.depthTexture.format===vo)oe(C)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,re,0,le):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,re,0);else throw new Error("Unknown depthTexture format")}function ye(N){const C=n.get(N),Y=N.isWebGLCubeRenderTarget===!0;if(N.depthTexture&&!C.__autoAllocateDepthBuffer){if(Y)throw new Error("target.depthTexture not supported in Cube render targets");Ce(C.__webglFramebuffer,N)}else if(Y){C.__webglDepthbuffer=[];for(let re=0;re<6;re++)t.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer[re]),C.__webglDepthbuffer[re]=r.createRenderbuffer(),pe(C.__webglDepthbuffer[re],N,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer),C.__webglDepthbuffer=r.createRenderbuffer(),pe(C.__webglDepthbuffer,N,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function et(N,C,Y){const re=n.get(N);C!==void 0&&ne(re.__webglFramebuffer,N,N.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),Y!==void 0&&ye(N)}function st(N){const C=N.texture,Y=n.get(N),re=n.get(C);N.addEventListener("dispose",U);const le=N.textures,fe=N.isWebGLCubeRenderTarget===!0,qe=le.length>1;if(qe||(re.__webglTexture===void 0&&(re.__webglTexture=r.createTexture()),re.__version=C.version,l.memory.textures++),fe){Y.__webglFramebuffer=[];for(let de=0;de<6;de++)if(C.mipmaps&&C.mipmaps.length>0){Y.__webglFramebuffer[de]=[];for(let He=0;He<C.mipmaps.length;He++)Y.__webglFramebuffer[de][He]=r.createFramebuffer()}else Y.__webglFramebuffer[de]=r.createFramebuffer()}else{if(C.mipmaps&&C.mipmaps.length>0){Y.__webglFramebuffer=[];for(let de=0;de<C.mipmaps.length;de++)Y.__webglFramebuffer[de]=r.createFramebuffer()}else Y.__webglFramebuffer=r.createFramebuffer();if(qe)for(let de=0,He=le.length;de<He;de++){const Ze=n.get(le[de]);Ze.__webglTexture===void 0&&(Ze.__webglTexture=r.createTexture(),l.memory.textures++)}if(N.samples>0&&oe(N)===!1){Y.__webglMultisampledFramebuffer=r.createFramebuffer(),Y.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,Y.__webglMultisampledFramebuffer);for(let de=0;de<le.length;de++){const He=le[de];Y.__webglColorRenderbuffer[de]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,Y.__webglColorRenderbuffer[de]);const Ze=s.convert(He.format,He.colorSpace),Me=s.convert(He.type),Ne=E(He.internalFormat,Ze,Me,He.colorSpace,N.isXRRenderTarget===!0),nt=ce(N);r.renderbufferStorageMultisample(r.RENDERBUFFER,nt,Ne,N.width,N.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+de,r.RENDERBUFFER,Y.__webglColorRenderbuffer[de])}r.bindRenderbuffer(r.RENDERBUFFER,null),N.depthBuffer&&(Y.__webglDepthRenderbuffer=r.createRenderbuffer(),pe(Y.__webglDepthRenderbuffer,N,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(fe){t.bindTexture(r.TEXTURE_CUBE_MAP,re.__webglTexture),J(r.TEXTURE_CUBE_MAP,C);for(let de=0;de<6;de++)if(C.mipmaps&&C.mipmaps.length>0)for(let He=0;He<C.mipmaps.length;He++)ne(Y.__webglFramebuffer[de][He],N,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+de,He);else ne(Y.__webglFramebuffer[de],N,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+de,0);x(C)&&_(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(qe){for(let de=0,He=le.length;de<He;de++){const Ze=le[de],Me=n.get(Ze);t.bindTexture(r.TEXTURE_2D,Me.__webglTexture),J(r.TEXTURE_2D,Ze),ne(Y.__webglFramebuffer,N,Ze,r.COLOR_ATTACHMENT0+de,r.TEXTURE_2D,0),x(Ze)&&_(r.TEXTURE_2D)}t.unbindTexture()}else{let de=r.TEXTURE_2D;if((N.isWebGL3DRenderTarget||N.isWebGLArrayRenderTarget)&&(de=N.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),t.bindTexture(de,re.__webglTexture),J(de,C),C.mipmaps&&C.mipmaps.length>0)for(let He=0;He<C.mipmaps.length;He++)ne(Y.__webglFramebuffer[He],N,C,r.COLOR_ATTACHMENT0,de,He);else ne(Y.__webglFramebuffer,N,C,r.COLOR_ATTACHMENT0,de,0);x(C)&&_(de),t.unbindTexture()}N.depthBuffer&&ye(N)}function Qe(N){const C=N.textures;for(let Y=0,re=C.length;Y<re;Y++){const le=C[Y];if(x(le)){const fe=N.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,qe=n.get(le).__webglTexture;t.bindTexture(fe,qe),_(fe),t.unbindTexture()}}}function W(N){if(N.samples>0&&oe(N)===!1){const C=N.textures,Y=N.width,re=N.height;let le=r.COLOR_BUFFER_BIT;const fe=[],qe=N.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,de=n.get(N),He=C.length>1;if(He)for(let Ze=0;Ze<C.length;Ze++)t.bindFramebuffer(r.FRAMEBUFFER,de.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ze,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,de.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ze,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,de.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,de.__webglFramebuffer);for(let Ze=0;Ze<C.length;Ze++){fe.push(r.COLOR_ATTACHMENT0+Ze),N.depthBuffer&&fe.push(qe);const Me=de.__ignoreDepthValues!==void 0?de.__ignoreDepthValues:!1;if(Me===!1&&(N.depthBuffer&&(le|=r.DEPTH_BUFFER_BIT),N.stencilBuffer&&de.__isTransmissionRenderTarget!==!0&&(le|=r.STENCIL_BUFFER_BIT)),He&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,de.__webglColorRenderbuffer[Ze]),Me===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[qe]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[qe])),He){const Ne=n.get(C[Ze]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,Ne,0)}r.blitFramebuffer(0,0,Y,re,0,0,Y,re,le,r.NEAREST),u&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,fe)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),He)for(let Ze=0;Ze<C.length;Ze++){t.bindFramebuffer(r.FRAMEBUFFER,de.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ze,r.RENDERBUFFER,de.__webglColorRenderbuffer[Ze]);const Me=n.get(C[Ze]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,de.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ze,r.TEXTURE_2D,Me,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,de.__webglMultisampledFramebuffer)}}function ce(N){return Math.min(i.maxSamples,N.samples)}function oe(N){const C=n.get(N);return N.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&C.__useRenderToTexture!==!1}function Se(N){const C=l.render.frame;d.get(N)!==C&&(d.set(N,C),N.update())}function me(N,C){const Y=N.colorSpace,re=N.format,le=N.type;return N.isCompressedTexture===!0||N.isVideoTexture===!0||Y!==lr&&Y!==tr&&(bt.getTransfer(Y)===Ot?(re!==kn||le!==Bi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Y)),C}function _e(N){return typeof HTMLImageElement<"u"&&N instanceof HTMLImageElement?(h.width=N.naturalWidth||N.width,h.height=N.naturalHeight||N.height):typeof VideoFrame<"u"&&N instanceof VideoFrame?(h.width=N.displayWidth,h.height=N.displayHeight):(h.width=N.width,h.height=N.height),h}this.allocateTextureUnit=F,this.resetTextureUnits=b,this.setTexture2D=k,this.setTexture2DArray=Z,this.setTexture3D=se,this.setTextureCube=ae,this.rebindTextures=et,this.setupRenderTarget=st,this.updateRenderTargetMipmap=Qe,this.updateMultisampleRenderTarget=W,this.setupDepthRenderbuffer=ye,this.setupFrameBufferTexture=ne,this.useMultisampledRTT=oe}function o_(r,e){function t(n,i=tr){let s;const l=bt.getTransfer(i);if(n===Bi)return r.UNSIGNED_BYTE;if(n===Ed)return r.UNSIGNED_SHORT_4_4_4_4;if(n===Ad)return r.UNSIGNED_SHORT_5_5_5_1;if(n===Ev)return r.UNSIGNED_INT_5_9_9_9_REV;if(n===Mv)return r.BYTE;if(n===wv)return r.SHORT;if(n===Md)return r.UNSIGNED_SHORT;if(n===wd)return r.INT;if(n===vs)return r.UNSIGNED_INT;if(n===pi)return r.FLOAT;if(n===ya)return r.HALF_FLOAT;if(n===Av)return r.ALPHA;if(n===Tv)return r.RGB;if(n===kn)return r.RGBA;if(n===bv)return r.LUMINANCE;if(n===Cv)return r.LUMINANCE_ALPHA;if(n===ds)return r.DEPTH_COMPONENT;if(n===vo)return r.DEPTH_STENCIL;if(n===Td)return r.RED;if(n===bd)return r.RED_INTEGER;if(n===Rv)return r.RG;if(n===Cd)return r.RG_INTEGER;if(n===Rd)return r.RGBA_INTEGER;if(n===kc||n===Hc||n===Vc||n===Gc)if(l===Ot)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===kc)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Hc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Vc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Gc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===kc)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Hc)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Vc)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Gc)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Uf||n===Of||n===Ff||n===zf)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===Uf)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Of)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Ff)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===zf)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Pd)return s=e.get("WEBGL_compressed_texture_etc1"),s!==null?s.COMPRESSED_RGB_ETC1_WEBGL:null;if(n===Bf||n===kf)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(n===Bf)return l===Ot?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===kf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===Hf||n===Vf||n===Gf||n===Wf||n===Xf||n===qf||n===Yf||n===jf||n===Zf||n===Jf||n===Kf||n===Qf||n===$f||n===ed)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(n===Hf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Vf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Gf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Wf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Xf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===qf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Yf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===jf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Zf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Jf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Kf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Qf)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===$f)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===ed)return l===Ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Wc||n===td||n===nd)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(n===Wc)return l===Ot?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===td)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===nd)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Pv||n===id||n===rd||n===sd)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(n===Wc)return s.COMPRESSED_RED_RGTC1_EXT;if(n===id)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===rd)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===sd)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===wo?r.UNSIGNED_INT_24_8:r[n]!==void 0?r[n]:null}return{convert:t}}class a_ extends hn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class fo extends wt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const AA={type:"move"};class sf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new fo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new fo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new D,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new D),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new fo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new D,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new D),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,l=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){l=!0;for(const M of e.hand.values()){const x=t.getJointPose(M,n),_=this._getHandJoint(h,M);x!==null&&(_.matrix.fromArray(x.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=x.radius),_.visible=x!==null}const d=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=d.position.distanceTo(p.position),v=.02,y=.005;h.inputState.pinching&&m>v+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=v-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(AA)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=l!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new fo;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}const TA=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,bA=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class CA{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new Gt,s=e.properties.get(i);s.__webglTexture=t.texture,(t.depthNear!=n.depthNear||t.depthFar!=n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}render(e,t){if(this.texture!==null){if(this.mesh===null){const n=t.cameras[0].viewport,i=new wi({vertexShader:TA,fragmentShader:bA,uniforms:{depthColor:{value:this.texture},depthWidth:{value:n.z},depthHeight:{value:n.w}}});this.mesh=new en(new Ao(20,20),i)}e.render(this.mesh,t)}}reset(){this.texture=null,this.mesh=null}}class RA extends cr{constructor(e,t){super();const n=this;let i=null,s=1,l=null,c="local-floor",u=1,h=null,d=null,p=null,m=null,v=null,y=null;const M=new CA,x=t.getContextAttributes();let _=null,E=null;const w=[],T=[],U=new ue;let P=null;const L=new hn;L.layers.enable(1),L.viewport=new Ct;const z=new hn;z.layers.enable(2),z.viewport=new Ct;const R=[L,z],b=new a_;b.layers.enable(1),b.layers.enable(2);let F=null,q=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ne){let pe=w[ne];return pe===void 0&&(pe=new sf,w[ne]=pe),pe.getTargetRaySpace()},this.getControllerGrip=function(ne){let pe=w[ne];return pe===void 0&&(pe=new sf,w[ne]=pe),pe.getGripSpace()},this.getHand=function(ne){let pe=w[ne];return pe===void 0&&(pe=new sf,w[ne]=pe),pe.getHandSpace()};function k(ne){const pe=T.indexOf(ne.inputSource);if(pe===-1)return;const Ce=w[pe];Ce!==void 0&&(Ce.update(ne.inputSource,ne.frame,h||l),Ce.dispatchEvent({type:ne.type,data:ne.inputSource}))}function Z(){i.removeEventListener("select",k),i.removeEventListener("selectstart",k),i.removeEventListener("selectend",k),i.removeEventListener("squeeze",k),i.removeEventListener("squeezestart",k),i.removeEventListener("squeezeend",k),i.removeEventListener("end",Z),i.removeEventListener("inputsourceschange",se);for(let ne=0;ne<w.length;ne++){const pe=T[ne];pe!==null&&(T[ne]=null,w[ne].disconnect(pe))}F=null,q=null,M.reset(),e.setRenderTarget(_),v=null,m=null,p=null,i=null,E=null,Be.stop(),n.isPresenting=!1,e.setPixelRatio(P),e.setSize(U.width,U.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(ne){s=ne,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(ne){c=ne,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||l},this.setReferenceSpace=function(ne){h=ne},this.getBaseLayer=function(){return m!==null?m:v},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return i},this.setSession=async function(ne){if(i=ne,i!==null){if(_=e.getRenderTarget(),i.addEventListener("select",k),i.addEventListener("selectstart",k),i.addEventListener("selectend",k),i.addEventListener("squeeze",k),i.addEventListener("squeezestart",k),i.addEventListener("squeezeend",k),i.addEventListener("end",Z),i.addEventListener("inputsourceschange",se),x.xrCompatible!==!0&&await t.makeXRCompatible(),P=e.getPixelRatio(),e.getSize(U),i.renderState.layers===void 0){const pe={antialias:x.antialias,alpha:!0,depth:x.depth,stencil:x.stencil,framebufferScaleFactor:s};v=new XRWebGLLayer(i,t,pe),i.updateRenderState({baseLayer:v}),e.setPixelRatio(1),e.setSize(v.framebufferWidth,v.framebufferHeight,!1),E=new Mi(v.framebufferWidth,v.framebufferHeight,{format:kn,type:Bi,colorSpace:e.outputColorSpace,stencilBuffer:x.stencil})}else{let pe=null,Ce=null,ye=null;x.depth&&(ye=x.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,pe=x.stencil?vo:ds,Ce=x.stencil?wo:vs);const et={colorFormat:t.RGBA8,depthFormat:ye,scaleFactor:s};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(et),i.updateRenderState({layers:[m]}),e.setPixelRatio(1),e.setSize(m.textureWidth,m.textureHeight,!1),E=new Mi(m.textureWidth,m.textureHeight,{format:kn,type:Bi,depthTexture:new zd(m.textureWidth,m.textureHeight,Ce,void 0,void 0,void 0,void 0,void 0,void 0,pe),stencilBuffer:x.stencil,colorSpace:e.outputColorSpace,samples:x.antialias?4:0});const st=e.properties.get(E);st.__ignoreDepthValues=m.ignoreDepthValues}E.isXRRenderTarget=!0,this.setFoveation(u),h=null,l=await i.requestReferenceSpace(c),Be.setContext(i),Be.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function se(ne){for(let pe=0;pe<ne.removed.length;pe++){const Ce=ne.removed[pe],ye=T.indexOf(Ce);ye>=0&&(T[ye]=null,w[ye].disconnect(Ce))}for(let pe=0;pe<ne.added.length;pe++){const Ce=ne.added[pe];let ye=T.indexOf(Ce);if(ye===-1){for(let st=0;st<w.length;st++)if(st>=T.length){T.push(Ce),ye=st;break}else if(T[st]===null){T[st]=Ce,ye=st;break}if(ye===-1)break}const et=w[ye];et&&et.connect(Ce)}}const ae=new D,ve=new D;function H(ne,pe,Ce){ae.setFromMatrixPosition(pe.matrixWorld),ve.setFromMatrixPosition(Ce.matrixWorld);const ye=ae.distanceTo(ve),et=pe.projectionMatrix.elements,st=Ce.projectionMatrix.elements,Qe=et[14]/(et[10]-1),W=et[14]/(et[10]+1),ce=(et[9]+1)/et[5],oe=(et[9]-1)/et[5],Se=(et[8]-1)/et[0],me=(st[8]+1)/st[0],_e=Qe*Se,N=Qe*me,C=ye/(-Se+me),Y=C*-Se;pe.matrixWorld.decompose(ne.position,ne.quaternion,ne.scale),ne.translateX(Y),ne.translateZ(C),ne.matrixWorld.compose(ne.position,ne.quaternion,ne.scale),ne.matrixWorldInverse.copy(ne.matrixWorld).invert();const re=Qe+C,le=W+C,fe=_e-Y,qe=N+(ye-Y),de=ce*W/le*re,He=oe*W/le*re;ne.projectionMatrix.makePerspective(fe,qe,de,He,re,le),ne.projectionMatrixInverse.copy(ne.projectionMatrix).invert()}function $(ne,pe){pe===null?ne.matrixWorld.copy(ne.matrix):ne.matrixWorld.multiplyMatrices(pe.matrixWorld,ne.matrix),ne.matrixWorldInverse.copy(ne.matrixWorld).invert()}this.updateCamera=function(ne){if(i===null)return;M.texture!==null&&(ne.near=M.depthNear,ne.far=M.depthFar),b.near=z.near=L.near=ne.near,b.far=z.far=L.far=ne.far,(F!==b.near||q!==b.far)&&(i.updateRenderState({depthNear:b.near,depthFar:b.far}),F=b.near,q=b.far,L.near=F,L.far=q,z.near=F,z.far=q,L.updateProjectionMatrix(),z.updateProjectionMatrix(),ne.updateProjectionMatrix());const pe=ne.parent,Ce=b.cameras;$(b,pe);for(let ye=0;ye<Ce.length;ye++)$(Ce[ye],pe);Ce.length===2?H(b,L,z):b.projectionMatrix.copy(L.projectionMatrix),J(ne,b,pe)};function J(ne,pe,Ce){Ce===null?ne.matrix.copy(pe.matrixWorld):(ne.matrix.copy(Ce.matrixWorld),ne.matrix.invert(),ne.matrix.multiply(pe.matrixWorld)),ne.matrix.decompose(ne.position,ne.quaternion,ne.scale),ne.updateMatrixWorld(!0),ne.projectionMatrix.copy(pe.projectionMatrix),ne.projectionMatrixInverse.copy(pe.projectionMatrixInverse),ne.isPerspectiveCamera&&(ne.fov=_o*2*Math.atan(1/ne.projectionMatrix.elements[5]),ne.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(m===null&&v===null))return u},this.setFoveation=function(ne){u=ne,m!==null&&(m.fixedFoveation=ne),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=ne)},this.hasDepthSensing=function(){return M.texture!==null};let he=null;function Ie(ne,pe){if(d=pe.getViewerPose(h||l),y=pe,d!==null){const Ce=d.views;v!==null&&(e.setRenderTargetFramebuffer(E,v.framebuffer),e.setRenderTarget(E));let ye=!1;Ce.length!==b.cameras.length&&(b.cameras.length=0,ye=!0);for(let st=0;st<Ce.length;st++){const Qe=Ce[st];let W=null;if(v!==null)W=v.getViewport(Qe);else{const oe=p.getViewSubImage(m,Qe);W=oe.viewport,st===0&&(e.setRenderTargetTextures(E,oe.colorTexture,m.ignoreDepthValues?void 0:oe.depthStencilTexture),e.setRenderTarget(E))}let ce=R[st];ce===void 0&&(ce=new hn,ce.layers.enable(st),ce.viewport=new Ct,R[st]=ce),ce.matrix.fromArray(Qe.transform.matrix),ce.matrix.decompose(ce.position,ce.quaternion,ce.scale),ce.projectionMatrix.fromArray(Qe.projectionMatrix),ce.projectionMatrixInverse.copy(ce.projectionMatrix).invert(),ce.viewport.set(W.x,W.y,W.width,W.height),st===0&&(b.matrix.copy(ce.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),ye===!0&&b.cameras.push(ce)}const et=i.enabledFeatures;if(et&&et.includes("depth-sensing")){const st=p.getDepthInformation(Ce[0]);st&&st.isValid&&st.texture&&M.init(e,st,i.renderState)}}for(let Ce=0;Ce<w.length;Ce++){const ye=T[Ce],et=w[Ce];ye!==null&&et!==void 0&&et.update(ye,pe,h||l)}M.render(e,b),he&&he(ne,pe),pe.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:pe}),y=null}const Be=new e_;Be.setAnimationLoop(Ie),this.setAnimationLoop=function(ne){he=ne},this.dispose=function(){}}}const Kr=new ni,PA=new Ke;function IA(r,e){function t(x,_){x.matrixAutoUpdate===!0&&x.updateMatrix(),_.value.copy(x.matrix)}function n(x,_){_.color.getRGB(x.fogColor.value,Jv(r)),_.isFog?(x.fogNear.value=_.near,x.fogFar.value=_.far):_.isFogExp2&&(x.fogDensity.value=_.density)}function i(x,_,E,w,T){_.isMeshBasicMaterial||_.isMeshLambertMaterial?s(x,_):_.isMeshToonMaterial?(s(x,_),p(x,_)):_.isMeshPhongMaterial?(s(x,_),d(x,_)):_.isMeshStandardMaterial?(s(x,_),m(x,_),_.isMeshPhysicalMaterial&&v(x,_,T)):_.isMeshMatcapMaterial?(s(x,_),y(x,_)):_.isMeshDepthMaterial?s(x,_):_.isMeshDistanceMaterial?(s(x,_),M(x,_)):_.isMeshNormalMaterial?s(x,_):_.isLineBasicMaterial?(l(x,_),_.isLineDashedMaterial&&c(x,_)):_.isPointsMaterial?u(x,_,E,w):_.isSpriteMaterial?h(x,_):_.isShadowMaterial?(x.color.value.copy(_.color),x.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function s(x,_){x.opacity.value=_.opacity,_.color&&x.diffuse.value.copy(_.color),_.emissive&&x.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(x.map.value=_.map,t(_.map,x.mapTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.bumpMap&&(x.bumpMap.value=_.bumpMap,t(_.bumpMap,x.bumpMapTransform),x.bumpScale.value=_.bumpScale,_.side===Ln&&(x.bumpScale.value*=-1)),_.normalMap&&(x.normalMap.value=_.normalMap,t(_.normalMap,x.normalMapTransform),x.normalScale.value.copy(_.normalScale),_.side===Ln&&x.normalScale.value.negate()),_.displacementMap&&(x.displacementMap.value=_.displacementMap,t(_.displacementMap,x.displacementMapTransform),x.displacementScale.value=_.displacementScale,x.displacementBias.value=_.displacementBias),_.emissiveMap&&(x.emissiveMap.value=_.emissiveMap,t(_.emissiveMap,x.emissiveMapTransform)),_.specularMap&&(x.specularMap.value=_.specularMap,t(_.specularMap,x.specularMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest);const E=e.get(_),w=E.envMap,T=E.envMapRotation;if(w&&(x.envMap.value=w,Kr.copy(T),Kr.x*=-1,Kr.y*=-1,Kr.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(Kr.y*=-1,Kr.z*=-1),x.envMapRotation.value.setFromMatrix4(PA.makeRotationFromEuler(Kr)),x.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=_.reflectivity,x.ior.value=_.ior,x.refractionRatio.value=_.refractionRatio),_.lightMap){x.lightMap.value=_.lightMap;const U=r._useLegacyLights===!0?Math.PI:1;x.lightMapIntensity.value=_.lightMapIntensity*U,t(_.lightMap,x.lightMapTransform)}_.aoMap&&(x.aoMap.value=_.aoMap,x.aoMapIntensity.value=_.aoMapIntensity,t(_.aoMap,x.aoMapTransform))}function l(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,_.map&&(x.map.value=_.map,t(_.map,x.mapTransform))}function c(x,_){x.dashSize.value=_.dashSize,x.totalSize.value=_.dashSize+_.gapSize,x.scale.value=_.scale}function u(x,_,E,w){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.size.value=_.size*E,x.scale.value=w*.5,_.map&&(x.map.value=_.map,t(_.map,x.uvTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest)}function h(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.rotation.value=_.rotation,_.map&&(x.map.value=_.map,t(_.map,x.mapTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest)}function d(x,_){x.specular.value.copy(_.specular),x.shininess.value=Math.max(_.shininess,1e-4)}function p(x,_){_.gradientMap&&(x.gradientMap.value=_.gradientMap)}function m(x,_){x.metalness.value=_.metalness,_.metalnessMap&&(x.metalnessMap.value=_.metalnessMap,t(_.metalnessMap,x.metalnessMapTransform)),x.roughness.value=_.roughness,_.roughnessMap&&(x.roughnessMap.value=_.roughnessMap,t(_.roughnessMap,x.roughnessMapTransform)),_.envMap&&(x.envMapIntensity.value=_.envMapIntensity)}function v(x,_,E){x.ior.value=_.ior,_.sheen>0&&(x.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),x.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(x.sheenColorMap.value=_.sheenColorMap,t(_.sheenColorMap,x.sheenColorMapTransform)),_.sheenRoughnessMap&&(x.sheenRoughnessMap.value=_.sheenRoughnessMap,t(_.sheenRoughnessMap,x.sheenRoughnessMapTransform))),_.clearcoat>0&&(x.clearcoat.value=_.clearcoat,x.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(x.clearcoatMap.value=_.clearcoatMap,t(_.clearcoatMap,x.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,t(_.clearcoatRoughnessMap,x.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(x.clearcoatNormalMap.value=_.clearcoatNormalMap,t(_.clearcoatNormalMap,x.clearcoatNormalMapTransform),x.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===Ln&&x.clearcoatNormalScale.value.negate())),_.iridescence>0&&(x.iridescence.value=_.iridescence,x.iridescenceIOR.value=_.iridescenceIOR,x.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(x.iridescenceMap.value=_.iridescenceMap,t(_.iridescenceMap,x.iridescenceMapTransform)),_.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=_.iridescenceThicknessMap,t(_.iridescenceThicknessMap,x.iridescenceThicknessMapTransform))),_.transmission>0&&(x.transmission.value=_.transmission,x.transmissionSamplerMap.value=E.texture,x.transmissionSamplerSize.value.set(E.width,E.height),_.transmissionMap&&(x.transmissionMap.value=_.transmissionMap,t(_.transmissionMap,x.transmissionMapTransform)),x.thickness.value=_.thickness,_.thicknessMap&&(x.thicknessMap.value=_.thicknessMap,t(_.thicknessMap,x.thicknessMapTransform)),x.attenuationDistance.value=_.attenuationDistance,x.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(x.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(x.anisotropyMap.value=_.anisotropyMap,t(_.anisotropyMap,x.anisotropyMapTransform))),x.specularIntensity.value=_.specularIntensity,x.specularColor.value.copy(_.specularColor),_.specularColorMap&&(x.specularColorMap.value=_.specularColorMap,t(_.specularColorMap,x.specularColorMapTransform)),_.specularIntensityMap&&(x.specularIntensityMap.value=_.specularIntensityMap,t(_.specularIntensityMap,x.specularIntensityMapTransform))}function y(x,_){_.matcap&&(x.matcap.value=_.matcap)}function M(x,_){const E=e.get(_).light;x.referencePosition.value.setFromMatrixPosition(E.matrixWorld),x.nearDistance.value=E.shadow.camera.near,x.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function LA(r,e,t,n){let i={},s={},l=[];const c=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function u(E,w){const T=w.program;n.uniformBlockBinding(E,T)}function h(E,w){let T=i[E.id];T===void 0&&(y(E),T=d(E),i[E.id]=T,E.addEventListener("dispose",x));const U=w.program;n.updateUBOMapping(E,U);const P=e.render.frame;s[E.id]!==P&&(m(E),s[E.id]=P)}function d(E){const w=p();E.__bindingPointIndex=w;const T=r.createBuffer(),U=E.__size,P=E.usage;return r.bindBuffer(r.UNIFORM_BUFFER,T),r.bufferData(r.UNIFORM_BUFFER,U,P),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,w,T),T}function p(){for(let E=0;E<c;E++)if(l.indexOf(E)===-1)return l.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(E){const w=i[E.id],T=E.uniforms,U=E.__cache;r.bindBuffer(r.UNIFORM_BUFFER,w);for(let P=0,L=T.length;P<L;P++){const z=Array.isArray(T[P])?T[P]:[T[P]];for(let R=0,b=z.length;R<b;R++){const F=z[R];if(v(F,P,R,U)===!0){const q=F.__offset,k=Array.isArray(F.value)?F.value:[F.value];let Z=0;for(let se=0;se<k.length;se++){const ae=k[se],ve=M(ae);typeof ae=="number"||typeof ae=="boolean"?(F.__data[0]=ae,r.bufferSubData(r.UNIFORM_BUFFER,q+Z,F.__data)):ae.isMatrix3?(F.__data[0]=ae.elements[0],F.__data[1]=ae.elements[1],F.__data[2]=ae.elements[2],F.__data[3]=0,F.__data[4]=ae.elements[3],F.__data[5]=ae.elements[4],F.__data[6]=ae.elements[5],F.__data[7]=0,F.__data[8]=ae.elements[6],F.__data[9]=ae.elements[7],F.__data[10]=ae.elements[8],F.__data[11]=0):(ae.toArray(F.__data,Z),Z+=ve.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,q,F.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function v(E,w,T,U){const P=E.value,L=w+"_"+T;if(U[L]===void 0)return typeof P=="number"||typeof P=="boolean"?U[L]=P:U[L]=P.clone(),!0;{const z=U[L];if(typeof P=="number"||typeof P=="boolean"){if(z!==P)return U[L]=P,!0}else if(z.equals(P)===!1)return z.copy(P),!0}return!1}function y(E){const w=E.uniforms;let T=0;const U=16;for(let L=0,z=w.length;L<z;L++){const R=Array.isArray(w[L])?w[L]:[w[L]];for(let b=0,F=R.length;b<F;b++){const q=R[b],k=Array.isArray(q.value)?q.value:[q.value];for(let Z=0,se=k.length;Z<se;Z++){const ae=k[Z],ve=M(ae),H=T%U;H!==0&&U-H<ve.boundary&&(T+=U-H),q.__data=new Float32Array(ve.storage/Float32Array.BYTES_PER_ELEMENT),q.__offset=T,T+=ve.storage}}}const P=T%U;return P>0&&(T+=U-P),E.__size=T,E.__cache={},this}function M(E){const w={boundary:0,storage:0};return typeof E=="number"||typeof E=="boolean"?(w.boundary=4,w.storage=4):E.isVector2?(w.boundary=8,w.storage=8):E.isVector3||E.isColor?(w.boundary=16,w.storage=12):E.isVector4?(w.boundary=16,w.storage=16):E.isMatrix3?(w.boundary=48,w.storage=48):E.isMatrix4?(w.boundary=64,w.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),w}function x(E){const w=E.target;w.removeEventListener("dispose",x);const T=l.indexOf(w.__bindingPointIndex);l.splice(T,1),r.deleteBuffer(i[w.id]),delete i[w.id],delete s[w.id]}function _(){for(const E in i)r.deleteBuffer(i[E]);l=[],i={},s={}}return{bind:u,update:h,dispose:_}}class l_{constructor(e={}){const{canvas:t=Xv(),context:n=null,depth:i=!0,stencil:s=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");m=n.getContextAttributes().alpha}else m=l;const v=new Uint32Array(4),y=new Int32Array(4);let M=null,x=null;const _=[],E=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=fi,this._useLegacyLights=!1,this.toneMapping=zi,this.toneMappingExposure=1;const w=this;let T=!1,U=0,P=0,L=null,z=-1,R=null;const b=new Ct,F=new Ct;let q=null;const k=new Le(0);let Z=0,se=t.width,ae=t.height,ve=1,H=null,$=null;const J=new Ct(0,0,se,ae),he=new Ct(0,0,se,ae);let Ie=!1;const Be=new Ha;let ne=!1,pe=!1;const Ce=new Ke,ye=new ue,et=new D,st={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Qe(){return L===null?ve:1}let W=n;function ce(I,X){const Q=t.getContext(I,X);return Q!==null?Q:null}try{const I={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:d,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${eu}`),t.addEventListener("webglcontextlost",Ee,!1),t.addEventListener("webglcontextrestored",we,!1),t.addEventListener("webglcontextcreationerror",Xe,!1),W===null){const X="webgl2";if(W=ce(X,I),W===null)throw ce(X)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(I){throw console.error("THREE.WebGLRenderer: "+I.message),I}let oe,Se,me,_e,N,C,Y,re,le,fe,qe,de,He,Ze,Me,Ne,nt,Oe,Fe,pt,mt,Et,_t,Dt;function Ve(){oe=new Xw(W),oe.init(),Se=new Bw(W,oe,e),Et=new o_(W,oe),me=new wA(W),_e=new jw(W),N=new hA,C=new EA(W,oe,me,N,Se,Et,_e),Y=new Hw(w),re=new Ww(w),le=new eM(W),_t=new Fw(W,le),fe=new qw(W,le,_e,_t),qe=new Jw(W,fe,le,_e),Fe=new Zw(W,Se,C),Ne=new kw(N),de=new uA(w,Y,re,oe,Se,_t,Ne),He=new IA(w,N),Ze=new dA,Me=new yA(oe),Oe=new Ow(w,Y,re,me,qe,m,u),nt=new MA(w,qe,Se),Dt=new LA(W,_e,Se,me),pt=new zw(W,oe,_e),mt=new Yw(W,oe,_e),_e.programs=de.programs,w.capabilities=Se,w.extensions=oe,w.properties=N,w.renderLists=Ze,w.shadowMap=nt,w.state=me,w.info=_e}Ve();const B=new RA(w,W);this.xr=B,this.getContext=function(){return W},this.getContextAttributes=function(){return W.getContextAttributes()},this.forceContextLoss=function(){const I=oe.get("WEBGL_lose_context");I&&I.loseContext()},this.forceContextRestore=function(){const I=oe.get("WEBGL_lose_context");I&&I.restoreContext()},this.getPixelRatio=function(){return ve},this.setPixelRatio=function(I){I!==void 0&&(ve=I,this.setSize(se,ae,!1))},this.getSize=function(I){return I.set(se,ae)},this.setSize=function(I,X,Q=!0){if(B.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}se=I,ae=X,t.width=Math.floor(I*ve),t.height=Math.floor(X*ve),Q===!0&&(t.style.width=I+"px",t.style.height=X+"px"),this.setViewport(0,0,I,X)},this.getDrawingBufferSize=function(I){return I.set(se*ve,ae*ve).floor()},this.setDrawingBufferSize=function(I,X,Q){se=I,ae=X,ve=Q,t.width=Math.floor(I*Q),t.height=Math.floor(X*Q),this.setViewport(0,0,I,X)},this.getCurrentViewport=function(I){return I.copy(b)},this.getViewport=function(I){return I.copy(J)},this.setViewport=function(I,X,Q,ee){I.isVector4?J.set(I.x,I.y,I.z,I.w):J.set(I,X,Q,ee),me.viewport(b.copy(J).multiplyScalar(ve).round())},this.getScissor=function(I){return I.copy(he)},this.setScissor=function(I,X,Q,ee){I.isVector4?he.set(I.x,I.y,I.z,I.w):he.set(I,X,Q,ee),me.scissor(F.copy(he).multiplyScalar(ve).round())},this.getScissorTest=function(){return Ie},this.setScissorTest=function(I){me.setScissorTest(Ie=I)},this.setOpaqueSort=function(I){H=I},this.setTransparentSort=function(I){$=I},this.getClearColor=function(I){return I.copy(Oe.getClearColor())},this.setClearColor=function(){Oe.setClearColor.apply(Oe,arguments)},this.getClearAlpha=function(){return Oe.getClearAlpha()},this.setClearAlpha=function(){Oe.setClearAlpha.apply(Oe,arguments)},this.clear=function(I=!0,X=!0,Q=!0){let ee=0;if(I){let K=!1;if(L!==null){const Re=L.texture.format;K=Re===Rd||Re===Cd||Re===bd}if(K){const Re=L.texture.type,Ge=Re===Bi||Re===vs||Re===Md||Re===wo||Re===Ed||Re===Ad,Je=Oe.getClearColor(),tt=Oe.getClearAlpha(),it=Je.r,$e=Je.g,rt=Je.b;Ge?(v[0]=it,v[1]=$e,v[2]=rt,v[3]=tt,W.clearBufferuiv(W.COLOR,0,v)):(y[0]=it,y[1]=$e,y[2]=rt,y[3]=tt,W.clearBufferiv(W.COLOR,0,y))}else ee|=W.COLOR_BUFFER_BIT}X&&(ee|=W.DEPTH_BUFFER_BIT),Q&&(ee|=W.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),W.clear(ee)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ee,!1),t.removeEventListener("webglcontextrestored",we,!1),t.removeEventListener("webglcontextcreationerror",Xe,!1),Ze.dispose(),Me.dispose(),N.dispose(),Y.dispose(),re.dispose(),qe.dispose(),_t.dispose(),Dt.dispose(),de.dispose(),B.dispose(),B.removeEventListener("sessionstart",Gn),B.removeEventListener("sessionend",Wn),Vi.stop()};function Ee(I){I.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),T=!0}function we(){console.log("THREE.WebGLRenderer: Context Restored."),T=!1;const I=_e.autoReset,X=nt.enabled,Q=nt.autoUpdate,ee=nt.needsUpdate,K=nt.type;Ve(),_e.autoReset=I,nt.enabled=X,nt.autoUpdate=Q,nt.needsUpdate=ee,nt.type=K}function Xe(I){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",I.statusMessage)}function Ye(I){const X=I.target;X.removeEventListener("dispose",Ye),Pt(X)}function Pt(I){Lt(I),N.remove(I)}function Lt(I){const X=N.get(I).programs;X!==void 0&&(X.forEach(function(Q){de.releaseProgram(Q)}),I.isShaderMaterial&&de.releaseShaderCache(I))}this.renderBufferDirect=function(I,X,Q,ee,K,Re){X===null&&(X=st);const Ge=K.isMesh&&K.matrixWorld.determinant()<0,Je=bu(I,X,Q,ee,K);me.setMaterial(ee,Ge);let tt=Q.index,it=1;if(ee.wireframe===!0){if(tt=fe.getWireframeAttribute(Q),tt===void 0)return;it=2}const $e=Q.drawRange,rt=Q.attributes.position;let Ft=$e.start*it,An=($e.start+$e.count)*it;Re!==null&&(Ft=Math.max(Ft,Re.start*it),An=Math.min(An,(Re.start+Re.count)*it)),tt!==null?(Ft=Math.max(Ft,0),An=Math.min(An,tt.count)):rt!=null&&(Ft=Math.max(Ft,0),An=Math.min(An,rt.count));const Wt=An-Ft;if(Wt<0||Wt===1/0)return;_t.setup(K,ee,Je,Q,tt);let gn,yt=pt;if(tt!==null&&(gn=le.get(tt),yt=mt,yt.setIndex(gn)),K.isMesh)ee.wireframe===!0?(me.setLineWidth(ee.wireframeLinewidth*Qe()),yt.setMode(W.LINES)):yt.setMode(W.TRIANGLES);else if(K.isLine){let De=ee.linewidth;De===void 0&&(De=1),me.setLineWidth(De*Qe()),K.isLineSegments?yt.setMode(W.LINES):K.isLineLoop?yt.setMode(W.LINE_LOOP):yt.setMode(W.LINE_STRIP)}else K.isPoints?yt.setMode(W.POINTS):K.isSprite&&yt.setMode(W.TRIANGLES);if(K.isBatchedMesh)yt.renderMultiDraw(K._multiDrawStarts,K._multiDrawCounts,K._multiDrawCount);else if(K.isInstancedMesh)yt.renderInstances(Ft,Wt,K.count);else if(Q.isInstancedBufferGeometry){const De=Q._maxInstanceCount!==void 0?Q._maxInstanceCount:1/0,Tt=Math.min(Q.instanceCount,De);yt.renderInstances(Ft,Wt,Tt)}else yt.render(Ft,Wt)};function Ut(I,X,Q){I.transparent===!0&&I.side===Ui&&I.forceSinglePass===!1?(I.side=Ln,I.needsUpdate=!0,Ti(I,X,Q),I.side=sr,I.needsUpdate=!0,Ti(I,X,Q),I.side=Ui):Ti(I,X,Q)}this.compile=function(I,X,Q=null){Q===null&&(Q=I),x=Me.get(Q),x.init(),E.push(x),Q.traverseVisible(function(K){K.isLight&&K.layers.test(X.layers)&&(x.pushLight(K),K.castShadow&&x.pushShadow(K))}),I!==Q&&I.traverseVisible(function(K){K.isLight&&K.layers.test(X.layers)&&(x.pushLight(K),K.castShadow&&x.pushShadow(K))}),x.setupLights(w._useLegacyLights);const ee=new Set;return I.traverse(function(K){const Re=K.material;if(Re)if(Array.isArray(Re))for(let Ge=0;Ge<Re.length;Ge++){const Je=Re[Ge];Ut(Je,Q,K),ee.add(Je)}else Ut(Re,Q,K),ee.add(Re)}),E.pop(),x=null,ee},this.compileAsync=function(I,X,Q=null){const ee=this.compile(I,X,Q);return new Promise(K=>{function Re(){if(ee.forEach(function(Ge){N.get(Ge).currentProgram.isReady()&&ee.delete(Ge)}),ee.size===0){K(I);return}setTimeout(Re,10)}oe.get("KHR_parallel_shader_compile")!==null?Re():setTimeout(Re,10)})};let sn=null;function It(I){sn&&sn(I)}function Gn(){Vi.stop()}function Wn(){Vi.start()}const Vi=new e_;Vi.setAnimationLoop(It),typeof self<"u"&&Vi.setContext(self),this.setAnimationLoop=function(I){sn=I,B.setAnimationLoop(I),I===null?Vi.stop():Vi.start()},B.addEventListener("sessionstart",Gn),B.addEventListener("sessionend",Wn),this.render=function(I,X){if(X!==void 0&&X.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(T===!0)return;I.matrixWorldAutoUpdate===!0&&I.updateMatrixWorld(),X.parent===null&&X.matrixWorldAutoUpdate===!0&&X.updateMatrixWorld(),B.enabled===!0&&B.isPresenting===!0&&(B.cameraAutoUpdate===!0&&B.updateCamera(X),X=B.getCamera()),I.isScene===!0&&I.onBeforeRender(w,I,X,L),x=Me.get(I,E.length),x.init(),E.push(x),Ce.multiplyMatrices(X.projectionMatrix,X.matrixWorldInverse),Be.setFromProjectionMatrix(Ce),pe=this.localClippingEnabled,ne=Ne.init(this.clippingPlanes,pe),M=Ze.get(I,_.length),M.init(),_.push(M),ja(I,X,0,w.sortObjects),M.finish(),w.sortObjects===!0&&M.sort(H,$),this.info.render.frame++,ne===!0&&Ne.beginShadows();const Q=x.state.shadowsArray;if(nt.render(Q,I,X),ne===!0&&Ne.endShadows(),this.info.autoReset===!0&&this.info.reset(),(B.enabled===!1||B.isPresenting===!1||B.hasDepthSensing()===!1)&&Oe.render(M,I),x.setupLights(w._useLegacyLights),X.isArrayCamera){const ee=X.cameras;for(let K=0,Re=ee.length;K<Re;K++){const Ge=ee[K];Za(M,I,Ge,Ge.viewport)}}else Za(M,I,X);L!==null&&(C.updateMultisampleRenderTarget(L),C.updateRenderTargetMipmap(L)),I.isScene===!0&&I.onAfterRender(w,I,X),_t.resetDefaultState(),z=-1,R=null,E.pop(),E.length>0?x=E[E.length-1]:x=null,_.pop(),_.length>0?M=_[_.length-1]:M=null};function ja(I,X,Q,ee){if(I.visible===!1)return;if(I.layers.test(X.layers)){if(I.isGroup)Q=I.renderOrder;else if(I.isLOD)I.autoUpdate===!0&&I.update(X);else if(I.isLight)x.pushLight(I),I.castShadow&&x.pushShadow(I);else if(I.isSprite){if(!I.frustumCulled||Be.intersectsSprite(I)){ee&&et.setFromMatrixPosition(I.matrixWorld).applyMatrix4(Ce);const Ge=qe.update(I),Je=I.material;Je.visible&&M.push(I,Ge,Je,Q,et.z,null)}}else if((I.isMesh||I.isLine||I.isPoints)&&(!I.frustumCulled||Be.intersectsObject(I))){const Ge=qe.update(I),Je=I.material;if(ee&&(I.boundingSphere!==void 0?(I.boundingSphere===null&&I.computeBoundingSphere(),et.copy(I.boundingSphere.center)):(Ge.boundingSphere===null&&Ge.computeBoundingSphere(),et.copy(Ge.boundingSphere.center)),et.applyMatrix4(I.matrixWorld).applyMatrix4(Ce)),Array.isArray(Je)){const tt=Ge.groups;for(let it=0,$e=tt.length;it<$e;it++){const rt=tt[it],Ft=Je[rt.materialIndex];Ft&&Ft.visible&&M.push(I,Ge,Ft,Q,et.z,rt)}}else Je.visible&&M.push(I,Ge,Je,Q,et.z,null)}}const Re=I.children;for(let Ge=0,Je=Re.length;Ge<Je;Ge++)ja(Re[Ge],X,Q,ee)}function Za(I,X,Q,ee){const K=I.opaque,Re=I.transmissive,Ge=I.transparent;x.setupLightsView(Q),ne===!0&&Ne.setGlobalState(w.clippingPlanes,Q),Re.length>0&&Ja(K,Re,X,Q),ee&&me.viewport(b.copy(ee)),K.length>0&&ur(K,X,Q),Re.length>0&&ur(Re,X,Q),Ge.length>0&&ur(Ge,X,Q),me.buffers.depth.setTest(!0),me.buffers.depth.setMask(!0),me.buffers.color.setMask(!0),me.setPolygonOffset(!1)}function Ja(I,X,Q,ee){if((Q.isScene===!0?Q.overrideMaterial:null)!==null)return;if(x.state.transmissionRenderTarget===null){x.state.transmissionRenderTarget=new Mi(1,1,{generateMipmaps:!0,type:oe.has("EXT_color_buffer_half_float")||oe.has("EXT_color_buffer_float")?ya:Bi,minFilter:Oi,samples:4,stencilBuffer:s});const it=N.get(x.state.transmissionRenderTarget);it.__isTransmissionRenderTarget=!0}const Re=x.state.transmissionRenderTarget;w.getDrawingBufferSize(ye),Re.setSize(ye.x,ye.y);const Ge=w.getRenderTarget();w.setRenderTarget(Re),w.getClearColor(k),Z=w.getClearAlpha(),Z<1&&w.setClearColor(16777215,.5),w.clear();const Je=w.toneMapping;w.toneMapping=zi,ur(I,Q,ee),C.updateMultisampleRenderTarget(Re),C.updateRenderTargetMipmap(Re);let tt=!1;for(let it=0,$e=X.length;it<$e;it++){const rt=X[it],Ft=rt.object,An=rt.geometry,Wt=rt.material,gn=rt.group;if(Wt.side===Ui&&Ft.layers.test(ee.layers)){const yt=Wt.side;Wt.side=Ln,Wt.needsUpdate=!0,Ka(Ft,Q,ee,An,Wt,gn),Wt.side=yt,Wt.needsUpdate=!0,tt=!0}}tt===!0&&(C.updateMultisampleRenderTarget(Re),C.updateRenderTargetMipmap(Re)),w.setRenderTarget(Ge),w.setClearColor(k,Z),w.toneMapping=Je}function ur(I,X,Q){const ee=X.isScene===!0?X.overrideMaterial:null;for(let K=0,Re=I.length;K<Re;K++){const Ge=I[K],Je=Ge.object,tt=Ge.geometry,it=ee===null?Ge.material:ee,$e=Ge.group;Je.layers.test(Q.layers)&&Ka(Je,X,Q,tt,it,$e)}}function Ka(I,X,Q,ee,K,Re){I.onBeforeRender(w,X,Q,ee,K,Re),I.modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,I.matrixWorld),I.normalMatrix.getNormalMatrix(I.modelViewMatrix),K.onBeforeRender(w,X,Q,ee,I,Re),K.transparent===!0&&K.side===Ui&&K.forceSinglePass===!1?(K.side=Ln,K.needsUpdate=!0,w.renderBufferDirect(Q,X,ee,K,I,Re),K.side=sr,K.needsUpdate=!0,w.renderBufferDirect(Q,X,ee,K,I,Re),K.side=Ui):w.renderBufferDirect(Q,X,ee,K,I,Re),I.onAfterRender(w,X,Q,ee,K,Re)}function Ti(I,X,Q){X.isScene!==!0&&(X=st);const ee=N.get(I),K=x.state.lights,Re=x.state.shadowsArray,Ge=K.state.version,Je=de.getParameters(I,K.state,Re,X,Q),tt=de.getProgramCacheKey(Je);let it=ee.programs;ee.environment=I.isMeshStandardMaterial?X.environment:null,ee.fog=X.fog,ee.envMap=(I.isMeshStandardMaterial?re:Y).get(I.envMap||ee.environment),ee.envMapRotation=ee.environment!==null&&I.envMap===null?X.environmentRotation:I.envMapRotation,it===void 0&&(I.addEventListener("dispose",Ye),it=new Map,ee.programs=it);let $e=it.get(tt);if($e!==void 0){if(ee.currentProgram===$e&&ee.lightsStateVersion===Ge)return $a(I,Je),$e}else Je.uniforms=de.getUniforms(I),I.onBuild(Q,Je,w),I.onBeforeCompile(Je,w),$e=de.acquireProgram(Je,tt),it.set(tt,$e),ee.uniforms=Je.uniforms;const rt=ee.uniforms;return(!I.isShaderMaterial&&!I.isRawShaderMaterial||I.clipping===!0)&&(rt.clippingPlanes=Ne.uniform),$a(I,Je),ee.needsLights=Ru(I),ee.lightsStateVersion=Ge,ee.needsLights&&(rt.ambientLightColor.value=K.state.ambient,rt.lightProbe.value=K.state.probe,rt.directionalLights.value=K.state.directional,rt.directionalLightShadows.value=K.state.directionalShadow,rt.spotLights.value=K.state.spot,rt.spotLightShadows.value=K.state.spotShadow,rt.rectAreaLights.value=K.state.rectArea,rt.ltc_1.value=K.state.rectAreaLTC1,rt.ltc_2.value=K.state.rectAreaLTC2,rt.pointLights.value=K.state.point,rt.pointLightShadows.value=K.state.pointShadow,rt.hemisphereLights.value=K.state.hemi,rt.directionalShadowMap.value=K.state.directionalShadowMap,rt.directionalShadowMatrix.value=K.state.directionalShadowMatrix,rt.spotShadowMap.value=K.state.spotShadowMap,rt.spotLightMatrix.value=K.state.spotLightMatrix,rt.spotLightMap.value=K.state.spotLightMap,rt.pointShadowMap.value=K.state.pointShadowMap,rt.pointShadowMatrix.value=K.state.pointShadowMatrix),ee.currentProgram=$e,ee.uniformsList=null,$e}function Qa(I){if(I.uniformsList===null){const X=I.currentProgram.getUniforms();I.uniformsList=qc.seqWithValue(X.seq,I.uniforms)}return I.uniformsList}function $a(I,X){const Q=N.get(I);Q.outputColorSpace=X.outputColorSpace,Q.batching=X.batching,Q.instancing=X.instancing,Q.instancingColor=X.instancingColor,Q.instancingMorph=X.instancingMorph,Q.skinning=X.skinning,Q.morphTargets=X.morphTargets,Q.morphNormals=X.morphNormals,Q.morphColors=X.morphColors,Q.morphTargetsCount=X.morphTargetsCount,Q.numClippingPlanes=X.numClippingPlanes,Q.numIntersection=X.numClipIntersection,Q.vertexAlphas=X.vertexAlphas,Q.vertexTangents=X.vertexTangents,Q.toneMapping=X.toneMapping}function bu(I,X,Q,ee,K){X.isScene!==!0&&(X=st),C.resetTextureUnits();const Re=X.fog,Ge=ee.isMeshStandardMaterial?X.environment:null,Je=L===null?w.outputColorSpace:L.isXRRenderTarget===!0?L.texture.colorSpace:lr,tt=(ee.isMeshStandardMaterial?re:Y).get(ee.envMap||Ge),it=ee.vertexColors===!0&&!!Q.attributes.color&&Q.attributes.color.itemSize===4,$e=!!Q.attributes.tangent&&(!!ee.normalMap||ee.anisotropy>0),rt=!!Q.morphAttributes.position,Ft=!!Q.morphAttributes.normal,An=!!Q.morphAttributes.color;let Wt=zi;ee.toneMapped&&(L===null||L.isXRRenderTarget===!0)&&(Wt=w.toneMapping);const gn=Q.morphAttributes.position||Q.morphAttributes.normal||Q.morphAttributes.color,yt=gn!==void 0?gn.length:0,De=N.get(ee),Tt=x.state.lights;if(ne===!0&&(pe===!0||I!==R)){const Tn=I===R&&ee.id===z;Ne.setState(ee,I,Tn)}let gt=!1;ee.version===De.__version?(De.needsLights&&De.lightsStateVersion!==Tt.state.version||De.outputColorSpace!==Je||K.isBatchedMesh&&De.batching===!1||!K.isBatchedMesh&&De.batching===!0||K.isInstancedMesh&&De.instancing===!1||!K.isInstancedMesh&&De.instancing===!0||K.isSkinnedMesh&&De.skinning===!1||!K.isSkinnedMesh&&De.skinning===!0||K.isInstancedMesh&&De.instancingColor===!0&&K.instanceColor===null||K.isInstancedMesh&&De.instancingColor===!1&&K.instanceColor!==null||K.isInstancedMesh&&De.instancingMorph===!0&&K.morphTexture===null||K.isInstancedMesh&&De.instancingMorph===!1&&K.morphTexture!==null||De.envMap!==tt||ee.fog===!0&&De.fog!==Re||De.numClippingPlanes!==void 0&&(De.numClippingPlanes!==Ne.numPlanes||De.numIntersection!==Ne.numIntersection)||De.vertexAlphas!==it||De.vertexTangents!==$e||De.morphTargets!==rt||De.morphNormals!==Ft||De.morphColors!==An||De.toneMapping!==Wt||De.morphTargetsCount!==yt)&&(gt=!0):(gt=!0,De.__version=ee.version);let Bt=De.currentProgram;gt===!0&&(Bt=Ti(ee,X,K));let dn=!1,Xn=!1,bi=!1;const At=Bt.getUniforms(),qn=De.uniforms;if(me.useProgram(Bt.program)&&(dn=!0,Xn=!0,bi=!0),ee.id!==z&&(z=ee.id,Xn=!0),dn||R!==I){At.setValue(W,"projectionMatrix",I.projectionMatrix),At.setValue(W,"viewMatrix",I.matrixWorldInverse);const Tn=At.map.cameraPosition;Tn!==void 0&&Tn.setValue(W,et.setFromMatrixPosition(I.matrixWorld)),Se.logarithmicDepthBuffer&&At.setValue(W,"logDepthBufFC",2/(Math.log(I.far+1)/Math.LN2)),(ee.isMeshPhongMaterial||ee.isMeshToonMaterial||ee.isMeshLambertMaterial||ee.isMeshBasicMaterial||ee.isMeshStandardMaterial||ee.isShaderMaterial)&&At.setValue(W,"isOrthographic",I.isOrthographicCamera===!0),R!==I&&(R=I,Xn=!0,bi=!0)}if(K.isSkinnedMesh){At.setOptional(W,K,"bindMatrix"),At.setOptional(W,K,"bindMatrixInverse");const Tn=K.skeleton;Tn&&(Tn.boneTexture===null&&Tn.computeBoneTexture(),At.setValue(W,"boneTexture",Tn.boneTexture,C))}K.isBatchedMesh&&(At.setOptional(W,K,"batchingTexture"),At.setValue(W,"batchingTexture",K._matricesTexture,C));const Es=Q.morphAttributes;if((Es.position!==void 0||Es.normal!==void 0||Es.color!==void 0)&&Fe.update(K,Q,Bt),(Xn||De.receiveShadow!==K.receiveShadow)&&(De.receiveShadow=K.receiveShadow,At.setValue(W,"receiveShadow",K.receiveShadow)),ee.isMeshGouraudMaterial&&ee.envMap!==null&&(qn.envMap.value=tt,qn.flipEnvMap.value=tt.isCubeTexture&&tt.isRenderTargetTexture===!1?-1:1),ee.isMeshStandardMaterial&&ee.envMap===null&&X.environment!==null&&(qn.envMapIntensity.value=X.environmentIntensity),Xn&&(At.setValue(W,"toneMappingExposure",w.toneMappingExposure),De.needsLights&&Cu(qn,bi),Re&&ee.fog===!0&&He.refreshFogUniforms(qn,Re),He.refreshMaterialUniforms(qn,ee,ve,ae,x.state.transmissionRenderTarget),qc.upload(W,Qa(De),qn,C)),ee.isShaderMaterial&&ee.uniformsNeedUpdate===!0&&(qc.upload(W,Qa(De),qn,C),ee.uniformsNeedUpdate=!1),ee.isSpriteMaterial&&At.setValue(W,"center",K.center),At.setValue(W,"modelViewMatrix",K.modelViewMatrix),At.setValue(W,"normalMatrix",K.normalMatrix),At.setValue(W,"modelMatrix",K.matrixWorld),ee.isShaderMaterial||ee.isRawShaderMaterial){const Tn=ee.uniformsGroups;for(let hr=0,el=Tn.length;hr<el;hr++){const Un=Tn[hr];Dt.update(Un,Bt),Dt.bind(Un,Bt)}}return Bt}function Cu(I,X){I.ambientLightColor.needsUpdate=X,I.lightProbe.needsUpdate=X,I.directionalLights.needsUpdate=X,I.directionalLightShadows.needsUpdate=X,I.pointLights.needsUpdate=X,I.pointLightShadows.needsUpdate=X,I.spotLights.needsUpdate=X,I.spotLightShadows.needsUpdate=X,I.rectAreaLights.needsUpdate=X,I.hemisphereLights.needsUpdate=X}function Ru(I){return I.isMeshLambertMaterial||I.isMeshToonMaterial||I.isMeshPhongMaterial||I.isMeshStandardMaterial||I.isShadowMaterial||I.isShaderMaterial&&I.lights===!0}this.getActiveCubeFace=function(){return U},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return L},this.setRenderTargetTextures=function(I,X,Q){N.get(I.texture).__webglTexture=X,N.get(I.depthTexture).__webglTexture=Q;const ee=N.get(I);ee.__hasExternalTextures=!0,ee.__autoAllocateDepthBuffer=Q===void 0,ee.__autoAllocateDepthBuffer||oe.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ee.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(I,X){const Q=N.get(I);Q.__webglFramebuffer=X,Q.__useDefaultFramebuffer=X===void 0},this.setRenderTarget=function(I,X=0,Q=0){L=I,U=X,P=Q;let ee=!0,K=null,Re=!1,Ge=!1;if(I){const tt=N.get(I);tt.__useDefaultFramebuffer!==void 0?(me.bindFramebuffer(W.FRAMEBUFFER,null),ee=!1):tt.__webglFramebuffer===void 0?C.setupRenderTarget(I):tt.__hasExternalTextures&&C.rebindTextures(I,N.get(I.texture).__webglTexture,N.get(I.depthTexture).__webglTexture);const it=I.texture;(it.isData3DTexture||it.isDataArrayTexture||it.isCompressedArrayTexture)&&(Ge=!0);const $e=N.get(I).__webglFramebuffer;I.isWebGLCubeRenderTarget?(Array.isArray($e[X])?K=$e[X][Q]:K=$e[X],Re=!0):I.samples>0&&C.useMultisampledRTT(I)===!1?K=N.get(I).__webglMultisampledFramebuffer:Array.isArray($e)?K=$e[Q]:K=$e,b.copy(I.viewport),F.copy(I.scissor),q=I.scissorTest}else b.copy(J).multiplyScalar(ve).floor(),F.copy(he).multiplyScalar(ve).floor(),q=Ie;if(me.bindFramebuffer(W.FRAMEBUFFER,K)&&ee&&me.drawBuffers(I,K),me.viewport(b),me.scissor(F),me.setScissorTest(q),Re){const tt=N.get(I.texture);W.framebufferTexture2D(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,W.TEXTURE_CUBE_MAP_POSITIVE_X+X,tt.__webglTexture,Q)}else if(Ge){const tt=N.get(I.texture),it=X||0;W.framebufferTextureLayer(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,tt.__webglTexture,Q||0,it)}z=-1},this.readRenderTargetPixels=function(I,X,Q,ee,K,Re,Ge){if(!(I&&I.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Je=N.get(I).__webglFramebuffer;if(I.isWebGLCubeRenderTarget&&Ge!==void 0&&(Je=Je[Ge]),Je){me.bindFramebuffer(W.FRAMEBUFFER,Je);try{const tt=I.texture,it=tt.format,$e=tt.type;if(it!==kn&&Et.convert(it)!==W.getParameter(W.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const rt=$e===ya&&(oe.has("EXT_color_buffer_half_float")||oe.has("EXT_color_buffer_float"));if($e!==Bi&&Et.convert($e)!==W.getParameter(W.IMPLEMENTATION_COLOR_READ_TYPE)&&$e!==pi&&!rt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}X>=0&&X<=I.width-ee&&Q>=0&&Q<=I.height-K&&W.readPixels(X,Q,ee,K,Et.convert(it),Et.convert($e),Re)}finally{const tt=L!==null?N.get(L).__webglFramebuffer:null;me.bindFramebuffer(W.FRAMEBUFFER,tt)}}},this.copyFramebufferToTexture=function(I,X,Q=0){const ee=Math.pow(2,-Q),K=Math.floor(X.image.width*ee),Re=Math.floor(X.image.height*ee);C.setTexture2D(X,0),W.copyTexSubImage2D(W.TEXTURE_2D,Q,0,0,I.x,I.y,K,Re),me.unbindTexture()},this.copyTextureToTexture=function(I,X,Q,ee=0){const K=X.image.width,Re=X.image.height,Ge=Et.convert(Q.format),Je=Et.convert(Q.type);C.setTexture2D(Q,0),W.pixelStorei(W.UNPACK_FLIP_Y_WEBGL,Q.flipY),W.pixelStorei(W.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Q.premultiplyAlpha),W.pixelStorei(W.UNPACK_ALIGNMENT,Q.unpackAlignment),X.isDataTexture?W.texSubImage2D(W.TEXTURE_2D,ee,I.x,I.y,K,Re,Ge,Je,X.image.data):X.isCompressedTexture?W.compressedTexSubImage2D(W.TEXTURE_2D,ee,I.x,I.y,X.mipmaps[0].width,X.mipmaps[0].height,Ge,X.mipmaps[0].data):W.texSubImage2D(W.TEXTURE_2D,ee,I.x,I.y,Ge,Je,X.image),ee===0&&Q.generateMipmaps&&W.generateMipmap(W.TEXTURE_2D),me.unbindTexture()},this.copyTextureToTexture3D=function(I,X,Q,ee,K=0){const Re=Math.round(I.max.x-I.min.x),Ge=Math.round(I.max.y-I.min.y),Je=I.max.z-I.min.z+1,tt=Et.convert(ee.format),it=Et.convert(ee.type);let $e;if(ee.isData3DTexture)C.setTexture3D(ee,0),$e=W.TEXTURE_3D;else if(ee.isDataArrayTexture||ee.isCompressedArrayTexture)C.setTexture2DArray(ee,0),$e=W.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}W.pixelStorei(W.UNPACK_FLIP_Y_WEBGL,ee.flipY),W.pixelStorei(W.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ee.premultiplyAlpha),W.pixelStorei(W.UNPACK_ALIGNMENT,ee.unpackAlignment);const rt=W.getParameter(W.UNPACK_ROW_LENGTH),Ft=W.getParameter(W.UNPACK_IMAGE_HEIGHT),An=W.getParameter(W.UNPACK_SKIP_PIXELS),Wt=W.getParameter(W.UNPACK_SKIP_ROWS),gn=W.getParameter(W.UNPACK_SKIP_IMAGES),yt=Q.isCompressedTexture?Q.mipmaps[K]:Q.image;W.pixelStorei(W.UNPACK_ROW_LENGTH,yt.width),W.pixelStorei(W.UNPACK_IMAGE_HEIGHT,yt.height),W.pixelStorei(W.UNPACK_SKIP_PIXELS,I.min.x),W.pixelStorei(W.UNPACK_SKIP_ROWS,I.min.y),W.pixelStorei(W.UNPACK_SKIP_IMAGES,I.min.z),Q.isDataTexture||Q.isData3DTexture?W.texSubImage3D($e,K,X.x,X.y,X.z,Re,Ge,Je,tt,it,yt.data):ee.isCompressedArrayTexture?W.compressedTexSubImage3D($e,K,X.x,X.y,X.z,Re,Ge,Je,tt,yt.data):W.texSubImage3D($e,K,X.x,X.y,X.z,Re,Ge,Je,tt,it,yt),W.pixelStorei(W.UNPACK_ROW_LENGTH,rt),W.pixelStorei(W.UNPACK_IMAGE_HEIGHT,Ft),W.pixelStorei(W.UNPACK_SKIP_PIXELS,An),W.pixelStorei(W.UNPACK_SKIP_ROWS,Wt),W.pixelStorei(W.UNPACK_SKIP_IMAGES,gn),K===0&&ee.generateMipmaps&&W.generateMipmap($e),me.unbindTexture()},this.initTexture=function(I){I.isCubeTexture?C.setTextureCube(I,0):I.isData3DTexture?C.setTexture3D(I,0):I.isDataArrayTexture||I.isCompressedArrayTexture?C.setTexture2DArray(I,0):C.setTexture2D(I,0),me.unbindTexture()},this.resetState=function(){U=0,P=0,L=null,me.reset(),_t.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Fi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===ru?"display-p3":"srgb",t.unpackColorSpace=bt.workingColorSpace===za?"display-p3":"srgb"}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class au{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Le(e),this.density=t}clone(){return new au(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class lu{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Le(e),this.near=t,this.far=n}clone(){return new lu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}let Jc=class extends wt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new ni,this.environmentIntensity=1,this.environmentRotation=new ni,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}};class cu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Ta,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=ti()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return qv("THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ti()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ti()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Rn=new D;class _s{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Rn.fromBufferAttribute(this,t),Rn.applyMatrix4(e),this.setXYZ(t,Rn.x,Rn.y,Rn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Rn.fromBufferAttribute(this,t),Rn.applyNormalMatrix(e),this.setXYZ(t,Rn.x,Rn.y,Rn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Rn.fromBufferAttribute(this,t),Rn.transformDirection(e),this.setXYZ(t,Rn.x,Rn.y,Rn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=In(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ct(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=In(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=In(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=In(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=In(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),i=ct(i,this.array),s=ct(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Rt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new _s(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Hd extends mn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let $s;const Qo=new D,eo=new D,to=new D,no=new ue,$o=new ue,c_=new Ke,pc=new D,ea=new D,mc=new D,Rg=new ue,of=new ue,Pg=new ue;class u_ extends wt{constructor(e=new Hd){if(super(),this.isSprite=!0,this.type="Sprite",$s===void 0){$s=new ht;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new cu(t,5);$s.setIndex([0,1,2,0,2,3]),$s.setAttribute("position",new _s(n,3,0,!1)),$s.setAttribute("uv",new _s(n,2,3,!1))}this.geometry=$s,this.material=e,this.center=new ue(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),eo.setFromMatrixScale(this.matrixWorld),c_.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),to.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&eo.multiplyScalar(-to.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const l=this.center;gc(pc.set(-.5,-.5,0),to,l,eo,i,s),gc(ea.set(.5,-.5,0),to,l,eo,i,s),gc(mc.set(.5,.5,0),to,l,eo,i,s),Rg.set(0,0),of.set(1,0),Pg.set(1,1);let c=e.ray.intersectTriangle(pc,ea,mc,!1,Qo);if(c===null&&(gc(ea.set(-.5,.5,0),to,l,eo,i,s),of.set(0,1),c=e.ray.intersectTriangle(pc,mc,ea,!1,Qo),c===null))return;const u=e.ray.origin.distanceTo(Qo);u<e.near||u>e.far||t.push({distance:u,point:Qo.clone(),uv:$n.getInterpolation(Qo,pc,ea,mc,Rg,of,Pg,new ue),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function gc(r,e,t,n,i,s){no.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?($o.x=s*no.x-i*no.y,$o.y=i*no.x+s*no.y):$o.copy(no),r.copy(e),r.x+=$o.x,r.y+=$o.y,r.applyMatrix4(c_)}const vc=new D,Ig=new D;class h_ extends wt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){vc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(vc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){vc.setFromMatrixPosition(e.matrixWorld),Ig.setFromMatrixPosition(this.matrixWorld);const n=vc.distanceTo(Ig)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let l=t[i].distance;if(t[i].object.visible&&(l-=l*t[i].hysteresis),n>=l)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const l=n[i];t.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return t}}const Lg=new D,Ng=new Ct,Dg=new Ct,NA=new D,Ug=new Ke,_c=new D,af=new En,Og=new Ke,lf=new Eo;class f_ extends en{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Df,this.bindMatrix=new Ke,this.bindMatrixInverse=new Ke,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Nn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,_c),this.boundingBox.expandByPoint(_c)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new En),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,_c),this.boundingSphere.expandByPoint(_c)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),af.copy(this.boundingSphere),af.applyMatrix4(i),e.ray.intersectsSphere(af)!==!1&&(Og.copy(i).invert(),lf.copy(e.ray).applyMatrix4(Og),!(this.boundingBox!==null&&lf.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,lf)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Ct,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Df?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Sv?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;Ng.fromBufferAttribute(i.attributes.skinIndex,e),Dg.fromBufferAttribute(i.attributes.skinWeight,e),Lg.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const l=Dg.getComponent(s);if(l!==0){const c=Ng.getComponent(s);Ug.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(NA.copy(Lg).applyMatrix4(Ug),l)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Vd extends wt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Pr extends Gt{constructor(e=null,t=1,n=1,i,s,l,c,u,h=fn,d=fn,p,m){super(null,l,c,u,h,d,i,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Fg=new Ke,DA=new Ke;class uu{constructor(e=[],t=[]){this.uuid=ti(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Ke)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new Ke;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,l=e.length;s<l;s++){const c=e[s]?e[s].matrixWorld:DA;Fg.multiplyMatrices(c,t[s]),Fg.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new uu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Pr(t,e,e,kn,pi);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let l=t[s];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),l=new Vd),this.bones.push(l),this.boneInverses.push(new Ke().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const l=t[i];e.bones.push(l.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class xo extends Rt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const io=new Ke,zg=new Ke,yc=[],Bg=new Nn,UA=new Ke,ta=new en,na=new En;class d_ extends en{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new xo(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,UA)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Nn),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,io),Bg.copy(e.boundingBox).applyMatrix4(io),this.boundingBox.union(Bg)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new En),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,io),na.copy(e.boundingSphere).applyMatrix4(io),this.boundingSphere.union(na)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,s=n.length+1,l=e*s+1;for(let c=0;c<n.length;c++)n[c]=i[l+c]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(ta.geometry=this.geometry,ta.material=this.material,ta.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),na.copy(this.boundingSphere),na.applyMatrix4(n),e.ray.intersectsSphere(na)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,io),zg.multiplyMatrices(n,io),ta.matrixWorld=zg,ta.raycast(e,yc);for(let l=0,c=yc.length;l<c;l++){const u=yc[l];u.instanceId=s,u.object=this,t.push(u)}yc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new xo(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new Pr(new Float32Array(i*this.count),i,this.count,Td,pi));const s=this.morphTexture.source.data.data;let l=0;for(let h=0;h<n.length;h++)l+=n[h];const c=this.geometry.morphTargetsRelative?1:1-l,u=i*e;s[u]=c,s.set(n,u+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}}function OA(r,e){return r.z-e.z}function FA(r,e){return e.z-r.z}class zA{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t){const n=this.pool,i=this.list;this.index>=n.length&&n.push({start:-1,count:-1,z:-1});const s=n[this.index];i.push(s),this.index++,s.start=e.start,s.count=e.count,s.z=t}reset(){this.list.length=0,this.index=0}}const ro="batchId",Tr=new Ke,kg=new Ke,BA=new Ke,Hg=new Ke,cf=new Ha,xc=new Nn,Qr=new En,ia=new D,uf=new zA,wn=new en,Sc=[];function kA(r,e,t=0){const n=e.itemSize;if(r.isInterleavedBufferAttribute||r.array.constructor!==e.array.constructor){const i=r.count;for(let s=0;s<i;s++)for(let l=0;l<n;l++)e.setComponent(s+t,l,r.getComponent(s,l))}else e.array.set(r.array,t*n);e.needsUpdate=!0}class p_ extends en{get maxGeometryCount(){return this._maxGeometryCount}constructor(e,t,n=t*2,i){super(new ht,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawRanges=[],this._reservedRanges=[],this._visibility=[],this._active=[],this._bounds=[],this._maxGeometryCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._visibilityChanged=!0,this._matricesTexture=null,this._initMatricesTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxGeometryCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new Pr(t,e,e,kn,pi);this._matricesTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxGeometryCount,s=this._maxIndexCount;if(this._geometryInitialized===!1){for(const c in e.attributes){const u=e.getAttribute(c),{array:h,itemSize:d,normalized:p}=u,m=new h.constructor(n*d),v=new Rt(m,d,p);t.setAttribute(c,v)}if(e.getIndex()!==null){const c=n>65536?new Uint32Array(s):new Uint16Array(s);t.setIndex(new Rt(c,1))}const l=i>65536?new Uint32Array(n):new Uint16Array(n);t.setAttribute(ro,new Rt(l,1)),this._geometryInitialized=!0}}_validateGeometry(e){if(e.getAttribute(ro))throw new Error(`BatchedMesh: Geometry cannot use attribute "${ro}"`);const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(n===ro)continue;if(!e.hasAttribute(n))throw new Error(`BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),s=t.getAttribute(n);if(i.itemSize!==s.itemSize||i.normalized!==s.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Nn);const e=this._geometryCount,t=this.boundingBox,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,Tr),this.getBoundingBoxAt(i,xc).applyMatrix4(Tr),t.union(xc))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new En);const e=this._geometryCount,t=this.boundingSphere,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,Tr),this.getBoundingSphereAt(i,Qr).applyMatrix4(Tr),t.union(Qr))}addGeometry(e,t=-1,n=-1){if(this._initializeGeometry(e),this._validateGeometry(e),this._geometryCount>=this._maxGeometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");const i={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let s=null;const l=this._reservedRanges,c=this._drawRanges,u=this._bounds;this._geometryCount!==0&&(s=l[l.length-1]),t===-1?i.vertexCount=e.getAttribute("position").count:i.vertexCount=t,s===null?i.vertexStart=0:i.vertexStart=s.vertexStart+s.vertexCount;const h=e.getIndex(),d=h!==null;if(d&&(n===-1?i.indexCount=h.count:i.indexCount=n,s===null?i.indexStart=0:i.indexStart=s.indexStart+s.indexCount),i.indexStart!==-1&&i.indexStart+i.indexCount>this._maxIndexCount||i.vertexStart+i.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const p=this._visibility,m=this._active,v=this._matricesTexture,y=this._matricesTexture.image.data;p.push(!0),m.push(!0);const M=this._geometryCount;this._geometryCount++,BA.toArray(y,M*16),v.needsUpdate=!0,l.push(i),c.push({start:d?i.indexStart:i.vertexStart,count:-1}),u.push({boxInitialized:!1,box:new Nn,sphereInitialized:!1,sphere:new En});const x=this.geometry.getAttribute(ro);for(let _=0;_<i.vertexCount;_++)x.setX(i.vertexStart+_,M);return x.needsUpdate=!0,this.setGeometryAt(M,e),M}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,s=n.getIndex(),l=t.getIndex(),c=this._reservedRanges[e];if(i&&l.count>c.indexCount||t.attributes.position.count>c.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const u=c.vertexStart,h=c.vertexCount;for(const v in n.attributes){if(v===ro)continue;const y=t.getAttribute(v),M=n.getAttribute(v);kA(y,M,u);const x=y.itemSize;for(let _=y.count,E=h;_<E;_++){const w=u+_;for(let T=0;T<x;T++)M.setComponent(w,T,0)}M.needsUpdate=!0,M.addUpdateRange(u*x,h*x)}if(i){const v=c.indexStart;for(let y=0;y<l.count;y++)s.setX(v+y,u+l.getX(y));for(let y=l.count,M=c.indexCount;y<M;y++)s.setX(v+y,u);s.needsUpdate=!0,s.addUpdateRange(v,c.indexCount)}const d=this._bounds[e];t.boundingBox!==null?(d.box.copy(t.boundingBox),d.boxInitialized=!0):d.boxInitialized=!1,t.boundingSphere!==null?(d.sphere.copy(t.boundingSphere),d.sphereInitialized=!0):d.sphereInitialized=!1;const p=this._drawRanges[e],m=t.getAttribute("position");return p.count=i?l.count:m.count,this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._active;return e>=t.length||t[e]===!1?this:(t[e]=!1,this._visibilityChanged=!0,this)}getBoundingBoxAt(e,t){if(this._active[e]===!1)return null;const i=this._bounds[e],s=i.box,l=this.geometry;if(i.boxInitialized===!1){s.makeEmpty();const c=l.index,u=l.attributes.position,h=this._drawRanges[e];for(let d=h.start,p=h.start+h.count;d<p;d++){let m=d;c&&(m=c.getX(m)),s.expandByPoint(ia.fromBufferAttribute(u,m))}i.boxInitialized=!0}return t.copy(s),t}getBoundingSphereAt(e,t){if(this._active[e]===!1)return null;const i=this._bounds[e],s=i.sphere,l=this.geometry;if(i.sphereInitialized===!1){s.makeEmpty(),this.getBoundingBoxAt(e,xc),xc.getCenter(s.center);const c=l.index,u=l.attributes.position,h=this._drawRanges[e];let d=0;for(let p=h.start,m=h.start+h.count;p<m;p++){let v=p;c&&(v=c.getX(v)),ia.fromBufferAttribute(u,v),d=Math.max(d,s.center.distanceToSquared(ia))}s.radius=Math.sqrt(d),i.sphereInitialized=!0}return t.copy(s),t}setMatrixAt(e,t){const n=this._active,i=this._matricesTexture,s=this._matricesTexture.image.data,l=this._geometryCount;return e>=l||n[e]===!1?this:(t.toArray(s,e*16),i.needsUpdate=!0,this)}getMatrixAt(e,t){const n=this._active,i=this._matricesTexture.image.data,s=this._geometryCount;return e>=s||n[e]===!1?null:t.fromArray(i,e*16)}setVisibleAt(e,t){const n=this._visibility,i=this._active,s=this._geometryCount;return e>=s||i[e]===!1||n[e]===t?this:(n[e]=t,this._visibilityChanged=!0,this)}getVisibleAt(e){const t=this._visibility,n=this._active,i=this._geometryCount;return e>=i||n[e]===!1?!1:t[e]}raycast(e,t){const n=this._visibility,i=this._active,s=this._drawRanges,l=this._geometryCount,c=this.matrixWorld,u=this.geometry;wn.material=this.material,wn.geometry.index=u.index,wn.geometry.attributes=u.attributes,wn.geometry.boundingBox===null&&(wn.geometry.boundingBox=new Nn),wn.geometry.boundingSphere===null&&(wn.geometry.boundingSphere=new En);for(let h=0;h<l;h++){if(!n[h]||!i[h])continue;const d=s[h];wn.geometry.setDrawRange(d.start,d.count),this.getMatrixAt(h,wn.matrixWorld).premultiply(c),this.getBoundingBoxAt(h,wn.geometry.boundingBox),this.getBoundingSphereAt(h,wn.geometry.boundingSphere),wn.raycast(e,Sc);for(let p=0,m=Sc.length;p<m;p++){const v=Sc[p];v.object=this,v.batchId=h,t.push(v)}Sc.length=0}wn.material=null,wn.geometry.index=null,wn.geometry.attributes={},wn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._drawRanges=e._drawRanges.map(t=>({...t})),this._reservedRanges=e._reservedRanges.map(t=>({...t})),this._visibility=e._visibility.slice(),this._active=e._active.slice(),this._bounds=e._bounds.map(t=>({boxInitialized:t.boxInitialized,box:t.box.clone(),sphereInitialized:t.sphereInitialized,sphere:t.sphere.clone()})),this._maxGeometryCount=e._maxGeometryCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.slice(),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this}onBeforeRender(e,t,n,i,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,u=this._active,h=this._visibility,d=this._multiDrawStarts,p=this._multiDrawCounts,m=this._drawRanges,v=this.perObjectFrustumCulled;v&&(Hg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),cf.setFromProjectionMatrix(Hg,e.coordinateSystem));let y=0;if(this.sortObjects){kg.copy(this.matrixWorld).invert(),ia.setFromMatrixPosition(n.matrixWorld).applyMatrix4(kg);for(let _=0,E=h.length;_<E;_++)if(h[_]&&u[_]){this.getMatrixAt(_,Tr),this.getBoundingSphereAt(_,Qr).applyMatrix4(Tr);let w=!1;if(v&&(w=!cf.intersectsSphere(Qr)),!w){const T=ia.distanceTo(Qr.center);uf.push(m[_],T)}}const M=uf.list,x=this.customSort;x===null?M.sort(s.transparent?FA:OA):x.call(this,M,n);for(let _=0,E=M.length;_<E;_++){const w=M[_];d[y]=w.start*c,p[y]=w.count,y++}uf.reset()}else for(let M=0,x=h.length;M<x;M++)if(h[M]&&u[M]){let _=!1;if(v&&(this.getMatrixAt(M,Tr),this.getBoundingSphereAt(M,Qr).applyMatrix4(Tr),_=!cf.intersectsSphere(Qr)),!_){const E=m[M];d[y]=E.start*c,p[y]=E.count,y++}}this._multiDrawCount=y,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,s,l){this.onBeforeRender(e,null,i,s,l)}}class Dn extends mn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Le(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Vg=new D,Gg=new D,Wg=new Ke,hf=new Eo,Mc=new En;class Lr extends wt{constructor(e=new ht,t=new Dn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)Vg.fromBufferAttribute(t,i-1),Gg.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Vg.distanceTo(Gg);e.setAttribute("lineDistance",new ze(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Mc.copy(n.boundingSphere),Mc.applyMatrix4(i),Mc.radius+=s,e.ray.intersectsSphere(Mc)===!1)return;Wg.copy(i).invert(),hf.copy(e.ray).applyMatrix4(Wg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new D,d=new D,p=new D,m=new D,v=this.isLineSegments?2:1,y=n.index,x=n.attributes.position;if(y!==null){const _=Math.max(0,l.start),E=Math.min(y.count,l.start+l.count);for(let w=_,T=E-1;w<T;w+=v){const U=y.getX(w),P=y.getX(w+1);if(h.fromBufferAttribute(x,U),d.fromBufferAttribute(x,P),hf.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const z=e.ray.origin.distanceTo(m);z<e.near||z>e.far||t.push({distance:z,point:p.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,l.start),E=Math.min(x.count,l.start+l.count);for(let w=_,T=E-1;w<T;w+=v){if(h.fromBufferAttribute(x,w),d.fromBufferAttribute(x,w+1),hf.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const P=e.ray.origin.distanceTo(m);P<e.near||P>e.far||t.push({distance:P,point:p.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}const Xg=new D,qg=new D;class Hi extends Lr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)Xg.fromBufferAttribute(t,i),qg.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Xg.distanceTo(qg);e.setAttribute("lineDistance",new ze(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class m_ extends Lr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Gd extends mn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Le(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Yg=new Ke,ud=new Eo,wc=new En,Ec=new D;class g_ extends wt{constructor(e=new ht,t=new Gd){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),wc.copy(n.boundingSphere),wc.applyMatrix4(i),wc.radius+=s,e.ray.intersectsSphere(wc)===!1)return;Yg.copy(i).invert(),ud.copy(e.ray).applyMatrix4(Yg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,l.start),v=Math.min(h.count,l.start+l.count);for(let y=m,M=v;y<M;y++){const x=h.getX(y);Ec.fromBufferAttribute(p,x),jg(Ec,x,u,i,e,t,this)}}else{const m=Math.max(0,l.start),v=Math.min(p.count,l.start+l.count);for(let y=m,M=v;y<M;y++)Ec.fromBufferAttribute(p,y),jg(Ec,y,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function jg(r,e,t,n,i,s,l){const c=ud.distanceSqToPoint(r);if(c<t){const u=new D;ud.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:l})}}class HA extends Gt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isVideoTexture=!0,this.minFilter=l!==void 0?l:$t,this.magFilter=s!==void 0?s:$t,this.generateMipmaps=!1;const d=this;function p(){d.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class VA extends Gt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=fn,this.minFilter=fn,this.generateMipmaps=!1,this.needsUpdate=!0}}class hu extends Gt{constructor(e,t,n,i,s,l,c,u,h,d,p,m){super(null,l,c,u,h,d,i,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class GA extends hu{constructor(e,t,n,i,s,l){super(e,t,n,s,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=di}}class WA extends hu{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,or),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class XA extends Gt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Ei{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let l=1;l<=e;l++)n=this.getPoint(l/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let l;t?l=t:l=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-l,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===l)return i/(s-1);const d=n[i],m=n[i+1]-d,v=(l-d)/m;return(i+v)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const l=this.getPoint(i),c=this.getPoint(s),u=t||(l.isVector2?new ue:new D);return u.copy(c).sub(l).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new D,i=[],s=[],l=[],c=new D,u=new Ke;for(let v=0;v<=e;v++){const y=v/e;i[v]=this.getTangentAt(y,new D)}s[0]=new D,l[0]=new D;let h=Number.MAX_VALUE;const d=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);d<=h&&(h=d,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),l[0].crossVectors(i[0],s[0]);for(let v=1;v<=e;v++){if(s[v]=s[v-1].clone(),l[v]=l[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(Yt(i[v-1].dot(i[v]),-1,1));s[v].applyMatrix4(u.makeRotationAxis(c,y))}l[v].crossVectors(i[v],s[v])}if(t===!0){let v=Math.acos(Yt(s[0].dot(s[e]),-1,1));v/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(v=-v);for(let y=1;y<=e;y++)s[y].applyMatrix4(u.makeRotationAxis(i[y],v*y)),l[y].crossVectors(i[y],s[y])}return{tangents:i,normals:s,binormals:l}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class fu extends Ei{constructor(e=0,t=0,n=1,i=1,s=0,l=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=l,this.aClockwise=c,this.aRotation=u}getPoint(e,t=new ue){const n=t,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const l=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(l?s=0:s=i),this.aClockwise===!0&&!l&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const d=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,v=h-this.aY;u=m*d-v*p+this.aX,h=m*p+v*d+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class v_ extends fu{constructor(e,t,n,i,s,l){super(e,t,n,n,i,s,l),this.isArcCurve=!0,this.type="ArcCurve"}}function Wd(){let r=0,e=0,t=0,n=0;function i(s,l,c,u){r=s,e=c,t=-3*s+3*l-2*c-u,n=2*s-2*l+c+u}return{initCatmullRom:function(s,l,c,u,h){i(l,c,h*(c-s),h*(u-l))},initNonuniformCatmullRom:function(s,l,c,u,h,d,p){let m=(l-s)/h-(c-s)/(h+d)+(c-l)/d,v=(c-l)/d-(u-l)/(d+p)+(u-c)/p;m*=d,v*=d,i(l,c,m,v)},calc:function(s){const l=s*s,c=l*s;return r+e*s+t*l+n*c}}}const Ac=new D,ff=new Wd,df=new Wd,pf=new Wd;class __ extends Ei{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new D){const n=t,i=this.points,s=i.length,l=(s-(this.closed?0:1))*e;let c=Math.floor(l),u=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,d;this.closed||c>0?h=i[(c-1)%s]:(Ac.subVectors(i[0],i[1]).add(i[0]),h=Ac);const p=i[c%s],m=i[(c+1)%s];if(this.closed||c+2<s?d=i[(c+2)%s]:(Ac.subVectors(i[s-1],i[s-2]).add(i[s-1]),d=Ac),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),v),M=Math.pow(p.distanceToSquared(m),v),x=Math.pow(m.distanceToSquared(d),v);M<1e-4&&(M=1),y<1e-4&&(y=M),x<1e-4&&(x=M),ff.initNonuniformCatmullRom(h.x,p.x,m.x,d.x,y,M,x),df.initNonuniformCatmullRom(h.y,p.y,m.y,d.y,y,M,x),pf.initNonuniformCatmullRom(h.z,p.z,m.z,d.z,y,M,x)}else this.curveType==="catmullrom"&&(ff.initCatmullRom(h.x,p.x,m.x,d.x,this.tension),df.initCatmullRom(h.y,p.y,m.y,d.y,this.tension),pf.initCatmullRom(h.z,p.z,m.z,d.z,this.tension));return n.set(ff.calc(u),df.calc(u),pf.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new D().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Zg(r,e,t,n,i){const s=(n-e)*.5,l=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+l)*u+(-3*t+3*n-2*s-l)*c+s*r+t}function qA(r,e){const t=1-r;return t*t*e}function YA(r,e){return 2*(1-r)*r*e}function jA(r,e){return r*r*e}function fa(r,e,t,n){return qA(r,e)+YA(r,t)+jA(r,n)}function ZA(r,e){const t=1-r;return t*t*t*e}function JA(r,e){const t=1-r;return 3*t*t*r*e}function KA(r,e){return 3*(1-r)*r*r*e}function QA(r,e){return r*r*r*e}function da(r,e,t,n,i){return ZA(r,e)+JA(r,t)+KA(r,n)+QA(r,i)}class Xd extends Ei{constructor(e=new ue,t=new ue,n=new ue,i=new ue){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ue){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(da(e,i.x,s.x,l.x,c.x),da(e,i.y,s.y,l.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class y_ extends Ei{constructor(e=new D,t=new D,n=new D,i=new D){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(da(e,i.x,s.x,l.x,c.x),da(e,i.y,s.y,l.y,c.y),da(e,i.z,s.z,l.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class qd extends Ei{constructor(e=new ue,t=new ue){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ue){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ue){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class x_ extends Ei{constructor(e=new D,t=new D){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new D){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new D){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Yd extends Ei{constructor(e=new ue,t=new ue,n=new ue){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ue){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(fa(e,i.x,s.x,l.x),fa(e,i.y,s.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class jd extends Ei{constructor(e=new D,t=new D,n=new D){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(fa(e,i.x,s.x,l.x),fa(e,i.y,s.y,l.y),fa(e,i.z,s.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Zd extends Ei{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ue){const n=t,i=this.points,s=(i.length-1)*e,l=Math.floor(s),c=s-l,u=i[l===0?l:l-1],h=i[l],d=i[l>i.length-2?i.length-1:l+1],p=i[l>i.length-3?i.length-1:l+2];return n.set(Zg(c,u.x,h.x,d.x,p.x),Zg(c,u.y,h.y,d.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ue().fromArray(i))}return this}}var Kc=Object.freeze({__proto__:null,ArcCurve:v_,CatmullRomCurve3:__,CubicBezierCurve:Xd,CubicBezierCurve3:y_,EllipseCurve:fu,LineCurve:qd,LineCurve3:x_,QuadraticBezierCurve:Yd,QuadraticBezierCurve3:jd,SplineCurve:Zd});class S_ extends Ei{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Kc[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const l=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-l/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const l=s[i],c=l.isEllipseCurve?e*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?e*l.points.length:e,u=l.getPoints(c);for(let h=0;h<u.length;h++){const d=u[h];n&&n.equals(d)||(t.push(d),n=d)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Kc[i.type]().fromJSON(i))}return this}}class Ra extends S_{constructor(e){super(),this.type="Path",this.currentPoint=new ue,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new qd(this.currentPoint.clone(),new ue(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new Yd(this.currentPoint.clone(),new ue(e,t),new ue(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,l){const c=new Xd(this.currentPoint.clone(),new ue(e,t),new ue(n,i),new ue(s,l));return this.curves.push(c),this.currentPoint.set(s,l),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Zd(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,l),this}absarc(e,t,n,i,s,l){return this.absellipse(e,t,n,n,i,s,l),this}ellipse(e,t,n,i,s,l,c,u){const h=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+h,t+d,n,i,s,l,c,u),this}absellipse(e,t,n,i,s,l,c,u){const h=new fu(e,t,n,i,s,l,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const d=h.getPoint(1);return this.currentPoint.copy(d),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Ga extends ht{constructor(e=[new ue(0,-.5),new ue(.5,0),new ue(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Yt(i,0,Math.PI*2);const s=[],l=[],c=[],u=[],h=[],d=1/t,p=new D,m=new ue,v=new D,y=new D,M=new D;let x=0,_=0;for(let E=0;E<=e.length-1;E++)switch(E){case 0:x=e[E+1].x-e[E].x,_=e[E+1].y-e[E].y,v.x=_*1,v.y=-x,v.z=_*0,M.copy(v),v.normalize(),u.push(v.x,v.y,v.z);break;case e.length-1:u.push(M.x,M.y,M.z);break;default:x=e[E+1].x-e[E].x,_=e[E+1].y-e[E].y,v.x=_*1,v.y=-x,v.z=_*0,y.copy(v),v.x+=M.x,v.y+=M.y,v.z+=M.z,v.normalize(),u.push(v.x,v.y,v.z),M.copy(y)}for(let E=0;E<=t;E++){const w=n+E*d*i,T=Math.sin(w),U=Math.cos(w);for(let P=0;P<=e.length-1;P++){p.x=e[P].x*T,p.y=e[P].y,p.z=e[P].x*U,l.push(p.x,p.y,p.z),m.x=E/t,m.y=P/(e.length-1),c.push(m.x,m.y);const L=u[3*P+0]*T,z=u[3*P+1],R=u[3*P+0]*U;h.push(L,z,R)}}for(let E=0;E<t;E++)for(let w=0;w<e.length-1;w++){const T=w+E*e.length,U=T,P=T+e.length,L=T+e.length+1,z=T+1;s.push(U,P,z),s.push(L,z,P)}this.setIndex(s),this.setAttribute("position",new ze(l,3)),this.setAttribute("uv",new ze(c,2)),this.setAttribute("normal",new ze(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ga(e.points,e.segments,e.phiStart,e.phiLength)}}class du extends Ga{constructor(e=1,t=1,n=4,i=8){const s=new Ra;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new du(e.radius,e.length,e.capSegments,e.radialSegments)}}class pu extends ht{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],l=[],c=[],u=[],h=new D,d=new ue;l.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const v=n+p/t*i;h.x=e*Math.cos(v),h.y=e*Math.sin(v),l.push(h.x,h.y,h.z),c.push(0,0,1),d.x=(l[m]/e+1)/2,d.y=(l[m+1]/e+1)/2,u.push(d.x,d.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new ze(l,3)),this.setAttribute("normal",new ze(c,3)),this.setAttribute("uv",new ze(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new pu(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class bo extends ht{constructor(e=1,t=1,n=1,i=32,s=1,l=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:l,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const d=[],p=[],m=[],v=[];let y=0;const M=[],x=n/2;let _=0;E(),l===!1&&(e>0&&w(!0),t>0&&w(!1)),this.setIndex(d),this.setAttribute("position",new ze(p,3)),this.setAttribute("normal",new ze(m,3)),this.setAttribute("uv",new ze(v,2));function E(){const T=new D,U=new D;let P=0;const L=(t-e)/n;for(let z=0;z<=s;z++){const R=[],b=z/s,F=b*(t-e)+e;for(let q=0;q<=i;q++){const k=q/i,Z=k*u+c,se=Math.sin(Z),ae=Math.cos(Z);U.x=F*se,U.y=-b*n+x,U.z=F*ae,p.push(U.x,U.y,U.z),T.set(se,L,ae).normalize(),m.push(T.x,T.y,T.z),v.push(k,1-b),R.push(y++)}M.push(R)}for(let z=0;z<i;z++)for(let R=0;R<s;R++){const b=M[R][z],F=M[R+1][z],q=M[R+1][z+1],k=M[R][z+1];d.push(b,F,k),d.push(F,q,k),P+=6}h.addGroup(_,P,0),_+=P}function w(T){const U=y,P=new ue,L=new D;let z=0;const R=T===!0?e:t,b=T===!0?1:-1;for(let q=1;q<=i;q++)p.push(0,x*b,0),m.push(0,b,0),v.push(.5,.5),y++;const F=y;for(let q=0;q<=i;q++){const Z=q/i*u+c,se=Math.cos(Z),ae=Math.sin(Z);L.x=R*ae,L.y=x*b,L.z=R*se,p.push(L.x,L.y,L.z),m.push(0,b,0),P.x=se*.5+.5,P.y=ae*.5*b+.5,v.push(P.x,P.y),y++}for(let q=0;q<i;q++){const k=U+q,Z=F+q;T===!0?d.push(Z,Z+1,k):d.push(Z+1,Z,k),z+=3}h.addGroup(_,z,T===!0?1:2),_+=z}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new bo(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class mu extends bo{constructor(e=1,t=1,n=32,i=1,s=!1,l=0,c=Math.PI*2){super(0,e,t,n,i,s,l,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:l,thetaLength:c}}static fromJSON(e){return new mu(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ur extends ht{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],l=[];c(i),h(n),d(),this.setAttribute("position",new ze(s,3)),this.setAttribute("normal",new ze(s.slice(),3)),this.setAttribute("uv",new ze(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const w=new D,T=new D,U=new D;for(let P=0;P<t.length;P+=3)v(t[P+0],w),v(t[P+1],T),v(t[P+2],U),u(w,T,U,E)}function u(E,w,T,U){const P=U+1,L=[];for(let z=0;z<=P;z++){L[z]=[];const R=E.clone().lerp(T,z/P),b=w.clone().lerp(T,z/P),F=P-z;for(let q=0;q<=F;q++)q===0&&z===P?L[z][q]=R:L[z][q]=R.clone().lerp(b,q/F)}for(let z=0;z<P;z++)for(let R=0;R<2*(P-z)-1;R++){const b=Math.floor(R/2);R%2===0?(m(L[z][b+1]),m(L[z+1][b]),m(L[z][b])):(m(L[z][b+1]),m(L[z+1][b+1]),m(L[z+1][b]))}}function h(E){const w=new D;for(let T=0;T<s.length;T+=3)w.x=s[T+0],w.y=s[T+1],w.z=s[T+2],w.normalize().multiplyScalar(E),s[T+0]=w.x,s[T+1]=w.y,s[T+2]=w.z}function d(){const E=new D;for(let w=0;w<s.length;w+=3){E.x=s[w+0],E.y=s[w+1],E.z=s[w+2];const T=x(E)/2/Math.PI+.5,U=_(E)/Math.PI+.5;l.push(T,1-U)}y(),p()}function p(){for(let E=0;E<l.length;E+=6){const w=l[E+0],T=l[E+2],U=l[E+4],P=Math.max(w,T,U),L=Math.min(w,T,U);P>.9&&L<.1&&(w<.2&&(l[E+0]+=1),T<.2&&(l[E+2]+=1),U<.2&&(l[E+4]+=1))}}function m(E){s.push(E.x,E.y,E.z)}function v(E,w){const T=E*3;w.x=e[T+0],w.y=e[T+1],w.z=e[T+2]}function y(){const E=new D,w=new D,T=new D,U=new D,P=new ue,L=new ue,z=new ue;for(let R=0,b=0;R<s.length;R+=9,b+=6){E.set(s[R+0],s[R+1],s[R+2]),w.set(s[R+3],s[R+4],s[R+5]),T.set(s[R+6],s[R+7],s[R+8]),P.set(l[b+0],l[b+1]),L.set(l[b+2],l[b+3]),z.set(l[b+4],l[b+5]),U.copy(E).add(w).add(T).divideScalar(3);const F=x(U);M(P,b+0,E,F),M(L,b+2,w,F),M(z,b+4,T,F)}}function M(E,w,T,U){U<0&&E.x===1&&(l[w]=E.x-1),T.x===0&&T.z===0&&(l[w]=U/2/Math.PI+.5)}function x(E){return Math.atan2(E.z,-E.x)}function _(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ur(e.vertices,e.indices,e.radius,e.details)}}class gu extends Ur{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,l,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new gu(e.radius,e.detail)}}const Tc=new D,bc=new D,mf=new D,Cc=new $n;class M_ extends ht{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(ps*t),l=e.getIndex(),c=e.getAttribute("position"),u=l?l.count:c.count,h=[0,0,0],d=["a","b","c"],p=new Array(3),m={},v=[];for(let y=0;y<u;y+=3){l?(h[0]=l.getX(y),h[1]=l.getX(y+1),h[2]=l.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:M,b:x,c:_}=Cc;if(M.fromBufferAttribute(c,h[0]),x.fromBufferAttribute(c,h[1]),_.fromBufferAttribute(c,h[2]),Cc.getNormal(mf),p[0]=`${Math.round(M.x*i)},${Math.round(M.y*i)},${Math.round(M.z*i)}`,p[1]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,p[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let E=0;E<3;E++){const w=(E+1)%3,T=p[E],U=p[w],P=Cc[d[E]],L=Cc[d[w]],z=`${T}_${U}`,R=`${U}_${T}`;R in m&&m[R]?(mf.dot(m[R].normal)<=s&&(v.push(P.x,P.y,P.z),v.push(L.x,L.y,L.z)),m[R]=null):z in m||(m[z]={index0:h[E],index1:h[w],normal:mf.clone()})}}for(const y in m)if(m[y]){const{index0:M,index1:x}=m[y];Tc.fromBufferAttribute(c,M),bc.fromBufferAttribute(c,x),v.push(Tc.x,Tc.y,Tc.z),v.push(bc.x,bc.y,bc.z)}this.setAttribute("position",new ze(v,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class gs extends Ra{constructor(e){super(e),this.uuid=ti(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Ra().fromJSON(i))}return this}}const $A={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=w_(r,0,i,t,!0);const l=[];if(!s||s.next===s.prev)return l;let c,u,h,d,p,m,v;if(n&&(s=rT(r,e,s,t)),r.length>80*t){c=h=r[0],u=d=r[1];for(let y=t;y<i;y+=t)p=r[y],m=r[y+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>d&&(d=m);v=Math.max(h-c,d-u),v=v!==0?32767/v:0}return Pa(s,l,t,c,u,v,0),l}};function w_(r,e,t,n,i){let s,l;if(i===mT(r,e,t,n)>0)for(s=e;s<t;s+=n)l=Jg(s,r[s],r[s+1],l);else for(s=t-n;s>=e;s-=n)l=Jg(s,r[s],r[s+1],l);return l&&vu(l,l.next)&&(La(l),l=l.next),l}function ys(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(vu(t,t.next)||Vt(t.prev,t,t.next)===0)){if(La(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Pa(r,e,t,n,i,s,l){if(!r)return;!l&&s&&cT(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?tT(r,n,i,s):eT(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),La(r),r=h.next,c=h.next;continue}if(r=h,r===c){l?l===1?(r=nT(ys(r),e,t),Pa(r,e,t,n,i,s,2)):l===2&&iT(r,e,t,n,i,s):Pa(ys(r),e,t,n,i,s,1);break}}}function eT(r){const e=r.prev,t=r,n=r.next;if(Vt(e,t,n)>=0)return!1;const i=e.x,s=t.x,l=n.x,c=e.y,u=t.y,h=n.y,d=i<s?i<l?i:l:s<l?s:l,p=c<u?c<h?c:h:u<h?u:h,m=i>s?i>l?i:l:s>l?s:l,v=c>u?c>h?c:h:u>h?u:h;let y=n.next;for(;y!==e;){if(y.x>=d&&y.x<=m&&y.y>=p&&y.y<=v&&po(i,c,s,u,l,h,y.x,y.y)&&Vt(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function tT(r,e,t,n){const i=r.prev,s=r,l=r.next;if(Vt(i,s,l)>=0)return!1;const c=i.x,u=s.x,h=l.x,d=i.y,p=s.y,m=l.y,v=c<u?c<h?c:h:u<h?u:h,y=d<p?d<m?d:m:p<m?p:m,M=c>u?c>h?c:h:u>h?u:h,x=d>p?d>m?d:m:p>m?p:m,_=hd(v,y,e,t,n),E=hd(M,x,e,t,n);let w=r.prevZ,T=r.nextZ;for(;w&&w.z>=_&&T&&T.z<=E;){if(w.x>=v&&w.x<=M&&w.y>=y&&w.y<=x&&w!==i&&w!==l&&po(c,d,u,p,h,m,w.x,w.y)&&Vt(w.prev,w,w.next)>=0||(w=w.prevZ,T.x>=v&&T.x<=M&&T.y>=y&&T.y<=x&&T!==i&&T!==l&&po(c,d,u,p,h,m,T.x,T.y)&&Vt(T.prev,T,T.next)>=0))return!1;T=T.nextZ}for(;w&&w.z>=_;){if(w.x>=v&&w.x<=M&&w.y>=y&&w.y<=x&&w!==i&&w!==l&&po(c,d,u,p,h,m,w.x,w.y)&&Vt(w.prev,w,w.next)>=0)return!1;w=w.prevZ}for(;T&&T.z<=E;){if(T.x>=v&&T.x<=M&&T.y>=y&&T.y<=x&&T!==i&&T!==l&&po(c,d,u,p,h,m,T.x,T.y)&&Vt(T.prev,T,T.next)>=0)return!1;T=T.nextZ}return!0}function nT(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!vu(i,s)&&E_(i,n,n.next,s)&&Ia(i,s)&&Ia(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),La(n),La(n.next),n=r=s),n=n.next}while(n!==r);return ys(n)}function iT(r,e,t,n,i,s){let l=r;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&fT(l,c)){let u=A_(l,c);l=ys(l,l.next),u=ys(u,u.next),Pa(l,e,t,n,i,s,0),Pa(u,e,t,n,i,s,0);return}c=c.next}l=l.next}while(l!==r)}function rT(r,e,t,n){const i=[];let s,l,c,u,h;for(s=0,l=e.length;s<l;s++)c=e[s]*n,u=s<l-1?e[s+1]*n:r.length,h=w_(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(hT(h));for(i.sort(sT),s=0;s<i.length;s++)t=oT(i[s],t);return t}function sT(r,e){return r.x-e.x}function oT(r,e){const t=aT(r,e);if(!t)return e;const n=A_(t,r);return ys(n,n.next),ys(t,t.next)}function aT(r,e){let t=e,n=-1/0,i;const s=r.x,l=r.y;do{if(l<=t.y&&l>=t.next.y&&t.next.y!==t.y){const m=t.x+(l-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=s&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let d=1/0,p;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&po(l<h?s:n,l,u,h,l<h?n:s,l,t.x,t.y)&&(p=Math.abs(l-t.y)/(s-t.x),Ia(t,r)&&(p<d||p===d&&(t.x>i.x||t.x===i.x&&lT(i,t)))&&(i=t,d=p)),t=t.next;while(t!==c);return i}function lT(r,e){return Vt(r.prev,r,e.prev)<0&&Vt(e.next,r,r.next)<0}function cT(r,e,t,n){let i=r;do i.z===0&&(i.z=hd(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,uT(i)}function uT(r){let e,t,n,i,s,l,c,u,h=1;do{for(t=r,r=null,s=null,l=0;t;){for(l++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(l>1);return r}function hd(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function hT(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function po(r,e,t,n,i,s,l,c){return(i-l)*(e-c)>=(r-l)*(s-c)&&(r-l)*(n-c)>=(t-l)*(e-c)&&(t-l)*(s-c)>=(i-l)*(n-c)}function fT(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!dT(r,e)&&(Ia(r,e)&&Ia(e,r)&&pT(r,e)&&(Vt(r.prev,r,e.prev)||Vt(r,e.prev,e))||vu(r,e)&&Vt(r.prev,r,r.next)>0&&Vt(e.prev,e,e.next)>0)}function Vt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function vu(r,e){return r.x===e.x&&r.y===e.y}function E_(r,e,t,n){const i=Pc(Vt(r,e,t)),s=Pc(Vt(r,e,n)),l=Pc(Vt(t,n,r)),c=Pc(Vt(t,n,e));return!!(i!==s&&l!==c||i===0&&Rc(r,t,e)||s===0&&Rc(r,n,e)||l===0&&Rc(t,r,n)||c===0&&Rc(t,e,n))}function Rc(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Pc(r){return r>0?1:r<0?-1:0}function dT(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&E_(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Ia(r,e){return Vt(r.prev,r,r.next)<0?Vt(r,e,r.next)>=0&&Vt(r,r.prev,e)>=0:Vt(r,e,r.prev)<0||Vt(r,r.next,e)<0}function pT(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function A_(r,e){const t=new fd(r.i,r.x,r.y),n=new fd(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function Jg(r,e,t,n){const i=new fd(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function La(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function fd(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function mT(r,e,t,n){let i=0;for(let s=e,l=t-n;s<t;s+=n)i+=(r[l]-r[s])*(r[s+1]+r[l+1]),l=s;return i}class ki{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return ki.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];Kg(e),Qg(n,e);let l=e.length;t.forEach(Kg);for(let u=0;u<t.length;u++)i.push(l),l+=t[u].length,Qg(n,t[u]);const c=$A.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function Kg(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function Qg(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class _u extends ht{constructor(e=new gs([new ue(.5,.5),new ue(-.5,.5),new ue(-.5,-.5),new ue(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];l(h)}this.setAttribute("position",new ze(i,3)),this.setAttribute("uv",new ze(s,2)),this.computeVertexNormals();function l(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,v=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:v-.1,M=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,E=t.UVGenerator!==void 0?t.UVGenerator:gT;let w,T=!1,U,P,L,z;_&&(w=_.getSpacedPoints(d),T=!0,m=!1,U=_.computeFrenetFrames(d,!1),P=new D,L=new D,z=new D),m||(x=0,v=0,y=0,M=0);const R=c.extractPoints(h);let b=R.shape;const F=R.holes;if(!ki.isClockWise(b)){b=b.reverse();for(let ce=0,oe=F.length;ce<oe;ce++){const Se=F[ce];ki.isClockWise(Se)&&(F[ce]=Se.reverse())}}const k=ki.triangulateShape(b,F),Z=b;for(let ce=0,oe=F.length;ce<oe;ce++){const Se=F[ce];b=b.concat(Se)}function se(ce,oe,Se){return oe||console.error("THREE.ExtrudeGeometry: vec does not exist"),ce.clone().addScaledVector(oe,Se)}const ae=b.length,ve=k.length;function H(ce,oe,Se){let me,_e,N;const C=ce.x-oe.x,Y=ce.y-oe.y,re=Se.x-ce.x,le=Se.y-ce.y,fe=C*C+Y*Y,qe=C*le-Y*re;if(Math.abs(qe)>Number.EPSILON){const de=Math.sqrt(fe),He=Math.sqrt(re*re+le*le),Ze=oe.x-Y/de,Me=oe.y+C/de,Ne=Se.x-le/He,nt=Se.y+re/He,Oe=((Ne-Ze)*le-(nt-Me)*re)/(C*le-Y*re);me=Ze+C*Oe-ce.x,_e=Me+Y*Oe-ce.y;const Fe=me*me+_e*_e;if(Fe<=2)return new ue(me,_e);N=Math.sqrt(Fe/2)}else{let de=!1;C>Number.EPSILON?re>Number.EPSILON&&(de=!0):C<-Number.EPSILON?re<-Number.EPSILON&&(de=!0):Math.sign(Y)===Math.sign(le)&&(de=!0),de?(me=-Y,_e=C,N=Math.sqrt(fe)):(me=C,_e=Y,N=Math.sqrt(fe/2))}return new ue(me/N,_e/N)}const $=[];for(let ce=0,oe=Z.length,Se=oe-1,me=ce+1;ce<oe;ce++,Se++,me++)Se===oe&&(Se=0),me===oe&&(me=0),$[ce]=H(Z[ce],Z[Se],Z[me]);const J=[];let he,Ie=$.concat();for(let ce=0,oe=F.length;ce<oe;ce++){const Se=F[ce];he=[];for(let me=0,_e=Se.length,N=_e-1,C=me+1;me<_e;me++,N++,C++)N===_e&&(N=0),C===_e&&(C=0),he[me]=H(Se[me],Se[N],Se[C]);J.push(he),Ie=Ie.concat(he)}for(let ce=0;ce<x;ce++){const oe=ce/x,Se=v*Math.cos(oe*Math.PI/2),me=y*Math.sin(oe*Math.PI/2)+M;for(let _e=0,N=Z.length;_e<N;_e++){const C=se(Z[_e],$[_e],me);ye(C.x,C.y,-Se)}for(let _e=0,N=F.length;_e<N;_e++){const C=F[_e];he=J[_e];for(let Y=0,re=C.length;Y<re;Y++){const le=se(C[Y],he[Y],me);ye(le.x,le.y,-Se)}}}const Be=y+M;for(let ce=0;ce<ae;ce++){const oe=m?se(b[ce],Ie[ce],Be):b[ce];T?(L.copy(U.normals[0]).multiplyScalar(oe.x),P.copy(U.binormals[0]).multiplyScalar(oe.y),z.copy(w[0]).add(L).add(P),ye(z.x,z.y,z.z)):ye(oe.x,oe.y,0)}for(let ce=1;ce<=d;ce++)for(let oe=0;oe<ae;oe++){const Se=m?se(b[oe],Ie[oe],Be):b[oe];T?(L.copy(U.normals[ce]).multiplyScalar(Se.x),P.copy(U.binormals[ce]).multiplyScalar(Se.y),z.copy(w[ce]).add(L).add(P),ye(z.x,z.y,z.z)):ye(Se.x,Se.y,p/d*ce)}for(let ce=x-1;ce>=0;ce--){const oe=ce/x,Se=v*Math.cos(oe*Math.PI/2),me=y*Math.sin(oe*Math.PI/2)+M;for(let _e=0,N=Z.length;_e<N;_e++){const C=se(Z[_e],$[_e],me);ye(C.x,C.y,p+Se)}for(let _e=0,N=F.length;_e<N;_e++){const C=F[_e];he=J[_e];for(let Y=0,re=C.length;Y<re;Y++){const le=se(C[Y],he[Y],me);T?ye(le.x,le.y+w[d-1].y,w[d-1].x+Se):ye(le.x,le.y,p+Se)}}}ne(),pe();function ne(){const ce=i.length/3;if(m){let oe=0,Se=ae*oe;for(let me=0;me<ve;me++){const _e=k[me];et(_e[2]+Se,_e[1]+Se,_e[0]+Se)}oe=d+x*2,Se=ae*oe;for(let me=0;me<ve;me++){const _e=k[me];et(_e[0]+Se,_e[1]+Se,_e[2]+Se)}}else{for(let oe=0;oe<ve;oe++){const Se=k[oe];et(Se[2],Se[1],Se[0])}for(let oe=0;oe<ve;oe++){const Se=k[oe];et(Se[0]+ae*d,Se[1]+ae*d,Se[2]+ae*d)}}n.addGroup(ce,i.length/3-ce,0)}function pe(){const ce=i.length/3;let oe=0;Ce(Z,oe),oe+=Z.length;for(let Se=0,me=F.length;Se<me;Se++){const _e=F[Se];Ce(_e,oe),oe+=_e.length}n.addGroup(ce,i.length/3-ce,1)}function Ce(ce,oe){let Se=ce.length;for(;--Se>=0;){const me=Se;let _e=Se-1;_e<0&&(_e=ce.length-1);for(let N=0,C=d+x*2;N<C;N++){const Y=ae*N,re=ae*(N+1),le=oe+me+Y,fe=oe+_e+Y,qe=oe+_e+re,de=oe+me+re;st(le,fe,qe,de)}}}function ye(ce,oe,Se){u.push(ce),u.push(oe),u.push(Se)}function et(ce,oe,Se){Qe(ce),Qe(oe),Qe(Se);const me=i.length/3,_e=E.generateTopUV(n,i,me-3,me-2,me-1);W(_e[0]),W(_e[1]),W(_e[2])}function st(ce,oe,Se,me){Qe(ce),Qe(oe),Qe(me),Qe(oe),Qe(Se),Qe(me);const _e=i.length/3,N=E.generateSideWallUV(n,i,_e-6,_e-3,_e-2,_e-1);W(N[0]),W(N[1]),W(N[3]),W(N[1]),W(N[2]),W(N[3])}function Qe(ce){i.push(u[ce*3+0]),i.push(u[ce*3+1]),i.push(u[ce*3+2])}function W(ce){s.push(ce.x),s.push(ce.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return vT(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,l=e.shapes.length;s<l;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Kc[i.type]().fromJSON(i)),new _u(n,e.options)}}const gT={generateTopUV:function(r,e,t,n,i){const s=e[t*3],l=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],d=e[i*3+1];return[new ue(s,l),new ue(c,u),new ue(h,d)]},generateSideWallUV:function(r,e,t,n,i,s){const l=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],d=e[n*3+1],p=e[n*3+2],m=e[i*3],v=e[i*3+1],y=e[i*3+2],M=e[s*3],x=e[s*3+1],_=e[s*3+2];return Math.abs(c-d)<Math.abs(l-h)?[new ue(l,1-u),new ue(h,1-p),new ue(m,1-y),new ue(M,1-_)]:[new ue(c,1-u),new ue(d,1-p),new ue(v,1-y),new ue(x,1-_)]}};function vT(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class yu extends Ur{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new yu(e.radius,e.detail)}}class Wa extends Ur{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Wa(e.radius,e.detail)}}class xu extends ht{constructor(e=.5,t=1,n=32,i=1,s=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],d=[];let p=e;const m=(t-e)/i,v=new D,y=new ue;for(let M=0;M<=i;M++){for(let x=0;x<=n;x++){const _=s+x/n*l;v.x=p*Math.cos(_),v.y=p*Math.sin(_),u.push(v.x,v.y,v.z),h.push(0,0,1),y.x=(v.x/t+1)/2,y.y=(v.y/t+1)/2,d.push(y.x,y.y)}p+=m}for(let M=0;M<i;M++){const x=M*(n+1);for(let _=0;_<n;_++){const E=_+x,w=E,T=E+n+1,U=E+n+2,P=E+1;c.push(w,T,P),c.push(T,U,P)}}this.setIndex(c),this.setAttribute("position",new ze(u,3)),this.setAttribute("normal",new ze(h,3)),this.setAttribute("uv",new ze(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xu(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Su extends ht{constructor(e=new gs([new ue(0,.5),new ue(-.5,-.5),new ue(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],l=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let d=0;d<e.length;d++)h(e[d]),this.addGroup(c,u,d),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new ze(i,3)),this.setAttribute("normal",new ze(s,3)),this.setAttribute("uv",new ze(l,2));function h(d){const p=i.length/3,m=d.extractPoints(t);let v=m.shape;const y=m.holes;ki.isClockWise(v)===!1&&(v=v.reverse());for(let x=0,_=y.length;x<_;x++){const E=y[x];ki.isClockWise(E)===!0&&(y[x]=E.reverse())}const M=ki.triangulateShape(v,y);for(let x=0,_=y.length;x<_;x++){const E=y[x];v=v.concat(E)}for(let x=0,_=v.length;x<_;x++){const E=v[x];i.push(E.x,E.y,0),s.push(0,0,1),l.push(E.x,E.y)}for(let x=0,_=M.length;x<_;x++){const E=M[x],w=E[0]+p,T=E[1]+p,U=E[2]+p;n.push(w,T,U),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return _T(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const l=t[e.shapes[i]];n.push(l)}return new Su(n,e.curveSegments)}}function _T(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class Xa extends ht{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:l,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(l+c,Math.PI);let h=0;const d=[],p=new D,m=new D,v=[],y=[],M=[],x=[];for(let _=0;_<=n;_++){const E=[],w=_/n;let T=0;_===0&&l===0?T=.5/t:_===n&&u===Math.PI&&(T=-.5/t);for(let U=0;U<=t;U++){const P=U/t;p.x=-e*Math.cos(i+P*s)*Math.sin(l+w*c),p.y=e*Math.cos(l+w*c),p.z=e*Math.sin(i+P*s)*Math.sin(l+w*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),M.push(m.x,m.y,m.z),x.push(P+T,1-w),E.push(h++)}d.push(E)}for(let _=0;_<n;_++)for(let E=0;E<t;E++){const w=d[_][E+1],T=d[_][E],U=d[_+1][E],P=d[_+1][E+1];(_!==0||l>0)&&v.push(w,T,P),(_!==n-1||u<Math.PI)&&v.push(T,U,P)}this.setIndex(v),this.setAttribute("position",new ze(y,3)),this.setAttribute("normal",new ze(M,3)),this.setAttribute("uv",new ze(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Xa(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Mu extends Ur{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Mu(e.radius,e.detail)}}class wu extends ht{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],u=[],h=[],d=new D,p=new D,m=new D;for(let v=0;v<=n;v++)for(let y=0;y<=i;y++){const M=y/i*s,x=v/n*Math.PI*2;p.x=(e+t*Math.cos(x))*Math.cos(M),p.y=(e+t*Math.cos(x))*Math.sin(M),p.z=t*Math.sin(x),c.push(p.x,p.y,p.z),d.x=e*Math.cos(M),d.y=e*Math.sin(M),m.subVectors(p,d).normalize(),u.push(m.x,m.y,m.z),h.push(y/i),h.push(v/n)}for(let v=1;v<=n;v++)for(let y=1;y<=i;y++){const M=(i+1)*v+y-1,x=(i+1)*(v-1)+y-1,_=(i+1)*(v-1)+y,E=(i+1)*v+y;l.push(M,x,E),l.push(x,_,E)}this.setIndex(l),this.setAttribute("position",new ze(c,3)),this.setAttribute("normal",new ze(u,3)),this.setAttribute("uv",new ze(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new wu(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Eu extends ht{constructor(e=1,t=.4,n=64,i=8,s=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],d=[],p=new D,m=new D,v=new D,y=new D,M=new D,x=new D,_=new D;for(let w=0;w<=n;++w){const T=w/n*s*Math.PI*2;E(T,s,l,e,v),E(T+.01,s,l,e,y),x.subVectors(y,v),_.addVectors(y,v),M.crossVectors(x,_),_.crossVectors(M,x),M.normalize(),_.normalize();for(let U=0;U<=i;++U){const P=U/i*Math.PI*2,L=-t*Math.cos(P),z=t*Math.sin(P);p.x=v.x+(L*_.x+z*M.x),p.y=v.y+(L*_.y+z*M.y),p.z=v.z+(L*_.z+z*M.z),u.push(p.x,p.y,p.z),m.subVectors(p,v).normalize(),h.push(m.x,m.y,m.z),d.push(w/n),d.push(U/i)}}for(let w=1;w<=n;w++)for(let T=1;T<=i;T++){const U=(i+1)*(w-1)+(T-1),P=(i+1)*w+(T-1),L=(i+1)*w+T,z=(i+1)*(w-1)+T;c.push(U,P,z),c.push(P,L,z)}this.setIndex(c),this.setAttribute("position",new ze(u,3)),this.setAttribute("normal",new ze(h,3)),this.setAttribute("uv",new ze(d,2));function E(w,T,U,P,L){const z=Math.cos(w),R=Math.sin(w),b=U/T*w,F=Math.cos(b);L.x=P*(2+F)*.5*z,L.y=P*(2+F)*R*.5,L.z=P*Math.sin(b)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Eu(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Au extends ht{constructor(e=new jd(new D(-1,-1,0),new D(-1,1,0),new D(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const l=e.computeFrenetFrames(t,s);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new D,u=new D,h=new ue;let d=new D;const p=[],m=[],v=[],y=[];M(),this.setIndex(y),this.setAttribute("position",new ze(p,3)),this.setAttribute("normal",new ze(m,3)),this.setAttribute("uv",new ze(v,2));function M(){for(let w=0;w<t;w++)x(w);x(s===!1?t:0),E(),_()}function x(w){d=e.getPointAt(w/t,d);const T=l.normals[w],U=l.binormals[w];for(let P=0;P<=i;P++){const L=P/i*Math.PI*2,z=Math.sin(L),R=-Math.cos(L);u.x=R*T.x+z*U.x,u.y=R*T.y+z*U.y,u.z=R*T.z+z*U.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=d.x+n*u.x,c.y=d.y+n*u.y,c.z=d.z+n*u.z,p.push(c.x,c.y,c.z)}}function _(){for(let w=1;w<=t;w++)for(let T=1;T<=i;T++){const U=(i+1)*(w-1)+(T-1),P=(i+1)*w+(T-1),L=(i+1)*w+T,z=(i+1)*(w-1)+T;y.push(U,P,z),y.push(P,L,z)}}function E(){for(let w=0;w<=t;w++)for(let T=0;T<=i;T++)h.x=w/t,h.y=T/i,v.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Au(new Kc[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class T_ extends ht{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new D,s=new D;if(e.index!==null){const l=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,d=u.length;h<d;++h){const p=u[h],m=p.start,v=p.count;for(let y=m,M=m+v;y<M;y+=3)for(let x=0;x<3;x++){const _=c.getX(y+x),E=c.getX(y+(x+1)%3);i.fromBufferAttribute(l,_),s.fromBufferAttribute(l,E),$g(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const l=e.attributes.position;for(let c=0,u=l.count/3;c<u;c++)for(let h=0;h<3;h++){const d=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(l,d),s.fromBufferAttribute(l,p),$g(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new ze(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function $g(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var e0=Object.freeze({__proto__:null,BoxGeometry:xs,CapsuleGeometry:du,CircleGeometry:pu,ConeGeometry:mu,CylinderGeometry:bo,DodecahedronGeometry:gu,EdgesGeometry:M_,ExtrudeGeometry:_u,IcosahedronGeometry:yu,LatheGeometry:Ga,OctahedronGeometry:Wa,PlaneGeometry:Ao,PolyhedronGeometry:Ur,RingGeometry:xu,ShapeGeometry:Su,SphereGeometry:Xa,TetrahedronGeometry:Mu,TorusGeometry:wu,TorusKnotGeometry:Eu,TubeGeometry:Au,WireframeGeometry:T_});class b_ extends mn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Le(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class C_ extends wi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Jd extends mn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Le(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ni,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class R_ extends Jd{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ue(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Yt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Le(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Le(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Le(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class P_ extends mn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Le(16777215),this.specular=new Le(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ni,this.combine=Fa,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class I_ extends mn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Le(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class L_ extends mn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class N_ extends mn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ni,this.combine=Fa,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class D_ extends mn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Le(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class U_ extends Dn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function us(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function O_(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function F_(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function dd(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,l=0;l!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[l++]=r[c+u]}return i}function Kd(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let l=s[n];if(l!==void 0)if(Array.isArray(l))do l=s[n],l!==void 0&&(e.push(s.time),t.push.apply(t,l)),s=r[i++];while(s!==void 0);else if(l.toArray!==void 0)do l=s[n],l!==void 0&&(e.push(s.time),l.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do l=s[n],l!==void 0&&(e.push(s.time),t.push(l)),s=r[i++];while(s!==void 0)}function yT(r,e,t,n,i=30){const s=r.clone();s.name=e;const l=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],d=h.getValueSize(),p=[],m=[];for(let v=0;v<h.times.length;++v){const y=h.times[v]*i;if(!(y<t||y>=n)){p.push(h.times[v]);for(let M=0;M<d;++M)m.push(h.values[v*d+M])}}p.length!==0&&(h.times=us(p,h.times.constructor),h.values=us(m,h.values.constructor),l.push(h))}s.tracks=l;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function xT(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let l=0;l<i;++l){const c=t.tracks[l],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===u});if(h===void 0)continue;let d=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);let m=0;const v=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=v/3);const y=c.times.length-1;let M;if(s<=c.times[0]){const _=d,E=p-d;M=c.values.slice(_,E)}else if(s>=c.times[y]){const _=y*p+d,E=_+p-d;M=c.values.slice(_,E)}else{const _=c.createInterpolant(),E=d,w=p-d;_.evaluate(s),M=_.resultBuffer.slice(E,w)}u==="quaternion"&&new Hn().fromArray(M).normalize().conjugate().toArray(M);const x=h.times.length;for(let _=0;_<x;++_){const E=_*v+m;if(u==="quaternion")Hn.multiplyQuaternionsFlat(h.values,E,M,0,h.values,E);else{const w=v-m*2;for(let T=0;T<w;++T)h.values[E+T]-=M[T]}}}return r.blendMode=Id,r}const ST={convertArray:us,isTypedArray:O_,getKeyframeOrder:F_,sortedArray:dd,flattenJSON:Kd,subclip:yT,makeClipAdditive:xT};class qa{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let l;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}l=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}l=n,n=0;break n}break e}for(;n<l;){const c=n+l>>>1;e<t[c]?l=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let l=0;l!==i;++l)t[l]=n[s+l];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class z_ extends qa{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:as,endingEnd:as}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,l=e+1,c=i[s],u=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case ls:s=e,c=2*t-n;break;case Ma:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case ls:l=e,u=2*n-t;break;case Ma:l=1,u=n+i[1]-i[0];break;default:l=e-1,u=t}const h=(n-t)*.5,d=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*d,this._offsetNext=l*d}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,v=this._weightNext,y=(n-t)/(i-t),M=y*y,x=M*y,_=-m*x+2*m*M-m*y,E=(1+m)*x+(-1.5-2*m)*M+(-.5+m)*y+1,w=(-1-v)*x+(1.5+v)*M+.5*y,T=v*x-v*M;for(let U=0;U!==c;++U)s[U]=_*l[d+U]+E*l[h+U]+w*l[u+U]+T*l[p+U];return s}}class Qd extends qa{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=(n-t)/(i-t),p=1-d;for(let m=0;m!==c;++m)s[m]=l[h+m]*p+l[u+m]*d;return s}}class B_ extends qa{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Ai{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=us(t,this.TimeBufferType),this.values=us(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:us(e.times,Array),values:us(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new B_(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Qd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new z_(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case xa:t=this.InterpolantFactoryMethodDiscrete;break;case Sa:t=this.InterpolantFactoryMethodLinear;break;case Xc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return xa;case this.InterpolantFactoryMethodLinear:return Sa;case this.InterpolantFactoryMethodSmooth:return Xc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,l=i-1;for(;s!==i&&n[s]<e;)++s;for(;l!==-1&&n[l]>t;)--l;if(++l,s!==0||l!==i){s>=l&&(l=Math.max(l,1),s=l-1);const c=this.getValueSize();this.times=n.slice(s,l),this.values=this.values.slice(s*c,l*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let l=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(l!==null&&l>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,l),e=!1;break}l=u}if(i!==void 0&&O_(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Xc,s=e.length-1;let l=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],d=e[c+1];if(h!==d&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,v=p+n;for(let y=0;y!==n;++y){const M=t[p+y];if(M!==t[m+y]||M!==t[v+y]){u=!0;break}}}if(u){if(c!==l){e[l]=e[c];const p=c*n,m=l*n;for(let v=0;v!==n;++v)t[m+v]=t[p+v]}++l}}if(s>0){e[l]=e[s];for(let c=s*n,u=l*n,h=0;h!==n;++h)t[u+h]=t[c+h];++l}return l!==e.length?(this.times=e.slice(0,l),this.values=t.slice(0,l*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Ai.prototype.TimeBufferType=Float32Array;Ai.prototype.ValueBufferType=Float32Array;Ai.prototype.DefaultInterpolation=Sa;class Ss extends Ai{}Ss.prototype.ValueTypeName="bool";Ss.prototype.ValueBufferType=Array;Ss.prototype.DefaultInterpolation=xa;Ss.prototype.InterpolantFactoryMethodLinear=void 0;Ss.prototype.InterpolantFactoryMethodSmooth=void 0;class $d extends Ai{}$d.prototype.ValueTypeName="color";class Na extends Ai{}Na.prototype.ValueTypeName="number";class k_ extends qa{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let d=h+c;h!==d;h+=4)Hn.slerpFlat(s,0,l,h-c,l,h,u);return s}}class Co extends Ai{InterpolantFactoryMethodLinear(e){return new k_(this.times,this.values,this.getValueSize(),e)}}Co.prototype.ValueTypeName="quaternion";Co.prototype.DefaultInterpolation=Sa;Co.prototype.InterpolantFactoryMethodSmooth=void 0;class Ms extends Ai{}Ms.prototype.ValueTypeName="string";Ms.prototype.ValueBufferType=Array;Ms.prototype.DefaultInterpolation=xa;Ms.prototype.InterpolantFactoryMethodLinear=void 0;Ms.prototype.InterpolantFactoryMethodSmooth=void 0;class Da extends Ai{}Da.prototype.ValueTypeName="vector";class Ua{constructor(e="",t=-1,n=[],i=iu){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=ti(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let l=0,c=n.length;l!==c;++l)t.push(wT(n[l]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,l=n.length;s!==l;++s)t.push(Ai.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,l=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const d=F_(u);u=dd(u,1,d),h=dd(h,1,d),!i&&u[0]===0&&(u.push(s),h.push(h[0])),l.push(new Na(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,l)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],d=h.name.match(s);if(d&&d.length>1){const p=d[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return l}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,v,y,M){if(v.length!==0){const x=[],_=[];Kd(v,x,_,y),x.length!==0&&M.push(new p(m,x,_))}},i=[],s=e.name||"default",l=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const v={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let M=0;M<m[y].morphTargets.length;M++)v[m[y].morphTargets[M]]=-1;for(const M in v){const x=[],_=[];for(let E=0;E!==m[y].morphTargets.length;++E){const w=m[y];x.push(w.time),_.push(w.morphTarget===M?1:0)}i.push(new Na(".morphTargetInfluence["+M+"]",x,_))}u=v.length*l}else{const v=".bones["+t[p].name+"]";n(Da,v+".position",m,"pos",i),n(Co,v+".quaternion",m,"rot",i),n(Da,v+".scale",m,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function MT(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Na;case"vector":case"vector2":case"vector3":case"vector4":return Da;case"color":return $d;case"quaternion":return Co;case"bool":case"boolean":return Ss;case"string":return Ms}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function wT(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=MT(r.type);if(r.times===void 0){const t=[],n=[];Kd(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const ir={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class ep{constructor(e,t,n){const i=this;let s=!1,l=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(d){c++,s===!1&&i.onStart!==void 0&&i.onStart(d,l,c),s=!0},this.itemEnd=function(d){l++,i.onProgress!==void 0&&i.onProgress(d,l,c),l===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(d){i.onError!==void 0&&i.onError(d)},this.resolveURL=function(d){return u?u(d):d},this.setURLModifier=function(d){return u=d,this},this.addHandler=function(d,p){return h.push(d,p),this},this.removeHandler=function(d){const p=h.indexOf(d);return p!==-1&&h.splice(p,2),this},this.getHandler=function(d){for(let p=0,m=h.length;p<m;p+=2){const v=h[p],y=h[p+1];if(v.global&&(v.lastIndex=0),v.test(d))return y}return null}}}const H_=new ep;class Vn{constructor(e){this.manager=e!==void 0?e:H_,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Vn.DEFAULT_MATERIAL_NAME="__DEFAULT";const er={};class ET extends Error{constructor(e,t){super(e),this.response=t}}class ar extends Vn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=ir.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(er[e]!==void 0){er[e].push({onLoad:t,onProgress:n,onError:i});return}er[e]=[],er[e].push({onLoad:t,onProgress:n,onError:i});const l=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(l).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const d=er[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),v=m?parseInt(m):0,y=v!==0;let M=0;const x=new ReadableStream({start(_){E();function E(){p.read().then(({done:w,value:T})=>{if(w)_.close();else{M+=T.byteLength;const U=new ProgressEvent("progress",{lengthComputable:y,loaded:M,total:v});for(let P=0,L=d.length;P<L;P++){const z=d[P];z.onProgress&&z.onProgress(U)}_.enqueue(T),E()}})}}});return new Response(x)}else throw new ET(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(d=>new DOMParser().parseFromString(d,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,v=new TextDecoder(m);return h.arrayBuffer().then(y=>v.decode(y))}}}).then(h=>{ir.add(e,h);const d=er[e];delete er[e];for(let p=0,m=d.length;p<m;p++){const v=d[p];v.onLoad&&v.onLoad(h)}}).catch(h=>{const d=er[e];if(d===void 0)throw this.manager.itemError(e),h;delete er[e];for(let p=0,m=d.length;p<m;p++){const v=d[p];v.onError&&v.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class AT extends Vn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new ar(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Ua.parse(e[n]);t.push(i)}return t}}class TT extends Vn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=[],c=new hu,u=new ar(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function d(p){u.load(e[p],function(m){const v=s.parse(m,!0);l[p]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},h+=1,h===6&&(v.mipmapCount===1&&(c.minFilter=$t),c.image=l,c.format=v.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)d(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const v=m.mipmaps.length/m.mipmapCount;for(let y=0;y<v;y++){l[y]={mipmaps:[]};for(let M=0;M<m.mipmapCount;M++)l[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+M]),l[y].format=m.format,l[y].width=m.width,l[y].height=m.height}c.image=l}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=$t),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class Oa extends Vn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=ir.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c=Ca("img");function u(){d(),ir.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){d(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function d(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class bT extends Vn{constructor(e){super(e)}load(e,t,n,i){const s=new ka;s.colorSpace=fi;const l=new Oa(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function u(h){l.load(e[h],function(d){s.images[h]=d,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class CT extends Vn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new Pr,c=new ar(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){let h;try{h=s.parse(u)}catch(d){if(i!==void 0)i(d);else{console.error(d);return}}h.image!==void 0?l.image=h.image:h.data!==void 0&&(l.image.width=h.width,l.image.height=h.height,l.image.data=h.data),l.wrapS=h.wrapS!==void 0?h.wrapS:di,l.wrapT=h.wrapT!==void 0?h.wrapT:di,l.magFilter=h.magFilter!==void 0?h.magFilter:$t,l.minFilter=h.minFilter!==void 0?h.minFilter:$t,l.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0&&(l.colorSpace=h.colorSpace),h.flipY!==void 0&&(l.flipY=h.flipY),h.format!==void 0&&(l.format=h.format),h.type!==void 0&&(l.type=h.type),h.mipmaps!==void 0&&(l.mipmaps=h.mipmaps,l.minFilter=Oi),h.mipmapCount===1&&(l.minFilter=$t),h.generateMipmaps!==void 0&&(l.generateMipmaps=h.generateMipmaps),l.needsUpdate=!0,t&&t(l,h)},n,i),l}}class V_ extends Vn{constructor(e){super(e)}load(e,t,n,i){const s=new Gt,l=new Oa(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Or extends wt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Le(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class G_ extends Or{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(wt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Le(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const gf=new Ke,t0=new D,n0=new D;class tp{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ue(512,512),this.map=null,this.mapPass=null,this.matrix=new Ke,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ha,this._frameExtents=new ue(1,1),this._viewportCount=1,this._viewports=[new Ct(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;t0.setFromMatrixPosition(e.matrixWorld),t.position.copy(t0),n0.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(n0),t.updateMatrixWorld(),gf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(gf),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(gf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class RT extends tp{constructor(){super(new hn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=_o*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class W_ extends Or{constructor(e,t,n=0,i=Math.PI/3,s=0,l=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(wt.DEFAULT_UP),this.updateMatrix(),this.target=new wt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=l,this.map=null,this.shadow=new RT}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const i0=new Ke,ra=new D,vf=new D;class PT extends tp{constructor(){super(new hn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ue(4,2),this._viewportCount=6,this._viewports=[new Ct(2,1,1,1),new Ct(0,1,1,1),new Ct(3,1,1,1),new Ct(1,1,1,1),new Ct(3,0,1,1),new Ct(1,0,1,1)],this._cubeDirections=[new D(1,0,0),new D(-1,0,0),new D(0,0,1),new D(0,0,-1),new D(0,1,0),new D(0,-1,0)],this._cubeUps=[new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,0,1),new D(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),ra.setFromMatrixPosition(e.matrixWorld),n.position.copy(ra),vf.copy(n.position),vf.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(vf),n.updateMatrixWorld(),i.makeTranslation(-ra.x,-ra.y,-ra.z),i0.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i0)}}class X_ extends Or{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new PT}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class IT extends tp{constructor(){super(new Va(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class q_ extends Or{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(wt.DEFAULT_UP),this.updateMatrix(),this.target=new wt,this.shadow=new IT}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Y_ extends Or{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class j_ extends Or{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Z_{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new D)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.282095),t.addScaledVector(l[1],.488603*i),t.addScaledVector(l[2],.488603*s),t.addScaledVector(l[3],.488603*n),t.addScaledVector(l[4],1.092548*(n*i)),t.addScaledVector(l[5],1.092548*(i*s)),t.addScaledVector(l[6],.315392*(3*s*s-1)),t.addScaledVector(l[7],1.092548*(n*s)),t.addScaledVector(l[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.886227),t.addScaledVector(l[1],2*.511664*i),t.addScaledVector(l[2],2*.511664*s),t.addScaledVector(l[3],2*.511664*n),t.addScaledVector(l[4],2*.429043*n*i),t.addScaledVector(l[5],2*.429043*i*s),t.addScaledVector(l[6],.743125*s*s-.247708),t.addScaledVector(l[7],2*.429043*n*s),t.addScaledVector(l[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class J_ extends Or{constructor(e=new Z_,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Tu extends Vn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,l=new ar(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=Tu.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Le().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const l=e.uniforms[s];switch(i.uniforms[s]={},l.type){case"t":i.uniforms[s].value=n(l.value);break;case"c":i.uniforms[s].value=new Le().setHex(l.value);break;case"v2":i.uniforms[s].value=new ue().fromArray(l.value);break;case"v3":i.uniforms[s].value=new D().fromArray(l.value);break;case"v4":i.uniforms[s].value=new Ct().fromArray(l.value);break;case"m3":i.uniforms[s].value=new lt().fromArray(l.value);break;case"m4":i.uniforms[s].value=new Ke().fromArray(l.value);break;default:i.uniforms[s].value=l.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new ue().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ue().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:b_,SpriteMaterial:Hd,RawShaderMaterial:C_,ShaderMaterial:wi,PointsMaterial:Gd,MeshPhysicalMaterial:R_,MeshStandardMaterial:Jd,MeshPhongMaterial:P_,MeshToonMaterial:I_,MeshNormalMaterial:L_,MeshLambertMaterial:N_,MeshDepthMaterial:Bd,MeshDistanceMaterial:kd,MeshBasicMaterial:Dr,MeshMatcapMaterial:D_,LineDashedMaterial:U_,LineBasicMaterial:Dn,Material:mn};return new t[e]}}class pd{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class K_ extends ht{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Q_ extends Vn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new ar(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(v,y){if(t[y]!==void 0)return t[y];const x=v.interleavedBuffers[y],_=s(v,x.buffer),E=uo(x.type,_),w=new cu(E,x.stride);return w.uuid=x.uuid,t[y]=w,w}function s(v,y){if(n[y]!==void 0)return n[y];const x=v.arrayBuffers[y],_=new Uint32Array(x).buffer;return n[y]=_,_}const l=e.isInstancedBufferGeometry?new K_:new ht,c=e.data.index;if(c!==void 0){const v=uo(c.type,c.array);l.setIndex(new Rt(v,1))}const u=e.data.attributes;for(const v in u){const y=u[v];let M;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);M=new _s(x,y.itemSize,y.offset,y.normalized)}else{const x=uo(y.type,y.array),_=y.isInstancedBufferAttribute?xo:Rt;M=new _(x,y.itemSize,y.normalized)}y.name!==void 0&&(M.name=y.name),y.usage!==void 0&&M.setUsage(y.usage),l.setAttribute(v,M)}const h=e.data.morphAttributes;if(h)for(const v in h){const y=h[v],M=[];for(let x=0,_=y.length;x<_;x++){const E=y[x];let w;if(E.isInterleavedBufferAttribute){const T=i(e.data,E.data);w=new _s(T,E.itemSize,E.offset,E.normalized)}else{const T=uo(E.type,E.array);w=new Rt(T,E.itemSize,E.normalized)}E.name!==void 0&&(w.name=E.name),M.push(w)}l.morphAttributes[v]=M}e.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let v=0,y=p.length;v!==y;++v){const M=p[v];l.addGroup(M.start,M.count,M.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const v=new D;m.center!==void 0&&v.fromArray(m.center),l.boundingSphere=new En(v,m.radius)}return e.name&&(l.name=e.name),e.userData&&(l.userData=e.userData),l}}class LT extends Vn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=this.path===""?pd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||l;const c=new ar(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const d=h.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?pd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new ar(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const l=await s.loadAsync(e,t),c=JSON.parse(l),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),l=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,l),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),d=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,d),t!==void 0){let p=!1;for(const m in l)if(l[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),l=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,l),u=this.parseObject(e.object,i,c,l,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new gs().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=new uu().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new Q_;for(let s=0,l=e.length;s<l;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in e0?c=e0[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Tu;s.setTextures(t);for(let l=0,c=e.length;l<c;l++){const u=e[l];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=Ua.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function l(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return l(d)}else return u.data?{data:uo(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new ep(t);s=new Oa(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,d=e.length;h<d;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const v=[];for(let y=0,M=m.length;y<M;y++){const x=m[y],_=c(x);_!==null&&(_ instanceof HTMLImageElement?v.push(_):v.push(new Pr(_.data,_.width,_.height)))}i[p.uuid]=new cs(v)}else{const v=c(p.url);i[p.uuid]=new cs(v)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return l.data?{data:uo(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){i=new Oa(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=e.length;l<c;l++){const u=e[l],h=u.url;if(Array.isArray(h)){const d=[];for(let p=0,m=h.length;p<m;p++){const v=h[p],y=await s(v);y!==null&&(y instanceof HTMLImageElement?d.push(y):d.push(new Pr(y.data,y.width,y.height)))}n[u.uuid]=new cs(d)}else{const d=await s(u.url);n[u.uuid]=new cs(d)}}}return n}parseTextures(e,t){function n(s,l){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),l[s])}const i={};if(e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let d;Array.isArray(h)?(d=new ka,h.length===6&&(d.needsUpdate=!0)):(h&&h.data?d=new Pr:d=new Gt,h&&(d.needsUpdate=!0)),d.source=u,d.uuid=c.uuid,c.name!==void 0&&(d.name=c.name),c.mapping!==void 0&&(d.mapping=n(c.mapping,NT)),c.channel!==void 0&&(d.channel=c.channel),c.offset!==void 0&&d.offset.fromArray(c.offset),c.repeat!==void 0&&d.repeat.fromArray(c.repeat),c.center!==void 0&&d.center.fromArray(c.center),c.rotation!==void 0&&(d.rotation=c.rotation),c.wrap!==void 0&&(d.wrapS=n(c.wrap[0],r0),d.wrapT=n(c.wrap[1],r0)),c.format!==void 0&&(d.format=c.format),c.internalFormat!==void 0&&(d.internalFormat=c.internalFormat),c.type!==void 0&&(d.type=c.type),c.colorSpace!==void 0&&(d.colorSpace=c.colorSpace),c.minFilter!==void 0&&(d.minFilter=n(c.minFilter,s0)),c.magFilter!==void 0&&(d.magFilter=n(c.magFilter,s0)),c.anisotropy!==void 0&&(d.anisotropy=c.anisotropy),c.flipY!==void 0&&(d.flipY=c.flipY),c.generateMipmaps!==void 0&&(d.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(d.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(d.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(d.compareFunction=c.compareFunction),c.userData!==void 0&&(d.userData=c.userData),i[c.uuid]=d}return i}parseObject(e,t,n,i,s){let l;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const v=[];for(let y=0,M=m.length;y<M;y++){const x=m[y];n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),v.push(n[x])}return v}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let d,p;switch(e.type){case"Scene":l=new Jc,e.background!==void 0&&(Number.isInteger(e.background)?l.background=new Le(e.background):l.background=h(e.background)),e.environment!==void 0&&(l.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?l.fog=new lu(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(l.fog=new au(e.fog.color,e.fog.density)),e.fog.name!==""&&(l.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(l.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&l.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(l.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&l.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":l=new hn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(l.focus=e.focus),e.zoom!==void 0&&(l.zoom=e.zoom),e.filmGauge!==void 0&&(l.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(l.filmOffset=e.filmOffset),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"OrthographicCamera":l=new Va(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(l.zoom=e.zoom),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"AmbientLight":l=new Y_(e.color,e.intensity);break;case"DirectionalLight":l=new q_(e.color,e.intensity);break;case"PointLight":l=new X_(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":l=new j_(e.color,e.intensity,e.width,e.height);break;case"SpotLight":l=new W_(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":l=new G_(e.color,e.groundColor,e.intensity);break;case"LightProbe":l=new J_().fromJSON(e);break;case"SkinnedMesh":d=c(e.geometry),p=u(e.material),l=new f_(d,p),e.bindMode!==void 0&&(l.bindMode=e.bindMode),e.bindMatrix!==void 0&&l.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(l.skeleton=e.skeleton);break;case"Mesh":d=c(e.geometry),p=u(e.material),l=new en(d,p);break;case"InstancedMesh":d=c(e.geometry),p=u(e.material);const m=e.count,v=e.instanceMatrix,y=e.instanceColor;l=new d_(d,p,m),l.instanceMatrix=new xo(new Float32Array(v.array),16),y!==void 0&&(l.instanceColor=new xo(new Float32Array(y.array),y.itemSize));break;case"BatchedMesh":d=c(e.geometry),p=u(e.material),l=new p_(e.maxGeometryCount,e.maxVertexCount,e.maxIndexCount,p),l.geometry=d,l.perObjectFrustumCulled=e.perObjectFrustumCulled,l.sortObjects=e.sortObjects,l._drawRanges=e.drawRanges,l._reservedRanges=e.reservedRanges,l._visibility=e.visibility,l._active=e.active,l._bounds=e.bounds.map(M=>{const x=new Nn;x.min.fromArray(M.boxMin),x.max.fromArray(M.boxMax);const _=new En;return _.radius=M.sphereRadius,_.center.fromArray(M.sphereCenter),{boxInitialized:M.boxInitialized,box:x,sphereInitialized:M.sphereInitialized,sphere:_}}),l._maxGeometryCount=e.maxGeometryCount,l._maxVertexCount=e.maxVertexCount,l._maxIndexCount=e.maxIndexCount,l._geometryInitialized=e.geometryInitialized,l._geometryCount=e.geometryCount,l._matricesTexture=h(e.matricesTexture.uuid);break;case"LOD":l=new h_;break;case"Line":l=new Lr(c(e.geometry),u(e.material));break;case"LineLoop":l=new m_(c(e.geometry),u(e.material));break;case"LineSegments":l=new Hi(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":l=new g_(c(e.geometry),u(e.material));break;case"Sprite":l=new u_(u(e.material));break;case"Group":l=new fo;break;case"Bone":l=new Vd;break;default:l=new wt}if(l.uuid=e.uuid,e.name!==void 0&&(l.name=e.name),e.matrix!==void 0?(l.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=e.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(e.position!==void 0&&l.position.fromArray(e.position),e.rotation!==void 0&&l.rotation.fromArray(e.rotation),e.quaternion!==void 0&&l.quaternion.fromArray(e.quaternion),e.scale!==void 0&&l.scale.fromArray(e.scale)),e.up!==void 0&&l.up.fromArray(e.up),e.castShadow!==void 0&&(l.castShadow=e.castShadow),e.receiveShadow!==void 0&&(l.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(l.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(l.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(l.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(l.visible=e.visible),e.frustumCulled!==void 0&&(l.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(l.renderOrder=e.renderOrder),e.userData!==void 0&&(l.userData=e.userData),e.layers!==void 0&&(l.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let v=0;v<m.length;v++)l.add(this.parseObject(m[v],t,n,i,s))}if(e.animations!==void 0){const m=e.animations;for(let v=0;v<m.length;v++){const y=m[v];l.animations.push(s[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(l.autoUpdate=e.autoUpdate);const m=e.levels;for(let v=0;v<m.length;v++){const y=m[v],M=l.getObjectByProperty("uuid",y.object);M!==void 0&&l.addLevel(M,y.distance,y.hysteresis)}}return l}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const NT={UVMapping:nu,CubeReflectionMapping:or,CubeRefractionMapping:Ir,EquirectangularReflectionMapping:ma,EquirectangularRefractionMapping:ga,CubeUVReflectionMapping:Mo},r0={RepeatWrapping:va,ClampToEdgeWrapping:di,MirroredRepeatWrapping:_a},s0={NearestFilter:fn,NearestMipmapNearestFilter:Sd,NearestMipmapLinearFilter:co,LinearFilter:$t,LinearMipmapNearestFilter:ua,LinearMipmapLinearFilter:Oi};class DT extends Vn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=ir.get(e);if(l!==void 0){if(s.manager.itemStart(e),l.then){l.then(h=>{t&&t(h),s.manager.itemEnd(e)}).catch(h=>{i&&i(h)});return}return setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const u=fetch(e,c).then(function(h){return h.blob()}).then(function(h){return createImageBitmap(h,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(h){return ir.add(e,h),t&&t(h),s.manager.itemEnd(e),h}).catch(function(h){i&&i(h),ir.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});ir.add(e,u),s.manager.itemStart(e)}}let Ic;class np{static getContext(){return Ic===void 0&&(Ic=new(window.AudioContext||window.webkitAudioContext)),Ic}static setContext(e){Ic=e}}class UT extends Vn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new ar(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(u){try{const h=u.slice(0);np.getContext().decodeAudioData(h,function(p){t(p)}).catch(c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}const o0=new Ke,a0=new Ke,$r=new Ke;class OT{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new hn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new hn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,$r.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,l=t.near*Math.tan(ps*t.fov*.5)/t.zoom;let c,u;a0.elements[12]=-i,o0.elements[12]=i,c=-l*t.aspect+s,u=l*t.aspect+s,$r.elements[0]=2*t.near/(u-c),$r.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy($r),c=-l*t.aspect-s,u=l*t.aspect-s,$r.elements[0]=2*t.near/(u-c),$r.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy($r)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(a0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(o0)}}class ip{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=l0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=l0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function l0(){return(typeof performance>"u"?Date:performance).now()}const es=new D,c0=new Hn,FT=new D,ts=new D;class zT extends wt{constructor(){super(),this.type="AudioListener",this.context=np.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new ip}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(es,c0,FT),ts.set(0,0,-1).applyQuaternion(c0),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(es.x,i),t.positionY.linearRampToValueAtTime(es.y,i),t.positionZ.linearRampToValueAtTime(es.z,i),t.forwardX.linearRampToValueAtTime(ts.x,i),t.forwardY.linearRampToValueAtTime(ts.y,i),t.forwardZ.linearRampToValueAtTime(ts.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(es.x,es.y,es.z),t.setOrientation(ts.x,ts.y,ts.z,n.x,n.y,n.z)}}class $_ extends wt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const ns=new D,u0=new Hn,BT=new D,is=new D;class kT extends $_{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ns,u0,BT),is.set(0,0,1).applyQuaternion(u0);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ns.x,n),t.positionY.linearRampToValueAtTime(ns.y,n),t.positionZ.linearRampToValueAtTime(ns.z,n),t.orientationX.linearRampToValueAtTime(is.x,n),t.orientationY.linearRampToValueAtTime(is.y,n),t.orientationZ.linearRampToValueAtTime(is.z,n)}else t.setPosition(ns.x,ns.y,ns.z),t.setOrientation(is.x,is.y,is.z)}}class HT{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class ey{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,l;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[s+c]=n[c];l=t}else{l+=t;const c=t/l;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,l=i;s!==l;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let l=0;l!==s;++l)e[t+l]=e[n+l]}_slerp(e,t,n,i){Hn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const l=this._workIndex*s;Hn.multiplyQuaternionsFlat(e,l,e,t,e,n),Hn.slerpFlat(e,t,e,t,e,l,i)}_lerp(e,t,n,i,s){const l=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*l+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let l=0;l!==s;++l){const c=t+l;e[c]=e[c]+e[n+l]*i}}}const rp="\\[\\]\\.:\\/",VT=new RegExp("["+rp+"]","g"),sp="[^"+rp+"]",GT="[^"+rp.replace("\\.","")+"]",WT=/((?:WC+[\/:])*)/.source.replace("WC",sp),XT=/(WCOD+)?/.source.replace("WCOD",GT),qT=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",sp),YT=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",sp),jT=new RegExp("^"+WT+XT+qT+YT+"$"),ZT=["material","materials","bones","map"];class JT{constructor(e,t,n){const i=n||vt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class vt{constructor(e,t,n){this.path=t,this.parsedPath=n||vt.parseTrackName(t),this.node=vt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new vt.Composite(e,t,n):new vt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(VT,"")}static parseTrackName(e){const t=jT.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);ZT.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let l=0;l<s.length;l++){const c=s[l];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=vt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let d=0;d<e.length;d++)if(e[d].name===h){h=d;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const l=e[i];if(l===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=s}else l.fromArray!==void 0&&l.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(u=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}vt.Composite=JT;vt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};vt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};vt.prototype.GetterByBindingType=[vt.prototype._getValue_direct,vt.prototype._getValue_array,vt.prototype._getValue_arrayElement,vt.prototype._getValue_toArray];vt.prototype.SetterByBindingTypeAndVersioning=[[vt.prototype._setValue_direct,vt.prototype._setValue_direct_setNeedsUpdate,vt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[vt.prototype._setValue_array,vt.prototype._setValue_array_setNeedsUpdate,vt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[vt.prototype._setValue_arrayElement,vt.prototype._setValue_arrayElement_setNeedsUpdate,vt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[vt.prototype._setValue_fromArray,vt.prototype._setValue_fromArray_setNeedsUpdate,vt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class KT{constructor(){this.isAnimationObjectGroup=!0,this.uuid=ti(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,l=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let d=0,p=arguments.length;d!==p;++d){const m=arguments[d],v=m.uuid;let y=t[v];if(y===void 0){y=u++,t[v]=y,e.push(m);for(let M=0,x=l;M!==x;++M)s[M].push(new vt(m,n[M],i[M]))}else if(y<h){c=e[y];const M=--h,x=e[M];t[x.uuid]=y,e[y]=x,t[v]=M,e[M]=m;for(let _=0,E=l;_!==E;++_){const w=s[_],T=w[M];let U=w[y];w[y]=T,U===void 0&&(U=new vt(m,n[_],i[_])),w[M]=U}}else e[y]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const u=arguments[l],h=u.uuid,d=t[h];if(d!==void 0&&d>=s){const p=s++,m=e[p];t[m.uuid]=d,e[d]=m,t[h]=p,e[p]=u;for(let v=0,y=i;v!==y;++v){const M=n[v],x=M[p],_=M[d];M[d]=x,M[p]=_}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,l=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],d=h.uuid,p=t[d];if(p!==void 0)if(delete t[d],p<s){const m=--s,v=e[m],y=--l,M=e[y];t[v.uuid]=p,e[p]=v,t[M.uuid]=m,e[m]=M,e.pop();for(let x=0,_=i;x!==_;++x){const E=n[x],w=E[m],T=E[y];E[p]=w,E[m]=T,E.pop()}}else{const m=--l,v=e[m];m>0&&(t[v.uuid]=p),e[p]=v,e.pop();for(let y=0,M=i;y!==M;++y){const x=n[y];x[p]=x[m],x.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const l=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,d=this.nCachedObjects_,p=new Array(h);i=s.length,n[e]=i,l.push(e),c.push(t),s.push(p);for(let m=d,v=u.length;m!==v;++m){const y=u[m];p[m]=new vt(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,l=this._bindings,c=l.length-1,u=l[c],h=e[c];t[h]=n,l[n]=u,l.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class ty{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,l=s.length,c=new Array(l),u={endingStart:as,endingEnd:as};for(let h=0;h!==l;++h){const d=s[h].createInterpolant(null);c[h]=d,d.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Lv,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,l=s/i,c=i/s;e.warp(1,l,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/l,h[1]=t/l,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const l=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Id:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(l),h[d].accumulateAdditive(c);break;case iu:default:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(l),h[d].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const l=n===Nv;if(e===0)return s===-1?i:l&&(s&1)===1?t-i:i;if(n===Iv){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,l)}else this._setEndings(!1,!1,l);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=ls,i.endingEnd=ls):(e?i.endingStart=this.zeroSlopeAtStart?ls:as:i.endingStart=Ma,t?i.endingEnd=this.zeroSlopeAtEnd?ls:as:i.endingEnd=Ma)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,u=l.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const QT=new Float32Array(1);class $T extends cr{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,l=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let d=h[u];d===void 0&&(d={},h[u]=d);for(let p=0;p!==s;++p){const m=i[p],v=m.name;let y=d[v];if(y!==void 0)++y.referenceCount,l[p]=y;else{if(y=l[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,v));continue}const M=t&&t._propertyBindings[p].binding.parsedPath;y=new ey(vt.create(n,v,M),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,v),l[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let l=s[t];if(l===void 0)l={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=l;else{const c=l.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),l.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,l=this._actionsByClip,c=l[s],u=c.knownActions,h=u[u.length-1],d=e._byClipCacheIndex;h._byClipCacheIndex=d,u[d]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete l[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let l=i[t];l===void 0&&(l={},i[t]=l),l[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,l=this._bindingsByRootAndName,c=l[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete l[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Qd(new Float32Array(2),new Float32Array(2),1,QT),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let l=typeof e=="string"?Ua.findByName(i,e):e;const c=l!==null?l.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(l!==null?n=l.blendMode:n=iu),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],l===null&&(l=h._clip)}if(l===null)return null;const d=new ty(this,l,t,n);return this._bindAction(d,h),this._addInactiveAction(d,c,s),d}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?Ua.findByName(n,e):e,l=s?s.uuid:e,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),l=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,l);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(l);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const l=s.knownActions;for(let c=0,u=l.length;c!==u;++c){const h=l[c];this._deactivateAction(h);const d=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=d,t[d]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const l in s){const c=s[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class op{constructor(e){this.value=e}clone(){return new op(this.value.clone===void 0?this.value:this.value.clone())}}let eb=0;class tb extends cr{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:eb++}),this.name="",this.usage=Ta,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const s=Array.isArray(t[n])?t[n]:[t[n]];for(let l=0;l<s.length;l++)this.uniforms.push(s[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class nb extends cu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class ib{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const h0=new Ke;class ny{constructor(e,t,n=0,i=1/0){this.ray=new Eo(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new ms,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return h0.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(h0),this}intersectObject(e,t=!0,n=[]){return md(e,this,n,t),n.sort(f0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)md(e[i],this,n,t);return n.sort(f0),n}}function f0(r,e){return r.distance-e.distance}function md(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,l=i.length;s<l;s++)md(i[s],e,t,!0)}}class rb{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Yt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class sb{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const d0=new ue;class ob{constructor(e=new ue(1/0,1/0),t=new ue(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=d0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,d0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const p0=new D,Lc=new D;class ab{constructor(e=new D,t=new D){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){p0.subVectors(e,this.start),Lc.subVectors(this.end,this.start);const n=Lc.dot(Lc);let s=Lc.dot(p0)/n;return t&&(s=Yt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const m0=new D;class lb extends wt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new ht,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,u=32;l<u;l++,c++){const h=l/u*Math.PI*2,d=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(d),Math.sin(d),1)}n.setAttribute("position",new ze(i,3));const s=new Dn({fog:!1,toneMapped:!1});this.cone=new Hi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),m0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(m0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const br=new D,Nc=new Ke,_f=new Ke;class cb extends Hi{constructor(e){const t=iy(e),n=new ht,i=[],s=[],l=new Le(0,0,1),c=new Le(0,1,0);for(let h=0;h<t.length;h++){const d=t[h];d.parent&&d.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(l.r,l.g,l.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new ze(i,3)),n.setAttribute("color",new ze(s,3));const u=new Dn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");_f.copy(this.root.matrixWorld).invert();for(let s=0,l=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(Nc.multiplyMatrices(_f,c.matrixWorld),br.setFromMatrixPosition(Nc),i.setXYZ(l,br.x,br.y,br.z),Nc.multiplyMatrices(_f,c.parent.matrixWorld),br.setFromMatrixPosition(Nc),i.setXYZ(l+1,br.x,br.y,br.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function iy(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,iy(r.children[t]));return e}class ub extends en{constructor(e,t,n){const i=new Xa(t,4,2),s=new Dr({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const hb=new D,g0=new Le,v0=new Le;class fb extends wt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Wa(t);i.rotateY(Math.PI*.5),this.material=new Dr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),l=new Float32Array(s.count*3);i.setAttribute("color",new Rt(l,3)),this.add(new en(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");g0.copy(this.light.color),v0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?g0:v0;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(hb.setFromMatrixPosition(this.light.matrixWorld).negate())}}class db extends Hi{constructor(e=10,t=10,n=4473924,i=8947848){n=new Le(n),i=new Le(i);const s=t/2,l=e/t,c=e/2,u=[],h=[];for(let m=0,v=0,y=-c;m<=t;m++,y+=l){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const M=m===s?n:i;M.toArray(h,v),v+=3,M.toArray(h,v),v+=3,M.toArray(h,v),v+=3,M.toArray(h,v),v+=3}const d=new ht;d.setAttribute("position",new ze(u,3)),d.setAttribute("color",new ze(h,3));const p=new Dn({vertexColors:!0,toneMapped:!1});super(d,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class pb extends Hi{constructor(e=10,t=16,n=8,i=64,s=4473924,l=8947848){s=new Le(s),l=new Le(l);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),v=Math.sin(m)*e,y=Math.cos(m)*e;c.push(0,0,0),c.push(v,0,y);const M=p&1?s:l;u.push(M.r,M.g,M.b),u.push(M.r,M.g,M.b)}for(let p=0;p<n;p++){const m=p&1?s:l,v=e-e/n*p;for(let y=0;y<i;y++){let M=y/i*(Math.PI*2),x=Math.sin(M)*v,_=Math.cos(M)*v;c.push(x,0,_),u.push(m.r,m.g,m.b),M=(y+1)/i*(Math.PI*2),x=Math.sin(M)*v,_=Math.cos(M)*v,c.push(x,0,_),u.push(m.r,m.g,m.b)}}const h=new ht;h.setAttribute("position",new ze(c,3)),h.setAttribute("color",new ze(u,3));const d=new Dn({vertexColors:!0,toneMapped:!1});super(h,d),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const _0=new D,Dc=new D,y0=new D;class mb extends wt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new ht;i.setAttribute("position",new ze([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Dn({fog:!1,toneMapped:!1});this.lightPlane=new Lr(i,s),this.add(this.lightPlane),i=new ht,i.setAttribute("position",new ze([0,0,0,0,0,1],3)),this.targetLine=new Lr(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),_0.setFromMatrixPosition(this.light.matrixWorld),Dc.setFromMatrixPosition(this.light.target.matrixWorld),y0.subVectors(Dc,_0),this.lightPlane.lookAt(Dc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Dc),this.targetLine.scale.z=y0.length()}}const Uc=new D,qt=new Ba;class gb extends Hi{constructor(e){const t=new ht,n=new Dn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,M){u(y),u(M)}function u(y){i.push(0,0,0),s.push(0,0,0),l[y]===void 0&&(l[y]=[]),l[y].push(i.length/3-1)}t.setAttribute("position",new ze(i,3)),t.setAttribute("color",new ze(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const h=new Le(16755200),d=new Le(16711680),p=new Le(43775),m=new Le(16777215),v=new Le(3355443);this.setColors(h,d,p,m,v)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;qt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Zt("c",t,e,qt,0,0,-1),Zt("t",t,e,qt,0,0,1),Zt("n1",t,e,qt,-n,-i,-1),Zt("n2",t,e,qt,n,-i,-1),Zt("n3",t,e,qt,-n,i,-1),Zt("n4",t,e,qt,n,i,-1),Zt("f1",t,e,qt,-n,-i,1),Zt("f2",t,e,qt,n,-i,1),Zt("f3",t,e,qt,-n,i,1),Zt("f4",t,e,qt,n,i,1),Zt("u1",t,e,qt,n*.7,i*1.1,-1),Zt("u2",t,e,qt,-n*.7,i*1.1,-1),Zt("u3",t,e,qt,0,i*2,-1),Zt("cf1",t,e,qt,-n,0,1),Zt("cf2",t,e,qt,n,0,1),Zt("cf3",t,e,qt,0,-i,1),Zt("cf4",t,e,qt,0,i,1),Zt("cn1",t,e,qt,-n,0,-1),Zt("cn2",t,e,qt,n,0,-1),Zt("cn3",t,e,qt,0,-i,-1),Zt("cn4",t,e,qt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Zt(r,e,t,n,i,s,l){Uc.set(i,s,l).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,d=c.length;h<d;h++)u.setXYZ(c[h],Uc.x,Uc.y,Uc.z)}}const Oc=new Nn;class vb extends Hi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new ht;s.setIndex(new Rt(n,1)),s.setAttribute("position",new Rt(i,3)),super(s,new Dn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Oc.setFromObject(this.object),Oc.isEmpty())return;const t=Oc.min,n=Oc.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class _b extends Hi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new ht;s.setIndex(new Rt(n,1)),s.setAttribute("position",new ze(i,3)),super(s,new Dn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class yb extends Lr{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new ht;l.setAttribute("position",new ze(s,3)),l.computeBoundingSphere(),super(l,new Dn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new ht;u.setAttribute("position",new ze(c,3)),u.computeBoundingSphere(),this.add(new en(u,new Dr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const x0=new D;let Fc,yf;class xb extends wt{constructor(e=new D(0,0,1),t=new D(0,0,0),n=1,i=16776960,s=n*.2,l=s*.2){super(),this.type="ArrowHelper",Fc===void 0&&(Fc=new ht,Fc.setAttribute("position",new ze([0,0,0,0,1,0],3)),yf=new bo(0,.5,1,5,1),yf.translate(0,-.5,0)),this.position.copy(t),this.line=new Lr(Fc,new Dn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new en(yf,new Dr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,l)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{x0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(x0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Sb extends Hi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new ht;i.setAttribute("position",new ze(t,3)),i.setAttribute("color",new ze(n,3));const s=new Dn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Le,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Mb{constructor(){this.type="ShapePath",this.color=new Le,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Ra,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,l){return this.currentPath.bezierCurveTo(e,t,n,i,s,l),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const E=[];for(let w=0,T=_.length;w<T;w++){const U=_[w],P=new gs;P.curves=U.curves,E.push(P)}return E}function n(_,E){const w=E.length;let T=!1;for(let U=w-1,P=0;P<w;U=P++){let L=E[U],z=E[P],R=z.x-L.x,b=z.y-L.y;if(Math.abs(b)>Number.EPSILON){if(b<0&&(L=E[P],R=-R,z=E[U],b=-b),_.y<L.y||_.y>z.y)continue;if(_.y===L.y){if(_.x===L.x)return!0}else{const F=b*(_.x-L.x)-R*(_.y-L.y);if(F===0)return!0;if(F<0)continue;T=!T}}else{if(_.y!==L.y)continue;if(z.x<=_.x&&_.x<=L.x||L.x<=_.x&&_.x<=z.x)return!0}}return T}const i=ki.isClockWise,s=this.subPaths;if(s.length===0)return[];let l,c,u;const h=[];if(s.length===1)return c=s[0],u=new gs,u.curves=c.curves,h.push(u),h;let d=!i(s[0].getPoints());d=e?!d:d;const p=[],m=[];let v=[],y=0,M;m[y]=void 0,v[y]=[];for(let _=0,E=s.length;_<E;_++)c=s[_],M=c.getPoints(),l=i(M),l=e?!l:l,l?(!d&&m[y]&&y++,m[y]={s:new gs,p:M},m[y].s.curves=c.curves,d&&y++,v[y]=[]):v[y].push({h:c,p:M[0]});if(!m[0])return t(s);if(m.length>1){let _=!1,E=0;for(let w=0,T=m.length;w<T;w++)p[w]=[];for(let w=0,T=m.length;w<T;w++){const U=v[w];for(let P=0;P<U.length;P++){const L=U[P];let z=!0;for(let R=0;R<m.length;R++)n(L.p,m[R].p)&&(w!==R&&E++,z?(z=!1,p[R].push(L)):_=!0);z&&p[w].push(L)}}E>0&&_===!1&&(v=p)}let x;for(let _=0,E=m.length;_<E;_++){u=m[_].s,h.push(u),x=v[_];for(let w=0,T=x.length;w<T;w++)u.holes.push(x[w].h)}return h}}class wb extends Mi{constructor(e=1,t=1,n=1,i={}){console.warn('THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the "count" parameter to enable MRT.'),super(e,t,{...i,count:n}),this.isWebGLMultipleRenderTargets=!0}get texture(){return this.textures}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:eu}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=eu);const Eb=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:xd,AddEquation:Rr,AddOperation:pv,AdditiveAnimationBlendMode:Id,AdditiveBlending:If,AgXToneMapping:yv,AlphaFormat:Av,AlwaysCompare:Gv,AlwaysDepth:av,AlwaysStencilFunc:od,AmbientLight:Y_,AnimationAction:ty,AnimationClip:Ua,AnimationLoader:AT,AnimationMixer:$T,AnimationObjectGroup:KT,AnimationUtils:ST,ArcCurve:v_,ArrayCamera:a_,ArrowHelper:xb,AttachedBindMode:Df,Audio:$_,AudioAnalyser:HT,AudioContext:np,AudioListener:zT,AudioLoader:UT,AxesHelper:Sb,BackSide:Ln,BasicDepthPacking:Dv,BasicShadowMap:H0,BatchedMesh:p_,Bone:Vd,BooleanKeyframeTrack:Ss,Box2:ob,Box3:Nn,Box3Helper:_b,BoxGeometry:xs,BoxHelper:vb,BufferAttribute:Rt,BufferGeometry:ht,BufferGeometryLoader:Q_,ByteType:Mv,Cache:ir,Camera:Ba,CameraHelper:gb,CanvasTexture:XA,CapsuleGeometry:du,CatmullRomCurve3:__,CineonToneMapping:vv,CircleGeometry:pu,ClampToEdgeWrapping:di,Clock:ip,Color:Le,ColorKeyframeTrack:$d,ColorManagement:bt,CompressedArrayTexture:GA,CompressedCubeTexture:WA,CompressedTexture:hu,CompressedTextureLoader:TT,ConeGeometry:mu,ConstantAlphaFactor:rv,ConstantColorFactor:nv,CubeCamera:Qv,CubeReflectionMapping:or,CubeRefractionMapping:Ir,CubeTexture:ka,CubeTextureLoader:bT,CubeUVReflectionMapping:Mo,CubicBezierCurve:Xd,CubicBezierCurve3:y_,CubicInterpolant:z_,CullFaceBack:Pf,CullFaceFront:k0,CullFaceFrontBack:Ix,CullFaceNone:B0,Curve:Ei,CurvePath:S_,CustomBlending:V0,CustomToneMapping:_v,CylinderGeometry:bo,Cylindrical:sb,Data3DTexture:Dd,DataArrayTexture:su,DataTexture:Pr,DataTextureLoader:CT,DataUtils:kS,DecrementStencilOp:Vx,DecrementWrapStencilOp:Wx,DefaultLoadingManager:H_,DepthFormat:ds,DepthStencilFormat:vo,DepthTexture:zd,DetachedBindMode:Sv,DirectionalLight:q_,DirectionalLightHelper:mb,DiscreteInterpolant:B_,DisplayP3ColorSpace:ru,DodecahedronGeometry:gu,DoubleSide:Ui,DstAlphaFactor:K0,DstColorFactor:$0,DynamicCopyUsage:sS,DynamicDrawUsage:$x,DynamicReadUsage:nS,EdgesGeometry:M_,EllipseCurve:fu,EqualCompare:Bv,EqualDepth:cv,EqualStencilFunc:jx,EquirectangularReflectionMapping:ma,EquirectangularRefractionMapping:ga,Euler:ni,EventDispatcher:cr,ExtrudeGeometry:_u,FileLoader:ar,Float16BufferAttribute:qS,Float32BufferAttribute:ze,FloatType:pi,Fog:lu,FogExp2:au,FramebufferTexture:VA,FrontSide:sr,Frustum:Ha,GLBufferAttribute:ib,GLSL1:aS,GLSL3:ad,GreaterCompare:kv,GreaterDepth:hv,GreaterEqualCompare:Vv,GreaterEqualDepth:uv,GreaterEqualStencilFunc:Qx,GreaterStencilFunc:Jx,GridHelper:db,Group:fo,HalfFloatType:ya,HemisphereLight:G_,HemisphereLightHelper:fb,IcosahedronGeometry:yu,ImageBitmapLoader:DT,ImageLoader:Oa,ImageUtils:Yv,IncrementStencilOp:Hx,IncrementWrapStencilOp:Gx,InstancedBufferAttribute:xo,InstancedBufferGeometry:K_,InstancedInterleavedBuffer:nb,InstancedMesh:d_,Int16BufferAttribute:WS,Int32BufferAttribute:XS,Int8BufferAttribute:HS,IntType:wd,InterleavedBuffer:cu,InterleavedBufferAttribute:_s,Interpolant:qa,InterpolateDiscrete:xa,InterpolateLinear:Sa,InterpolateSmooth:Xc,InvertStencilOp:Xx,KeepStencilOp:rs,KeyframeTrack:Ai,LOD:h_,LatheGeometry:Ga,Layers:ms,LessCompare:zv,LessDepth:lv,LessEqualCompare:Ld,LessEqualDepth:pa,LessEqualStencilFunc:Zx,LessStencilFunc:Yx,Light:Or,LightProbe:J_,Line:Lr,Line3:ab,LineBasicMaterial:Dn,LineCurve:qd,LineCurve3:x_,LineDashedMaterial:U_,LineLoop:m_,LineSegments:Hi,LinearDisplayP3ColorSpace:za,LinearFilter:$t,LinearInterpolant:Qd,LinearMipMapLinearFilter:Ux,LinearMipMapNearestFilter:Dx,LinearMipmapLinearFilter:Oi,LinearMipmapNearestFilter:ua,LinearSRGBColorSpace:lr,LinearToneMapping:mv,LinearTransfer:wa,Loader:Vn,LoaderUtils:pd,LoadingManager:ep,LoopOnce:Iv,LoopPingPong:Nv,LoopRepeat:Lv,LuminanceAlphaFormat:Cv,LuminanceFormat:bv,MOUSE:Rx,Material:mn,MaterialLoader:Tu,MathUtils:ES,Matrix3:lt,Matrix4:Ke,MaxEquation:q0,Mesh:en,MeshBasicMaterial:Dr,MeshDepthMaterial:Bd,MeshDistanceMaterial:kd,MeshLambertMaterial:N_,MeshMatcapMaterial:D_,MeshNormalMaterial:L_,MeshPhongMaterial:P_,MeshPhysicalMaterial:R_,MeshStandardMaterial:Jd,MeshToonMaterial:I_,MinEquation:X0,MirroredRepeatWrapping:_a,MixOperation:dv,MultiplyBlending:Nf,MultiplyOperation:Fa,NearestFilter:fn,NearestMipMapLinearFilter:Nx,NearestMipMapNearestFilter:Lx,NearestMipmapLinearFilter:co,NearestMipmapNearestFilter:Sd,NeutralToneMapping:xv,NeverCompare:Fv,NeverDepth:ov,NeverStencilFunc:qx,NoBlending:rr,NoColorSpace:tr,NoToneMapping:zi,NormalAnimationBlendMode:iu,NormalBlending:fs,NotEqualCompare:Hv,NotEqualDepth:fv,NotEqualStencilFunc:Kx,NumberKeyframeTrack:Na,Object3D:wt,ObjectLoader:LT,ObjectSpaceNormalMap:Ov,OctahedronGeometry:Wa,OneFactor:j0,OneMinusConstantAlphaFactor:sv,OneMinusConstantColorFactor:iv,OneMinusDstAlphaFactor:Q0,OneMinusDstColorFactor:ev,OneMinusSrcAlphaFactor:Zc,OneMinusSrcColorFactor:J0,OrthographicCamera:Va,P3Primaries:Aa,PCFShadowMap:tu,PCFSoftShadowMap:ca,PMREMGenerator:ld,Path:Ra,PerspectiveCamera:hn,Plane:Cr,PlaneGeometry:Ao,PlaneHelper:yb,PointLight:X_,PointLightHelper:ub,Points:g_,PointsMaterial:Gd,PolarGridHelper:pb,PolyhedronGeometry:Ur,PositionalAudio:kT,PropertyBinding:vt,PropertyMixer:ey,QuadraticBezierCurve:Yd,QuadraticBezierCurve3:jd,Quaternion:Hn,QuaternionKeyframeTrack:Co,QuaternionLinearInterpolant:k_,RED_GREEN_RGTC2_Format:rd,RED_RGTC1_Format:Pv,REVISION:eu,RGBADepthPacking:Uv,RGBAFormat:kn,RGBAIntegerFormat:Rd,RGBA_ASTC_10x10_Format:Qf,RGBA_ASTC_10x5_Format:Zf,RGBA_ASTC_10x6_Format:Jf,RGBA_ASTC_10x8_Format:Kf,RGBA_ASTC_12x10_Format:$f,RGBA_ASTC_12x12_Format:ed,RGBA_ASTC_4x4_Format:Hf,RGBA_ASTC_5x4_Format:Vf,RGBA_ASTC_5x5_Format:Gf,RGBA_ASTC_6x5_Format:Wf,RGBA_ASTC_6x6_Format:Xf,RGBA_ASTC_8x5_Format:qf,RGBA_ASTC_8x6_Format:Yf,RGBA_ASTC_8x8_Format:jf,RGBA_BPTC_Format:Wc,RGBA_ETC2_EAC_Format:kf,RGBA_PVRTC_2BPPV1_Format:zf,RGBA_PVRTC_4BPPV1_Format:Ff,RGBA_S3TC_DXT1_Format:Hc,RGBA_S3TC_DXT3_Format:Vc,RGBA_S3TC_DXT5_Format:Gc,RGBFormat:Tv,RGB_BPTC_SIGNED_Format:td,RGB_BPTC_UNSIGNED_Format:nd,RGB_ETC1_Format:Pd,RGB_ETC2_Format:Bf,RGB_PVRTC_2BPPV1_Format:Of,RGB_PVRTC_4BPPV1_Format:Uf,RGB_S3TC_DXT1_Format:kc,RGFormat:Rv,RGIntegerFormat:Cd,RawShaderMaterial:C_,Ray:Eo,Raycaster:ny,Rec709Primaries:Ea,RectAreaLight:j_,RedFormat:Td,RedIntegerFormat:bd,ReinhardToneMapping:gv,RenderTarget:jv,RepeatWrapping:va,ReplaceStencilOp:kx,ReverseSubtractEquation:W0,RingGeometry:xu,SIGNED_RED_GREEN_RGTC2_Format:sd,SIGNED_RED_RGTC1_Format:id,SRGBColorSpace:fi,SRGBTransfer:Ot,Scene:Jc,ShaderChunk:ut,ShaderLib:Si,ShaderMaterial:wi,ShadowMaterial:b_,Shape:gs,ShapeGeometry:Su,ShapePath:Mb,ShapeUtils:ki,ShortType:wv,Skeleton:uu,SkeletonHelper:cb,SkinnedMesh:f_,Source:cs,Sphere:En,SphereGeometry:Xa,Spherical:rb,SphericalHarmonics3:Z_,SplineCurve:Zd,SpotLight:W_,SpotLightHelper:lb,Sprite:u_,SpriteMaterial:Hd,SrcAlphaFactor:jc,SrcAlphaSaturateFactor:tv,SrcColorFactor:Z0,StaticCopyUsage:rS,StaticDrawUsage:Ta,StaticReadUsage:tS,StereoCamera:OT,StreamCopyUsage:oS,StreamDrawUsage:eS,StreamReadUsage:iS,StringKeyframeTrack:Ms,SubtractEquation:G0,SubtractiveBlending:Lf,TOUCH:Px,TangentSpaceNormalMap:Nr,TetrahedronGeometry:Mu,Texture:Gt,TextureLoader:V_,TorusGeometry:wu,TorusKnotGeometry:Eu,Triangle:$n,TriangleFanDrawMode:zx,TriangleStripDrawMode:Fx,TrianglesDrawMode:Ox,TubeGeometry:Au,UVMapping:nu,Uint16BufferAttribute:Ud,Uint32BufferAttribute:Od,Uint8BufferAttribute:VS,Uint8ClampedBufferAttribute:GS,Uniform:op,UniformsGroup:tb,UniformsLib:Ae,UniformsUtils:Kv,UnsignedByteType:Bi,UnsignedInt248Type:wo,UnsignedInt5999Type:Ev,UnsignedIntType:vs,UnsignedShort4444Type:Ed,UnsignedShort5551Type:Ad,UnsignedShortType:Md,VSMShadowMap:xi,Vector2:ue,Vector3:D,Vector4:Ct,VectorKeyframeTrack:Da,VideoTexture:HA,WebGL3DRenderTarget:PS,WebGLArrayRenderTarget:RS,WebGLCoordinateSystem:Fi,WebGLCubeRenderTarget:$v,WebGLMultipleRenderTargets:wb,WebGLRenderTarget:Mi,WebGLRenderer:l_,WebGLUtils:o_,WebGPUCoordinateSystem:ba,WireframeGeometry:T_,WrapAroundEnding:Ma,ZeroCurvatureEnding:as,ZeroFactor:Y0,ZeroSlopeEnding:ls,ZeroStencilOp:Bx,createCanvasElement:Xv},Symbol.toStringTag,{value:"Module"}));var ry={exports:{}},ws={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ws.ConcurrentRoot=1;ws.ContinuousEventPriority=4;ws.DefaultEventPriority=16;ws.DiscreteEventPriority=1;ws.IdleEventPriority=536870912;ws.LegacyRoot=0;ry.exports=ws;var mo=ry.exports;function Ab(r){let e;const t=new Set,n=(h,d)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=d?p:Object.assign({},e,p),t.forEach(v=>v(e,m))}},i=()=>e,s=(h,d=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=d(e);function v(){const y=d(e);if(!p(m,y)){const M=m;h(m=y,M)}}return t.add(v),()=>t.delete(v)},u={setState:n,getState:i,subscribe:(h,d,p)=>d||p?s(h,d,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=r(n,i,u),u}const Tb=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),S0=Tb?Te.useEffect:Te.useLayoutEffect;function bb(r){const e=typeof r=="function"?Ab(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=Te.useReducer(x=>x+1,0),l=e.getState(),c=Te.useRef(l),u=Te.useRef(n),h=Te.useRef(i),d=Te.useRef(!1),p=Te.useRef();p.current===void 0&&(p.current=n(l));let m,v=!1;(c.current!==l||u.current!==n||h.current!==i||d.current)&&(m=n(l),v=!i(p.current,m)),S0(()=>{v&&(p.current=m),c.current=l,u.current=n,h.current=i,d.current=!1});const y=Te.useRef(l);S0(()=>{const x=()=>{try{const E=e.getState(),w=u.current(E);h.current(p.current,w)||(c.current=E,p.current=w,s())}catch{d.current=!0,s()}},_=e.subscribe(x);return e.getState()!==y.current&&x(),_},[]);const M=v?m:p.current;return Te.useDebugValue(M),M};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}var sy={exports:{}},oy={exports:{}},ay={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(r){function e(H,$){var J=H.length;H.push($);e:for(;0<J;){var he=J-1>>>1,Ie=H[he];if(0<i(Ie,$))H[he]=$,H[J]=Ie,J=he;else break e}}function t(H){return H.length===0?null:H[0]}function n(H){if(H.length===0)return null;var $=H[0],J=H.pop();if(J!==$){H[0]=J;e:for(var he=0,Ie=H.length,Be=Ie>>>1;he<Be;){var ne=2*(he+1)-1,pe=H[ne],Ce=ne+1,ye=H[Ce];if(0>i(pe,J))Ce<Ie&&0>i(ye,pe)?(H[he]=ye,H[Ce]=J,he=Ce):(H[he]=pe,H[ne]=J,he=ne);else if(Ce<Ie&&0>i(ye,J))H[he]=ye,H[Ce]=J,he=Ce;else break e}}return $}function i(H,$){var J=H.sortIndex-$.sortIndex;return J!==0?J:H.id-$.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var l=Date,c=l.now();r.unstable_now=function(){return l.now()-c}}var u=[],h=[],d=1,p=null,m=3,v=!1,y=!1,M=!1,x=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function w(H){for(var $=t(h);$!==null;){if($.callback===null)n(h);else if($.startTime<=H)n(h),$.sortIndex=$.expirationTime,e(u,$);else break;$=t(h)}}function T(H){if(M=!1,w(H),!y)if(t(u)!==null)y=!0,ae(U);else{var $=t(h);$!==null&&ve(T,$.startTime-H)}}function U(H,$){y=!1,M&&(M=!1,_(z),z=-1),v=!0;var J=m;try{for(w($),p=t(u);p!==null&&(!(p.expirationTime>$)||H&&!F());){var he=p.callback;if(typeof he=="function"){p.callback=null,m=p.priorityLevel;var Ie=he(p.expirationTime<=$);$=r.unstable_now(),typeof Ie=="function"?p.callback=Ie:p===t(u)&&n(u),w($)}else n(u);p=t(u)}if(p!==null)var Be=!0;else{var ne=t(h);ne!==null&&ve(T,ne.startTime-$),Be=!1}return Be}finally{p=null,m=J,v=!1}}var P=!1,L=null,z=-1,R=5,b=-1;function F(){return!(r.unstable_now()-b<R)}function q(){if(L!==null){var H=r.unstable_now();b=H;var $=!0;try{$=L(!0,H)}finally{$?k():(P=!1,L=null)}}else P=!1}var k;if(typeof E=="function")k=function(){E(q)};else if(typeof MessageChannel<"u"){var Z=new MessageChannel,se=Z.port2;Z.port1.onmessage=q,k=function(){se.postMessage(null)}}else k=function(){x(q,0)};function ae(H){L=H,P||(P=!0,k())}function ve(H,$){z=x(function(){H(r.unstable_now())},$)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(H){H.callback=null},r.unstable_continueExecution=function(){y||v||(y=!0,ae(U))},r.unstable_forceFrameRate=function(H){0>H||125<H?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):R=0<H?Math.floor(1e3/H):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(H){switch(m){case 1:case 2:case 3:var $=3;break;default:$=m}var J=m;m=$;try{return H()}finally{m=J}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(H,$){switch(H){case 1:case 2:case 3:case 4:case 5:break;default:H=3}var J=m;m=H;try{return $()}finally{m=J}},r.unstable_scheduleCallback=function(H,$,J){var he=r.unstable_now();switch(typeof J=="object"&&J!==null?(J=J.delay,J=typeof J=="number"&&0<J?he+J:he):J=he,H){case 1:var Ie=-1;break;case 2:Ie=250;break;case 5:Ie=1073741823;break;case 4:Ie=1e4;break;default:Ie=5e3}return Ie=J+Ie,H={id:d++,callback:$,priorityLevel:H,startTime:J,expirationTime:Ie,sortIndex:-1},J>he?(H.sortIndex=J,e(h,H),t(u)===null&&H===t(h)&&(M?(_(z),z=-1):M=!0,ve(T,J-he))):(H.sortIndex=Ie,e(u,H),y||v||(y=!0,ae(U))),H},r.unstable_shouldYield=F,r.unstable_wrapCallback=function(H){var $=m;return function(){var J=m;m=$;try{return H.apply(this,arguments)}finally{m=J}}}})(ay);oy.exports=ay;var gd=oy.exports;/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Cb=function(e){var t={},n=Te,i=gd,s=Object.assign;function l(o){for(var a="https://reactjs.org/docs/error-decoder.html?invariant="+o,f=1;f<arguments.length;f++)a+="&args[]="+encodeURIComponent(arguments[f]);return"Minified React error #"+o+"; visit "+a+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),v=Symbol.for("react.provider"),y=Symbol.for("react.context"),M=Symbol.for("react.forward_ref"),x=Symbol.for("react.suspense"),_=Symbol.for("react.suspense_list"),E=Symbol.for("react.memo"),w=Symbol.for("react.lazy"),T=Symbol.for("react.offscreen"),U=Symbol.iterator;function P(o){return o===null||typeof o!="object"?null:(o=U&&o[U]||o["@@iterator"],typeof o=="function"?o:null)}function L(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case d:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case x:return"Suspense";case _:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Consumer";case v:return(o._context.displayName||"Context")+".Provider";case M:var a=o.render;return o=o.displayName,o||(o=a.displayName||a.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case E:return a=o.displayName||null,a!==null?a:L(o.type)||"Memo";case w:a=o._payload,o=o._init;try{return L(o(a))}catch{}}return null}function z(o){var a=o.type;switch(o.tag){case 24:return"Cache";case 9:return(a.displayName||"Context")+".Consumer";case 10:return(a._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=a.render,o=o.displayName||o.name||"",a.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return a;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return L(a);case 8:return a===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof a=="function")return a.displayName||a.name||null;if(typeof a=="string")return a}return null}function R(o){var a=o,f=o;if(o.alternate)for(;a.return;)a=a.return;else{o=a;do a=o,a.flags&4098&&(f=a.return),o=a.return;while(o)}return a.tag===3?f:null}function b(o){if(R(o)!==o)throw Error(l(188))}function F(o){var a=o.alternate;if(!a){if(a=R(o),a===null)throw Error(l(188));return a!==o?null:o}for(var f=o,g=a;;){var S=f.return;if(S===null)break;var A=S.alternate;if(A===null){if(g=S.return,g!==null){f=g;continue}break}if(S.child===A.child){for(A=S.child;A;){if(A===f)return b(S),o;if(A===g)return b(S),a;A=A.sibling}throw Error(l(188))}if(f.return!==g.return)f=S,g=A;else{for(var O=!1,V=S.child;V;){if(V===f){O=!0,f=S,g=A;break}if(V===g){O=!0,g=S,f=A;break}V=V.sibling}if(!O){for(V=A.child;V;){if(V===f){O=!0,f=A,g=S;break}if(V===g){O=!0,g=A,f=S;break}V=V.sibling}if(!O)throw Error(l(189))}}if(f.alternate!==g)throw Error(l(190))}if(f.tag!==3)throw Error(l(188));return f.stateNode.current===f?o:a}function q(o){return o=F(o),o!==null?k(o):null}function k(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var a=k(o);if(a!==null)return a;o=o.sibling}return null}function Z(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var a=Z(o);if(a!==null)return a}o=o.sibling}return null}var se=Array.isArray,ae=e.getPublicInstance,ve=e.getRootHostContext,H=e.getChildHostContext,$=e.prepareForCommit,J=e.resetAfterCommit,he=e.createInstance,Ie=e.appendInitialChild,Be=e.finalizeInitialChildren,ne=e.prepareUpdate,pe=e.shouldSetTextContent,Ce=e.createTextInstance,ye=e.scheduleTimeout,et=e.cancelTimeout,st=e.noTimeout,Qe=e.isPrimaryRenderer,W=e.supportsMutation,ce=e.supportsPersistence,oe=e.supportsHydration,Se=e.getInstanceFromNode,me=e.preparePortalMount,_e=e.getCurrentEventPriority,N=e.detachDeletedInstance,C=e.supportsMicrotasks,Y=e.scheduleMicrotask,re=e.supportsTestSelectors,le=e.findFiberRoot,fe=e.getBoundingRect,qe=e.getTextContent,de=e.isHiddenSubtree,He=e.matchAccessibilityRole,Ze=e.setFocusIfFocusable,Me=e.setupIntersectionObserver,Ne=e.appendChild,nt=e.appendChildToContainer,Oe=e.commitTextUpdate,Fe=e.commitMount,pt=e.commitUpdate,mt=e.insertBefore,Et=e.insertInContainerBefore,_t=e.removeChild,Dt=e.removeChildFromContainer,Ve=e.resetTextContent,B=e.hideInstance,Ee=e.hideTextInstance,we=e.unhideInstance,Xe=e.unhideTextInstance,Ye=e.clearContainer,Pt=e.cloneInstance,Lt=e.createContainerChildSet,Ut=e.appendChildToContainerChildSet,sn=e.finalizeContainerChildren,It=e.replaceContainerChildren,Gn=e.cloneHiddenInstance,Wn=e.cloneHiddenTextInstance,Vi=e.canHydrateInstance,ja=e.canHydrateTextInstance,Za=e.canHydrateSuspenseInstance,Ja=e.isSuspenseInstancePending,ur=e.isSuspenseInstanceFallback,Ka=e.registerSuspenseInstanceRetry,Ti=e.getNextHydratableSibling,Qa=e.getFirstHydratableChild,$a=e.getFirstHydratableChildWithinContainer,bu=e.getFirstHydratableChildWithinSuspenseInstance,Cu=e.hydrateInstance,Ru=e.hydrateTextInstance,I=e.hydrateSuspenseInstance,X=e.getNextHydratableInstanceAfterSuspenseInstance,Q=e.commitHydratedContainer,ee=e.commitHydratedSuspenseInstance,K=e.clearSuspenseBoundary,Re=e.clearSuspenseBoundaryFromContainer,Ge=e.shouldDeleteUnhydratedTailInstances,Je=e.didNotMatchHydratedContainerTextInstance,tt=e.didNotMatchHydratedTextInstance,it;function $e(o){if(it===void 0)try{throw Error()}catch(f){var a=f.stack.trim().match(/\n( *(at )?)/);it=a&&a[1]||""}return`
`+it+o}var rt=!1;function Ft(o,a){if(!o||rt)return"";rt=!0;var f=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(a)if(a=function(){throw Error()},Object.defineProperty(a.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(a,[])}catch(ge){var g=ge}Reflect.construct(o,[],a)}else{try{a.call()}catch(ge){g=ge}o.call(a.prototype)}else{try{throw Error()}catch(ge){g=ge}o()}}catch(ge){if(ge&&g&&typeof ge.stack=="string"){for(var S=ge.stack.split(`
`),A=g.stack.split(`
`),O=S.length-1,V=A.length-1;1<=O&&0<=V&&S[O]!==A[V];)V--;for(;1<=O&&0<=V;O--,V--)if(S[O]!==A[V]){if(O!==1||V!==1)do if(O--,V--,0>V||S[O]!==A[V]){var ie=`
`+S[O].replace(" at new "," at ");return o.displayName&&ie.includes("<anonymous>")&&(ie=ie.replace("<anonymous>",o.displayName)),ie}while(1<=O&&0<=V);break}}}finally{rt=!1,Error.prepareStackTrace=f}return(o=o?o.displayName||o.name:"")?$e(o):""}var An=Object.prototype.hasOwnProperty,Wt=[],gn=-1;function yt(o){return{current:o}}function De(o){0>gn||(o.current=Wt[gn],Wt[gn]=null,gn--)}function Tt(o,a){gn++,Wt[gn]=o.current,o.current=a}var gt={},Bt=yt(gt),dn=yt(!1),Xn=gt;function bi(o,a){var f=o.type.contextTypes;if(!f)return gt;var g=o.stateNode;if(g&&g.__reactInternalMemoizedUnmaskedChildContext===a)return g.__reactInternalMemoizedMaskedChildContext;var S={},A;for(A in f)S[A]=a[A];return g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=a,o.__reactInternalMemoizedMaskedChildContext=S),S}function At(o){return o=o.childContextTypes,o!=null}function qn(){De(dn),De(Bt)}function Es(o,a,f){if(Bt.current!==gt)throw Error(l(168));Tt(Bt,a),Tt(dn,f)}function Tn(o,a,f){var g=o.stateNode;if(a=a.childContextTypes,typeof g.getChildContext!="function")return f;g=g.getChildContext();for(var S in g)if(!(S in a))throw Error(l(108,z(o)||"Unknown",S));return s({},f,g)}function hr(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||gt,Xn=Bt.current,Tt(Bt,o),Tt(dn,dn.current),!0}function el(o,a,f){var g=o.stateNode;if(!g)throw Error(l(169));f?(o=Tn(o,a,Xn),g.__reactInternalMemoizedMergedChildContext=o,De(dn),De(Bt),Tt(Bt,o)):De(dn),Tt(dn,f)}var Un=Math.clz32?Math.clz32:Ry,by=Math.log,Cy=Math.LN2;function Ry(o){return o>>>=0,o===0?32:31-(by(o)/Cy|0)|0}var tl=64,nl=4194304;function Ro(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function il(o,a){var f=o.pendingLanes;if(f===0)return 0;var g=0,S=o.suspendedLanes,A=o.pingedLanes,O=f&268435455;if(O!==0){var V=O&~S;V!==0?g=Ro(V):(A&=O,A!==0&&(g=Ro(A)))}else O=f&~S,O!==0?g=Ro(O):A!==0&&(g=Ro(A));if(g===0)return 0;if(a!==0&&a!==g&&!(a&S)&&(S=g&-g,A=a&-a,S>=A||S===16&&(A&4194240)!==0))return a;if(g&4&&(g|=f&16),a=o.entangledLanes,a!==0)for(o=o.entanglements,a&=g;0<a;)f=31-Un(a),S=1<<f,g|=o[f],a&=~S;return g}function Py(o,a){switch(o){case 1:case 2:case 4:return a+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Iy(o,a){for(var f=o.suspendedLanes,g=o.pingedLanes,S=o.expirationTimes,A=o.pendingLanes;0<A;){var O=31-Un(A),V=1<<O,ie=S[O];ie===-1?(!(V&f)||V&g)&&(S[O]=Py(V,a)):ie<=a&&(o.expiredLanes|=V),A&=~V}}function Pu(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function Iu(o){for(var a=[],f=0;31>f;f++)a.push(o);return a}function Po(o,a,f){o.pendingLanes|=a,a!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,a=31-Un(a),o[a]=f}function Ly(o,a){var f=o.pendingLanes&~a;o.pendingLanes=a,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=a,o.mutableReadLanes&=a,o.entangledLanes&=a,a=o.entanglements;var g=o.eventTimes;for(o=o.expirationTimes;0<f;){var S=31-Un(f),A=1<<S;a[S]=0,g[S]=-1,o[S]=-1,f&=~A}}function Lu(o,a){var f=o.entangledLanes|=a;for(o=o.entanglements;f;){var g=31-Un(f),S=1<<g;S&a|o[g]&a&&(o[g]|=a),f&=~S}}var xt=0;function up(o){return o&=-o,1<o?4<o?o&268435455?16:536870912:4:1}var Nu=i.unstable_scheduleCallback,hp=i.unstable_cancelCallback,Ny=i.unstable_shouldYield,Dy=i.unstable_requestPaint,on=i.unstable_now,Du=i.unstable_ImmediatePriority,Uy=i.unstable_UserBlockingPriority,Uu=i.unstable_NormalPriority,Oy=i.unstable_IdlePriority,rl=null,Ci=null;function Fy(o){if(Ci&&typeof Ci.onCommitFiberRoot=="function")try{Ci.onCommitFiberRoot(rl,o,void 0,(o.current.flags&128)===128)}catch{}}function zy(o,a){return o===a&&(o!==0||1/o===1/a)||o!==o&&a!==a}var Ri=typeof Object.is=="function"?Object.is:zy,Gi=null,sl=!1,Ou=!1;function fp(o){Gi===null?Gi=[o]:Gi.push(o)}function By(o){sl=!0,fp(o)}function Pi(){if(!Ou&&Gi!==null){Ou=!0;var o=0,a=xt;try{var f=Gi;for(xt=1;o<f.length;o++){var g=f[o];do g=g(!0);while(g!==null)}Gi=null,sl=!1}catch(S){throw Gi!==null&&(Gi=Gi.slice(o+1)),Nu(Du,Pi),S}finally{xt=a,Ou=!1}}return null}var ky=c.ReactCurrentBatchConfig;function ol(o,a){if(Ri(o,a))return!0;if(typeof o!="object"||o===null||typeof a!="object"||a===null)return!1;var f=Object.keys(o),g=Object.keys(a);if(f.length!==g.length)return!1;for(g=0;g<f.length;g++){var S=f[g];if(!An.call(a,S)||!Ri(o[S],a[S]))return!1}return!0}function Hy(o){switch(o.tag){case 5:return $e(o.type);case 16:return $e("Lazy");case 13:return $e("Suspense");case 19:return $e("SuspenseList");case 0:case 2:case 15:return o=Ft(o.type,!1),o;case 11:return o=Ft(o.type.render,!1),o;case 1:return o=Ft(o.type,!0),o;default:return""}}function mi(o,a){if(o&&o.defaultProps){a=s({},a),o=o.defaultProps;for(var f in o)a[f]===void 0&&(a[f]=o[f]);return a}return a}var al=yt(null),ll=null,As=null,Fu=null;function zu(){Fu=As=ll=null}function dp(o,a,f){Qe?(Tt(al,a._currentValue),a._currentValue=f):(Tt(al,a._currentValue2),a._currentValue2=f)}function Bu(o){var a=al.current;De(al),Qe?o._currentValue=a:o._currentValue2=a}function ku(o,a,f){for(;o!==null;){var g=o.alternate;if((o.childLanes&a)!==a?(o.childLanes|=a,g!==null&&(g.childLanes|=a)):g!==null&&(g.childLanes&a)!==a&&(g.childLanes|=a),o===f)break;o=o.return}}function Ts(o,a){ll=o,Fu=As=null,o=o.dependencies,o!==null&&o.firstContext!==null&&(o.lanes&a&&(Zn=!0),o.firstContext=null)}function ii(o){var a=Qe?o._currentValue:o._currentValue2;if(Fu!==o)if(o={context:o,memoizedValue:a,next:null},As===null){if(ll===null)throw Error(l(308));As=o,ll.dependencies={lanes:0,firstContext:o}}else As=As.next=o;return a}var Ii=null,fr=!1;function Hu(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function pp(o,a){o=o.updateQueue,a.updateQueue===o&&(a.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function Wi(o,a){return{eventTime:o,lane:a,tag:0,payload:null,callback:null,next:null}}function dr(o,a){var f=o.updateQueue;f!==null&&(f=f.shared,Jt!==null&&o.mode&1&&!(dt&2)?(o=f.interleaved,o===null?(a.next=a,Ii===null?Ii=[f]:Ii.push(f)):(a.next=o.next,o.next=a),f.interleaved=a):(o=f.pending,o===null?a.next=a:(a.next=o.next,o.next=a),f.pending=a))}function cl(o,a,f){if(a=a.updateQueue,a!==null&&(a=a.shared,(f&4194240)!==0)){var g=a.lanes;g&=o.pendingLanes,f|=g,a.lanes=f,Lu(o,f)}}function mp(o,a){var f=o.updateQueue,g=o.alternate;if(g!==null&&(g=g.updateQueue,f===g)){var S=null,A=null;if(f=f.firstBaseUpdate,f!==null){do{var O={eventTime:f.eventTime,lane:f.lane,tag:f.tag,payload:f.payload,callback:f.callback,next:null};A===null?S=A=O:A=A.next=O,f=f.next}while(f!==null);A===null?S=A=a:A=A.next=a}else S=A=a;f={baseState:g.baseState,firstBaseUpdate:S,lastBaseUpdate:A,shared:g.shared,effects:g.effects},o.updateQueue=f;return}o=f.lastBaseUpdate,o===null?f.firstBaseUpdate=a:o.next=a,f.lastBaseUpdate=a}function ul(o,a,f,g){var S=o.updateQueue;fr=!1;var A=S.firstBaseUpdate,O=S.lastBaseUpdate,V=S.shared.pending;if(V!==null){S.shared.pending=null;var ie=V,ge=ie.next;ie.next=null,O===null?A=ge:O.next=ge,O=ie;var Ue=o.alternate;Ue!==null&&(Ue=Ue.updateQueue,V=Ue.lastBaseUpdate,V!==O&&(V===null?Ue.firstBaseUpdate=ge:V.next=ge,Ue.lastBaseUpdate=ie))}if(A!==null){var ot=S.baseState;O=0,Ue=ge=ie=null,V=A;do{var je=V.lane,Nt=V.eventTime;if((g&je)===je){Ue!==null&&(Ue=Ue.next={eventTime:Nt,lane:0,tag:V.tag,payload:V.payload,callback:V.callback,next:null});e:{var We=o,xn=V;switch(je=a,Nt=f,xn.tag){case 1:if(We=xn.payload,typeof We=="function"){ot=We.call(Nt,ot,je);break e}ot=We;break e;case 3:We.flags=We.flags&-65537|128;case 0:if(We=xn.payload,je=typeof We=="function"?We.call(Nt,ot,je):We,je==null)break e;ot=s({},ot,je);break e;case 2:fr=!0}}V.callback!==null&&V.lane!==0&&(o.flags|=64,je=S.effects,je===null?S.effects=[V]:je.push(V))}else Nt={eventTime:Nt,lane:je,tag:V.tag,payload:V.payload,callback:V.callback,next:null},Ue===null?(ge=Ue=Nt,ie=ot):Ue=Ue.next=Nt,O|=je;if(V=V.next,V===null){if(V=S.shared.pending,V===null)break;je=V,V=je.next,je.next=null,S.lastBaseUpdate=je,S.shared.pending=null}}while(!0);if(Ue===null&&(ie=ot),S.baseState=ie,S.firstBaseUpdate=ge,S.lastBaseUpdate=Ue,a=S.shared.interleaved,a!==null){S=a;do O|=S.lane,S=S.next;while(S!==a)}else A===null&&(S.shared.lanes=0);Us|=O,o.lanes=O,o.memoizedState=ot}}function gp(o,a,f){if(o=a.effects,a.effects=null,o!==null)for(a=0;a<o.length;a++){var g=o[a],S=g.callback;if(S!==null){if(g.callback=null,g=f,typeof S!="function")throw Error(l(191,S));S.call(g)}}}var vp=new n.Component().refs;function Vu(o,a,f,g){a=o.memoizedState,f=f(g,a),f=f==null?a:s({},a,f),o.memoizedState=f,o.lanes===0&&(o.updateQueue.baseState=f)}var hl={isMounted:function(o){return(o=o._reactInternals)?R(o)===o:!1},enqueueSetState:function(o,a,f){o=o._reactInternals;var g=Cn(),S=gr(o),A=Wi(g,S);A.payload=a,f!=null&&(A.callback=f),dr(o,A),a=li(o,S,g),a!==null&&cl(a,o,S)},enqueueReplaceState:function(o,a,f){o=o._reactInternals;var g=Cn(),S=gr(o),A=Wi(g,S);A.tag=1,A.payload=a,f!=null&&(A.callback=f),dr(o,A),a=li(o,S,g),a!==null&&cl(a,o,S)},enqueueForceUpdate:function(o,a){o=o._reactInternals;var f=Cn(),g=gr(o),S=Wi(f,g);S.tag=2,a!=null&&(S.callback=a),dr(o,S),a=li(o,g,f),a!==null&&cl(a,o,g)}};function _p(o,a,f,g,S,A,O){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(g,A,O):a.prototype&&a.prototype.isPureReactComponent?!ol(f,g)||!ol(S,A):!0}function yp(o,a,f){var g=!1,S=gt,A=a.contextType;return typeof A=="object"&&A!==null?A=ii(A):(S=At(a)?Xn:Bt.current,g=a.contextTypes,A=(g=g!=null)?bi(o,S):gt),a=new a(f,A),o.memoizedState=a.state!==null&&a.state!==void 0?a.state:null,a.updater=hl,o.stateNode=a,a._reactInternals=o,g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=S,o.__reactInternalMemoizedMaskedChildContext=A),a}function xp(o,a,f,g){o=a.state,typeof a.componentWillReceiveProps=="function"&&a.componentWillReceiveProps(f,g),typeof a.UNSAFE_componentWillReceiveProps=="function"&&a.UNSAFE_componentWillReceiveProps(f,g),a.state!==o&&hl.enqueueReplaceState(a,a.state,null)}function Gu(o,a,f,g){var S=o.stateNode;S.props=f,S.state=o.memoizedState,S.refs=vp,Hu(o);var A=a.contextType;typeof A=="object"&&A!==null?S.context=ii(A):(A=At(a)?Xn:Bt.current,S.context=bi(o,A)),S.state=o.memoizedState,A=a.getDerivedStateFromProps,typeof A=="function"&&(Vu(o,a,A,f),S.state=o.memoizedState),typeof a.getDerivedStateFromProps=="function"||typeof S.getSnapshotBeforeUpdate=="function"||typeof S.UNSAFE_componentWillMount!="function"&&typeof S.componentWillMount!="function"||(a=S.state,typeof S.componentWillMount=="function"&&S.componentWillMount(),typeof S.UNSAFE_componentWillMount=="function"&&S.UNSAFE_componentWillMount(),a!==S.state&&hl.enqueueReplaceState(S,S.state,null),ul(o,f,S,g),S.state=o.memoizedState),typeof S.componentDidMount=="function"&&(o.flags|=4194308)}var bs=[],Cs=0,fl=null,dl=0,ri=[],si=0,Fr=null,Xi=1,qi="";function zr(o,a){bs[Cs++]=dl,bs[Cs++]=fl,fl=o,dl=a}function Sp(o,a,f){ri[si++]=Xi,ri[si++]=qi,ri[si++]=Fr,Fr=o;var g=Xi;o=qi;var S=32-Un(g)-1;g&=~(1<<S),f+=1;var A=32-Un(a)+S;if(30<A){var O=S-S%5;A=(g&(1<<O)-1).toString(32),g>>=O,S-=O,Xi=1<<32-Un(a)+S|f<<S|g,qi=A+o}else Xi=1<<A|f<<S|g,qi=o}function Wu(o){o.return!==null&&(zr(o,1),Sp(o,1,0))}function Xu(o){for(;o===fl;)fl=bs[--Cs],bs[Cs]=null,dl=bs[--Cs],bs[Cs]=null;for(;o===Fr;)Fr=ri[--si],ri[si]=null,qi=ri[--si],ri[si]=null,Xi=ri[--si],ri[si]=null}var Yn=null,jn=null,kt=!1,Io=!1,gi=null;function Mp(o,a){var f=ci(5,null,null,0);f.elementType="DELETED",f.stateNode=a,f.return=o,a=o.deletions,a===null?(o.deletions=[f],o.flags|=16):a.push(f)}function wp(o,a){switch(o.tag){case 5:return a=Vi(a,o.type,o.pendingProps),a!==null?(o.stateNode=a,Yn=o,jn=Qa(a),!0):!1;case 6:return a=ja(a,o.pendingProps),a!==null?(o.stateNode=a,Yn=o,jn=null,!0):!1;case 13:if(a=Za(a),a!==null){var f=Fr!==null?{id:Xi,overflow:qi}:null;return o.memoizedState={dehydrated:a,treeContext:f,retryLane:1073741824},f=ci(18,null,null,0),f.stateNode=a,f.return=o,o.child=f,Yn=o,jn=null,!0}return!1;default:return!1}}function qu(o){return(o.mode&1)!==0&&(o.flags&128)===0}function Yu(o){if(kt){var a=jn;if(a){var f=a;if(!wp(o,a)){if(qu(o))throw Error(l(418));a=Ti(f);var g=Yn;a&&wp(o,a)?Mp(g,f):(o.flags=o.flags&-4097|2,kt=!1,Yn=o)}}else{if(qu(o))throw Error(l(418));o.flags=o.flags&-4097|2,kt=!1,Yn=o}}}function Ep(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;Yn=o}function Lo(o){if(!oe||o!==Yn)return!1;if(!kt)return Ep(o),kt=!0,!1;if(o.tag!==3&&(o.tag!==5||Ge(o.type)&&!pe(o.type,o.memoizedProps))){var a=jn;if(a){if(qu(o)){for(o=jn;o;)o=Ti(o);throw Error(l(418))}for(;a;)Mp(o,a),a=Ti(a)}}if(Ep(o),o.tag===13){if(!oe)throw Error(l(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));jn=X(o)}else jn=Yn?Ti(o.stateNode):null;return!0}function Rs(){oe&&(jn=Yn=null,Io=kt=!1)}function ju(o){gi===null?gi=[o]:gi.push(o)}function No(o,a,f){if(o=f.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(f._owner){if(f=f._owner,f){if(f.tag!==1)throw Error(l(309));var g=f.stateNode}if(!g)throw Error(l(147,o));var S=g,A=""+o;return a!==null&&a.ref!==null&&typeof a.ref=="function"&&a.ref._stringRef===A?a.ref:(a=function(O){var V=S.refs;V===vp&&(V=S.refs={}),O===null?delete V[A]:V[A]=O},a._stringRef=A,a)}if(typeof o!="string")throw Error(l(284));if(!f._owner)throw Error(l(290,o))}return o}function pl(o,a){throw o=Object.prototype.toString.call(a),Error(l(31,o==="[object Object]"?"object with keys {"+Object.keys(a).join(", ")+"}":o))}function Ap(o){var a=o._init;return a(o._payload)}function Tp(o){function a(j,G){if(o){var te=j.deletions;te===null?(j.deletions=[G],j.flags|=16):te.push(G)}}function f(j,G){if(!o)return null;for(;G!==null;)a(j,G),G=G.sibling;return null}function g(j,G){for(j=new Map;G!==null;)G.key!==null?j.set(G.key,G):j.set(G.index,G),G=G.sibling;return j}function S(j,G){return j=_r(j,G),j.index=0,j.sibling=null,j}function A(j,G,te){return j.index=te,o?(te=j.alternate,te!==null?(te=te.index,te<G?(j.flags|=2,G):te):(j.flags|=2,G)):(j.flags|=1048576,G)}function O(j){return o&&j.alternate===null&&(j.flags|=2),j}function V(j,G,te,Pe){return G===null||G.tag!==6?(G=Ih(te,j.mode,Pe),G.return=j,G):(G=S(G,te),G.return=j,G)}function ie(j,G,te,Pe){var ke=te.type;return ke===d?Ue(j,G,te.props.children,Pe,te.key):G!==null&&(G.elementType===ke||typeof ke=="object"&&ke!==null&&ke.$$typeof===w&&Ap(ke)===G.type)?(Pe=S(G,te.props),Pe.ref=No(j,G,te),Pe.return=j,Pe):(Pe=Xl(te.type,te.key,te.props,null,j.mode,Pe),Pe.ref=No(j,G,te),Pe.return=j,Pe)}function ge(j,G,te,Pe){return G===null||G.tag!==4||G.stateNode.containerInfo!==te.containerInfo||G.stateNode.implementation!==te.implementation?(G=Lh(te,j.mode,Pe),G.return=j,G):(G=S(G,te.children||[]),G.return=j,G)}function Ue(j,G,te,Pe,ke){return G===null||G.tag!==7?(G=Xr(te,j.mode,Pe,ke),G.return=j,G):(G=S(G,te),G.return=j,G)}function ot(j,G,te){if(typeof G=="string"&&G!==""||typeof G=="number")return G=Ih(""+G,j.mode,te),G.return=j,G;if(typeof G=="object"&&G!==null){switch(G.$$typeof){case u:return te=Xl(G.type,G.key,G.props,null,j.mode,te),te.ref=No(j,null,G),te.return=j,te;case h:return G=Lh(G,j.mode,te),G.return=j,G;case w:var Pe=G._init;return ot(j,Pe(G._payload),te)}if(se(G)||P(G))return G=Xr(G,j.mode,te,null),G.return=j,G;pl(j,G)}return null}function je(j,G,te,Pe){var ke=G!==null?G.key:null;if(typeof te=="string"&&te!==""||typeof te=="number")return ke!==null?null:V(j,G,""+te,Pe);if(typeof te=="object"&&te!==null){switch(te.$$typeof){case u:return te.key===ke?ie(j,G,te,Pe):null;case h:return te.key===ke?ge(j,G,te,Pe):null;case w:return ke=te._init,je(j,G,ke(te._payload),Pe)}if(se(te)||P(te))return ke!==null?null:Ue(j,G,te,Pe,null);pl(j,te)}return null}function Nt(j,G,te,Pe,ke){if(typeof Pe=="string"&&Pe!==""||typeof Pe=="number")return j=j.get(te)||null,V(G,j,""+Pe,ke);if(typeof Pe=="object"&&Pe!==null){switch(Pe.$$typeof){case u:return j=j.get(Pe.key===null?te:Pe.key)||null,ie(G,j,Pe,ke);case h:return j=j.get(Pe.key===null?te:Pe.key)||null,ge(G,j,Pe,ke);case w:var ft=Pe._init;return Nt(j,G,te,ft(Pe._payload),ke)}if(se(Pe)||P(Pe))return j=j.get(te)||null,Ue(G,j,Pe,ke,null);pl(G,Pe)}return null}function We(j,G,te,Pe){for(var ke=null,ft=null,at=G,St=G=0,ln=null;at!==null&&St<te.length;St++){at.index>St?(ln=at,at=null):ln=at.sibling;var Mt=je(j,at,te[St],Pe);if(Mt===null){at===null&&(at=ln);break}o&&at&&Mt.alternate===null&&a(j,at),G=A(Mt,G,St),ft===null?ke=Mt:ft.sibling=Mt,ft=Mt,at=ln}if(St===te.length)return f(j,at),kt&&zr(j,St),ke;if(at===null){for(;St<te.length;St++)at=ot(j,te[St],Pe),at!==null&&(G=A(at,G,St),ft===null?ke=at:ft.sibling=at,ft=at);return kt&&zr(j,St),ke}for(at=g(j,at);St<te.length;St++)ln=Nt(at,j,St,te[St],Pe),ln!==null&&(o&&ln.alternate!==null&&at.delete(ln.key===null?St:ln.key),G=A(ln,G,St),ft===null?ke=ln:ft.sibling=ln,ft=ln);return o&&at.forEach(function(yr){return a(j,yr)}),kt&&zr(j,St),ke}function xn(j,G,te,Pe){var ke=P(te);if(typeof ke!="function")throw Error(l(150));if(te=ke.call(te),te==null)throw Error(l(151));for(var ft=ke=null,at=G,St=G=0,ln=null,Mt=te.next();at!==null&&!Mt.done;St++,Mt=te.next()){at.index>St?(ln=at,at=null):ln=at.sibling;var yr=je(j,at,Mt.value,Pe);if(yr===null){at===null&&(at=ln);break}o&&at&&yr.alternate===null&&a(j,at),G=A(yr,G,St),ft===null?ke=yr:ft.sibling=yr,ft=yr,at=ln}if(Mt.done)return f(j,at),kt&&zr(j,St),ke;if(at===null){for(;!Mt.done;St++,Mt=te.next())Mt=ot(j,Mt.value,Pe),Mt!==null&&(G=A(Mt,G,St),ft===null?ke=Mt:ft.sibling=Mt,ft=Mt);return kt&&zr(j,St),ke}for(at=g(j,at);!Mt.done;St++,Mt=te.next())Mt=Nt(at,j,St,Mt.value,Pe),Mt!==null&&(o&&Mt.alternate!==null&&at.delete(Mt.key===null?St:Mt.key),G=A(Mt,G,St),ft===null?ke=Mt:ft.sibling=Mt,ft=Mt);return o&&at.forEach(function(vx){return a(j,vx)}),kt&&zr(j,St),ke}function ui(j,G,te,Pe){if(typeof te=="object"&&te!==null&&te.type===d&&te.key===null&&(te=te.props.children),typeof te=="object"&&te!==null){switch(te.$$typeof){case u:e:{for(var ke=te.key,ft=G;ft!==null;){if(ft.key===ke){if(ke=te.type,ke===d){if(ft.tag===7){f(j,ft.sibling),G=S(ft,te.props.children),G.return=j,j=G;break e}}else if(ft.elementType===ke||typeof ke=="object"&&ke!==null&&ke.$$typeof===w&&Ap(ke)===ft.type){f(j,ft.sibling),G=S(ft,te.props),G.ref=No(j,ft,te),G.return=j,j=G;break e}f(j,ft);break}else a(j,ft);ft=ft.sibling}te.type===d?(G=Xr(te.props.children,j.mode,Pe,te.key),G.return=j,j=G):(Pe=Xl(te.type,te.key,te.props,null,j.mode,Pe),Pe.ref=No(j,G,te),Pe.return=j,j=Pe)}return O(j);case h:e:{for(ft=te.key;G!==null;){if(G.key===ft)if(G.tag===4&&G.stateNode.containerInfo===te.containerInfo&&G.stateNode.implementation===te.implementation){f(j,G.sibling),G=S(G,te.children||[]),G.return=j,j=G;break e}else{f(j,G);break}else a(j,G);G=G.sibling}G=Lh(te,j.mode,Pe),G.return=j,j=G}return O(j);case w:return ft=te._init,ui(j,G,ft(te._payload),Pe)}if(se(te))return We(j,G,te,Pe);if(P(te))return xn(j,G,te,Pe);pl(j,te)}return typeof te=="string"&&te!==""||typeof te=="number"?(te=""+te,G!==null&&G.tag===6?(f(j,G.sibling),G=S(G,te),G.return=j,j=G):(f(j,G),G=Ih(te,j.mode,Pe),G.return=j,j=G),O(j)):f(j,G)}return ui}var Ps=Tp(!0),bp=Tp(!1),Do={},oi=yt(Do),Uo=yt(Do),Is=yt(Do);function Li(o){if(o===Do)throw Error(l(174));return o}function Zu(o,a){Tt(Is,a),Tt(Uo,o),Tt(oi,Do),o=ve(a),De(oi),Tt(oi,o)}function Ls(){De(oi),De(Uo),De(Is)}function Cp(o){var a=Li(Is.current),f=Li(oi.current);a=H(f,o.type,a),f!==a&&(Tt(Uo,o),Tt(oi,a))}function Ju(o){Uo.current===o&&(De(oi),De(Uo))}var Ht=yt(0);function ml(o){for(var a=o;a!==null;){if(a.tag===13){var f=a.memoizedState;if(f!==null&&(f=f.dehydrated,f===null||Ja(f)||ur(f)))return a}else if(a.tag===19&&a.memoizedProps.revealOrder!==void 0){if(a.flags&128)return a}else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return null;a=a.return}a.sibling.return=a.return,a=a.sibling}return null}var Ku=[];function Qu(){for(var o=0;o<Ku.length;o++){var a=Ku[o];Qe?a._workInProgressVersionPrimary=null:a._workInProgressVersionSecondary=null}Ku.length=0}var gl=c.ReactCurrentDispatcher,ai=c.ReactCurrentBatchConfig,Ns=0,Xt=null,vn=null,an=null,vl=!1,Oo=!1,Fo=0,Vy=0;function _n(){throw Error(l(321))}function $u(o,a){if(a===null)return!1;for(var f=0;f<a.length&&f<o.length;f++)if(!Ri(o[f],a[f]))return!1;return!0}function eh(o,a,f,g,S,A){if(Ns=A,Xt=a,a.memoizedState=null,a.updateQueue=null,a.lanes=0,gl.current=o===null||o.memoizedState===null?qy:Yy,o=f(g,S),Oo){A=0;do{if(Oo=!1,Fo=0,25<=A)throw Error(l(301));A+=1,an=vn=null,a.updateQueue=null,gl.current=jy,o=f(g,S)}while(Oo)}if(gl.current=Ml,a=vn!==null&&vn.next!==null,Ns=0,an=vn=Xt=null,vl=!1,a)throw Error(l(300));return o}function th(){var o=Fo!==0;return Fo=0,o}function Yi(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return an===null?Xt.memoizedState=an=o:an=an.next=o,an}function Ni(){if(vn===null){var o=Xt.alternate;o=o!==null?o.memoizedState:null}else o=vn.next;var a=an===null?Xt.memoizedState:an.next;if(a!==null)an=a,vn=o;else{if(o===null)throw Error(l(310));vn=o,o={memoizedState:vn.memoizedState,baseState:vn.baseState,baseQueue:vn.baseQueue,queue:vn.queue,next:null},an===null?Xt.memoizedState=an=o:an=an.next=o}return an}function Br(o,a){return typeof a=="function"?a(o):a}function _l(o){var a=Ni(),f=a.queue;if(f===null)throw Error(l(311));f.lastRenderedReducer=o;var g=vn,S=g.baseQueue,A=f.pending;if(A!==null){if(S!==null){var O=S.next;S.next=A.next,A.next=O}g.baseQueue=S=A,f.pending=null}if(S!==null){A=S.next,g=g.baseState;var V=O=null,ie=null,ge=A;do{var Ue=ge.lane;if((Ns&Ue)===Ue)ie!==null&&(ie=ie.next={lane:0,action:ge.action,hasEagerState:ge.hasEagerState,eagerState:ge.eagerState,next:null}),g=ge.hasEagerState?ge.eagerState:o(g,ge.action);else{var ot={lane:Ue,action:ge.action,hasEagerState:ge.hasEagerState,eagerState:ge.eagerState,next:null};ie===null?(V=ie=ot,O=g):ie=ie.next=ot,Xt.lanes|=Ue,Us|=Ue}ge=ge.next}while(ge!==null&&ge!==A);ie===null?O=g:ie.next=V,Ri(g,a.memoizedState)||(Zn=!0),a.memoizedState=g,a.baseState=O,a.baseQueue=ie,f.lastRenderedState=g}if(o=f.interleaved,o!==null){S=o;do A=S.lane,Xt.lanes|=A,Us|=A,S=S.next;while(S!==o)}else S===null&&(f.lanes=0);return[a.memoizedState,f.dispatch]}function yl(o){var a=Ni(),f=a.queue;if(f===null)throw Error(l(311));f.lastRenderedReducer=o;var g=f.dispatch,S=f.pending,A=a.memoizedState;if(S!==null){f.pending=null;var O=S=S.next;do A=o(A,O.action),O=O.next;while(O!==S);Ri(A,a.memoizedState)||(Zn=!0),a.memoizedState=A,a.baseQueue===null&&(a.baseState=A),f.lastRenderedState=A}return[A,g]}function Rp(){}function Pp(o,a){var f=Xt,g=Ni(),S=a(),A=!Ri(g.memoizedState,S);if(A&&(g.memoizedState=S,Zn=!0),g=g.queue,Bo(Np.bind(null,f,g,o),[o]),g.getSnapshot!==a||A||an!==null&&an.memoizedState.tag&1){if(f.flags|=2048,zo(9,Lp.bind(null,f,g,S,a),void 0,null),Jt===null)throw Error(l(349));Ns&30||Ip(f,a,S)}return S}function Ip(o,a,f){o.flags|=16384,o={getSnapshot:a,value:f},a=Xt.updateQueue,a===null?(a={lastEffect:null,stores:null},Xt.updateQueue=a,a.stores=[o]):(f=a.stores,f===null?a.stores=[o]:f.push(o))}function Lp(o,a,f,g){a.value=f,a.getSnapshot=g,Dp(a)&&li(o,1,-1)}function Np(o,a,f){return f(function(){Dp(a)&&li(o,1,-1)})}function Dp(o){var a=o.getSnapshot;o=o.value;try{var f=a();return!Ri(o,f)}catch{return!0}}function nh(o){var a=Yi();return typeof o=="function"&&(o=o()),a.memoizedState=a.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Br,lastRenderedState:o},a.queue=o,o=o.dispatch=Xy.bind(null,Xt,o),[a.memoizedState,o]}function zo(o,a,f,g){return o={tag:o,create:a,destroy:f,deps:g,next:null},a=Xt.updateQueue,a===null?(a={lastEffect:null,stores:null},Xt.updateQueue=a,a.lastEffect=o.next=o):(f=a.lastEffect,f===null?a.lastEffect=o.next=o:(g=f.next,f.next=o,o.next=g,a.lastEffect=o)),o}function Up(){return Ni().memoizedState}function xl(o,a,f,g){var S=Yi();Xt.flags|=o,S.memoizedState=zo(1|a,f,void 0,g===void 0?null:g)}function Sl(o,a,f,g){var S=Ni();g=g===void 0?null:g;var A=void 0;if(vn!==null){var O=vn.memoizedState;if(A=O.destroy,g!==null&&$u(g,O.deps)){S.memoizedState=zo(a,f,A,g);return}}Xt.flags|=o,S.memoizedState=zo(1|a,f,A,g)}function ih(o,a){return xl(8390656,8,o,a)}function Bo(o,a){return Sl(2048,8,o,a)}function Op(o,a){return Sl(4,2,o,a)}function Fp(o,a){return Sl(4,4,o,a)}function zp(o,a){if(typeof a=="function")return o=o(),a(o),function(){a(null)};if(a!=null)return o=o(),a.current=o,function(){a.current=null}}function Bp(o,a,f){return f=f!=null?f.concat([o]):null,Sl(4,4,zp.bind(null,a,o),f)}function rh(){}function kp(o,a){var f=Ni();a=a===void 0?null:a;var g=f.memoizedState;return g!==null&&a!==null&&$u(a,g[1])?g[0]:(f.memoizedState=[o,a],o)}function Hp(o,a){var f=Ni();a=a===void 0?null:a;var g=f.memoizedState;return g!==null&&a!==null&&$u(a,g[1])?g[0]:(o=o(),f.memoizedState=[o,a],o)}function Gy(o,a){var f=xt;xt=f!==0&&4>f?f:4,o(!0);var g=ai.transition;ai.transition={};try{o(!1),a()}finally{xt=f,ai.transition=g}}function Vp(){return Ni().memoizedState}function Wy(o,a,f){var g=gr(o);f={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null},Gp(o)?Wp(a,f):(Xp(o,a,f),f=Cn(),o=li(o,g,f),o!==null&&qp(o,a,g))}function Xy(o,a,f){var g=gr(o),S={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null};if(Gp(o))Wp(a,S);else{Xp(o,a,S);var A=o.alternate;if(o.lanes===0&&(A===null||A.lanes===0)&&(A=a.lastRenderedReducer,A!==null))try{var O=a.lastRenderedState,V=A(O,f);if(S.hasEagerState=!0,S.eagerState=V,Ri(V,O))return}catch{}finally{}f=Cn(),o=li(o,g,f),o!==null&&qp(o,a,g)}}function Gp(o){var a=o.alternate;return o===Xt||a!==null&&a===Xt}function Wp(o,a){Oo=vl=!0;var f=o.pending;f===null?a.next=a:(a.next=f.next,f.next=a),o.pending=a}function Xp(o,a,f){Jt!==null&&o.mode&1&&!(dt&2)?(o=a.interleaved,o===null?(f.next=f,Ii===null?Ii=[a]:Ii.push(a)):(f.next=o.next,o.next=f),a.interleaved=f):(o=a.pending,o===null?f.next=f:(f.next=o.next,o.next=f),a.pending=f)}function qp(o,a,f){if(f&4194240){var g=a.lanes;g&=o.pendingLanes,f|=g,a.lanes=f,Lu(o,f)}}var Ml={readContext:ii,useCallback:_n,useContext:_n,useEffect:_n,useImperativeHandle:_n,useInsertionEffect:_n,useLayoutEffect:_n,useMemo:_n,useReducer:_n,useRef:_n,useState:_n,useDebugValue:_n,useDeferredValue:_n,useTransition:_n,useMutableSource:_n,useSyncExternalStore:_n,useId:_n,unstable_isNewReconciler:!1},qy={readContext:ii,useCallback:function(o,a){return Yi().memoizedState=[o,a===void 0?null:a],o},useContext:ii,useEffect:ih,useImperativeHandle:function(o,a,f){return f=f!=null?f.concat([o]):null,xl(4194308,4,zp.bind(null,a,o),f)},useLayoutEffect:function(o,a){return xl(4194308,4,o,a)},useInsertionEffect:function(o,a){return xl(4,2,o,a)},useMemo:function(o,a){var f=Yi();return a=a===void 0?null:a,o=o(),f.memoizedState=[o,a],o},useReducer:function(o,a,f){var g=Yi();return a=f!==void 0?f(a):a,g.memoizedState=g.baseState=a,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:a},g.queue=o,o=o.dispatch=Wy.bind(null,Xt,o),[g.memoizedState,o]},useRef:function(o){var a=Yi();return o={current:o},a.memoizedState=o},useState:nh,useDebugValue:rh,useDeferredValue:function(o){var a=nh(o),f=a[0],g=a[1];return ih(function(){var S=ai.transition;ai.transition={};try{g(o)}finally{ai.transition=S}},[o]),f},useTransition:function(){var o=nh(!1),a=o[0];return o=Gy.bind(null,o[1]),Yi().memoizedState=o,[a,o]},useMutableSource:function(){},useSyncExternalStore:function(o,a,f){var g=Xt,S=Yi();if(kt){if(f===void 0)throw Error(l(407));f=f()}else{if(f=a(),Jt===null)throw Error(l(349));Ns&30||Ip(g,a,f)}S.memoizedState=f;var A={value:f,getSnapshot:a};return S.queue=A,ih(Np.bind(null,g,A,o),[o]),g.flags|=2048,zo(9,Lp.bind(null,g,A,f,a),void 0,null),f},useId:function(){var o=Yi(),a=Jt.identifierPrefix;if(kt){var f=qi,g=Xi;f=(g&~(1<<32-Un(g)-1)).toString(32)+f,a=":"+a+"R"+f,f=Fo++,0<f&&(a+="H"+f.toString(32)),a+=":"}else f=Vy++,a=":"+a+"r"+f.toString(32)+":";return o.memoizedState=a},unstable_isNewReconciler:!1},Yy={readContext:ii,useCallback:kp,useContext:ii,useEffect:Bo,useImperativeHandle:Bp,useInsertionEffect:Op,useLayoutEffect:Fp,useMemo:Hp,useReducer:_l,useRef:Up,useState:function(){return _l(Br)},useDebugValue:rh,useDeferredValue:function(o){var a=_l(Br),f=a[0],g=a[1];return Bo(function(){var S=ai.transition;ai.transition={};try{g(o)}finally{ai.transition=S}},[o]),f},useTransition:function(){var o=_l(Br)[0],a=Ni().memoizedState;return[o,a]},useMutableSource:Rp,useSyncExternalStore:Pp,useId:Vp,unstable_isNewReconciler:!1},jy={readContext:ii,useCallback:kp,useContext:ii,useEffect:Bo,useImperativeHandle:Bp,useInsertionEffect:Op,useLayoutEffect:Fp,useMemo:Hp,useReducer:yl,useRef:Up,useState:function(){return yl(Br)},useDebugValue:rh,useDeferredValue:function(o){var a=yl(Br),f=a[0],g=a[1];return Bo(function(){var S=ai.transition;ai.transition={};try{g(o)}finally{ai.transition=S}},[o]),f},useTransition:function(){var o=yl(Br)[0],a=Ni().memoizedState;return[o,a]},useMutableSource:Rp,useSyncExternalStore:Pp,useId:Vp,unstable_isNewReconciler:!1};function sh(o,a){try{var f="",g=a;do f+=Hy(g),g=g.return;while(g);var S=f}catch(A){S=`
Error generating stack: `+A.message+`
`+A.stack}return{value:o,source:a,stack:S}}function oh(o,a){try{console.error(a.value)}catch(f){setTimeout(function(){throw f})}}var Zy=typeof WeakMap=="function"?WeakMap:Map;function Yp(o,a,f){f=Wi(-1,f),f.tag=3,f.payload={element:null};var g=a.value;return f.callback=function(){zl||(zl=!0,Eh=g),oh(o,a)},f}function jp(o,a,f){f=Wi(-1,f),f.tag=3;var g=o.type.getDerivedStateFromError;if(typeof g=="function"){var S=a.value;f.payload=function(){return g(S)},f.callback=function(){oh(o,a)}}var A=o.stateNode;return A!==null&&typeof A.componentDidCatch=="function"&&(f.callback=function(){oh(o,a),typeof g!="function"&&(pr===null?pr=new Set([this]):pr.add(this));var O=a.stack;this.componentDidCatch(a.value,{componentStack:O!==null?O:""})}),f}function Zp(o,a,f){var g=o.pingCache;if(g===null){g=o.pingCache=new Zy;var S=new Set;g.set(a,S)}else S=g.get(a),S===void 0&&(S=new Set,g.set(a,S));S.has(f)||(S.add(f),o=cx.bind(null,o,a,f),a.then(o,o))}function Jp(o){do{var a;if((a=o.tag===13)&&(a=o.memoizedState,a=a!==null?a.dehydrated!==null:!0),a)return o;o=o.return}while(o!==null);return null}function Kp(o,a,f,g,S){return o.mode&1?(o.flags|=65536,o.lanes=S,o):(o===a?o.flags|=65536:(o.flags|=128,f.flags|=131072,f.flags&=-52805,f.tag===1&&(f.alternate===null?f.tag=17:(a=Wi(-1,1),a.tag=2,dr(f,a))),f.lanes|=1),o)}function Di(o){o.flags|=4}function Qp(o,a){if(o!==null&&o.child===a.child)return!0;if(a.flags&16)return!1;for(o=a.child;o!==null;){if(o.flags&12854||o.subtreeFlags&12854)return!1;o=o.sibling}return!0}var ko,Ho,wl,El;if(W)ko=function(o,a){for(var f=a.child;f!==null;){if(f.tag===5||f.tag===6)Ie(o,f.stateNode);else if(f.tag!==4&&f.child!==null){f.child.return=f,f=f.child;continue}if(f===a)break;for(;f.sibling===null;){if(f.return===null||f.return===a)return;f=f.return}f.sibling.return=f.return,f=f.sibling}},Ho=function(){},wl=function(o,a,f,g,S){if(o=o.memoizedProps,o!==g){var A=a.stateNode,O=Li(oi.current);f=ne(A,f,o,g,S,O),(a.updateQueue=f)&&Di(a)}},El=function(o,a,f,g){f!==g&&Di(a)};else if(ce){ko=function(o,a,f,g){for(var S=a.child;S!==null;){if(S.tag===5){var A=S.stateNode;f&&g&&(A=Gn(A,S.type,S.memoizedProps,S)),Ie(o,A)}else if(S.tag===6)A=S.stateNode,f&&g&&(A=Wn(A,S.memoizedProps,S)),Ie(o,A);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)A=S.child,A!==null&&(A.return=S),ko(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};var $p=function(o,a,f,g){for(var S=a.child;S!==null;){if(S.tag===5){var A=S.stateNode;f&&g&&(A=Gn(A,S.type,S.memoizedProps,S)),Ut(o,A)}else if(S.tag===6)A=S.stateNode,f&&g&&(A=Wn(A,S.memoizedProps,S)),Ut(o,A);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)A=S.child,A!==null&&(A.return=S),$p(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};Ho=function(o,a){var f=a.stateNode;if(!Qp(o,a)){o=f.containerInfo;var g=Lt(o);$p(g,a,!1,!1),f.pendingChildren=g,Di(a),sn(o,g)}},wl=function(o,a,f,g,S){var A=o.stateNode,O=o.memoizedProps;if((o=Qp(o,a))&&O===g)a.stateNode=A;else{var V=a.stateNode,ie=Li(oi.current),ge=null;O!==g&&(ge=ne(V,f,O,g,S,ie)),o&&ge===null?a.stateNode=A:(A=Pt(A,ge,f,O,g,a,o,V),Be(A,f,g,S,ie)&&Di(a),a.stateNode=A,o?Di(a):ko(A,a,!1,!1))}},El=function(o,a,f,g){f!==g?(o=Li(Is.current),f=Li(oi.current),a.stateNode=Ce(g,o,f,a),Di(a)):a.stateNode=o.stateNode}}else Ho=function(){},wl=function(){},El=function(){};function Vo(o,a){if(!kt)switch(o.tailMode){case"hidden":a=o.tail;for(var f=null;a!==null;)a.alternate!==null&&(f=a),a=a.sibling;f===null?o.tail=null:f.sibling=null;break;case"collapsed":f=o.tail;for(var g=null;f!==null;)f.alternate!==null&&(g=f),f=f.sibling;g===null?a||o.tail===null?o.tail=null:o.tail.sibling=null:g.sibling=null}}function yn(o){var a=o.alternate!==null&&o.alternate.child===o.child,f=0,g=0;if(a)for(var S=o.child;S!==null;)f|=S.lanes|S.childLanes,g|=S.subtreeFlags&14680064,g|=S.flags&14680064,S.return=o,S=S.sibling;else for(S=o.child;S!==null;)f|=S.lanes|S.childLanes,g|=S.subtreeFlags,g|=S.flags,S.return=o,S=S.sibling;return o.subtreeFlags|=g,o.childLanes=f,a}function Jy(o,a,f){var g=a.pendingProps;switch(Xu(a),a.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return yn(a),null;case 1:return At(a.type)&&qn(),yn(a),null;case 3:return g=a.stateNode,Ls(),De(dn),De(Bt),Qu(),g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null),(o===null||o.child===null)&&(Lo(a)?Di(a):o===null||o.memoizedState.isDehydrated&&!(a.flags&256)||(a.flags|=1024,gi!==null&&(bh(gi),gi=null))),Ho(o,a),yn(a),null;case 5:Ju(a),f=Li(Is.current);var S=a.type;if(o!==null&&a.stateNode!=null)wl(o,a,S,g,f),o.ref!==a.ref&&(a.flags|=512,a.flags|=2097152);else{if(!g){if(a.stateNode===null)throw Error(l(166));return yn(a),null}if(o=Li(oi.current),Lo(a)){if(!oe)throw Error(l(175));o=Cu(a.stateNode,a.type,a.memoizedProps,f,o,a,!Io),a.updateQueue=o,o!==null&&Di(a)}else{var A=he(S,g,f,o,a);ko(A,a,!1,!1),a.stateNode=A,Be(A,S,g,f,o)&&Di(a)}a.ref!==null&&(a.flags|=512,a.flags|=2097152)}return yn(a),null;case 6:if(o&&a.stateNode!=null)El(o,a,o.memoizedProps,g);else{if(typeof g!="string"&&a.stateNode===null)throw Error(l(166));if(o=Li(Is.current),f=Li(oi.current),Lo(a)){if(!oe)throw Error(l(176));if(o=a.stateNode,g=a.memoizedProps,(f=Ru(o,g,a,!Io))&&(S=Yn,S!==null))switch(A=(S.mode&1)!==0,S.tag){case 3:Je(S.stateNode.containerInfo,o,g,A);break;case 5:tt(S.type,S.memoizedProps,S.stateNode,o,g,A)}f&&Di(a)}else a.stateNode=Ce(g,o,f,a)}return yn(a),null;case 13:if(De(Ht),g=a.memoizedState,kt&&jn!==null&&a.mode&1&&!(a.flags&128)){for(o=jn;o;)o=Ti(o);return Rs(),a.flags|=98560,a}if(g!==null&&g.dehydrated!==null){if(g=Lo(a),o===null){if(!g)throw Error(l(318));if(!oe)throw Error(l(344));if(o=a.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));I(o,a)}else Rs(),!(a.flags&128)&&(a.memoizedState=null),a.flags|=4;return yn(a),null}return gi!==null&&(bh(gi),gi=null),a.flags&128?(a.lanes=f,a):(g=g!==null,f=!1,o===null?Lo(a):f=o.memoizedState!==null,g&&!f&&(a.child.flags|=8192,a.mode&1&&(o===null||Ht.current&1?tn===0&&(tn=3):Rh())),a.updateQueue!==null&&(a.flags|=4),yn(a),null);case 4:return Ls(),Ho(o,a),o===null&&me(a.stateNode.containerInfo),yn(a),null;case 10:return Bu(a.type._context),yn(a),null;case 17:return At(a.type)&&qn(),yn(a),null;case 19:if(De(Ht),S=a.memoizedState,S===null)return yn(a),null;if(g=(a.flags&128)!==0,A=S.rendering,A===null)if(g)Vo(S,!1);else{if(tn!==0||o!==null&&o.flags&128)for(o=a.child;o!==null;){if(A=ml(o),A!==null){for(a.flags|=128,Vo(S,!1),o=A.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),a.subtreeFlags=0,o=f,g=a.child;g!==null;)f=g,S=o,f.flags&=14680066,A=f.alternate,A===null?(f.childLanes=0,f.lanes=S,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=A.childLanes,f.lanes=A.lanes,f.child=A.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=A.memoizedProps,f.memoizedState=A.memoizedState,f.updateQueue=A.updateQueue,f.type=A.type,S=A.dependencies,f.dependencies=S===null?null:{lanes:S.lanes,firstContext:S.firstContext}),g=g.sibling;return Tt(Ht,Ht.current&1|2),a.child}o=o.sibling}S.tail!==null&&on()>wh&&(a.flags|=128,g=!0,Vo(S,!1),a.lanes=4194304)}else{if(!g)if(o=ml(A),o!==null){if(a.flags|=128,g=!0,o=o.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),Vo(S,!0),S.tail===null&&S.tailMode==="hidden"&&!A.alternate&&!kt)return yn(a),null}else 2*on()-S.renderingStartTime>wh&&f!==1073741824&&(a.flags|=128,g=!0,Vo(S,!1),a.lanes=4194304);S.isBackwards?(A.sibling=a.child,a.child=A):(o=S.last,o!==null?o.sibling=A:a.child=A,S.last=A)}return S.tail!==null?(a=S.tail,S.rendering=a,S.tail=a.sibling,S.renderingStartTime=on(),a.sibling=null,o=Ht.current,Tt(Ht,g?o&1|2:o&1),a):(yn(a),null);case 22:case 23:return Ch(),g=a.memoizedState!==null,o!==null&&o.memoizedState!==null!==g&&(a.flags|=8192),g&&a.mode&1?Jn&1073741824&&(yn(a),W&&a.subtreeFlags&6&&(a.flags|=8192)):yn(a),null;case 24:return null;case 25:return null}throw Error(l(156,a.tag))}var Ky=c.ReactCurrentOwner,Zn=!1;function bn(o,a,f,g){a.child=o===null?bp(a,null,f,g):Ps(a,o.child,f,g)}function em(o,a,f,g,S){f=f.render;var A=a.ref;return Ts(a,S),g=eh(o,a,f,g,A,S),f=th(),o!==null&&!Zn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,ji(o,a,S)):(kt&&f&&Wu(a),a.flags|=1,bn(o,a,g,S),a.child)}function tm(o,a,f,g,S){if(o===null){var A=f.type;return typeof A=="function"&&!Ph(A)&&A.defaultProps===void 0&&f.compare===null&&f.defaultProps===void 0?(a.tag=15,a.type=A,nm(o,a,A,g,S)):(o=Xl(f.type,null,g,a,a.mode,S),o.ref=a.ref,o.return=a,a.child=o)}if(A=o.child,!(o.lanes&S)){var O=A.memoizedProps;if(f=f.compare,f=f!==null?f:ol,f(O,g)&&o.ref===a.ref)return ji(o,a,S)}return a.flags|=1,o=_r(A,g),o.ref=a.ref,o.return=a,a.child=o}function nm(o,a,f,g,S){if(o!==null&&ol(o.memoizedProps,g)&&o.ref===a.ref)if(Zn=!1,(o.lanes&S)!==0)o.flags&131072&&(Zn=!0);else return a.lanes=o.lanes,ji(o,a,S);return ah(o,a,f,g,S)}function im(o,a,f){var g=a.pendingProps,S=g.children,A=o!==null?o.memoizedState:null;if(g.mode==="hidden")if(!(a.mode&1))a.memoizedState={baseLanes:0,cachePool:null},Tt(Ds,Jn),Jn|=f;else if(f&1073741824)a.memoizedState={baseLanes:0,cachePool:null},g=A!==null?A.baseLanes:f,Tt(Ds,Jn),Jn|=g;else return o=A!==null?A.baseLanes|f:f,a.lanes=a.childLanes=1073741824,a.memoizedState={baseLanes:o,cachePool:null},a.updateQueue=null,Tt(Ds,Jn),Jn|=o,null;else A!==null?(g=A.baseLanes|f,a.memoizedState=null):g=f,Tt(Ds,Jn),Jn|=g;return bn(o,a,S,f),a.child}function rm(o,a){var f=a.ref;(o===null&&f!==null||o!==null&&o.ref!==f)&&(a.flags|=512,a.flags|=2097152)}function ah(o,a,f,g,S){var A=At(f)?Xn:Bt.current;return A=bi(a,A),Ts(a,S),f=eh(o,a,f,g,A,S),g=th(),o!==null&&!Zn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,ji(o,a,S)):(kt&&g&&Wu(a),a.flags|=1,bn(o,a,f,S),a.child)}function sm(o,a,f,g,S){if(At(f)){var A=!0;hr(a)}else A=!1;if(Ts(a,S),a.stateNode===null)o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),yp(a,f,g),Gu(a,f,g,S),g=!0;else if(o===null){var O=a.stateNode,V=a.memoizedProps;O.props=V;var ie=O.context,ge=f.contextType;typeof ge=="object"&&ge!==null?ge=ii(ge):(ge=At(f)?Xn:Bt.current,ge=bi(a,ge));var Ue=f.getDerivedStateFromProps,ot=typeof Ue=="function"||typeof O.getSnapshotBeforeUpdate=="function";ot||typeof O.UNSAFE_componentWillReceiveProps!="function"&&typeof O.componentWillReceiveProps!="function"||(V!==g||ie!==ge)&&xp(a,O,g,ge),fr=!1;var je=a.memoizedState;O.state=je,ul(a,g,O,S),ie=a.memoizedState,V!==g||je!==ie||dn.current||fr?(typeof Ue=="function"&&(Vu(a,f,Ue,g),ie=a.memoizedState),(V=fr||_p(a,f,V,g,je,ie,ge))?(ot||typeof O.UNSAFE_componentWillMount!="function"&&typeof O.componentWillMount!="function"||(typeof O.componentWillMount=="function"&&O.componentWillMount(),typeof O.UNSAFE_componentWillMount=="function"&&O.UNSAFE_componentWillMount()),typeof O.componentDidMount=="function"&&(a.flags|=4194308)):(typeof O.componentDidMount=="function"&&(a.flags|=4194308),a.memoizedProps=g,a.memoizedState=ie),O.props=g,O.state=ie,O.context=ge,g=V):(typeof O.componentDidMount=="function"&&(a.flags|=4194308),g=!1)}else{O=a.stateNode,pp(o,a),V=a.memoizedProps,ge=a.type===a.elementType?V:mi(a.type,V),O.props=ge,ot=a.pendingProps,je=O.context,ie=f.contextType,typeof ie=="object"&&ie!==null?ie=ii(ie):(ie=At(f)?Xn:Bt.current,ie=bi(a,ie));var Nt=f.getDerivedStateFromProps;(Ue=typeof Nt=="function"||typeof O.getSnapshotBeforeUpdate=="function")||typeof O.UNSAFE_componentWillReceiveProps!="function"&&typeof O.componentWillReceiveProps!="function"||(V!==ot||je!==ie)&&xp(a,O,g,ie),fr=!1,je=a.memoizedState,O.state=je,ul(a,g,O,S);var We=a.memoizedState;V!==ot||je!==We||dn.current||fr?(typeof Nt=="function"&&(Vu(a,f,Nt,g),We=a.memoizedState),(ge=fr||_p(a,f,ge,g,je,We,ie)||!1)?(Ue||typeof O.UNSAFE_componentWillUpdate!="function"&&typeof O.componentWillUpdate!="function"||(typeof O.componentWillUpdate=="function"&&O.componentWillUpdate(g,We,ie),typeof O.UNSAFE_componentWillUpdate=="function"&&O.UNSAFE_componentWillUpdate(g,We,ie)),typeof O.componentDidUpdate=="function"&&(a.flags|=4),typeof O.getSnapshotBeforeUpdate=="function"&&(a.flags|=1024)):(typeof O.componentDidUpdate!="function"||V===o.memoizedProps&&je===o.memoizedState||(a.flags|=4),typeof O.getSnapshotBeforeUpdate!="function"||V===o.memoizedProps&&je===o.memoizedState||(a.flags|=1024),a.memoizedProps=g,a.memoizedState=We),O.props=g,O.state=We,O.context=ie,g=ge):(typeof O.componentDidUpdate!="function"||V===o.memoizedProps&&je===o.memoizedState||(a.flags|=4),typeof O.getSnapshotBeforeUpdate!="function"||V===o.memoizedProps&&je===o.memoizedState||(a.flags|=1024),g=!1)}return lh(o,a,f,g,A,S)}function lh(o,a,f,g,S,A){rm(o,a);var O=(a.flags&128)!==0;if(!g&&!O)return S&&el(a,f,!1),ji(o,a,A);g=a.stateNode,Ky.current=a;var V=O&&typeof f.getDerivedStateFromError!="function"?null:g.render();return a.flags|=1,o!==null&&O?(a.child=Ps(a,o.child,null,A),a.child=Ps(a,null,V,A)):bn(o,a,V,A),a.memoizedState=g.state,S&&el(a,f,!0),a.child}function om(o){var a=o.stateNode;a.pendingContext?Es(o,a.pendingContext,a.pendingContext!==a.context):a.context&&Es(o,a.context,!1),Zu(o,a.containerInfo)}function am(o,a,f,g,S){return Rs(),ju(S),a.flags|=256,bn(o,a,f,g),a.child}var Al={dehydrated:null,treeContext:null,retryLane:0};function Tl(o){return{baseLanes:o,cachePool:null}}function lm(o,a,f){var g=a.pendingProps,S=Ht.current,A=!1,O=(a.flags&128)!==0,V;if((V=O)||(V=o!==null&&o.memoizedState===null?!1:(S&2)!==0),V?(A=!0,a.flags&=-129):(o===null||o.memoizedState!==null)&&(S|=1),Tt(Ht,S&1),o===null)return Yu(a),o=a.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?(a.mode&1?ur(o)?a.lanes=8:a.lanes=1073741824:a.lanes=1,null):(S=g.children,o=g.fallback,A?(g=a.mode,A=a.child,S={mode:"hidden",children:S},!(g&1)&&A!==null?(A.childLanes=0,A.pendingProps=S):A=ql(S,g,0,null),o=Xr(o,g,f,null),A.return=a,o.return=a,A.sibling=o,a.child=A,a.child.memoizedState=Tl(f),a.memoizedState=Al,o):ch(a,S));if(S=o.memoizedState,S!==null){if(V=S.dehydrated,V!==null){if(O)return a.flags&256?(a.flags&=-257,bl(o,a,f,Error(l(422)))):a.memoizedState!==null?(a.child=o.child,a.flags|=128,null):(A=g.fallback,S=a.mode,g=ql({mode:"visible",children:g.children},S,0,null),A=Xr(A,S,f,null),A.flags|=2,g.return=a,A.return=a,g.sibling=A,a.child=g,a.mode&1&&Ps(a,o.child,null,f),a.child.memoizedState=Tl(f),a.memoizedState=Al,A);if(!(a.mode&1))a=bl(o,a,f,null);else if(ur(V))a=bl(o,a,f,Error(l(419)));else if(g=(f&o.childLanes)!==0,Zn||g){if(g=Jt,g!==null){switch(f&-f){case 4:A=2;break;case 16:A=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:A=32;break;case 536870912:A=268435456;break;default:A=0}g=A&(g.suspendedLanes|f)?0:A,g!==0&&g!==S.retryLane&&(S.retryLane=g,li(o,g,-1))}Rh(),a=bl(o,a,f,Error(l(421)))}else Ja(V)?(a.flags|=128,a.child=o.child,a=ux.bind(null,o),Ka(V,a),a=null):(f=S.treeContext,oe&&(jn=bu(V),Yn=a,kt=!0,gi=null,Io=!1,f!==null&&(ri[si++]=Xi,ri[si++]=qi,ri[si++]=Fr,Xi=f.id,qi=f.overflow,Fr=a)),a=ch(a,a.pendingProps.children),a.flags|=4096);return a}return A?(g=um(o,a,g.children,g.fallback,f),A=a.child,S=o.child.memoizedState,A.memoizedState=S===null?Tl(f):{baseLanes:S.baseLanes|f,cachePool:null},A.childLanes=o.childLanes&~f,a.memoizedState=Al,g):(f=cm(o,a,g.children,f),a.memoizedState=null,f)}return A?(g=um(o,a,g.children,g.fallback,f),A=a.child,S=o.child.memoizedState,A.memoizedState=S===null?Tl(f):{baseLanes:S.baseLanes|f,cachePool:null},A.childLanes=o.childLanes&~f,a.memoizedState=Al,g):(f=cm(o,a,g.children,f),a.memoizedState=null,f)}function ch(o,a){return a=ql({mode:"visible",children:a},o.mode,0,null),a.return=o,o.child=a}function cm(o,a,f,g){var S=o.child;return o=S.sibling,f=_r(S,{mode:"visible",children:f}),!(a.mode&1)&&(f.lanes=g),f.return=a,f.sibling=null,o!==null&&(g=a.deletions,g===null?(a.deletions=[o],a.flags|=16):g.push(o)),a.child=f}function um(o,a,f,g,S){var A=a.mode;o=o.child;var O=o.sibling,V={mode:"hidden",children:f};return!(A&1)&&a.child!==o?(f=a.child,f.childLanes=0,f.pendingProps=V,a.deletions=null):(f=_r(o,V),f.subtreeFlags=o.subtreeFlags&14680064),O!==null?g=_r(O,g):(g=Xr(g,A,S,null),g.flags|=2),g.return=a,f.return=a,f.sibling=g,a.child=f,g}function bl(o,a,f,g){return g!==null&&ju(g),Ps(a,o.child,null,f),o=ch(a,a.pendingProps.children),o.flags|=2,a.memoizedState=null,o}function hm(o,a,f){o.lanes|=a;var g=o.alternate;g!==null&&(g.lanes|=a),ku(o.return,a,f)}function uh(o,a,f,g,S){var A=o.memoizedState;A===null?o.memoizedState={isBackwards:a,rendering:null,renderingStartTime:0,last:g,tail:f,tailMode:S}:(A.isBackwards=a,A.rendering=null,A.renderingStartTime=0,A.last=g,A.tail=f,A.tailMode=S)}function fm(o,a,f){var g=a.pendingProps,S=g.revealOrder,A=g.tail;if(bn(o,a,g.children,f),g=Ht.current,g&2)g=g&1|2,a.flags|=128;else{if(o!==null&&o.flags&128)e:for(o=a.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&hm(o,f,a);else if(o.tag===19)hm(o,f,a);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break e;for(;o.sibling===null;){if(o.return===null||o.return===a)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}g&=1}if(Tt(Ht,g),!(a.mode&1))a.memoizedState=null;else switch(S){case"forwards":for(f=a.child,S=null;f!==null;)o=f.alternate,o!==null&&ml(o)===null&&(S=f),f=f.sibling;f=S,f===null?(S=a.child,a.child=null):(S=f.sibling,f.sibling=null),uh(a,!1,S,f,A);break;case"backwards":for(f=null,S=a.child,a.child=null;S!==null;){if(o=S.alternate,o!==null&&ml(o)===null){a.child=S;break}o=S.sibling,S.sibling=f,f=S,S=o}uh(a,!0,f,null,A);break;case"together":uh(a,!1,null,null,void 0);break;default:a.memoizedState=null}return a.child}function ji(o,a,f){if(o!==null&&(a.dependencies=o.dependencies),Us|=a.lanes,!(f&a.childLanes))return null;if(o!==null&&a.child!==o.child)throw Error(l(153));if(a.child!==null){for(o=a.child,f=_r(o,o.pendingProps),a.child=f,f.return=a;o.sibling!==null;)o=o.sibling,f=f.sibling=_r(o,o.pendingProps),f.return=a;f.sibling=null}return a.child}function Qy(o,a,f){switch(a.tag){case 3:om(a),Rs();break;case 5:Cp(a);break;case 1:At(a.type)&&hr(a);break;case 4:Zu(a,a.stateNode.containerInfo);break;case 10:dp(a,a.type._context,a.memoizedProps.value);break;case 13:var g=a.memoizedState;if(g!==null)return g.dehydrated!==null?(Tt(Ht,Ht.current&1),a.flags|=128,null):f&a.child.childLanes?lm(o,a,f):(Tt(Ht,Ht.current&1),o=ji(o,a,f),o!==null?o.sibling:null);Tt(Ht,Ht.current&1);break;case 19:if(g=(f&a.childLanes)!==0,o.flags&128){if(g)return fm(o,a,f);a.flags|=128}var S=a.memoizedState;if(S!==null&&(S.rendering=null,S.tail=null,S.lastEffect=null),Tt(Ht,Ht.current),g)break;return null;case 22:case 23:return a.lanes=0,im(o,a,f)}return ji(o,a,f)}function $y(o,a){switch(Xu(a),a.tag){case 1:return At(a.type)&&qn(),o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 3:return Ls(),De(dn),De(Bt),Qu(),o=a.flags,o&65536&&!(o&128)?(a.flags=o&-65537|128,a):null;case 5:return Ju(a),null;case 13:if(De(Ht),o=a.memoizedState,o!==null&&o.dehydrated!==null){if(a.alternate===null)throw Error(l(340));Rs()}return o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 19:return De(Ht),null;case 4:return Ls(),null;case 10:return Bu(a.type._context),null;case 22:case 23:return Ch(),null;case 24:return null;default:return null}}var Cl=!1,kr=!1,ex=typeof WeakSet=="function"?WeakSet:Set,be=null;function Rl(o,a){var f=o.ref;if(f!==null)if(typeof f=="function")try{f(null)}catch(g){zn(o,a,g)}else f.current=null}function hh(o,a,f){try{f()}catch(g){zn(o,a,g)}}var dm=!1;function tx(o,a){for($(o.containerInfo),be=a;be!==null;)if(o=be,a=o.child,(o.subtreeFlags&1028)!==0&&a!==null)a.return=o,be=a;else for(;be!==null;){o=be;try{var f=o.alternate;if(o.flags&1024)switch(o.tag){case 0:case 11:case 15:break;case 1:if(f!==null){var g=f.memoizedProps,S=f.memoizedState,A=o.stateNode,O=A.getSnapshotBeforeUpdate(o.elementType===o.type?g:mi(o.type,g),S);A.__reactInternalSnapshotBeforeUpdate=O}break;case 3:W&&Ye(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(l(163))}}catch(V){zn(o,o.return,V)}if(a=o.sibling,a!==null){a.return=o.return,be=a;break}be=o.return}return f=dm,dm=!1,f}function Hr(o,a,f){var g=a.updateQueue;if(g=g!==null?g.lastEffect:null,g!==null){var S=g=g.next;do{if((S.tag&o)===o){var A=S.destroy;S.destroy=void 0,A!==void 0&&hh(a,f,A)}S=S.next}while(S!==g)}}function Go(o,a){if(a=a.updateQueue,a=a!==null?a.lastEffect:null,a!==null){var f=a=a.next;do{if((f.tag&o)===o){var g=f.create;f.destroy=g()}f=f.next}while(f!==a)}}function fh(o){var a=o.ref;if(a!==null){var f=o.stateNode;switch(o.tag){case 5:o=ae(f);break;default:o=f}typeof a=="function"?a(o):a.current=o}}function pm(o,a,f){if(Ci&&typeof Ci.onCommitFiberUnmount=="function")try{Ci.onCommitFiberUnmount(rl,a)}catch{}switch(a.tag){case 0:case 11:case 14:case 15:if(o=a.updateQueue,o!==null&&(o=o.lastEffect,o!==null)){var g=o=o.next;do{var S=g,A=S.destroy;S=S.tag,A!==void 0&&(S&2||S&4)&&hh(a,f,A),g=g.next}while(g!==o)}break;case 1:if(Rl(a,f),o=a.stateNode,typeof o.componentWillUnmount=="function")try{o.props=a.memoizedProps,o.state=a.memoizedState,o.componentWillUnmount()}catch(O){zn(a,f,O)}break;case 5:Rl(a,f);break;case 4:W?xm(o,a,f):ce&&ce&&(a=a.stateNode.containerInfo,f=Lt(a),It(a,f))}}function mm(o,a,f){for(var g=a;;)if(pm(o,g,f),g.child===null||W&&g.tag===4){if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return}g.sibling.return=g.return,g=g.sibling}else g.child.return=g,g=g.child}function gm(o){var a=o.alternate;a!==null&&(o.alternate=null,gm(a)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(a=o.stateNode,a!==null&&N(a)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function vm(o){return o.tag===5||o.tag===3||o.tag===4}function _m(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||vm(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function ym(o){if(W){e:{for(var a=o.return;a!==null;){if(vm(a))break e;a=a.return}throw Error(l(160))}var f=a;switch(f.tag){case 5:a=f.stateNode,f.flags&32&&(Ve(a),f.flags&=-33),f=_m(o),ph(o,f,a);break;case 3:case 4:a=f.stateNode.containerInfo,f=_m(o),dh(o,f,a);break;default:throw Error(l(161))}}}function dh(o,a,f){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?Et(f,o,a):nt(f,o);else if(g!==4&&(o=o.child,o!==null))for(dh(o,a,f),o=o.sibling;o!==null;)dh(o,a,f),o=o.sibling}function ph(o,a,f){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?mt(f,o,a):Ne(f,o);else if(g!==4&&(o=o.child,o!==null))for(ph(o,a,f),o=o.sibling;o!==null;)ph(o,a,f),o=o.sibling}function xm(o,a,f){for(var g=a,S=!1,A,O;;){if(!S){S=g.return;e:for(;;){if(S===null)throw Error(l(160));switch(A=S.stateNode,S.tag){case 5:O=!1;break e;case 3:A=A.containerInfo,O=!0;break e;case 4:A=A.containerInfo,O=!0;break e}S=S.return}S=!0}if(g.tag===5||g.tag===6)mm(o,g,f),O?Dt(A,g.stateNode):_t(A,g.stateNode);else if(g.tag===18)O?Re(A,g.stateNode):K(A,g.stateNode);else if(g.tag===4){if(g.child!==null){A=g.stateNode.containerInfo,O=!0,g.child.return=g,g=g.child;continue}}else if(pm(o,g,f),g.child!==null){g.child.return=g,g=g.child;continue}if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return,g.tag===4&&(S=!1)}g.sibling.return=g.return,g=g.sibling}}function mh(o,a){if(W){switch(a.tag){case 0:case 11:case 14:case 15:Hr(3,a,a.return),Go(3,a),Hr(5,a,a.return);return;case 1:return;case 5:var f=a.stateNode;if(f!=null){var g=a.memoizedProps;o=o!==null?o.memoizedProps:g;var S=a.type,A=a.updateQueue;a.updateQueue=null,A!==null&&pt(f,A,S,o,g,a)}return;case 6:if(a.stateNode===null)throw Error(l(162));f=a.memoizedProps,Oe(a.stateNode,o!==null?o.memoizedProps:f,f);return;case 3:oe&&o!==null&&o.memoizedState.isDehydrated&&Q(a.stateNode.containerInfo);return;case 12:return;case 13:Pl(a);return;case 19:Pl(a);return;case 17:return}throw Error(l(163))}switch(a.tag){case 0:case 11:case 14:case 15:Hr(3,a,a.return),Go(3,a),Hr(5,a,a.return);return;case 12:return;case 13:Pl(a);return;case 19:Pl(a);return;case 3:oe&&o!==null&&o.memoizedState.isDehydrated&&Q(a.stateNode.containerInfo);break;case 22:case 23:return}e:if(ce){switch(a.tag){case 1:case 5:case 6:break e;case 3:case 4:a=a.stateNode,It(a.containerInfo,a.pendingChildren);break e}throw Error(l(163))}}function Pl(o){var a=o.updateQueue;if(a!==null){o.updateQueue=null;var f=o.stateNode;f===null&&(f=o.stateNode=new ex),a.forEach(function(g){var S=hx.bind(null,o,g);f.has(g)||(f.add(g),g.then(S,S))})}}function nx(o,a){for(be=a;be!==null;){a=be;var f=a.deletions;if(f!==null)for(var g=0;g<f.length;g++){var S=f[g];try{var A=o;W?xm(A,S,a):mm(A,S,a);var O=S.alternate;O!==null&&(O.return=null),S.return=null}catch(ke){zn(S,a,ke)}}if(f=a.child,a.subtreeFlags&12854&&f!==null)f.return=a,be=f;else for(;be!==null;){a=be;try{var V=a.flags;if(V&32&&W&&Ve(a.stateNode),V&512){var ie=a.alternate;if(ie!==null){var ge=ie.ref;ge!==null&&(typeof ge=="function"?ge(null):ge.current=null)}}if(V&8192)switch(a.tag){case 13:if(a.memoizedState!==null){var Ue=a.alternate;(Ue===null||Ue.memoizedState===null)&&(Mh=on())}break;case 22:var ot=a.memoizedState!==null,je=a.alternate,Nt=je!==null&&je.memoizedState!==null;if(f=a,W){e:if(g=f,S=ot,A=null,W)for(var We=g;;){if(We.tag===5){if(A===null){A=We;var xn=We.stateNode;S?B(xn):we(We.stateNode,We.memoizedProps)}}else if(We.tag===6){if(A===null){var ui=We.stateNode;S?Ee(ui):Xe(ui,We.memoizedProps)}}else if((We.tag!==22&&We.tag!==23||We.memoizedState===null||We===g)&&We.child!==null){We.child.return=We,We=We.child;continue}if(We===g)break;for(;We.sibling===null;){if(We.return===null||We.return===g)break e;A===We&&(A=null),We=We.return}A===We&&(A=null),We.sibling.return=We.return,We=We.sibling}}if(ot&&!Nt&&f.mode&1){be=f;for(var j=f.child;j!==null;){for(f=be=j;be!==null;){g=be;var G=g.child;switch(g.tag){case 0:case 11:case 14:case 15:Hr(4,g,g.return);break;case 1:Rl(g,g.return);var te=g.stateNode;if(typeof te.componentWillUnmount=="function"){var Pe=g.return;try{te.props=g.memoizedProps,te.state=g.memoizedState,te.componentWillUnmount()}catch(ke){zn(g,Pe,ke)}}break;case 5:Rl(g,g.return);break;case 22:if(g.memoizedState!==null){wm(f);continue}}G!==null?(G.return=g,be=G):wm(f)}j=j.sibling}}}switch(V&4102){case 2:ym(a),a.flags&=-3;break;case 6:ym(a),a.flags&=-3,mh(a.alternate,a);break;case 4096:a.flags&=-4097;break;case 4100:a.flags&=-4097,mh(a.alternate,a);break;case 4:mh(a.alternate,a)}}catch(ke){zn(a,a.return,ke)}if(f=a.sibling,f!==null){f.return=a.return,be=f;break}be=a.return}}}function ix(o,a,f){be=o,Sm(o)}function Sm(o,a,f){for(var g=(o.mode&1)!==0;be!==null;){var S=be,A=S.child;if(S.tag===22&&g){var O=S.memoizedState!==null||Cl;if(!O){var V=S.alternate,ie=V!==null&&V.memoizedState!==null||kr;V=Cl;var ge=kr;if(Cl=O,(kr=ie)&&!ge)for(be=S;be!==null;)O=be,ie=O.child,O.tag===22&&O.memoizedState!==null?Em(S):ie!==null?(ie.return=O,be=ie):Em(S);for(;A!==null;)be=A,Sm(A),A=A.sibling;be=S,Cl=V,kr=ge}Mm(o)}else S.subtreeFlags&8772&&A!==null?(A.return=S,be=A):Mm(o)}}function Mm(o){for(;be!==null;){var a=be;if(a.flags&8772){var f=a.alternate;try{if(a.flags&8772)switch(a.tag){case 0:case 11:case 15:kr||Go(5,a);break;case 1:var g=a.stateNode;if(a.flags&4&&!kr)if(f===null)g.componentDidMount();else{var S=a.elementType===a.type?f.memoizedProps:mi(a.type,f.memoizedProps);g.componentDidUpdate(S,f.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}var A=a.updateQueue;A!==null&&gp(a,A,g);break;case 3:var O=a.updateQueue;if(O!==null){if(f=null,a.child!==null)switch(a.child.tag){case 5:f=ae(a.child.stateNode);break;case 1:f=a.child.stateNode}gp(a,O,f)}break;case 5:var V=a.stateNode;f===null&&a.flags&4&&Fe(V,a.type,a.memoizedProps,a);break;case 6:break;case 4:break;case 12:break;case 13:if(oe&&a.memoizedState===null){var ie=a.alternate;if(ie!==null){var ge=ie.memoizedState;if(ge!==null){var Ue=ge.dehydrated;Ue!==null&&ee(Ue)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(l(163))}kr||a.flags&512&&fh(a)}catch(ot){zn(a,a.return,ot)}}if(a===o){be=null;break}if(f=a.sibling,f!==null){f.return=a.return,be=f;break}be=a.return}}function wm(o){for(;be!==null;){var a=be;if(a===o){be=null;break}var f=a.sibling;if(f!==null){f.return=a.return,be=f;break}be=a.return}}function Em(o){for(;be!==null;){var a=be;try{switch(a.tag){case 0:case 11:case 15:var f=a.return;try{Go(4,a)}catch(ie){zn(a,f,ie)}break;case 1:var g=a.stateNode;if(typeof g.componentDidMount=="function"){var S=a.return;try{g.componentDidMount()}catch(ie){zn(a,S,ie)}}var A=a.return;try{fh(a)}catch(ie){zn(a,A,ie)}break;case 5:var O=a.return;try{fh(a)}catch(ie){zn(a,O,ie)}}}catch(ie){zn(a,a.return,ie)}if(a===o){be=null;break}var V=a.sibling;if(V!==null){V.return=a.return,be=V;break}be=a.return}}var Il=0,Ll=1,Nl=2,Dl=3,Ul=4;if(typeof Symbol=="function"&&Symbol.for){var Wo=Symbol.for;Il=Wo("selector.component"),Ll=Wo("selector.has_pseudo_class"),Nl=Wo("selector.role"),Dl=Wo("selector.test_id"),Ul=Wo("selector.text")}function gh(o){var a=Se(o);if(a!=null){if(typeof a.memoizedProps["data-testname"]!="string")throw Error(l(364));return a}if(o=le(o),o===null)throw Error(l(362));return o.stateNode.current}function vh(o,a){switch(a.$$typeof){case Il:if(o.type===a.value)return!0;break;case Ll:e:{a=a.value,o=[o,0];for(var f=0;f<o.length;){var g=o[f++],S=o[f++],A=a[S];if(g.tag!==5||!de(g)){for(;A!=null&&vh(g,A);)S++,A=a[S];if(S===a.length){a=!0;break e}else for(g=g.child;g!==null;)o.push(g,S),g=g.sibling}}a=!1}return a;case Nl:if(o.tag===5&&He(o.stateNode,a.value))return!0;break;case Ul:if((o.tag===5||o.tag===6)&&(o=qe(o),o!==null&&0<=o.indexOf(a.value)))return!0;break;case Dl:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===a.value.toLowerCase()))return!0;break;default:throw Error(l(365))}return!1}function _h(o){switch(o.$$typeof){case Il:return"<"+(L(o.value)||"Unknown")+">";case Ll:return":has("+(_h(o)||"")+")";case Nl:return'[role="'+o.value+'"]';case Ul:return'"'+o.value+'"';case Dl:return'[data-testname="'+o.value+'"]';default:throw Error(l(365))}}function Am(o,a){var f=[];o=[o,0];for(var g=0;g<o.length;){var S=o[g++],A=o[g++],O=a[A];if(S.tag!==5||!de(S)){for(;O!=null&&vh(S,O);)A++,O=a[A];if(A===a.length)f.push(S);else for(S=S.child;S!==null;)o.push(S,A),S=S.sibling}}return f}function yh(o,a){if(!re)throw Error(l(363));o=gh(o),o=Am(o,a),a=[],o=Array.from(o);for(var f=0;f<o.length;){var g=o[f++];if(g.tag===5)de(g)||a.push(g.stateNode);else for(g=g.child;g!==null;)o.push(g),g=g.sibling}return a}var rx=Math.ceil,Ol=c.ReactCurrentDispatcher,xh=c.ReactCurrentOwner,jt=c.ReactCurrentBatchConfig,dt=0,Jt=null,Kt=null,pn=0,Jn=0,Ds=yt(0),tn=0,Xo=null,Us=0,Fl=0,Sh=0,qo=null,On=null,Mh=0,wh=1/0;function Os(){wh=on()+500}var zl=!1,Eh=null,pr=null,Bl=!1,mr=null,kl=0,Yo=0,Ah=null,Hl=-1,Vl=0;function Cn(){return dt&6?on():Hl!==-1?Hl:Hl=on()}function gr(o){return o.mode&1?dt&2&&pn!==0?pn&-pn:ky.transition!==null?(Vl===0&&(o=tl,tl<<=1,!(tl&4194240)&&(tl=64),Vl=o),Vl):(o=xt,o!==0?o:_e()):1}function li(o,a,f){if(50<Yo)throw Yo=0,Ah=null,Error(l(185));var g=Gl(o,a);return g===null?null:(Po(g,a,f),(!(dt&2)||g!==Jt)&&(g===Jt&&(!(dt&2)&&(Fl|=a),tn===4&&vr(g,pn)),Fn(g,f),a===1&&dt===0&&!(o.mode&1)&&(Os(),sl&&Pi())),g)}function Gl(o,a){o.lanes|=a;var f=o.alternate;for(f!==null&&(f.lanes|=a),f=o,o=o.return;o!==null;)o.childLanes|=a,f=o.alternate,f!==null&&(f.childLanes|=a),f=o,o=o.return;return f.tag===3?f.stateNode:null}function Fn(o,a){var f=o.callbackNode;Iy(o,a);var g=il(o,o===Jt?pn:0);if(g===0)f!==null&&hp(f),o.callbackNode=null,o.callbackPriority=0;else if(a=g&-g,o.callbackPriority!==a){if(f!=null&&hp(f),a===1)o.tag===0?By(bm.bind(null,o)):fp(bm.bind(null,o)),C?Y(function(){dt===0&&Pi()}):Nu(Du,Pi),f=null;else{switch(up(g)){case 1:f=Du;break;case 4:f=Uy;break;case 16:f=Uu;break;case 536870912:f=Oy;break;default:f=Uu}f=Om(f,Tm.bind(null,o))}o.callbackPriority=a,o.callbackNode=f}}function Tm(o,a){if(Hl=-1,Vl=0,dt&6)throw Error(l(327));var f=o.callbackNode;if(Wr()&&o.callbackNode!==f)return null;var g=il(o,o===Jt?pn:0);if(g===0)return null;if(g&30||g&o.expiredLanes||a)a=Wl(o,g);else{a=g;var S=dt;dt|=2;var A=Pm();(Jt!==o||pn!==a)&&(Os(),Vr(o,a));do try{ax();break}catch(V){Rm(o,V)}while(!0);zu(),Ol.current=A,dt=S,Kt!==null?a=0:(Jt=null,pn=0,a=tn)}if(a!==0){if(a===2&&(S=Pu(o),S!==0&&(g=S,a=Th(o,S))),a===1)throw f=Xo,Vr(o,0),vr(o,g),Fn(o,on()),f;if(a===6)vr(o,g);else{if(S=o.current.alternate,!(g&30)&&!sx(S)&&(a=Wl(o,g),a===2&&(A=Pu(o),A!==0&&(g=A,a=Th(o,A))),a===1))throw f=Xo,Vr(o,0),vr(o,g),Fn(o,on()),f;switch(o.finishedWork=S,o.finishedLanes=g,a){case 0:case 1:throw Error(l(345));case 2:Gr(o,On);break;case 3:if(vr(o,g),(g&130023424)===g&&(a=Mh+500-on(),10<a)){if(il(o,0)!==0)break;if(S=o.suspendedLanes,(S&g)!==g){Cn(),o.pingedLanes|=o.suspendedLanes&S;break}o.timeoutHandle=ye(Gr.bind(null,o,On),a);break}Gr(o,On);break;case 4:if(vr(o,g),(g&4194240)===g)break;for(a=o.eventTimes,S=-1;0<g;){var O=31-Un(g);A=1<<O,O=a[O],O>S&&(S=O),g&=~A}if(g=S,g=on()-g,g=(120>g?120:480>g?480:1080>g?1080:1920>g?1920:3e3>g?3e3:4320>g?4320:1960*rx(g/1960))-g,10<g){o.timeoutHandle=ye(Gr.bind(null,o,On),g);break}Gr(o,On);break;case 5:Gr(o,On);break;default:throw Error(l(329))}}}return Fn(o,on()),o.callbackNode===f?Tm.bind(null,o):null}function Th(o,a){var f=qo;return o.current.memoizedState.isDehydrated&&(Vr(o,a).flags|=256),o=Wl(o,a),o!==2&&(a=On,On=f,a!==null&&bh(a)),o}function bh(o){On===null?On=o:On.push.apply(On,o)}function sx(o){for(var a=o;;){if(a.flags&16384){var f=a.updateQueue;if(f!==null&&(f=f.stores,f!==null))for(var g=0;g<f.length;g++){var S=f[g],A=S.getSnapshot;S=S.value;try{if(!Ri(A(),S))return!1}catch{return!1}}}if(f=a.child,a.subtreeFlags&16384&&f!==null)f.return=a,a=f;else{if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return!0;a=a.return}a.sibling.return=a.return,a=a.sibling}}return!0}function vr(o,a){for(a&=~Sh,a&=~Fl,o.suspendedLanes|=a,o.pingedLanes&=~a,o=o.expirationTimes;0<a;){var f=31-Un(a),g=1<<f;o[f]=-1,a&=~g}}function bm(o){if(dt&6)throw Error(l(327));Wr();var a=il(o,0);if(!(a&1))return Fn(o,on()),null;var f=Wl(o,a);if(o.tag!==0&&f===2){var g=Pu(o);g!==0&&(a=g,f=Th(o,g))}if(f===1)throw f=Xo,Vr(o,0),vr(o,a),Fn(o,on()),f;if(f===6)throw Error(l(345));return o.finishedWork=o.current.alternate,o.finishedLanes=a,Gr(o,On),Fn(o,on()),null}function Cm(o){mr!==null&&mr.tag===0&&!(dt&6)&&Wr();var a=dt;dt|=1;var f=jt.transition,g=xt;try{if(jt.transition=null,xt=1,o)return o()}finally{xt=g,jt.transition=f,dt=a,!(dt&6)&&Pi()}}function Ch(){Jn=Ds.current,De(Ds)}function Vr(o,a){o.finishedWork=null,o.finishedLanes=0;var f=o.timeoutHandle;if(f!==st&&(o.timeoutHandle=st,et(f)),Kt!==null)for(f=Kt.return;f!==null;){var g=f;switch(Xu(g),g.tag){case 1:g=g.type.childContextTypes,g!=null&&qn();break;case 3:Ls(),De(dn),De(Bt),Qu();break;case 5:Ju(g);break;case 4:Ls();break;case 13:De(Ht);break;case 19:De(Ht);break;case 10:Bu(g.type._context);break;case 22:case 23:Ch()}f=f.return}if(Jt=o,Kt=o=_r(o.current,null),pn=Jn=a,tn=0,Xo=null,Sh=Fl=Us=0,On=qo=null,Ii!==null){for(a=0;a<Ii.length;a++)if(f=Ii[a],g=f.interleaved,g!==null){f.interleaved=null;var S=g.next,A=f.pending;if(A!==null){var O=A.next;A.next=S,g.next=O}f.pending=g}Ii=null}return o}function Rm(o,a){do{var f=Kt;try{if(zu(),gl.current=Ml,vl){for(var g=Xt.memoizedState;g!==null;){var S=g.queue;S!==null&&(S.pending=null),g=g.next}vl=!1}if(Ns=0,an=vn=Xt=null,Oo=!1,Fo=0,xh.current=null,f===null||f.return===null){tn=1,Xo=a,Kt=null;break}e:{var A=o,O=f.return,V=f,ie=a;if(a=pn,V.flags|=32768,ie!==null&&typeof ie=="object"&&typeof ie.then=="function"){var ge=ie,Ue=V,ot=Ue.tag;if(!(Ue.mode&1)&&(ot===0||ot===11||ot===15)){var je=Ue.alternate;je?(Ue.updateQueue=je.updateQueue,Ue.memoizedState=je.memoizedState,Ue.lanes=je.lanes):(Ue.updateQueue=null,Ue.memoizedState=null)}var Nt=Jp(O);if(Nt!==null){Nt.flags&=-257,Kp(Nt,O,V,A,a),Nt.mode&1&&Zp(A,ge,a),a=Nt,ie=ge;var We=a.updateQueue;if(We===null){var xn=new Set;xn.add(ie),a.updateQueue=xn}else We.add(ie);break e}else{if(!(a&1)){Zp(A,ge,a),Rh();break e}ie=Error(l(426))}}else if(kt&&V.mode&1){var ui=Jp(O);if(ui!==null){!(ui.flags&65536)&&(ui.flags|=256),Kp(ui,O,V,A,a),ju(ie);break e}}A=ie,tn!==4&&(tn=2),qo===null?qo=[A]:qo.push(A),ie=sh(ie,V),V=O;do{switch(V.tag){case 3:V.flags|=65536,a&=-a,V.lanes|=a;var j=Yp(V,ie,a);mp(V,j);break e;case 1:A=ie;var G=V.type,te=V.stateNode;if(!(V.flags&128)&&(typeof G.getDerivedStateFromError=="function"||te!==null&&typeof te.componentDidCatch=="function"&&(pr===null||!pr.has(te)))){V.flags|=65536,a&=-a,V.lanes|=a;var Pe=jp(V,A,a);mp(V,Pe);break e}}V=V.return}while(V!==null)}Lm(f)}catch(ke){a=ke,Kt===f&&f!==null&&(Kt=f=f.return);continue}break}while(!0)}function Pm(){var o=Ol.current;return Ol.current=Ml,o===null?Ml:o}function Rh(){(tn===0||tn===3||tn===2)&&(tn=4),Jt===null||!(Us&268435455)&&!(Fl&268435455)||vr(Jt,pn)}function Wl(o,a){var f=dt;dt|=2;var g=Pm();Jt===o&&pn===a||Vr(o,a);do try{ox();break}catch(S){Rm(o,S)}while(!0);if(zu(),dt=f,Ol.current=g,Kt!==null)throw Error(l(261));return Jt=null,pn=0,tn}function ox(){for(;Kt!==null;)Im(Kt)}function ax(){for(;Kt!==null&&!Ny();)Im(Kt)}function Im(o){var a=Um(o.alternate,o,Jn);o.memoizedProps=o.pendingProps,a===null?Lm(o):Kt=a,xh.current=null}function Lm(o){var a=o;do{var f=a.alternate;if(o=a.return,a.flags&32768){if(f=$y(f,a),f!==null){f.flags&=32767,Kt=f;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{tn=6,Kt=null;return}}else if(f=Jy(f,a,Jn),f!==null){Kt=f;return}if(a=a.sibling,a!==null){Kt=a;return}Kt=a=o}while(a!==null);tn===0&&(tn=5)}function Gr(o,a){var f=xt,g=jt.transition;try{jt.transition=null,xt=1,lx(o,a,f)}finally{jt.transition=g,xt=f}return null}function lx(o,a,f){do Wr();while(mr!==null);if(dt&6)throw Error(l(327));var g=o.finishedWork,S=o.finishedLanes;if(g===null)return null;if(o.finishedWork=null,o.finishedLanes=0,g===o.current)throw Error(l(177));o.callbackNode=null,o.callbackPriority=0;var A=g.lanes|g.childLanes;if(Ly(o,A),o===Jt&&(Kt=Jt=null,pn=0),!(g.subtreeFlags&2064)&&!(g.flags&2064)||Bl||(Bl=!0,Om(Uu,function(){return Wr(),null})),A=(g.flags&15990)!==0,g.subtreeFlags&15990||A){A=jt.transition,jt.transition=null;var O=xt;xt=1;var V=dt;dt|=4,xh.current=null,tx(o,g),nx(o,g),J(o.containerInfo),o.current=g,ix(g),Dy(),dt=V,xt=O,jt.transition=A}else o.current=g;if(Bl&&(Bl=!1,mr=o,kl=S),A=o.pendingLanes,A===0&&(pr=null),Fy(g.stateNode),Fn(o,on()),a!==null)for(f=o.onRecoverableError,g=0;g<a.length;g++)f(a[g]);if(zl)throw zl=!1,o=Eh,Eh=null,o;return kl&1&&o.tag!==0&&Wr(),A=o.pendingLanes,A&1?o===Ah?Yo++:(Yo=0,Ah=o):Yo=0,Pi(),null}function Wr(){if(mr!==null){var o=up(kl),a=jt.transition,f=xt;try{if(jt.transition=null,xt=16>o?16:o,mr===null)var g=!1;else{if(o=mr,mr=null,kl=0,dt&6)throw Error(l(331));var S=dt;for(dt|=4,be=o.current;be!==null;){var A=be,O=A.child;if(be.flags&16){var V=A.deletions;if(V!==null){for(var ie=0;ie<V.length;ie++){var ge=V[ie];for(be=ge;be!==null;){var Ue=be;switch(Ue.tag){case 0:case 11:case 15:Hr(8,Ue,A)}var ot=Ue.child;if(ot!==null)ot.return=Ue,be=ot;else for(;be!==null;){Ue=be;var je=Ue.sibling,Nt=Ue.return;if(gm(Ue),Ue===ge){be=null;break}if(je!==null){je.return=Nt,be=je;break}be=Nt}}}var We=A.alternate;if(We!==null){var xn=We.child;if(xn!==null){We.child=null;do{var ui=xn.sibling;xn.sibling=null,xn=ui}while(xn!==null)}}be=A}}if(A.subtreeFlags&2064&&O!==null)O.return=A,be=O;else e:for(;be!==null;){if(A=be,A.flags&2048)switch(A.tag){case 0:case 11:case 15:Hr(9,A,A.return)}var j=A.sibling;if(j!==null){j.return=A.return,be=j;break e}be=A.return}}var G=o.current;for(be=G;be!==null;){O=be;var te=O.child;if(O.subtreeFlags&2064&&te!==null)te.return=O,be=te;else e:for(O=G;be!==null;){if(V=be,V.flags&2048)try{switch(V.tag){case 0:case 11:case 15:Go(9,V)}}catch(ke){zn(V,V.return,ke)}if(V===O){be=null;break e}var Pe=V.sibling;if(Pe!==null){Pe.return=V.return,be=Pe;break e}be=V.return}}if(dt=S,Pi(),Ci&&typeof Ci.onPostCommitFiberRoot=="function")try{Ci.onPostCommitFiberRoot(rl,o)}catch{}g=!0}return g}finally{xt=f,jt.transition=a}}return!1}function Nm(o,a,f){a=sh(f,a),a=Yp(o,a,1),dr(o,a),a=Cn(),o=Gl(o,1),o!==null&&(Po(o,1,a),Fn(o,a))}function zn(o,a,f){if(o.tag===3)Nm(o,o,f);else for(;a!==null;){if(a.tag===3){Nm(a,o,f);break}else if(a.tag===1){var g=a.stateNode;if(typeof a.type.getDerivedStateFromError=="function"||typeof g.componentDidCatch=="function"&&(pr===null||!pr.has(g))){o=sh(f,o),o=jp(a,o,1),dr(a,o),o=Cn(),a=Gl(a,1),a!==null&&(Po(a,1,o),Fn(a,o));break}}a=a.return}}function cx(o,a,f){var g=o.pingCache;g!==null&&g.delete(a),a=Cn(),o.pingedLanes|=o.suspendedLanes&f,Jt===o&&(pn&f)===f&&(tn===4||tn===3&&(pn&130023424)===pn&&500>on()-Mh?Vr(o,0):Sh|=f),Fn(o,a)}function Dm(o,a){a===0&&(o.mode&1?(a=nl,nl<<=1,!(nl&130023424)&&(nl=4194304)):a=1);var f=Cn();o=Gl(o,a),o!==null&&(Po(o,a,f),Fn(o,f))}function ux(o){var a=o.memoizedState,f=0;a!==null&&(f=a.retryLane),Dm(o,f)}function hx(o,a){var f=0;switch(o.tag){case 13:var g=o.stateNode,S=o.memoizedState;S!==null&&(f=S.retryLane);break;case 19:g=o.stateNode;break;default:throw Error(l(314))}g!==null&&g.delete(a),Dm(o,f)}var Um;Um=function(o,a,f){if(o!==null)if(o.memoizedProps!==a.pendingProps||dn.current)Zn=!0;else{if(!(o.lanes&f)&&!(a.flags&128))return Zn=!1,Qy(o,a,f);Zn=!!(o.flags&131072)}else Zn=!1,kt&&a.flags&1048576&&Sp(a,dl,a.index);switch(a.lanes=0,a.tag){case 2:var g=a.type;o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps;var S=bi(a,Bt.current);Ts(a,f),S=eh(null,a,g,o,S,f);var A=th();return a.flags|=1,typeof S=="object"&&S!==null&&typeof S.render=="function"&&S.$$typeof===void 0?(a.tag=1,a.memoizedState=null,a.updateQueue=null,At(g)?(A=!0,hr(a)):A=!1,a.memoizedState=S.state!==null&&S.state!==void 0?S.state:null,Hu(a),S.updater=hl,a.stateNode=S,S._reactInternals=a,Gu(a,g,o,f),a=lh(null,a,g,!0,A,f)):(a.tag=0,kt&&A&&Wu(a),bn(null,a,S,f),a=a.child),a;case 16:g=a.elementType;e:{switch(o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps,S=g._init,g=S(g._payload),a.type=g,S=a.tag=dx(g),o=mi(g,o),S){case 0:a=ah(null,a,g,o,f);break e;case 1:a=sm(null,a,g,o,f);break e;case 11:a=em(null,a,g,o,f);break e;case 14:a=tm(null,a,g,mi(g.type,o),f);break e}throw Error(l(306,g,""))}return a;case 0:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:mi(g,S),ah(o,a,g,S,f);case 1:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:mi(g,S),sm(o,a,g,S,f);case 3:e:{if(om(a),o===null)throw Error(l(387));g=a.pendingProps,A=a.memoizedState,S=A.element,pp(o,a),ul(a,g,null,f);var O=a.memoizedState;if(g=O.element,oe&&A.isDehydrated)if(A={element:g,isDehydrated:!1,cache:O.cache,transitions:O.transitions},a.updateQueue.baseState=A,a.memoizedState=A,a.flags&256){S=Error(l(423)),a=am(o,a,g,f,S);break e}else if(g!==S){S=Error(l(424)),a=am(o,a,g,f,S);break e}else for(oe&&(jn=$a(a.stateNode.containerInfo),Yn=a,kt=!0,gi=null,Io=!1),f=bp(a,null,g,f),a.child=f;f;)f.flags=f.flags&-3|4096,f=f.sibling;else{if(Rs(),g===S){a=ji(o,a,f);break e}bn(o,a,g,f)}a=a.child}return a;case 5:return Cp(a),o===null&&Yu(a),g=a.type,S=a.pendingProps,A=o!==null?o.memoizedProps:null,O=S.children,pe(g,S)?O=null:A!==null&&pe(g,A)&&(a.flags|=32),rm(o,a),bn(o,a,O,f),a.child;case 6:return o===null&&Yu(a),null;case 13:return lm(o,a,f);case 4:return Zu(a,a.stateNode.containerInfo),g=a.pendingProps,o===null?a.child=Ps(a,null,g,f):bn(o,a,g,f),a.child;case 11:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:mi(g,S),em(o,a,g,S,f);case 7:return bn(o,a,a.pendingProps,f),a.child;case 8:return bn(o,a,a.pendingProps.children,f),a.child;case 12:return bn(o,a,a.pendingProps.children,f),a.child;case 10:e:{if(g=a.type._context,S=a.pendingProps,A=a.memoizedProps,O=S.value,dp(a,g,O),A!==null)if(Ri(A.value,O)){if(A.children===S.children&&!dn.current){a=ji(o,a,f);break e}}else for(A=a.child,A!==null&&(A.return=a);A!==null;){var V=A.dependencies;if(V!==null){O=A.child;for(var ie=V.firstContext;ie!==null;){if(ie.context===g){if(A.tag===1){ie=Wi(-1,f&-f),ie.tag=2;var ge=A.updateQueue;if(ge!==null){ge=ge.shared;var Ue=ge.pending;Ue===null?ie.next=ie:(ie.next=Ue.next,Ue.next=ie),ge.pending=ie}}A.lanes|=f,ie=A.alternate,ie!==null&&(ie.lanes|=f),ku(A.return,f,a),V.lanes|=f;break}ie=ie.next}}else if(A.tag===10)O=A.type===a.type?null:A.child;else if(A.tag===18){if(O=A.return,O===null)throw Error(l(341));O.lanes|=f,V=O.alternate,V!==null&&(V.lanes|=f),ku(O,f,a),O=A.sibling}else O=A.child;if(O!==null)O.return=A;else for(O=A;O!==null;){if(O===a){O=null;break}if(A=O.sibling,A!==null){A.return=O.return,O=A;break}O=O.return}A=O}bn(o,a,S.children,f),a=a.child}return a;case 9:return S=a.type,g=a.pendingProps.children,Ts(a,f),S=ii(S),g=g(S),a.flags|=1,bn(o,a,g,f),a.child;case 14:return g=a.type,S=mi(g,a.pendingProps),S=mi(g.type,S),tm(o,a,g,S,f);case 15:return nm(o,a,a.type,a.pendingProps,f);case 17:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:mi(g,S),o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),a.tag=1,At(g)?(o=!0,hr(a)):o=!1,Ts(a,f),yp(a,g,S),Gu(a,g,S,f),lh(null,a,g,!0,o,f);case 19:return fm(o,a,f);case 22:return im(o,a,f)}throw Error(l(156,a.tag))};function Om(o,a){return Nu(o,a)}function fx(o,a,f,g){this.tag=o,this.key=f,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=a,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=g,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function ci(o,a,f,g){return new fx(o,a,f,g)}function Ph(o){return o=o.prototype,!(!o||!o.isReactComponent)}function dx(o){if(typeof o=="function")return Ph(o)?1:0;if(o!=null){if(o=o.$$typeof,o===M)return 11;if(o===E)return 14}return 2}function _r(o,a){var f=o.alternate;return f===null?(f=ci(o.tag,a,o.key,o.mode),f.elementType=o.elementType,f.type=o.type,f.stateNode=o.stateNode,f.alternate=o,o.alternate=f):(f.pendingProps=a,f.type=o.type,f.flags=0,f.subtreeFlags=0,f.deletions=null),f.flags=o.flags&14680064,f.childLanes=o.childLanes,f.lanes=o.lanes,f.child=o.child,f.memoizedProps=o.memoizedProps,f.memoizedState=o.memoizedState,f.updateQueue=o.updateQueue,a=o.dependencies,f.dependencies=a===null?null:{lanes:a.lanes,firstContext:a.firstContext},f.sibling=o.sibling,f.index=o.index,f.ref=o.ref,f}function Xl(o,a,f,g,S,A){var O=2;if(g=o,typeof o=="function")Ph(o)&&(O=1);else if(typeof o=="string")O=5;else e:switch(o){case d:return Xr(f.children,S,A,a);case p:O=8,S|=8;break;case m:return o=ci(12,f,a,S|2),o.elementType=m,o.lanes=A,o;case x:return o=ci(13,f,a,S),o.elementType=x,o.lanes=A,o;case _:return o=ci(19,f,a,S),o.elementType=_,o.lanes=A,o;case T:return ql(f,S,A,a);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case v:O=10;break e;case y:O=9;break e;case M:O=11;break e;case E:O=14;break e;case w:O=16,g=null;break e}throw Error(l(130,o==null?o:typeof o,""))}return a=ci(O,f,a,S),a.elementType=o,a.type=g,a.lanes=A,a}function Xr(o,a,f,g){return o=ci(7,o,g,a),o.lanes=f,o}function ql(o,a,f,g){return o=ci(22,o,g,a),o.elementType=T,o.lanes=f,o.stateNode={},o}function Ih(o,a,f){return o=ci(6,o,null,a),o.lanes=f,o}function Lh(o,a,f){return a=ci(4,o.children!==null?o.children:[],o.key,a),a.lanes=f,a.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},a}function px(o,a,f,g,S){this.tag=a,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=st,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Iu(0),this.expirationTimes=Iu(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Iu(0),this.identifierPrefix=g,this.onRecoverableError=S,oe&&(this.mutableSourceEagerHydrationData=null)}function Fm(o,a,f,g,S,A,O,V,ie){return o=new px(o,a,f,V,ie),a===1?(a=1,A===!0&&(a|=8)):a=0,A=ci(3,null,null,a),o.current=A,A.stateNode=o,A.memoizedState={element:g,isDehydrated:f,cache:null,transitions:null},Hu(A),o}function zm(o){if(!o)return gt;o=o._reactInternals;e:{if(R(o)!==o||o.tag!==1)throw Error(l(170));var a=o;do{switch(a.tag){case 3:a=a.stateNode.context;break e;case 1:if(At(a.type)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break e}}a=a.return}while(a!==null);throw Error(l(171))}if(o.tag===1){var f=o.type;if(At(f))return Tn(o,f,a)}return a}function Bm(o){var a=o._reactInternals;if(a===void 0)throw typeof o.render=="function"?Error(l(188)):(o=Object.keys(o).join(","),Error(l(268,o)));return o=q(a),o===null?null:o.stateNode}function km(o,a){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var f=o.retryLane;o.retryLane=f!==0&&f<a?f:a}}function Nh(o,a){km(o,a),(o=o.alternate)&&km(o,a)}function mx(o){return o=q(o),o===null?null:o.stateNode}function gx(){return null}return t.attemptContinuousHydration=function(o){if(o.tag===13){var a=Cn();li(o,134217728,a),Nh(o,134217728)}},t.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var a=Cn(),f=gr(o);li(o,f,a),Nh(o,f)}},t.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var a=o.stateNode;if(a.current.memoizedState.isDehydrated){var f=Ro(a.pendingLanes);f!==0&&(Lu(a,f|1),Fn(a,on()),!(dt&6)&&(Os(),Pi()))}break;case 13:var g=Cn();Cm(function(){return li(o,1,g)}),Nh(o,1)}},t.batchedUpdates=function(o,a){var f=dt;dt|=1;try{return o(a)}finally{dt=f,dt===0&&(Os(),sl&&Pi())}},t.createComponentSelector=function(o){return{$$typeof:Il,value:o}},t.createContainer=function(o,a,f,g,S,A,O){return Fm(o,a,!1,null,f,g,S,A,O)},t.createHasPseudoClassSelector=function(o){return{$$typeof:Ll,value:o}},t.createHydrationContainer=function(o,a,f,g,S,A,O,V,ie){return o=Fm(f,g,!0,o,S,A,O,V,ie),o.context=zm(null),f=o.current,g=Cn(),S=gr(f),A=Wi(g,S),A.callback=a??null,dr(f,A),o.current.lanes=S,Po(o,S,g),Fn(o,g),o},t.createPortal=function(o,a,f){var g=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:g==null?null:""+g,children:o,containerInfo:a,implementation:f}},t.createRoleSelector=function(o){return{$$typeof:Nl,value:o}},t.createTestNameSelector=function(o){return{$$typeof:Dl,value:o}},t.createTextSelector=function(o){return{$$typeof:Ul,value:o}},t.deferredUpdates=function(o){var a=xt,f=jt.transition;try{return jt.transition=null,xt=16,o()}finally{xt=a,jt.transition=f}},t.discreteUpdates=function(o,a,f,g,S){var A=xt,O=jt.transition;try{return jt.transition=null,xt=1,o(a,f,g,S)}finally{xt=A,jt.transition=O,dt===0&&Os()}},t.findAllNodes=yh,t.findBoundingRects=function(o,a){if(!re)throw Error(l(363));a=yh(o,a),o=[];for(var f=0;f<a.length;f++)o.push(fe(a[f]));for(a=o.length-1;0<a;a--){f=o[a];for(var g=f.x,S=g+f.width,A=f.y,O=A+f.height,V=a-1;0<=V;V--)if(a!==V){var ie=o[V],ge=ie.x,Ue=ge+ie.width,ot=ie.y,je=ot+ie.height;if(g>=ge&&A>=ot&&S<=Ue&&O<=je){o.splice(a,1);break}else if(g!==ge||f.width!==ie.width||je<A||ot>O){if(!(A!==ot||f.height!==ie.height||Ue<g||ge>S)){ge>g&&(ie.width+=ge-g,ie.x=g),Ue<S&&(ie.width=S-ge),o.splice(a,1);break}}else{ot>A&&(ie.height+=ot-A,ie.y=A),je<O&&(ie.height=O-ot),o.splice(a,1);break}}}return o},t.findHostInstance=Bm,t.findHostInstanceWithNoPortals=function(o){return o=F(o),o=o!==null?Z(o):null,o===null?null:o.stateNode},t.findHostInstanceWithWarning=function(o){return Bm(o)},t.flushControlled=function(o){var a=dt;dt|=1;var f=jt.transition,g=xt;try{jt.transition=null,xt=1,o()}finally{xt=g,jt.transition=f,dt=a,dt===0&&(Os(),Pi())}},t.flushPassiveEffects=Wr,t.flushSync=Cm,t.focusWithin=function(o,a){if(!re)throw Error(l(363));for(o=gh(o),a=Am(o,a),a=Array.from(a),o=0;o<a.length;){var f=a[o++];if(!de(f)){if(f.tag===5&&Ze(f.stateNode))return!0;for(f=f.child;f!==null;)a.push(f),f=f.sibling}}return!1},t.getCurrentUpdatePriority=function(){return xt},t.getFindAllNodesFailureDescription=function(o,a){if(!re)throw Error(l(363));var f=0,g=[];o=[gh(o),0];for(var S=0;S<o.length;){var A=o[S++],O=o[S++],V=a[O];if((A.tag!==5||!de(A))&&(vh(A,V)&&(g.push(_h(V)),O++,O>f&&(f=O)),O<a.length))for(A=A.child;A!==null;)o.push(A,O),A=A.sibling}if(f<a.length){for(o=[];f<a.length;f++)o.push(_h(a[f]));return`findAllNodes was able to match part of the selector:
  `+(g.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},t.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return ae(o.child.stateNode);default:return o.child.stateNode}},t.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:mx,findFiberByHostInstance:o.findFiberByHostInstance||gx,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")o=!1;else{var a=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(a.isDisabled||!a.supportsFiber)o=!0;else{try{rl=a.inject(o),Ci=a}catch{}o=!!a.checkDCE}}return o},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(o,a,f,g){if(!re)throw Error(l(363));o=yh(o,a);var S=Me(o,f,g).disconnect;return{disconnect:function(){S()}}},t.registerMutableSourceForHydration=function(o,a){var f=a._getVersion;f=f(a._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[a,f]:o.mutableSourceEagerHydrationData.push(a,f)},t.runWithPriority=function(o,a){var f=xt;try{return xt=o,a()}finally{xt=f}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(o,a,f,g){var S=a.current,A=Cn(),O=gr(S);return f=zm(f),a.context===null?a.context=f:a.pendingContext=f,a=Wi(A,O),a.payload={element:o},g=g===void 0?null:g,g!==null&&(a.callback=g),dr(S,a),o=li(S,O,A),o!==null&&cl(o,S,O),O},t};sy.exports=Cb;var Rb=sy.exports;const Pb=F0(Rb),Ib=r=>typeof r=="object"&&typeof r.then=="function",hs=[];function ly(r,e,t=(n,i)=>n===i){if(r===e)return!0;if(!r||!e)return!1;const n=r.length;if(e.length!==n)return!1;for(let i=0;i<n;i++)if(!t(r[i],e[i]))return!1;return!0}function cy(r,e=null,t=!1,n={}){e===null&&(e=[r]);for(const s of hs)if(ly(e,s.keys,s.equal)){if(t)return;if(Object.prototype.hasOwnProperty.call(s,"error"))throw s.error;if(Object.prototype.hasOwnProperty.call(s,"response"))return n.lifespan&&n.lifespan>0&&(s.timeout&&clearTimeout(s.timeout),s.timeout=setTimeout(s.remove,n.lifespan)),s.response;if(!t)throw s.promise}const i={keys:e,equal:n.equal,remove:()=>{const s=hs.indexOf(i);s!==-1&&hs.splice(s,1)},promise:(Ib(r)?r:r(...e)).then(s=>{i.response=s,n.lifespan&&n.lifespan>0&&(i.timeout=setTimeout(i.remove,n.lifespan))}).catch(s=>i.error=s)};if(hs.push(i),!t)throw i.promise}const Lb=(r,e,t)=>cy(r,e,!1,t),Nb=(r,e,t)=>void cy(r,e,!0,t),Db=r=>{if(r===void 0||r.length===0)hs.splice(0,hs.length);else{const e=hs.find(t=>ly(r,t.keys,t.equal));e&&e.remove()}},ap={},Ub=r=>void Object.assign(ap,r);function Ob(r,e){function t(d,{args:p=[],attach:m,...v},y){let M=`${d[0].toUpperCase()}${d.slice(1)}`,x;if(d==="primitive"){if(v.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const _=v.object;x=ao(_,{type:d,root:y,attach:m,primitive:!0})}else{const _=ap[M];if(!_)throw new Error(`R3F: ${M} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");x=ao(new _(...p),{type:d,root:y,attach:m,memoizedProps:{args:p}})}return x.__r3f.attach===void 0&&(x instanceof ht?x.__r3f.attach="geometry":x instanceof mn&&(x.__r3f.attach="material")),M!=="inject"&&Mf(x,v),x}function n(d,p){let m=!1;if(p){var v,y;(v=p.__r3f)!=null&&v.attach?Sf(d,p,p.__r3f.attach):p.isObject3D&&d.isObject3D&&(d.add(p),m=!0),m||(y=d.__r3f)==null||y.objects.push(p),p.__r3f||ao(p,{}),p.__r3f.parent=d,_d(p),lo(p)}}function i(d,p,m){let v=!1;if(p){var y,M;if((y=p.__r3f)!=null&&y.attach)Sf(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){p.parent=d,p.dispatchEvent({type:"added"}),d.dispatchEvent({type:"childadded",child:p});const x=d.children.filter(E=>E!==p),_=x.indexOf(m);d.children=[...x.slice(0,_),p,...x.slice(_)],v=!0}v||(M=d.__r3f)==null||M.objects.push(p),p.__r3f||ao(p,{}),p.__r3f.parent=d,_d(p),lo(p)}}function s(d,p,m=!1){d&&[...d].forEach(v=>l(p,v,m))}function l(d,p,m){if(p){var v,y,M;if(p.__r3f&&(p.__r3f.parent=null),(v=d.__r3f)!=null&&v.objects&&(d.__r3f.objects=d.__r3f.objects.filter(T=>T!==p)),(y=p.__r3f)!=null&&y.attach)T0(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){var x;d.remove(p),(x=p.__r3f)!=null&&x.root&&Xb(Yc(p),p)}const E=(M=p.__r3f)==null?void 0:M.primitive,w=!E&&(m===void 0?p.dispose!==null:m);if(!E){var _;s((_=p.__r3f)==null?void 0:_.objects,p,w),s(p.children,p,w)}if(delete p.__r3f,w&&p.dispose&&p.type!=="Scene"){const T=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?gd.unstable_scheduleCallback(gd.unstable_IdlePriority,T):T()}lo(d)}}function c(d,p,m,v){var y;const M=(y=d.__r3f)==null?void 0:y.parent;if(!M)return;const x=t(p,m,d.__r3f.root);if(d.children){for(const _ of d.children)_.__r3f&&n(x,_);d.children=d.children.filter(_=>!_.__r3f)}d.__r3f.objects.forEach(_=>n(x,_)),d.__r3f.objects=[],d.__r3f.autoRemovedBeforeAppend||l(M,d),x.parent&&(x.__r3f.autoRemovedBeforeAppend=!0),n(M,x),x.raycast&&x.__r3f.eventCount&&Yc(x).getState().internal.interaction.push(x),[v,v.alternate].forEach(_=>{_!==null&&(_.stateNode=x,_.ref&&(typeof _.ref=="function"?_.ref(x):_.ref.current=x))})}const u=()=>console.warn("Text is not allowed in the R3F tree! This could be stray whitespace or characters.");return{reconciler:Pb({createInstance:t,removeChild:l,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(d,p)=>{if(!p)return;const m=d.getState().scene;m.__r3f&&(m.__r3f.root=d,n(m,p))},removeChildFromContainer:(d,p)=>{p&&l(d.getState().scene,p)},insertInContainerBefore:(d,p,m)=>{if(!p||!m)return;const v=d.getState().scene;v.__r3f&&i(v,p,m)},getRootHostContext:()=>null,getChildHostContext:d=>d,finalizeInitialChildren(d){var p;return!!((p=d==null?void 0:d.__r3f)!=null?p:{}).handlers},prepareUpdate(d,p,m,v){var y;if(((y=d==null?void 0:d.__r3f)!=null?y:{}).primitive&&v.object&&v.object!==d)return[!0];{const{args:x=[],children:_,...E}=v,{args:w=[],children:T,...U}=m;if(!Array.isArray(x))throw new Error("R3F: the args prop must be an array!");if(x.some((L,z)=>L!==w[z]))return[!0];const P=gy(d,E,U,!0);return P.changes.length?[!1,P]:null}},commitUpdate(d,[p,m],v,y,M,x){p?c(d,v,M,x):Mf(d,m)},commitMount(d,p,m,v){var y;const M=(y=d.__r3f)!=null?y:{};d.raycast&&M.handlers&&M.eventCount&&Yc(d).getState().internal.interaction.push(d)},getPublicInstance:d=>d,prepareForCommit:()=>null,preparePortalMount:d=>ao(d.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(d){var p;const{attach:m,parent:v}=(p=d.__r3f)!=null?p:{};m&&v&&T0(v,d,m),d.isObject3D&&(d.visible=!1),lo(d)},unhideInstance(d,p){var m;const{attach:v,parent:y}=(m=d.__r3f)!=null?m:{};v&&y&&Sf(y,d,v),(d.isObject3D&&p.visible==null||p.visible)&&(d.visible=!0),lo(d)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():mo.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&zt.fun(performance.now)?performance.now:zt.fun(Date.now)?Date.now:()=>0,scheduleTimeout:zt.fun(setTimeout)?setTimeout:void 0,cancelTimeout:zt.fun(clearTimeout)?clearTimeout:void 0}),applyProps:Mf}}var M0,w0;const xf=r=>"colorSpace"in r||"outputColorSpace"in r,uy=()=>{var r;return(r=ap.ColorManagement)!=null?r:null},hy=r=>r&&r.isOrthographicCamera,Fb=r=>r&&r.hasOwnProperty("current"),Ya=typeof window<"u"&&((M0=window.document)!=null&&M0.createElement||((w0=window.navigator)==null?void 0:w0.product)==="ReactNative")?Te.useLayoutEffect:Te.useEffect;function fy(r){const e=Te.useRef(r);return Ya(()=>void(e.current=r),[r]),e}function zb({set:r}){return Ya(()=>(r(new Promise(()=>null)),()=>r(!1)),[r]),null}class dy extends Te.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}dy.getDerivedStateFromError=()=>({error:!0});const py="__default",E0=new Map,Bb=r=>r&&!!r.memoized&&!!r.changes;function my(r){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(r)?Math.min(Math.max(r[0],t),r[1]):r}const sa=r=>{var e;return(e=r.__r3f)==null?void 0:e.root.getState()};function Yc(r){let e=r.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const zt={obj:r=>r===Object(r)&&!zt.arr(r)&&typeof r!="function",fun:r=>typeof r=="function",str:r=>typeof r=="string",num:r=>typeof r=="number",boo:r=>typeof r=="boolean",und:r=>r===void 0,arr:r=>Array.isArray(r),equ(r,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof r!=typeof e||!!r!=!!e)return!1;if(zt.str(r)||zt.num(r))return r===e;const s=zt.obj(r);if(s&&n==="reference")return r===e;const l=zt.arr(r);if(l&&t==="reference")return r===e;if((l||s)&&r===e)return!0;let c;for(c in r)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in i?e:r)if(!zt.equ(r[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:r)if(r[c]!==e[c])return!1;if(zt.und(c)){if(l&&r.length===0&&e.length===0||s&&Object.keys(r).length===0&&Object.keys(e).length===0)return!0;if(r!==e)return!1}return!0}};function kb(r){const e={nodes:{},materials:{}};return r&&r.traverse(t=>{t.name&&(e.nodes[t.name]=t),t.material&&!e.materials[t.material.name]&&(e.materials[t.material.name]=t.material)}),e}function Hb(r){r.dispose&&r.type!=="Scene"&&r.dispose();for(const e in r)e.dispose==null||e.dispose(),delete r[e]}function ao(r,e){const t=r;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},r}function vd(r,e){let t=r;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((s,l)=>s[l],r),{target:t,key:i}}else return{target:t,key:e}}const A0=/-\d+$/;function Sf(r,e,t){if(zt.str(t)){if(A0.test(t)){const s=t.replace(A0,""),{target:l,key:c}=vd(r,s);Array.isArray(l[c])||(l[c]=[])}const{target:n,key:i}=vd(r,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(r,e)}function T0(r,e,t){var n,i;if(zt.str(t)){const{target:s,key:l}=vd(r,t),c=e.__r3f.previousAttach;c===void 0?delete s[l]:s[l]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(r,e);(i=e.__r3f)==null||delete i.previousAttach}function gy(r,{children:e,key:t,ref:n,...i},{children:s,key:l,ref:c,...u}={},h=!1){var d;const p=(d=r==null?void 0:r.__r3f)!=null?d:{},m=Object.entries(i),v=[];if(h){const M=Object.keys(u);for(let x=0;x<M.length;x++)i.hasOwnProperty(M[x])||m.unshift([M[x],py+"remove"])}m.forEach(([M,x])=>{var _;if((_=r.__r3f)!=null&&_.primitive&&M==="object"||zt.equ(x,u[M]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(M))return v.push([M,x,!0,[]]);let E=[];M.includes("-")&&(E=M.split("-")),v.push([M,x,!1,E]);for(const w in i){const T=i[w];w.startsWith(`${M}-`)&&v.push([w,T,!1,w.split("-")])}});const y={...i};return p.memoizedProps&&p.memoizedProps.args&&(y.args=p.memoizedProps.args),p.memoizedProps&&p.memoizedProps.attach&&(y.attach=p.memoizedProps.attach),{memoized:y,changes:v}}const Vb=typeof process<"u"&&!1;function Mf(r,e){var t,n,i;const s=(t=r.__r3f)!=null?t:{},l=s.root,c=(n=l==null||l.getState==null?void 0:l.getState())!=null?n:{},{memoized:u,changes:h}=Bb(e)?e:gy(r,e),d=s.eventCount;r.__r3f&&(r.__r3f.memoizedProps=u);for(let m=0;m<h.length;m++){let[v,y,M,x]=h[m];if(xf(r)){const T="srgb",U="srgb-linear";v==="encoding"?(v="colorSpace",y=y===3001?T:U):v==="outputEncoding"&&(v="outputColorSpace",y=y===3001?T:U)}let _=r,E=_[v];if(x.length&&(E=x.reduce((w,T)=>w[T],r),!(E&&E.set))){const[w,...T]=x.reverse();_=T.reverse().reduce((U,P)=>U[P],r),v=w}if(y===py+"remove")if(_.constructor){let w=E0.get(_.constructor);w||(w=new _.constructor,E0.set(_.constructor,w)),y=w[v]}else y=0;if(M)y?s.handlers[v]=y:delete s.handlers[v],s.eventCount=Object.keys(s.handlers).length;else if(E&&E.set&&(E.copy||E instanceof ms)){if(Array.isArray(y))E.fromArray?E.fromArray(y):E.set(...y);else if(E.copy&&y&&y.constructor&&(Vb?E.constructor.name===y.constructor.name:E.constructor===y.constructor))E.copy(y);else if(y!==void 0){const w=E instanceof Le;!w&&E.setScalar?E.setScalar(y):E instanceof ms&&y instanceof ms?E.mask=y.mask:E.set(y),!uy()&&!c.linear&&w&&E.convertSRGBToLinear()}}else if(_[v]=y,_[v]instanceof Gt&&_[v].format===kn&&_[v].type===Bi){const w=_[v];xf(w)&&xf(c.gl)?w.colorSpace=c.gl.outputColorSpace:w.encoding=c.gl.outputEncoding}lo(r)}if(s.parent&&r.raycast&&d!==s.eventCount){const m=Yc(r).getState().internal,v=m.interaction.indexOf(r);v>-1&&m.interaction.splice(v,1),s.eventCount&&m.interaction.push(r)}return!(h.length===1&&h[0][0]==="onUpdate")&&h.length&&(i=r.__r3f)!=null&&i.parent&&_d(r),r}function lo(r){var e,t;const n=(e=r.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function _d(r){r.onUpdate==null||r.onUpdate(r)}function Gb(r,e){r.manual||(hy(r)?(r.left=e.width/-2,r.right=e.width/2,r.top=e.height/2,r.bottom=e.height/-2):r.aspect=e.width/e.height,r.updateProjectionMatrix(),r.updateMatrixWorld())}function zc(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}function Wb(){var r;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return mo.DefaultEventPriority;switch((r=e.event)==null?void 0:r.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return mo.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return mo.ContinuousEventPriority;default:return mo.DefaultEventPriority}}function vy(r,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(r.delete(n),i.target.releasePointerCapture(n)))}function Xb(r,e){const{internal:t}=r.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{vy(t.capturedMap,e,n,i)})}function qb(r){function e(u){const{internal:h}=r.getState(),d=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(d*d+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(d=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+d]}))}function n(u,h){const d=r.getState(),p=new Set,m=[],v=h?h(d.internal.interaction):d.internal.interaction;for(let _=0;_<v.length;_++){const E=sa(v[_]);E&&(E.raycaster.camera=void 0)}d.previousRoot||d.events.compute==null||d.events.compute(u,d);function y(_){const E=sa(_);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var w;E.events.compute==null||E.events.compute(u,E,(w=E.previousRoot)==null?void 0:w.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(_,!0):[]}let M=v.flatMap(y).sort((_,E)=>{const w=sa(_.object),T=sa(E.object);return!w||!T?_.distance-E.distance:T.events.priority-w.events.priority||_.distance-E.distance}).filter(_=>{const E=zc(_);return p.has(E)?!1:(p.add(E),!0)});d.events.filter&&(M=d.events.filter(M,d));for(const _ of M){let E=_.object;for(;E;){var x;(x=E.__r3f)!=null&&x.eventCount&&m.push({..._,eventObject:E}),E=E.parent}}if("pointerId"in u&&d.internal.capturedMap.has(u.pointerId))for(let _ of d.internal.capturedMap.get(u.pointerId).values())p.has(zc(_.intersection))||m.push(_.intersection);return m}function i(u,h,d,p){const m=r.getState();if(u.length){const v={stopped:!1};for(const y of u){const M=sa(y.object)||m,{raycaster:x,pointer:_,camera:E,internal:w}=M,T=new D(_.x,_.y,0).unproject(E),U=b=>{var F,q;return(F=(q=w.capturedMap.get(b))==null?void 0:q.has(y.eventObject))!=null?F:!1},P=b=>{const F={intersection:y,target:h.target};w.capturedMap.has(b)?w.capturedMap.get(b).set(y.eventObject,F):w.capturedMap.set(b,new Map([[y.eventObject,F]])),h.target.setPointerCapture(b)},L=b=>{const F=w.capturedMap.get(b);F&&vy(w.capturedMap,y.eventObject,F,b)};let z={};for(let b in h){let F=h[b];typeof F!="function"&&(z[b]=F)}let R={...y,...z,pointer:_,intersections:u,stopped:v.stopped,delta:d,unprojectedPoint:T,ray:x.ray,camera:E,stopPropagation(){const b="pointerId"in h&&w.capturedMap.get(h.pointerId);if((!b||b.has(y.eventObject))&&(R.stopped=v.stopped=!0,w.hovered.size&&Array.from(w.hovered.values()).find(F=>F.eventObject===y.eventObject))){const F=u.slice(0,u.indexOf(y));s([...F,y])}},target:{hasPointerCapture:U,setPointerCapture:P,releasePointerCapture:L},currentTarget:{hasPointerCapture:U,setPointerCapture:P,releasePointerCapture:L},nativeEvent:h};if(p(R),v.stopped===!0)break}}return u}function s(u){const{internal:h}=r.getState();for(const d of h.hovered.values())if(!u.length||!u.find(p=>p.object===d.object&&p.index===d.index&&p.instanceId===d.instanceId)){const m=d.eventObject.__r3f,v=m==null?void 0:m.handlers;if(h.hovered.delete(zc(d)),m!=null&&m.eventCount){const y={...d,intersections:u};v.onPointerOut==null||v.onPointerOut(y),v.onPointerLeave==null||v.onPointerLeave(y)}}}function l(u,h){for(let d=0;d<h.length;d++){const p=h[d].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:d}=r.getState();"pointerId"in h&&d.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{d.capturedMap.has(h.pointerId)&&(d.capturedMap.delete(h.pointerId),s([]))})}}return function(d){const{onPointerMissed:p,internal:m}=r.getState();m.lastEvent.current=d;const v=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",x=n(d,v?t:void 0),_=y?e(d):0;u==="onPointerDown"&&(m.initialClick=[d.offsetX,d.offsetY],m.initialHits=x.map(w=>w.eventObject)),y&&!x.length&&_<=2&&(l(d,m.interaction),p&&p(d)),v&&s(x);function E(w){const T=w.eventObject,U=T.__r3f,P=U==null?void 0:U.handlers;if(U!=null&&U.eventCount)if(v){if(P.onPointerOver||P.onPointerEnter||P.onPointerOut||P.onPointerLeave){const L=zc(w),z=m.hovered.get(L);z?z.stopped&&w.stopPropagation():(m.hovered.set(L,w),P.onPointerOver==null||P.onPointerOver(w),P.onPointerEnter==null||P.onPointerEnter(w))}P.onPointerMove==null||P.onPointerMove(w)}else{const L=P[u];L?(!y||m.initialHits.includes(T))&&(l(d,m.interaction.filter(z=>!m.initialHits.includes(z))),L(w)):y&&m.initialHits.includes(T)&&l(d,m.interaction.filter(z=>!m.initialHits.includes(z)))}}i(x,d,_,E)}}return{handlePointer:c}}const _y=r=>!!(r!=null&&r.render),yy=Te.createContext(null),Yb=(r,e)=>{const t=bb((c,u)=>{const h=new D,d=new D,p=new D;function m(_=u().camera,E=d,w=u().size){const{width:T,height:U,top:P,left:L}=w,z=T/U;E instanceof D?p.copy(E):p.set(...E);const R=_.getWorldPosition(h).distanceTo(p);if(hy(_))return{width:T/_.zoom,height:U/_.zoom,top:P,left:L,factor:1,distance:R,aspect:z};{const b=_.fov*Math.PI/180,F=2*Math.tan(b/2)*R,q=F*(T/U);return{width:q,height:F,top:P,left:L,factor:T/q,distance:R,aspect:z}}}let v;const y=_=>c(E=>({performance:{...E.performance,current:_}})),M=new ue;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(_=1)=>r(u(),_),advance:(_,E)=>e(_,E,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new ip,pointer:M,mouse:M,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const _=u();v&&clearTimeout(v),_.performance.current!==_.performance.min&&y(_.performance.min),v=setTimeout(()=>y(u().performance.max),_.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:_=>c(E=>({...E,events:{...E.events,..._}})),setSize:(_,E,w,T,U)=>{const P=u().camera,L={width:_,height:E,top:T||0,left:U||0,updateStyle:w};c(z=>({size:L,viewport:{...z.viewport,...m(P,d,L)}}))},setDpr:_=>c(E=>{const w=my(_);return{viewport:{...E.viewport,dpr:w,initialDpr:E.viewport.initialDpr||w}}}),setFrameloop:(_="always")=>{const E=u().clock;E.stop(),E.elapsedTime=0,_!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:_}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:Te.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(_,E,w)=>{const T=u().internal;return T.priority=T.priority+(E>0?1:0),T.subscribers.push({ref:_,priority:E,store:w}),T.subscribers=T.subscribers.sort((U,P)=>U.priority-P.priority),()=>{const U=u().internal;U!=null&&U.subscribers&&(U.priority=U.priority-(E>0?1:0),U.subscribers=U.subscribers.filter(P=>P.ref!==_))}}}}}),n=t.getState();let i=n.size,s=n.viewport.dpr,l=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:d,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||h.dpr!==s){var m;i=u,s=h.dpr,Gb(c,u),d.setPixelRatio(h.dpr);const v=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&d.domElement instanceof HTMLCanvasElement;d.setSize(u.width,u.height,v)}c!==l&&(l=c,p(v=>({viewport:{...v.viewport,...v.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>r(c)),t};let Bc,jb=new Set,Zb=new Set,Jb=new Set;function wf(r,e){if(r.size)for(const{callback:t}of r.values())t(e)}function oa(r,e){switch(r){case"before":return wf(jb,e);case"after":return wf(Zb,e);case"tail":return wf(Jb,e)}}let Ef,Af;function Tf(r,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof r=="number"&&(n=r-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=r),Ef=e.internal.subscribers,Bc=0;Bc<Ef.length;Bc++)Af=Ef[Bc],Af.ref.current(Af.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function Kb(r){let e=!1,t=!1,n,i,s;function l(h){i=requestAnimationFrame(l),e=!0,n=0,oa("before",h),t=!0;for(const p of r.values()){var d;s=p.store.getState(),s.internal.active&&(s.frameloop==="always"||s.internal.frames>0)&&!((d=s.gl.xr)!=null&&d.isPresenting)&&(n+=Tf(h,s))}if(t=!1,oa("after",h),n===0)return oa("tail",h),e=!1,cancelAnimationFrame(i)}function c(h,d=1){var p;if(!h)return r.forEach(m=>c(m.store.getState(),d));(p=h.gl.xr)!=null&&p.isPresenting||!h.internal.active||h.frameloop==="never"||(d>1?h.internal.frames=Math.min(60,h.internal.frames+d):t?h.internal.frames=2:h.internal.frames=1,e||(e=!0,requestAnimationFrame(l)))}function u(h,d=!0,p,m){if(d&&oa("before",h),p)Tf(h,p,m);else for(const v of r.values())Tf(h,v.store.getState());d&&oa("after",h)}return{loop:l,invalidate:c,advance:u}}function Qb(){const r=Te.useContext(yy);if(!r)throw new Error("R3F: Hooks can only be used within the Canvas component!");return r}function xy(r,e=0){const t=Qb(),n=t.getState().internal.subscribe,i=fy(r);return Ya(()=>n(i,e,t),[e,n,t]),null}const b0=new WeakMap;function Sy(r,e){return function(t,...n){let i=b0.get(t);return i||(i=new t,b0.set(t,i)),r&&r(i),Promise.all(n.map(s=>new Promise((l,c)=>i.load(s,u=>{u.scene&&Object.assign(u,kb(u.scene)),l(u)},e,u=>c(new Error(`Could not load ${s}: ${u==null?void 0:u.message}`)))))).finally(()=>i.dispose==null?void 0:i.dispose())}}function lp(r,e,t,n){const i=Array.isArray(e)?e:[e],s=Lb(Sy(t,n),[r,...i],{equal:zt.equ});return Array.isArray(e)?s:s[0]}lp.preload=function(r,e,t){const n=Array.isArray(e)?e:[e];return Nb(Sy(t),[r,...n])};lp.clear=function(r,e){const t=Array.isArray(e)?e:[e];return Db([r,...t])};const So=new Map,{invalidate:C0,advance:R0}=Kb(So),{reconciler:Qc,applyProps:so}=Ob(So,Wb),oo={objects:"shallow",strict:!1},$b=(r,e)=>{const t=typeof r=="function"?r(e):r;return _y(t)?t:new l_({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...r})};function eC(r,e){const t=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement;if(e){const{width:n,height:i,top:s,left:l,updateStyle:c=t}=e;return{width:n,height:i,top:s,left:l,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement&&r.parentElement){const{width:n,height:i,top:s,left:l}=r.parentElement.getBoundingClientRect();return{width:n,height:i,top:s,left:l,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas)return{width:r.width,height:r.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function tC(r){const e=So.get(r),t=e==null?void 0:e.fiber,n=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,s=n||Yb(C0,R0),l=t||Qc.createContainer(s,mo.ConcurrentRoot,null,!1,null,"",i,null);e||So.set(r,{fiber:l,store:s});let c,u=!1,h;return{configure(d={}){let{gl:p,size:m,scene:v,events:y,onCreated:M,shadows:x=!1,linear:_=!1,flat:E=!1,legacy:w=!1,orthographic:T=!1,frameloop:U="always",dpr:P=[1,2],performance:L,raycaster:z,camera:R,onPointerMissed:b}=d,F=s.getState(),q=F.gl;F.gl||F.set({gl:q=$b(p,r)});let k=F.raycaster;k||F.set({raycaster:k=new ny});const{params:Z,...se}=z||{};if(zt.equ(se,k,oo)||so(k,{...se}),zt.equ(Z,k.params,oo)||so(k,{params:{...k.params,...Z}}),!F.camera||F.camera===h&&!zt.equ(h,R,oo)){h=R;const J=R instanceof Ba,he=J?R:T?new Va(0,0,0,0,.1,1e3):new hn(75,0,.1,1e3);J||(he.position.z=5,R&&so(he,R),!F.camera&&!(R!=null&&R.rotation)&&he.lookAt(0,0,0)),F.set({camera:he}),k.camera=he}if(!F.scene){let J;v instanceof Jc?J=v:(J=new Jc,v&&so(J,v)),F.set({scene:ao(J)})}if(!F.xr){var ae;const J=(Be,ne)=>{const pe=s.getState();pe.frameloop!=="never"&&R0(Be,!0,pe,ne)},he=()=>{const Be=s.getState();Be.gl.xr.enabled=Be.gl.xr.isPresenting,Be.gl.xr.setAnimationLoop(Be.gl.xr.isPresenting?J:null),Be.gl.xr.isPresenting||C0(Be)},Ie={connect(){const Be=s.getState().gl;Be.xr.addEventListener("sessionstart",he),Be.xr.addEventListener("sessionend",he)},disconnect(){const Be=s.getState().gl;Be.xr.removeEventListener("sessionstart",he),Be.xr.removeEventListener("sessionend",he)}};typeof((ae=q.xr)==null?void 0:ae.addEventListener)=="function"&&Ie.connect(),F.set({xr:Ie})}if(q.shadowMap){const J=q.shadowMap.enabled,he=q.shadowMap.type;if(q.shadowMap.enabled=!!x,zt.boo(x))q.shadowMap.type=ca;else if(zt.str(x)){var ve;const Ie={basic:H0,percentage:tu,soft:ca,variance:xi};q.shadowMap.type=(ve=Ie[x])!=null?ve:ca}else zt.obj(x)&&Object.assign(q.shadowMap,x);(J!==q.shadowMap.enabled||he!==q.shadowMap.type)&&(q.shadowMap.needsUpdate=!0)}const H=uy();H&&("enabled"in H?H.enabled=!w:"legacyMode"in H&&(H.legacyMode=w)),u||so(q,{outputEncoding:_?3e3:3001,toneMapping:E?zi:xd}),F.legacy!==w&&F.set(()=>({legacy:w})),F.linear!==_&&F.set(()=>({linear:_})),F.flat!==E&&F.set(()=>({flat:E})),p&&!zt.fun(p)&&!_y(p)&&!zt.equ(p,q,oo)&&so(q,p),y&&!F.events.handlers&&F.set({events:y(s)});const $=eC(r,m);return zt.equ($,F.size,oo)||F.setSize($.width,$.height,$.updateStyle,$.top,$.left),P&&F.viewport.dpr!==my(P)&&F.setDpr(P),F.frameloop!==U&&F.setFrameloop(U),F.onPointerMissed||F.set({onPointerMissed:b}),L&&!zt.equ(L,F.performance,oo)&&F.set(J=>({performance:{...J.performance,...L}})),c=M,u=!0,this},render(d){return u||this.configure(),Qc.updateContainer(Te.createElement(nC,{store:s,children:d,onCreated:c,rootElement:r}),l,null,()=>{}),s},unmount(){My(r)}}}function nC({store:r,children:e,onCreated:t,rootElement:n}){return Ya(()=>{const i=r.getState();i.set(s=>({internal:{...s.internal,active:!0}})),t&&t(i),r.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),Te.createElement(yy.Provider,{value:r},e)}function My(r,e){const t=So.get(r),n=t==null?void 0:t.fiber;if(n){const i=t==null?void 0:t.store.getState();i&&(i.internal.active=!1),Qc.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var s,l,c,u;i.events.disconnect==null||i.events.disconnect(),(s=i.gl)==null||(l=s.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),Hb(i),So.delete(r),e&&e(r)}catch{}},500)})}}Qc.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:Te.version});function $c(){return $c=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r},$c.apply(this,arguments)}function yd(r,e,t){var n,i,s,l,c;e==null&&(e=100);function u(){var d=Date.now()-l;d<e&&d>=0?n=setTimeout(u,e-d):(n=null,t||(c=r.apply(s,i),s=i=null))}var h=function(){s=this,i=arguments,l=Date.now();var d=t&&!n;return n||(n=setTimeout(u,e)),d&&(c=r.apply(s,i),s=i=null),c};return h.clear=function(){n&&(clearTimeout(n),n=null)},h.flush=function(){n&&(c=r.apply(s,i),s=i=null,clearTimeout(n),n=null)},h}yd.debounce=yd;var iC=yd;const P0=F0(iC);function rC(r){let{debounce:e,scroll:t,polyfill:n,offsetSize:i}=r===void 0?{debounce:0,scroll:!1,offsetSize:!1}:r;const s=n||(typeof window>"u"?class{}:window.ResizeObserver);if(!s)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[l,c]=Te.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),u=Te.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:l}),h=e?typeof e=="number"?e:e.scroll:null,d=e?typeof e=="number"?e:e.resize:null,p=Te.useRef(!1);Te.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[m,v,y]=Te.useMemo(()=>{const E=()=>{if(!u.current.element)return;const{left:w,top:T,width:U,height:P,bottom:L,right:z,x:R,y:b}=u.current.element.getBoundingClientRect(),F={left:w,top:T,width:U,height:P,bottom:L,right:z,x:R,y:b};u.current.element instanceof HTMLElement&&i&&(F.height=u.current.element.offsetHeight,F.width=u.current.element.offsetWidth),Object.freeze(F),p.current&&!lC(u.current.lastBounds,F)&&c(u.current.lastBounds=F)};return[E,d?P0(E,d):E,h?P0(E,h):E]},[c,i,h,d]);function M(){u.current.scrollContainers&&(u.current.scrollContainers.forEach(E=>E.removeEventListener("scroll",y,!0)),u.current.scrollContainers=null),u.current.resizeObserver&&(u.current.resizeObserver.disconnect(),u.current.resizeObserver=null)}function x(){u.current.element&&(u.current.resizeObserver=new s(y),u.current.resizeObserver.observe(u.current.element),t&&u.current.scrollContainers&&u.current.scrollContainers.forEach(E=>E.addEventListener("scroll",y,{capture:!0,passive:!0})))}const _=E=>{!E||E===u.current.element||(M(),u.current.element=E,u.current.scrollContainers=wy(E),x())};return oC(y,!!t),sC(v),Te.useEffect(()=>{M(),x()},[t,y,v]),Te.useEffect(()=>M,[]),[_,l,m]}function sC(r){Te.useEffect(()=>{const e=r;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[r])}function oC(r,e){Te.useEffect(()=>{if(e){const t=r;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[r,e])}function wy(r){const e=[];if(!r||r===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(r);return[t,n,i].some(s=>s==="auto"||s==="scroll")&&e.push(r),[...e,...wy(r.parentElement)]}const aC=["x","y","top","bottom","left","right","width","height"],lC=(r,e)=>aC.every(t=>r[t]===e[t]);var cC=Object.defineProperty,uC=Object.defineProperties,hC=Object.getOwnPropertyDescriptors,I0=Object.getOwnPropertySymbols,fC=Object.prototype.hasOwnProperty,dC=Object.prototype.propertyIsEnumerable,L0=(r,e,t)=>e in r?cC(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,N0=(r,e)=>{for(var t in e||(e={}))fC.call(e,t)&&L0(r,t,e[t]);if(I0)for(var t of I0(e))dC.call(e,t)&&L0(r,t,e[t]);return r},pC=(r,e)=>uC(r,hC(e));function Ey(r,e,t){if(!r)return;if(t(r)===!0)return r;let n=e?r.return:r.child;for(;n;){const i=Ey(n,e,t);if(i)return i;n=e?null:n.sibling}}function Ay(r){try{return Object.defineProperties(r,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return r}}const cp=Ay(Te.createContext(null));class Ty extends Te.Component{render(){return Te.createElement(cp.Provider,{value:this._reactInternals},this.props.children)}}const{ReactCurrentOwner:D0,ReactCurrentDispatcher:U0}=Te.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function mC(){const r=Te.useContext(cp);if(r===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=Te.useId();return Te.useMemo(()=>{for(const n of[D0==null?void 0:D0.current,r,r==null?void 0:r.alternate]){if(!n)continue;const i=Ey(n,!1,s=>{let l=s.memoizedState;for(;l;){if(l.memoizedState===e)return!0;l=l.next}});if(i)return i}},[r,e])}function gC(){var r;const e=mC(),[t]=Te.useState(()=>new Map);t.clear();let n=e;for(;n;){if(n.type&&typeof n.type=="object"){const s=n.type._context===void 0&&n.type.Provider===n.type?n.type:n.type._context;s&&s!==cp&&!t.has(s)&&t.set(s,(r=U0==null?void 0:U0.current)==null?void 0:r.readContext(Ay(s)))}n=n.return}return t}function vC(){const r=gC();return Te.useMemo(()=>Array.from(r.keys()).reduce((e,t)=>n=>Te.createElement(e,null,Te.createElement(t.Provider,pC(N0({},n),{value:r.get(t)}))),e=>Te.createElement(Ty,N0({},e))),[r])}const bf={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function _C(r){const{handlePointer:e}=qb(r);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(bf).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=r.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:s}=r.getState();s.disconnect==null||s.disconnect(),i(l=>({events:{...l.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([l,c])=>{const[u,h]=bf[l];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=r.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([s,l])=>{if(n&&n.connected instanceof HTMLElement){const[c]=bf[s];n.connected.removeEventListener(c,l)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}const yC=Te.forwardRef(function({children:e,fallback:t,resize:n,style:i,gl:s,events:l=_C,eventSource:c,eventPrefix:u,shadows:h,linear:d,flat:p,legacy:m,orthographic:v,frameloop:y,dpr:M,performance:x,raycaster:_,camera:E,scene:w,onPointerMissed:T,onCreated:U,...P},L){Te.useMemo(()=>Ub(Eb),[]);const z=vC(),[R,b]=rC({scroll:!0,debounce:{scroll:50,resize:0},...n}),F=Te.useRef(null),q=Te.useRef(null);Te.useImperativeHandle(L,()=>F.current);const k=fy(T),[Z,se]=Te.useState(!1),[ae,ve]=Te.useState(!1);if(Z)throw Z;if(ae)throw ae;const H=Te.useRef(null);Ya(()=>{const J=F.current;b.width>0&&b.height>0&&J&&(H.current||(H.current=tC(J)),H.current.configure({gl:s,events:l,shadows:h,linear:d,flat:p,legacy:m,orthographic:v,frameloop:y,dpr:M,performance:x,raycaster:_,camera:E,scene:w,size:b,onPointerMissed:(...he)=>k.current==null?void 0:k.current(...he),onCreated:he=>{he.events.connect==null||he.events.connect(c?Fb(c)?c.current:c:q.current),u&&he.setEvents({compute:(Ie,Be)=>{const ne=Ie[u+"X"],pe=Ie[u+"Y"];Be.pointer.set(ne/Be.size.width*2-1,-(pe/Be.size.height)*2+1),Be.raycaster.setFromCamera(Be.pointer,Be.camera)}}),U==null||U(he)}}),H.current.render(Te.createElement(z,null,Te.createElement(dy,{set:ve},Te.createElement(Te.Suspense,{fallback:Te.createElement(zb,{set:se})},e)))))}),Te.useEffect(()=>{const J=F.current;if(J)return()=>My(J)},[]);const $=c?"none":"auto";return Te.createElement("div",$c({ref:q,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:$,...i}},P),Te.createElement("div",{ref:R,style:{width:"100%",height:"100%"}},Te.createElement("canvas",{ref:F,style:{display:"block"}},t)))}),xC=Te.forwardRef(function(e,t){return Te.createElement(Ty,null,Te.createElement(yC,$c({},e,{ref:t})))}),ei=[{name:"wax-flamingos",year:"2024",keywords:"Behavioral Robotics, Additive Manufacturing, Material Indeterminancy"},{name:"droplets",year:"2024",keywords:"p5.js, Agent-Based Modeling, Phenomena Modeling"},{name:"honeycomb",year:"2023",keywords:"Symmetry Groups, Parametric Design, Grasshopper Development"},{name:"water-qwop",year:"2023",keywords:"Reinforcement Learning, Unity Modeling, Game Agent Design"},{name:"horse-and-chariot",year:"2023",keywords:"Arduino Programming, Mobile Robotics, Data Transmission"},{name:"hyper-hydration",year:"2023",keywords:"Machine Learning, Optimization, Product Design"},{name:"sprawl-and-resilience",year:"2022",keywords:"Landscape Ecology, Board Game Design, Urban Planning"},{name:"cybernetic-field",year:"2021",keywords:"Cybernetics, Agent-Based Modeling, Human-Computer Interaction"},{name:"bubble-gan",year:"2021",keywords:"Machine Learning, Generative Adversarial Network, Architectural AI"},{name:"elc-carrick",year:"2020",keywords:"Educational Architecture, Materials and Assembly, Pittsburgh"},{name:"placeholder",year:"2020",keywords:"Photogrammetry, Python Programming, Software Design"},{name:"collaborative-winding",year:"2020",keywords:"Architectural Robotics, Dual-Robot, Digital Fabrication"},{name:"flood-museum",year:"2019",keywords:"Cultural Architecture, Combined Sewer System, Pittsburgh"},{name:"design-fabrication",year:"2019",keywords:"Digital Fabrication, Computer-Aided-Design, Spatial Extrapolation"},{name:"spring-garden-hostel",year:"2019",keywords:"Residential Architecture, Adaptive Reuse, Pittsburgh"},{name:"modular-garden",year:"2019",keywords:"Digital Fabrication, CNC Milling, Parametric Design"},{name:"bathhouse",year:"2019",keywords:"Recreational Archtiecture, Architectural Sequencing, White Mountains"},{name:"hoophouse",year:"2018",keywords:"Residential (for plants), Design & Build, Phipps Conservatory"},{name:"misc",year:"2017-",keywords:"Render, Storyboard, Animation, Diagram"}];let SC=.08,Cf=.5,MC=1;function Rf(r,e){return(r%e+e)%e}function O0(r){return r>=0?(Math.cos(Math.PI*r)-1)/2:-(Math.cos(Math.PI*r)-1)/2}function wC(r){return Math.sin(r*Math.PI/2)}function EC({cover:r,location:e,index:t,targetOffset:n,setTargetOffset:i,hovered:s,setHovered:l}){const c=Te.useRef(),u=z0(),h=()=>{c.current.position.x>-.5&&c.current.position.x<.5?u("./projects/"+ei[t].name):i(Math.round(n-c.current.position.x))};return Te.useEffect(()=>{c.current&&(e>ei.length/2?c.current.position.x=e-ei.length:e<-ei.length/2?c.current.position.x=e+ei.length:c.current.position.x=e)},[e]),xy(()=>{c.current&&(c.current.position.x>=1?(c.current.rotation.y=-Cf,c.current.position.z=0):c.current.position.x<=-1?(c.current.rotation.y=Cf,c.current.position.z=0):(c.current.rotation.y=O0(c.current.position.x)*Cf,c.current.position.z=(O0(Math.abs(c.current.position.x))+1)*MC))}),xe.jsxs("mesh",{ref:c,onClick:d=>{h(),d.stopPropagation()},onPointerEnter:d=>{l(s+1)},onPointerOut:d=>{l(s-1)},children:[xe.jsx("planeGeometry",{args:[2,2]}),xe.jsx("meshStandardMaterial",{map:r,toneMapped:!1})]})}function AC({setCurCenter:r}){const e=z0(),[t,n]=Te.useState(0),[i,s]=Te.useState(0),[l,c]=Te.useState(null),[u,h]=Te.useState(null),[d,p]=Te.useState(0);function m(x){x.key=="ArrowLeft"?n(_=>Math.round(_+1)):x.key=="ArrowRight"?n(_=>Math.round(_-1)):x.key=="Enter"&&e("./projects/"+ei[Rf(-t,ei.length)].name)}function v(x){console.log(document.body.style.cursor),x.type=="mousedown"?c(x.screenX):c(x.touches[0].screenX)}function y(x){if(l==null)return;let _=null;h(l),x.type=="mousemove"?c(x.screenX):c(x.touches[0].screenX),!(l==null||u==null)&&(_=u-l,_!=null&&(x.type=="mousemove"?_/=250:_/=100,n(E=>E-_)))}function M(x){c(null),h(null),n(_=>Math.round(_))}return Te.useEffect(()=>(document.addEventListener("keydown",m),document.addEventListener("mousedown",v),document.addEventListener("mousemove",y),document.addEventListener("mouseup",M),document.addEventListener("touchstart",v),document.addEventListener("touchmove",y),document.addEventListener("touchend",M),()=>{document.removeEventListener("keydown",m),document.removeEventListener("mousedown",v),document.removeEventListener("mousemove",y),document.removeEventListener("mouseup",M),document.removeEventListener("touchstart",v),document.removeEventListener("touchmove",y),document.removeEventListener("touchend",M)}),[t,l,u]),xy(()=>{let x=t-i,_=wC(x*SC);s(i+_);let E=Rf(Math.round(-i),ei.length);r(E)}),xe.jsxs(xe.Fragment,{children:[xe.jsx("ambientLight",{intensity:3.1}),ei.map((x,_)=>xe.jsx(EC,{cover:lp(V_,"/mats/homepage/cover-"+x.name+".jpg"),location:Rf(_+i,ei.length),index:_,targetOffset:t,setTargetOffset:n,hovered:d,setHovered:p},_))]})}const TC=()=>{const[r,e]=Te.useState(0),[t,n]=Te.useState(!1);return xe.jsxs("div",{className:`absolute w-screen h-screen left-0 top-0 ${t?"cursor-grabbing":"cursor-grab"}`,onMouseDown:()=>n(!0),onMouseUp:()=>n(!1),children:[xe.jsx(xC,{linear:!0,children:xe.jsx(Te.Suspense,{fallback:null,children:xe.jsx(AC,{setCurCenter:e})})}),xe.jsx("h1",{className:"absolute left-1/2 top-[68%] md:top-[70%] -translate-x-1/2 text-nowrap",children:ei[r].name}),xe.jsx("h2",{className:"absolute left-1/2 top-[73%] -translate-x-1/2",children:ei[r].year}),xe.jsxs("p",{className:"absolute left-1/2 top-[77%] md:top-[76%] -translate-x-1/2 w-80 text-center",children:[xe.jsx("i",{children:"Keywords: "}),ei[r].keywords]})]})},bC=TC,CC="/assets/tailwind-CvmA_8jN.css",NC=()=>[{rel:"stylesheet",href:CC}];function DC({children:r}){return xe.jsxs("html",{lang:"en",children:[xe.jsxs("head",{children:[xe.jsx("meta",{charSet:"utf-8"}),xe.jsx("meta",{name:"viewport",content:"width=device-width, initial-scale=1"}),xe.jsx("meta",{name:"description",content:"Samuel Losi is a student of Computational Design. He is attending the University of Stuttgart's ITECH Program to study intimate processes of digital making."}),xe.jsx("meta",{name:"keywords",content:"architect, computational design, student, architecture portfolio, carnegie mellon university, school of architecture, institue of compoutational design, university of stuttgart, design, architecture, ITECH, soa, sam losi, samuel losi, losi, undergraduate student, graduate student, computation, robotics, architectural robotics"}),xe.jsx("link",{rel:"apple-touch-icon",sizes:"180x180",href:"/apple-touch-icon.png"}),xe.jsx("link",{rel:"icon",type:"image/png",sizes:"32x32",href:"/favicon/favicon-32x32.png"}),xe.jsx("link",{rel:"icon",type:"image/png",sizes:"16x16",href:"/favicon//favicon-16x16.png"}),xe.jsx("link",{rel:"manifest",href:"/favicon//site.webmanifest"}),xe.jsx("link",{rel:"mask-icon",href:"/favicon//safari-pinned-tab.svg",color:"#5bbad5"}),xe.jsx("meta",{name:"msapplication-TileColor",content:"#da532c"}),xe.jsx("meta",{name:"theme-color",content:"#ffffff"}),xe.jsx(Ex,{}),xe.jsx(Ax,{})]}),xe.jsxs("body",{children:[r,xe.jsx(bx,{}),xe.jsx(Tx,{})]})]})}function UC(){return xe.jsxs("div",{className:"w-full h-screen",children:[xe.jsx(bC,{}),xe.jsx(wx,{}),xe.jsx(Cx,{})]})}export{DC as Layout,UC as default,NC as links};
